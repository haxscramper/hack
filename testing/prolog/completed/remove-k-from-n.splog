:- initialization(main).

remove_nk([], _, _, []).
remove_nk(List, 0, 0, List).

remove_nk([_|Tail], 0, K, ListOut) :-
    NewK is K - 1,
    remove_nk(Tail, 0, NewK, ListOut).

remove_nk(List, N, K, ListOut) :-
    NewN is N - 1,
    remove_nk(List, NewN, K, ListOut).

remove_nk_print(List, N, K) :-
    write(List), write(" N:"),
    write(N), write(" K:"),
    write(K),  write(" --> "),
    call_with_depth_limit(remove_nk(List, N, K, Out), 100, _),
    writeln(Out).

test :-
    %% trace(remove_nk),
    remove_nk_print([1], 2, 10),
    remove_nk_print([1,2,3], 10, 90),
    remove_nk_print([], 1, 2),
    remove_nk_print([1,2,3], 90, 100),
    remove_nk_print([1,2,3], 1, 2),
    remove_nk_print([], 1, 2),
    remove_nk_print([12], 0, 1)
.

run_main :-
    writeln("Введите список"), readlist(List),
    writeln("Введите индекс начального элемента"), readint(N),
    writeln("Введите количество элементов для удаления"), readint(K),
    remove_nk_print(List, N, K),
    interactive.


main :-
    ensure_loaded("../common.splog"),
    writeln("54 [6] Удалить K элементов начиная с индекса N"),
    startup_notice,
    ( non_interactive_test ; interactive ).
