{
"https://github.com/pietroppeter/nimoji": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Pietro Peterlongo\"\ndescription   = \"🍕🍺 emoji support for Nim 👑 and the world 🌍\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallext    = @[\"nim\"]\nbin           = @[\"nimoji\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n\n# Tasks\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/test_nimoji\"\n  exec \"nim c -r src/nimoji\"\n\ntask generate, \"Generates codemap\":\n  exec \"nim c -r tools/generate\"\n\n",
"https://raw.githubusercontent.com/geotre/wren/master/wren.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"geotre\"\ndescription   = \"A nim wrapper for Wren, an embedded scripting language\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"nimgen >= 0.5.0\"\n\nvar\n  name = \"wren\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\n\ntask ex1, \"Run example 1 (hello world)\":\n  exec \"cd examples/01_hello_world && nim c -r main.nim\"\n\ntask ex2, \"Run example 2 (foreign functions)\":\n  exec \"cd examples/02_foreign_functions && nim c -r main.nim\"\n\ntask ex3, \"Run example 3 (module import)\":\n  exec \"cd examples/03_module_import && nim c -r main.nim\"\n\ntask ex4, \"Run example 4 (slots)\":\n  exec \"cd examples/04_slots && nim c -r main.nim\"\n\ntask ex5, \"Run example 5 (variables)\":\n  exec \"cd examples/05_variables && nim c -r main.nim\"\n",
"https://raw.githubusercontent.com/joachimschmidt557/nimmm/master/nimmm.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"joachimschmidt557\"\ndescription   = \"A terminal file manager written in nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"nimmm\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\nrequires \"noise >= 0.1.3\"\nrequires \"nimbox >= 0.1.0\"\nrequires \"lscolors >= 0.3.3\"",
"https://github.com/brentp/kexpr-nim": "# Package\n\nversion = \"0.0.2\"\ndescription   = \"math expression evaluator library\"\nauthor        = \"Brent Pedersen\"\nlicense       = \"MIT\"\nskipFiles     = @[\"tests.nim\"]\n#installFiles  = @[\"src/kexpr.nim\", \"src/kexpr-c.c\", \"src/kexpr-c.h\"]\n\nrequires \"nim >= 0.17.0\"\n\ntask test, \"tests\":\n    exec \"nim c -r tests.nim\"\n\ntask docs, \"make the docs\":\n    exec \"nim doc kexpr.nim\"\n    exec \"mv kexpr.html docs/index.html\"\n",
"https://github.com/PMunch/nimcr": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Simple program that allows you to use the shebang #!nimcr in your Nim files. It will automatically compile the file to a hidden executable in the same directory as the nim file as long as the file doesn\\'t already exist and is younger than (ie. created after the last modification of) the script file. If it is younger it will simply run the executable saving you from compiling the script each time it is run. The output of the compiler is also ignored if the compilation is succesfull and only the output of the program is used. If the compilation fails the output will be written to stderr and the return code will match that of the compiler.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n\n# Examples\n\nskipDirs = @[\"examples\"]\n\n# Binary package\n\nbin = @[\"nimcr\"]\nskipExt = @[\"nim\"]\n",
"https://github.com/nim-lang/dialogs": "[Package]\r\nname          = \"dialogs\"\r\nversion       = \"1.1.1\"\r\nauthor        = \"Anonymous\"\r\ndescription   = \"portable dialogs for Nim/Aporia\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0, gtk2 >= 1.0\"\r\n",
"https://raw.githubusercontent.com/Yardanico/nim-mathexpr/master/mathexpr.nimble": "version       = \"1.3.1\"\nauthor        = \"Danil Yarantsev (Yardanico)\"\ndescription   = \"MathExpr - tiny mathematical expression evaluator library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.0\"",
"https://raw.githubusercontent.com/Q-Master/packets.nim/master/packets.nimble": "# Package\ndescription = \"Pure Nim declarative packets system for serializing/deserializing\"\nversion     = \"0.4.0\"\nlicense     = \"MIT\"\nauthor      = \"Vladimir Berezenko <qmaster2000@gmail.com>\"\n\n# Dependencies\nrequires \"nim >= 0.20.00\", \"packedjson\", \"crc32 >= 0.1.1\"\n\ntask test, \"tests\":\n  echo \"Running stdlib json tests\"\n  exec \"nim c -r -d:packetDumpTree tests/packets.nim\"\n  echo \"Running packedjson tests\"\n  exec \"nim c -r -d:packetDumpTree -d:usePackedJson tests/packets.nim\"\n  echo \"Running no IDs stdlib json tests\"\n  exec \"nim c -r -d:packetDumpTree -d:disablePacketIDs tests/packets.nim\"\n  echo \"Running no IDs packedjson tests\"\n  exec \"nim c -r -d:packetDumpTree -d:usePackedJson -d:disablePacketIDs tests/packets.nim\"\n  \ntask bench, \"benchmarks\":\n  echo \"Running stdlib benchmark\"\n  exec \"nim c -r -d:release tests/benchmark.nim\"\n  echo \"Running packedjson benchmark\"\n  exec \"nim c -r -d:release -d:usePackedJson tests/benchmark.nim\"\n",
"https://api.github.com/repos/onionhammer/clibpp/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"eb4f592c8e097a396d8324c9066fd41d8630b6c6\",\"size\":234,\"url\":\"https://api.github.com/repos/onionhammer/clibpp/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/onionhammer/clibpp/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/eb4f592c8e097a396d8324c9066fd41d8630b6c6\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/clibpp/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/clibpp/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/eb4f592c8e097a396d8324c9066fd41d8630b6c6\",\"html\":\"https://github.com/onionhammer/clibpp/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"0f729e67e517f3fa8134541e5f897fb549fd57e6\",\"size\":1077,\"url\":\"https://api.github.com/repos/onionhammer/clibpp/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/onionhammer/clibpp/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/0f729e67e517f3fa8134541e5f897fb549fd57e6\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/clibpp/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/clibpp/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/0f729e67e517f3fa8134541e5f897fb549fd57e6\",\"html\":\"https://github.com/onionhammer/clibpp/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"43efdc6190050b9d0309c8f148d1391b72bf48d4\",\"size\":493,\"url\":\"https://api.github.com/repos/onionhammer/clibpp/contents/README.md?ref=master\",\"html_url\":\"https://github.com/onionhammer/clibpp/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/43efdc6190050b9d0309c8f148d1391b72bf48d4\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/clibpp/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/clibpp/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/43efdc6190050b9d0309c8f148d1391b72bf48d4\",\"html\":\"https://github.com/onionhammer/clibpp/blob/master/README.md\"}},{\"name\":\"clibpp.babel\",\"path\":\"clibpp.babel\",\"sha\":\"004188b3e0e1b739ea6884b20fad0e88a08f8199\",\"size\":130,\"url\":\"https://api.github.com/repos/onionhammer/clibpp/contents/clibpp.babel?ref=master\",\"html_url\":\"https://github.com/onionhammer/clibpp/blob/master/clibpp.babel\",\"git_url\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/004188b3e0e1b739ea6884b20fad0e88a08f8199\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/clibpp/master/clibpp.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/clibpp/contents/clibpp.babel?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/004188b3e0e1b739ea6884b20fad0e88a08f8199\",\"html\":\"https://github.com/onionhammer/clibpp/blob/master/clibpp.babel\"}},{\"name\":\"clibpp.nim\",\"path\":\"clibpp.nim\",\"sha\":\"0909ec6d03543fc42a5d3189d5a8a8ff061c1f8e\",\"size\":9003,\"url\":\"https://api.github.com/repos/onionhammer/clibpp/contents/clibpp.nim?ref=master\",\"html_url\":\"https://github.com/onionhammer/clibpp/blob/master/clibpp.nim\",\"git_url\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/0909ec6d03543fc42a5d3189d5a8a8ff061c1f8e\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/clibpp/master/clibpp.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/clibpp/contents/clibpp.nim?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/0909ec6d03543fc42a5d3189d5a8a8ff061c1f8e\",\"html\":\"https://github.com/onionhammer/clibpp/blob/master/clibpp.nim\"}},{\"name\":\"makefile\",\"path\":\"makefile\",\"sha\":\"2447cfcd40c839a8c0501bfc49e8d663e7f1c9ff\",\"size\":178,\"url\":\"https://api.github.com/repos/onionhammer/clibpp/contents/makefile?ref=master\",\"html_url\":\"https://github.com/onionhammer/clibpp/blob/master/makefile\",\"git_url\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/2447cfcd40c839a8c0501bfc49e8d663e7f1c9ff\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/clibpp/master/makefile\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/clibpp/contents/makefile?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/2447cfcd40c839a8c0501bfc49e8d663e7f1c9ff\",\"html\":\"https://github.com/onionhammer/clibpp/blob/master/makefile\"}},{\"name\":\"test.cpp\",\"path\":\"test.cpp\",\"sha\":\"a8f1f4819c45060a75bc5484a70766f4842f0b7c\",\"size\":278,\"url\":\"https://api.github.com/repos/onionhammer/clibpp/contents/test.cpp?ref=master\",\"html_url\":\"https://github.com/onionhammer/clibpp/blob/master/test.cpp\",\"git_url\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/a8f1f4819c45060a75bc5484a70766f4842f0b7c\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/clibpp/master/test.cpp\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/clibpp/contents/test.cpp?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/a8f1f4819c45060a75bc5484a70766f4842f0b7c\",\"html\":\"https://github.com/onionhammer/clibpp/blob/master/test.cpp\"}},{\"name\":\"test.hpp\",\"path\":\"test.hpp\",\"sha\":\"ce7a19843b362d6153dd5ddab2a9eb818d373343\",\"size\":300,\"url\":\"https://api.github.com/repos/onionhammer/clibpp/contents/test.hpp?ref=master\",\"html_url\":\"https://github.com/onionhammer/clibpp/blob/master/test.hpp\",\"git_url\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/ce7a19843b362d6153dd5ddab2a9eb818d373343\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/clibpp/master/test.hpp\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/clibpp/contents/test.hpp?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/clibpp/git/blobs/ce7a19843b362d6153dd5ddab2a9eb818d373343\",\"html\":\"https://github.com/onionhammer/clibpp/blob/master/test.hpp\"}}]",
"https://github.com/ba0f3/libnetfilter_queue.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"libnetfilter_queue wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\n",
"https://raw.githubusercontent.com/ba0f3/libipset.nim/master/libipset.nimble": "[Package]\nname          = \"libipset\"\nversion       = \"0.0.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"libipset wrapper for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/xioren/NimPass/master/nimpass.nimble": "version     = \"0.0.4\"\nauthor      = \"xioren\"\ndescription = \"quickly generate secure passwords and passphrases\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nbin         = @[\"nimpass\"]\n",
"https://raw.githubusercontent.com/rustomax/nim-stacks/master/stacks.nimble": "# Package\n\nversion       = \"0.4.2\"\nauthor        = \"Max Skybin\"\ndescription   = \"Pure Nim stack implementation based on sequences.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\n",
"https://github.com/jiro4989/faker": "# Package\n\nversion       = \"0.14.0\"\nauthor        = \"jiro4989\"\ndescription   = \"faker is a Nim package that generates fake data for you.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"faker/cli/faker\"]\nbinDir        = \"bin\"\n\nfrom os import `/`, splitFile\nfrom algorithm import sort\nimport strformat, strutils, sequtils\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nlet\n  providerDir = \"src\" / \"faker\" / \"provider\"\n\ntask docs, \"Generate API documents\":\n  exec \"nimble doc --index:on --project --out:docs --hints:off src/faker.nim\"\n\ntask genMod, \"Generate module\":\n  let module = paramStr(paramCount())\n  if module == \"genMod\":\n    echo \"Need 1 args\"\n    quit 1\n\n  # Copy module dir\n  let\n    srcModule = \"job\"\n    srcDir = providerDir / srcModule\n    dstDir = providerDir / module\n  rmDir dstDir\n  cpDir srcDir, dstDir\n  echo \"Generated: \" & module\n\n  # Copy module index file\n  let\n    srcFile = srcDir & \".nim\"\n    dstFile = dstDir & \".nim\"\n  rmFile dstFile\n  cpFile srcFile, dstFile\n  echo \"Generated: \" & dstFile\n\n  # Rename module name\n  for path in listFiles(dstDir):\n    let (dir, name, ext) = splitFile(path)\n    if name == \"interfaces\":\n      continue\n    let newName = name.replace(srcModule, module)\n    let newPath = dir / newName & ext\n    mvFile path, newPath\n    echo \"Generated: \" & newPath\n\ntask tool, \"Build tools\":\n  exec \"nim c tools/generator.nim\"\n",
"https://github.com/zielmicha/reactor.nim": "version       = \"0.6.0\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"Asynchronous networking engine for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"bench\", \"examples\", \"tests\", \"doc\"]\n\nrequires \"nim >= 0.17.0\"\nrequires \"collections >= 0.5.0\"\n",
"https://raw.githubusercontent.com/mpinese/nimpress/master/nimpress.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Mark Pinese <mpinese@ccia.org.au>\"\ndescription   = \"Calculate polygenic scores from VCFs\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimpress\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"docopt >= 0.6.8\"\nrequires \"hts >= 0.2.21\"\nrequires \"lapper >= 0.1.5\"\n\n\n# Tests\n\ntask test, \"Run the test suite\":\n  exec \"nim c -r -d:testing tests/test_set1.nim\"\n  exec \"nim c -r -d:testing tests/test_stats.nim\"\n\ntask testfail, \"Run a deliberately failing test suite, to check CI failure detection\":\n  exec \"nim c -r -d:testing tests/test_fail.nim\"\n",
"https://github.com/alaviss/kmod": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Leorize\"\ndescription   = \"High-level wrapper for Linux's kmod library\"\nlicense       = \"ISC\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"nimterop >= 0.1.0\"\n",
"https://raw.githubusercontent.com/nim-lang/basic3d/master/basic3d.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Deprecated package from the stdlib.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://github.com/achesak/nim-pythonfile": "[Package]\nname = \"pythonfile\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Wrapper of the file functions to provide an interface as similar as possible to that of Python\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://github.com/paranim/paramidi_soundfonts": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"oakes\"\ndescription   = \"Sound fonts for paramidi\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"sf2\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/achesak/nim-biscuits/master/biscuits.nimble": "[Package]\nname = \"biscuits\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"better cookie handling\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://raw.githubusercontent.com/neonnnnn/nimfm/master/nimfm.nimble": "# Package\nversion       = \"0.3.0\"\nauthor        = \"Kyohei Atarashi\"\ndescription   = \"nimfm: A library for factorization machines in Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\nrequires \"nim >= 1.0.6\", \"cligen >= 0.9.43\", \"nimlapack >= 0.2.0\"\n\n# Compile and create binary in ./bin for end users\ntask make, \"builds nimfm\":\n  exec \"mkdir -p bin\"\n  exec \"nim c -o:bin/nimfm -d:release -d:danger --threads:on ./src/nimfm.nim\"\n  exec \"nim c -o:bin/nimfm_cfm -d:release -d:danger --threads:on ./src/nimfm_cfm.nim\"\n  exec \"nim c -o:bin/nimfm_sparsefm -d:release -d:danger --threads:on ./src/nimfm_sparsefm.nim\"\n\n",
"https://github.com/mratsim/weave": "# Package\n\nversion       = \"0.4.9\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"a state-of-the-art ùultithreading runtime\"\nlicense       = \"MIT or Apache License 2.0\"\n\n# Dependencies\n\n# requires Nim post abea80376a113fb218c22b6474727c279e694cd3\nrequires \"nim >= 1.2.0\", \"synthesis\"\n\nproc test(flags, path: string) =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  # Note: we compile in release mode. This still have stacktraces\n  #       but is much faster than -d:debug\n\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  echo \"\\n========================================================================================\"\n  echo \"Running [ \", lang, \" \", flags, \" ] \", path\n  echo \"========================================================================================\"\n  exec \"nim \" & lang & \" \" & flags & \" --verbosity:0 --hints:off --warnings:off --threads:on -d:release --stacktrace:on --linetrace:on --outdir:build -r \" & path\n\ntask test, \"Run Weave tests\":\n  test \"\", \"weave/cross_thread_com/channels_spsc_single.nim\"\n  test \"\", \"weave/cross_thread_com/channels_spsc_single_ptr.nim\"\n  test \"\", \"weave/cross_thread_com/channels_mpsc_unbounded_batch.nim\"\n  test \"\", \"weave/cross_thread_com/flow_events.nim\"\n\n  test \"\", \"weave/datatypes/binary_worker_trees.nim\"\n  test \"\", \"weave/datatypes/bounded_queues.nim\"\n  test \"\", \"weave/datatypes/prell_deques.nim\"\n  test \"\", \"weave/datatypes/sparsesets.nim\"\n\n  test \"\", \"weave/memory/lookaside_lists.nim\"\n  test \"\", \"weave/memory/memory_pools.nim\"\n  test \"\", \"weave/memory/persistacks.nim\"\n\n  test \"\", \"weave/parallel_tasks.nim\"\n  test \"\", \"weave/parallel_for.nim\"\n  test \"\", \"weave/parallel_for_staged.nim\"\n  test \"\", \"weave/parallel_reduce.nim\"\n\n  test \"--debugger:native\", \"tests/test_background_jobs.nim\"\n  test \"--debugger:native\", \"tests/test_auxiliary_procs.nim\"\n\n  test \"-d:WV_LazyFlowvar\", \"weave/parallel_tasks.nim\"\n  test \"-d:WV_LazyFlowvar\", \"weave/parallel_for.nim\"\n  test \"-d:WV_LazyFlowvar\", \"weave/parallel_for_staged.nim\"\n  test \"-d:WV_LazyFlowvar\", \"weave/parallel_reduce.nim\"\n\n  test \"-d:WV_LazyFlowvar\", \"tests/test_background_jobs.nim\"\n\n  when not defined(windows): # Does not support erand48\n    test \"\", \"demos/raytracing/smallpt.nim\"\n\n  test \"\", \"benchmarks/dfs/weave_dfs.nim\"\n  test \"\", \"benchmarks/fibonacci/weave_fib.nim\"\n  test \"\", \"benchmarks/heat/weave_heat.nim\"\n  test \"\", \"benchmarks/matrix_transposition/weave_transposes.nim\"\n  test \"\", \"benchmarks/nqueens/weave_nqueens.nim\"\n  when not defined(windows): # Need \"time\" support - https://github.com/mratsim/weave/issues/60\n    test \"\", \"benchmarks/single_task_producer/weave_spc.nim\"\n    test \"\", \"benchmarks/bouncing_producer_consumer/weave_bpc.nim\"\n  when defined(i386) or defined(amd64):\n    if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n      # TODO: syncRoot doesn't block for Pledges - https://github.com/mratsim/weave/issues/97\n      # test \"\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave.nim\"\n      test \"\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave_nestable.nim\"\n\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/dfs/weave_dfs.nim\"\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/fibonacci/weave_fib.nim\"\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/heat/weave_heat.nim\"\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/matrix_transposition/weave_transposes.nim\"\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/nqueens/weave_nqueens.nim\"\n  when not defined(windows): # Timer impl missing\n    test \"-d:WV_LazyFlowvar\", \"benchmarks/single_task_producer/weave_spc.nim\"\n    test \"-d:WV_LazyFlowvar\", \"benchmarks/bouncing_producer_consumer/weave_bpc.nim\"\n  when defined(i386) or defined(amd64):\n    if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n      # TODO: syncRoot doesn't block for Pledges - https://github.com/mratsim/weave/issues/97\n      # test \"-d:WV_LazyFlowvar\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave.nim\"\n      test \"-d:WV_LazyFlowvar\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave_nestable.nim\"\n\n  # Full test that combine everything:\n  # - Nested parallelFor + parallelStrided\n  # - spawn\n  # - spawnDelayed by pledges\n  # - syncScope\n  when false: # TODO, not sure why this stalls why the gemm_weave_nestable don't - https://github.com/mratsim/weave/pull/150\n    when not defined(windows) and (defined(i386) or defined(amd64)):\n      if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n        test \"-d:danger\", \"benchmarks/matmul_gemm_blas/test_gemm_output.nim\"\n\ntask test_gc_arc, \"Run Weave tests with --gc:arc\":\n  test \"--gc:arc\", \"weave/cross_thread_com/channels_spsc_single.nim\"\n  test \"--gc:arc\", \"weave/cross_thread_com/channels_spsc_single_ptr.nim\"\n  test \"--gc:arc\", \"weave/cross_thread_com/channels_mpsc_unbounded_batch.nim\"\n  test \"--gc:arc\", \"weave/cross_thread_com/flow_events.nim\"\n\n  test \"--gc:arc\", \"weave/datatypes/binary_worker_trees.nim\"\n  test \"--gc:arc\", \"weave/datatypes/bounded_queues.nim\"\n  test \"--gc:arc\", \"weave/datatypes/prell_deques.nim\"\n  test \"--gc:arc\", \"weave/datatypes/sparsesets.nim\"\n\n  test \"--gc:arc\", \"weave/memory/lookaside_lists.nim\"\n  test \"--gc:arc\", \"weave/memory/memory_pools.nim\"\n  test \"--gc:arc\", \"weave/memory/persistacks.nim\"\n\n  test \"--gc:arc\", \"weave/parallel_tasks.nim\"\n  test \"--gc:arc\", \"weave/parallel_for.nim\"\n  test \"--gc:arc\", \"weave/parallel_for_staged.nim\"\n  test \"--gc:arc\", \"weave/parallel_reduce.nim\"\n\n  test \"--gc:arc\", \"tests/test_background_jobs.nim\"\n  test \"--gc:arc\", \"tests/test_auxiliary_procs.nim\"\n\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"weave/parallel_tasks.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"weave/parallel_for.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"weave/parallel_for_staged.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"weave/parallel_reduce.nim\"\n\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"tests/test_background_jobs.nim\"\n\n  when not defined(windows):\n    test \"--gc:arc\", \"demos/raytracing/smallpt.nim\"\n\n  test \"--gc:arc\", \"benchmarks/dfs/weave_dfs.nim\"\n  test \"--gc:arc\", \"benchmarks/fibonacci/weave_fib.nim\"\n  test \"--gc:arc\", \"benchmarks/heat/weave_heat.nim\"\n  test \"--gc:arc\", \"benchmarks/matrix_transposition/weave_transposes.nim\"\n  test \"--gc:arc\", \"benchmarks/nqueens/weave_nqueens.nim\"\n  when not defined(windows): # Need \"time\" support - https://github.com/mratsim/weave/issues/60\n    test \"--gc:arc\", \"benchmarks/single_task_producer/weave_spc.nim\"\n    test \"--gc:arc\", \"benchmarks/bouncing_producer_consumer/weave_bpc.nim\"\n  when defined(i386) or defined(amd64):\n    if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n      # TODO: syncRoot doesn't block for Pledges - https://github.com/mratsim/weave/issues/97\n      # test \"--gc:arc\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave.nim\"\n      test \"--gc:arc\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave_nestable.nim\"\n\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/dfs/weave_dfs.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/fibonacci/weave_fib.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/heat/weave_heat.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/matrix_transposition/weave_transposes.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/nqueens/weave_nqueens.nim\"\n  when not defined(windows): # Timer impl missing\n    test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/single_task_producer/weave_spc.nim\"\n    test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/bouncing_producer_consumer/weave_bpc.nim\"\n  when defined(i386) or defined(amd64):\n    if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n      # TODO: syncRoot doesn't block for Pledges - https://github.com/mratsim/weave/issues/97\n      # test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave.nim\"\n      test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave_nestable.nim\"\n\n  # Full test that combine everything:\n  # - Nested parallelFor + parallelStrided\n  # - spawn\n  # - spawnDelayed by pledges\n  # - syncScope\n  when false: # TODO, not sure why this stalls why the gemm_weave_nestable don't - https://github.com/mratsim/weave/pull/150\n    when not defined(windows) and (defined(i386) or defined(amd64)):\n      if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n        test \"-d:danger\", \"benchmarks/matmul_gemm_blas/test_gemm_output.nim\"\n\ntask gen_book, \"Generate Weave documentation\":\n  exec \"mdbook build docs\"\n\ntask publish_book, \"Publish book on Github Pages\":\n  exec \"\"\"\n    git worktree add tmp-book gh-pages && \\\n    rm -rf tmp-book/* && \\\n    cp -a docs/book/* tmp-book/ && \\\n    cd tmp-book && \\\n    git add . && { \\\n      git commit -m \"publish book\" && \\\n      git push origin gh-pages || true; } && \\\n    cd .. && \\\n    git worktree remove -f tmp-book && \\\n    rm -rf tmp-book\n  \"\"\"\n",
"https://raw.githubusercontent.com/shaunc/cucumber_nim/master/cucumber.nimble": "# Package\n\nversion       = \"0.0.11\"\nauthor        = \"Shaun Cutts\"\ndescription   = \"Implements Cucumber BDD system in nim.\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.15.0\"\nrequires \"nre >= 1.0.0\"\nrequires \"commandeer >= 0.10.5\"\nrequires \"tempfile >= 0.1.4\"\n\ntask test, \"test cucumber_nim features\":\n  exec \"nim c -r --verbosity:0 ./tests/run\"\n",
"https://github.com/Skrylar/skyhash": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joshua Cearley\"\ndescription   = \"Computes the hashes of various things.\"\nlicense       = \"MPL-2\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/zendbit/nim.zfblast/master/zfblast.nimble": "# Package\nversion     = \"0.2.0\"\nauthor      = \"Amru Rosyada\"\ndescription = \"High performance http server (https://tools.ietf.org/html/rfc2616) with persistent connection for nim language\"\nlicense     = \"BSD\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 1.4.0\"\nrequires \"uri3 >= 0.1.4\"\nrequires \"sha1\"\n",
"https://github.com/oswjk/nimpb_protoc": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Oskari Timperi\"\ndescription   = \"Protocol Buffers compiler for nimpb\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask fetch, \"fetch prebuilt protoc binaries\":\n    exec \"nim c -d:ssl -r fetch\"\n",
"https://github.com/ba0f3/fsm.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"A simple finite-state machine for @nim-lang\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n\n",
"https://github.com/c0ntribut0r/cat-400": "import strutils\nimport strformat\nimport os\n\n# Package info\nversion = \"0.2.0\"\nauthor = \"c0ntribut0r\"\ndescription = \"Game framework\"\nlicense = \"MPL-2.0\"\n\n# srcDir = \"c4\"\n# installDirs = @[\"c4\"]\n# installExt = @[\"nim\", \"nims\", \"nimble\", \"txt\"]\nskipDirs = @[\"docs\"]\n\n# Dependencies\nrequires \"nim >= 1.0\"\nrequires \"msgpack4nim >= 0.3.0\"\n# requires \"cligen >= 0.9.41\"\n# requires \"fsm >= 0.1.0\"\n# requires \"sdl2_nim >= 2.0.9.2\"\n# when defined(linux):\n#   requires \"x11 >= 1.1\"\n\n\nproc dirGenDocs(src, dst: string) =\n  mkDir dst\n\n  for file in src.listFiles:\n    let (dir, name, ext) = file.splitFile()\n\n    if ext == \".nim\" and not name.startsWith(\"_\"):\n      echo &\"Processing {file}\"\n      let\n        destDir = dst / dir.tailDir\n        destFile = destDir / name.addFileExt(\"html\")\n\n      mkDir destDir\n      discard staticExec(&\"nim doc0 -o={destFile} {file}\")\n\n  for dir in src.listDirs:\n    let (head, tail) = dir.splitPath()\n    if not tail.startsWith(\"_\") and tail != nimcacheDir():\n      dirGenDocs(dir, dst)\n\ntask genDocs, \"Generate doc files\":\n  const docsDir = \"docs\" / \"ref\"\n  docsDir.rmDir()\n  dirGenDocs(\"c4\", docsDir)\n  echo &\"Generated documetation at {docsDir}\"\n",
"https://github.com/cheatfate/asynctools": "# Package\nversion     = \"0.1.1\"\nauthor      = \"Eugene Kabanov\"\ndescription = \"Various asynchronous tools for Nim\"\nlicense     = \"MIT\"\n# Deps\nrequires \"nim >= 0.19.4\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-openstreetmap/master/openstreetmap.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"juancarlospaco\"\ndescription   = \"OpenStreetMap API Lib for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/xpm/master/xpm.nimble": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"X-Pixmap & NetPBM\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.1.1\"\n",
"https://raw.githubusercontent.com/Xe/argument_parser/master//argument_parser.nimble": "[Package]\nname          = \"argument_parser\"\nversion       = \"0.4.3\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Provides a complex commandline parser.\"\"\"\nlicense       = \"MIT\"\n\ninstallDirs = \"\"\"\n\ndocs\nexamples\n\n\"\"\"\n\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\nargument_parser.nim\nnakefile.nim\nnakefile.nimrod.cfg\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nhttps://github.com/Xe/badger_bits.git >= 0.2.2\nnake >= 1.4\nnim >= 0.10.2\n\n\"\"\"\n",
"https://github.com/nimscale/nim-libjwt": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Iwan Budi Kusnanto\"\ndescription   = \"Nim binding for libjwt\"\nlicense       = \"LGPL\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\n",
"https://raw.githubusercontent.com/jlp765/mapbits/master/mapbits.nimble": "[Package]\nname: \"mapbits\"\nversion: \"1.0\"\nauthor: \"James Parkinson\"\ndescription: \"Access binary mapped portions of bytes using int variables\"\nlicense: \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.14.0\"\n",
"https://raw.githubusercontent.com/ul/soundio/master/soundio.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Ruslan Prokopchuk\"\ndescription   = \"Bindings for libsoundio, a library providing cross-platform audio input and output.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/momeemt/BlackvasCli": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"momeemt\"\ndescription   = \"The Blackvas CLI\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"blackvas_cli\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 1.2.0\"\nrequires \"jester >= 0.4.3\"",
"https://raw.githubusercontent.com/Rekihyt/nimviz/master/nimviz.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Rekihyt\"\ndescription   = \"A wrapper for the graphviz c api.\"\nlicense       = \"MIT\"\nbinDir        = \"bin\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"",
"https://github.com/Araq/midnight_dynamite": "[Package]\nname         = \"midnight_dynamite\"\nversion      = \"1.0.1\"\nauthor       = \"Grzegorz Adam Hankiewicz\"\ndescription  = \"Wrapper for the markdown rendering hoedown library.\"\nlicense      = \"MIT\"\nbin = \"midnight_dynamite_badger.exe\"\n\nInstallFiles = \"\"\"\n\nLICENSE.md\nREADME.md\ndocs/changes.md\ndocs/syntax.md\nmidnight_dynamite.nim\nmidnight_dynamite_pkg/autolink.c\nmidnight_dynamite_pkg/autolink.h\nmidnight_dynamite_pkg/buffer.c\nmidnight_dynamite_pkg/buffer.h\nmidnight_dynamite_pkg/document.c\nmidnight_dynamite_pkg/document.h\nmidnight_dynamite_pkg/escape.c\nmidnight_dynamite_pkg/escape.h\nmidnight_dynamite_pkg/hoedown.nim\nmidnight_dynamite_pkg/html.c\nmidnight_dynamite_pkg/html.h\nmidnight_dynamite_pkg/html_blocks.c\nmidnight_dynamite_pkg/html_smartypants.c\nmidnight_dynamite_pkg/stack.c\nmidnight_dynamite_pkg/stack.h\nmidnight_dynamite_pkg/version.c\nmidnight_dynamite_pkg/version.h\nnakefile.nim\nnimdoc.cfg\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nnake >= 1.4\nargument_parser >= 0.2\nhttps://github.com/gradha/badger_bits.git >= 0.2.2\n\"\"\"\n",
"https://github.com/dfdeshom/nimrdkafka.git": "# Package\nversion       = \"0.1.3\"\nauthor        = \"Didier Deshommes\"\ndescription   = \"Low-level Nim wrapper for librdkafka\"\nlicense       = \"MIT\"\nskipFiles     = @[\"example.nim\"]\n\n# Deps\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/def-/iterutils": "# Package\nversion = \"0.4\"\nauthor = \"Dennis Felsing\"\ndescription = \"Functional operations for iterators and slices, similar to sequtils\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.13.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/iterutils.nim\"\n  exec \"nim c -r tests/tests.nim\"\n\ntask testperf, \"TestPerf\":\n  exec \"nim c -d:release --stacktrace:off -d:case1 -r tests/performance.nim\"\n  exec \"nim c -d:release --stacktrace:off -d:case2 -r tests/performance.nim\"\n  exec \"nim c -d:release --stacktrace:off -d:case3 -r tests/performance.nim\"\n",
"https://raw.githubusercontent.com/Adeohluwa/gen/master/gen.nimble": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"Adeoluwa Adejumo\"\ndescription   = \"Ultimate Scaffolding Tool for building GUI/Web/CLI apps in Nim Lang.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"gen\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\", \"progress\", \"docopt\", \"fab\", \"gara\"\n\n# Tasks\n\ntask test, \"Run the Test Suite\":\n  exec \"nim c -r tests/tGen.nim\"\n",
"https://github.com/PMunch/macroutils": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"A package that makes creating macros easier\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/capocasa/nim-nestegg": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Carlo Capocasa\"\ndescription   = \"nestegg, a portable demuxer for the webm audio/video container format, which is a subset of the matroska container format.\"\nlicense       = \"0BSD\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"nimterop\"\nforeignDep \"autoconf\"\nforeignDep \"libtool\"\nforeignDep \"make\"\n\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-crc32/master/crc32.nimble": "version     = \"0.1.1\"\nauthor      = \"juancarlospaco\"\ndescription = \"CRC32, 2 proc, copied from RosettaCode.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/flenniken/metar/master/metar.nimble": "import os\nimport strutils\n\n# https://github.com/nim-lang/nimble#nimble-reference\n\n# Include the metar version number.\ninclude metar/version\n\nversion = metarVersion\nauthor = \"Steve Flenniken\"\ndescription = \"Metadata Reader for Images\"\nlicense = \"MIT\"\nbinDir = \"bin\"\n\n# The nimpy package is required for the library module but not the\n# exe.  Nimpy does not update the its version number, its always at\n# 0.1.0. So we use the git version number instead. See the package\n# source code at ~/.nimble/pkgs. Update the version.nim file and the\n# Dockerfile when you update the version.\nrequires \"nim >= 1.0.4\", \"nimpy#c8ec14a\" # Search for nimpyVersion*.\n\nbin = @[\"metar/metar\"]\n# skipExt = @[\"nim\"]\n# skipDirs = @[\"tests\", \"private\"]\n\n\nproc getDirName(host: string): string =\n  ## Return the host dir name given the nim hostOS name.\n  ## Current possible host values: \"windows\", \"macosx\", \"linux\", \"netbsd\",\n  ## \"freebsd\", \"openbsd\", \"solaris\", \"aix\", \"haiku\", \"standalone\".\n\n  if host == \"macosx\":\n    result = \"mac\"\n  elif host == \"linux\":\n    result = \"linux\"\n  elif host == \"windows\":\n    result = \"win\"\n  else:\n    assert false, \"add a new platform\"\n\n\nproc get_output_path(host: string, baseName: string=\"\", release: bool=true): string =\n  ## Return the path to a folder or file for the output binaries. The\n  ## path is dependent on the host platform and whether it is a debug\n  ## or release build.  Pass hostOS for the current platform. Pass a\n  ## baseName to get a full path to the file.\n\n  var dirName = getDirName(host)\n\n  var components = newSeq[string]()\n  components.add(\"bin\")\n  components.add(dirName)\n  if not release:\n    components.add(\"debug\")\n  if baseName != \"\":\n    components.add(baseName)\n  result = joinPath(components)\n\n\nproc build_metar_and_python_module(host = hostOS, name = \"metar\", libName = \"metar.so\",\n    ignoreOutput = false, release = true, strip = true, xcompile = false,\n    nimOptions = \"\", buildExe=true, buildLib=true) =\n\n  let hints = \"--hint[Processing]:off --hint[CC]:off --hint[Link]:off \"\n\n  var ignore: string\n  if ignoreOutput:\n    ignore = \">/dev/null 2>&1\"\n  else:\n    ignore = \"\"\n\n  var rel: string\n  var relDisplay: string\n  if release:\n    rel = \"-d:release \"\n    relDisplay = \"release\"\n  else:\n    rel = \"\"\n    relDisplay = \"debug\"\n\n  var docker: string\n  if xcompile:\n    docker = \"docker run --rm -v `pwd`:/usr/local/src xcompile \"\n  else:\n    docker = \"\"\n\n  if buildExe:\n    let output = get_output_path(host, name, release)\n    echo \"===> Building $1 $2 for $3 <===\" % [relDisplay, name, host]\n    exec r\"rm -f $1\" % [output]\n\n    let cmd = \"$5nim c $2--out:$1 $3$6$4metar/metar\" % [output, rel, nimOptions, ignore, docker, hints]\n    echo cmd\n    exec cmd\n\n    if strip:\n      exec r\"strip $1\" % [output]\n\n  if buildLib:\n    let output = get_output_path(host, libName, release)\n    echo \"===> Building $1 $2 for $3 <===\" % [relDisplay, libName, host]\n    exec r\"rm -f $1\" % [output]\n\n    let cmd = \"$5nim c $2--out:$1 $3-d:buildingLib --app:lib $6metar/metar $4\" % [output, rel, nimOptions, ignore, docker, hints]\n    echo cmd\n    exec cmd\n\n    # Put the setup file next to the lib ready to install.\n    var dirName = getDirName(host)\n    let setupFilename = \"bin/$1/setup.py\" % [dirName]\n    if not system.fileExists(setupFilename):\n      let cmd = r\"cp python/setup.py $1\" % [setupFilename]\n      echo cmd\n      exec cmd\n\n    exec r\"find . -name \\*.pyc -delete\"\n\n    if strip:\n      exec r\"strip -x $1\" % [output]\n\n\nproc createDependencyGraph() =\n  # Create my.dot file with the contents of metar.dot after stripping\n  # out nim modules.\n  exec \"nim --hints:off genDepend metar/metar.nim\"\n  exec \"\"\"find metar -maxdepth 1 -name \\*.nim | sed \"s:metar/::\" | sed \"s:.nim::\" >names.txt\"\"\"\n  exec \"python python/dotMetar.py names.txt metar/metar.dot >metar/my.dot\"\n  exec \"dot -Tsvg metar/my.dot -o docs/html//dependencies.svg\"\n\n\ntask m, \"Build metar exe and python module, release versions.\":\n  build_metar_and_python_module()\n\ntask mall, \"Build metar exe and python module both debug and release.\":\n  build_metar_and_python_module()\n  build_metar_and_python_module(release=false)\n\n\ntask md, \"Build debug version of metar.\":\n  build_metar_and_python_module(buildLib=false, release=false)\n\n\ntask mdlib, \"Build debug version of the python module.\":\n  build_metar_and_python_module(buildExe=false, release=false)\n\n\nproc get_test_module_cmd(filename: string, release = false): string =\n  ## Return the command line to test one module.\n\n  # You can add -f to force a recompile of imported modules, good for\n  # testing \"imported but not used\" warnings.\n\n  var rel: string\n  if release:\n    rel = \"-d:release \"\n  else:\n    rel = \"\"\n  result = \"nim c -f --verbosity:0 -d:test $2--hints:off -r -p:metar --out:bin/test/$1 tests/$1\" % [filename, rel]\n\nproc get_test_filenames(): seq[string] =\n  ## Return each nim file in the tests folder.\n  exec \"find tests -maxdepth 1 -type f -name \\\\*.nim | sed 's/tests\\\\///' | sed 's/.nim//' >testfiles.txt\"\n  let text = slurp(\"testfiles.txt\")\n  result = @[]\n  for filename in text.splitLines():\n    if filename.len > 0:\n      result.add(filename)\n  exec \"rm -f testfiles.txt\"\n\nproc runShellTests(release: bool) =\n  echo \"\"\n  echo \"\\e[1;34m[Suite] \\e[00mShell Tests\"\n  if release:\n    exec \"bash -c \\\"tests/test_shell.sh release\\\"\"\n  else:\n    exec \"bash -c tests/test_shell.sh\"\n\nproc testPython() =\n  ## Test the python module.\n  echo \"\"\n  echo \"\\e[1;34m[Suite] \\e[00mTest Python Module\\n\"\n\n  var result = gorgeEx(\"hash python3 2>/dev/null\")\n  if result.exitCode != 0:\n    echo \"Skipping because python3 does not exist.\"\n  else:\n    exec \"python3 python/test_metar.py\"\n\nproc runTests(release: bool) =\n  var relDisplay: string\n  if release:\n    relDisplay = \"release\"\n  else:\n    relDisplay = \"debug\"\n  echo \"==> Run $1 unit tests. <==\" % [relDisplay]\n\n  runShellTests(release)\n  testPython()\n\n  ## Test each nim file in the tests folder.\n  for filename in get_test_filenames():\n    let cmd = get_test_module_cmd(filename, release)\n    exec cmd\n\ntask testpython, \"Test the python module.\":\n  testPython()\n\n\n# task args, \"Show command line arguments.\":\n#   # Nimble needs to improve it command line processing.\n#   # https://github.com/nim-lang/nimble/issues/723\n#   # todo: pass arguments to the tasks.\n#   let count = system.paramCount()+1\n#   echo \"argument count: $1\" % $count\n#   for i in 0..count-1:\n#     echo \"$1: $2\" % [$i, system.paramStr(i)]\n\n\ntask test, \"Run all the tests in debug.\":\n  runTests(false)\n\ntask testall, \"Run all the tests in both debug and release.\":\n  runTests(false)\n  runTests(true)\n\ntask showtests, \"Show the command lines to run unit tests individually.\":\n  for filename in get_test_filenames():\n    let cmd = get_test_module_cmd(filename)\n    echo cmd\n  echo \"\"\n  echo \"Run one test called \\\"happy path\\\" in the moduled test_metar:\"\n  let cmd = get_test_module_cmd(\"test_metar.nim\")\n  echo cmd & \"\"\" \"happy path\"\"\"\"\n\ntask clean, \"Delete unneeded temporary files created by the build processes.\":\n  # ## Delete binary files in the test dir (files with no extension).\n  # exec \"find tests -type f ! -name \\\"*.*\\\" | xargs rm\"\n\n  # # # Delete binary files in the metar dir (files with no extension).\n  # exec \"find metar -type f ! -name \\\"*.*\\\" | xargs rm\"\n\n  # Delete files generated by dot.\n  exec \"rm -f metar.deps\"\n  exec \"rm -f metar/metar.deps\"\n  exec \"rm -f metar/metar.dot\"\n  exec \"rm -f metar/my.dot\"\n  exec \"rm -f metar/metar.png\"\n  # exec \"rm -f metar_*.nims\"\n  exec \"rm -f testfiles.txt\"\n  exec \"rm -f docfiles.txt\"\n  exec \"rm -f names.txt\"\n\n  # Delete files generated by coverage.\n  exec \"rm -f coverage.info\"\n  exec \"rm -fr metar/coverage\"\n  # exec r\"find tests -type f -perm +001 | grep -v '\\.' | xargs -r rm\"\n\n  exec \"rm -f docs/*.json\"\n\n  # Delete unneeded files in bin folder.\n  exec \"rm -f bin/test/test_*\"\n  exec \"rm -f bin/metar*\"\n  exec \"rm -f bin/metar.so*\"\n\n  # Delete ~ files\n  exec r\"find . -type f -name \\*~ -delete\"\n\n  exec \"rm -f readme.html\"\n  # exec \"rm -f *.nims\"\n\n  exec \"rm -f tshell.txt\"\n\n  exec \"rm -f .DS_Store\"\n  exec \"rm -f docs/.DS_Store\"\n\n\n\nproc doc_module(name: string) =\n  let cmd = \"nim doc --hints:off -d:test --index:on --out:docs/html/$1.html metar/$1.nim\" % [name]\n  echo cmd\n  exec cmd\n\nproc open_in_browser(filename: string) =\n  ## Open the given file in a browser if the system has an open command.\n  exec \"(hash open 2>/dev/null && open $1) || echo 'open $1'\" % filename\n\n# pandoc works as well.\n# task docp, \"Build project.md document\":\n#   exec \"pandoc docs/project.md -o docs/html/project.html\"\n#   open_in_browser(\"docs/html/project.html\")\n\n# task docp, \"Build project.md document\":\n#   exec \"markdown docs/project.md -o docs/html/project.html\"\n#   open_in_browser(\"docs/html/project.html\")\n\n\nproc buildMainDocs() =\n  exec \"nim rst2html --hints:off --out:docs/html/main.html docs/main.rst\"\n  exec \"nim rst2html --hints:off --out:docs/html/project.html docs/project.rst\"\n  exec \"nim rst2html --hints:off --out:readme.html readme.rst\"\n  exec \"nim buildIndex --hints:off -d:test --out:docs/html/theindex.html docs/html/\"\n  exec \"rm docs/html/*.idx\"\n  createDependencyGraph()\n  # Open the main.html file in a browser when the open command exists.\n  # exec \"(hash open 2>/dev/null && open docs/html/main.html) || echo 'open docs/html/main.html'\"\n  open_in_browser(\"readme.html\")\n\n\ntask docs1, \"Build docs for one module.\":\n  doc_module(\"hexDump\")\n  buildMainDocs()\n\n\ntask docs, \"Build all the docs.\":\n  exec \"find metar -type f -name \\\\*.nim | grep -v metar/private | sed 's;metar/;;' | grep -v '^private' | sed 's/.nim//' >docfiles.txt\"\n  let fileLines = slurp(\"docfiles.txt\")\n  for filename in fileLines.splitLines():\n    if filename.len > 0:\n      # echo filename\n      doc_module(filename)\n  exec \"rm docfiles.txt\"\n\n  buildMainDocs()\n\n\ntask tree, \"Show the project directory tree.\":\n  exec \"tree -I 'metarenv|private|testfiles.extra|*.nims' | less\"\n\ntask bins, \"Show the binary file details.\":\n  exec r\"find bin -name metar\\* -type f | xargs ls -l\"\n\n# task t, \"Build and run t.nim.\":\n#   let cmd = \"nim c -r -d:release --out:bin/test/t metar/private/t\"\n#   echo cmd\n#   exec cmd\n\n# task tlib, \"Build t python library\":\n#   # Note the nim and the lib name must match, for example: t.so and t.nim.\n#   # tlib.so and t.nim results in the error:\n#   # ImportError: dynamic module does not define init function (inittlib)\n#   exec r\"nim c --app:lib --out:bin/test/t.so metar/private/t\"\n#   exec r\"python python/test.py\"\n\n\n# task t2, \"Build and run t2.nim\":\n#   exec \"nim c -r --out:bin/test/t2 metar/private/t2\"\n\ntask coverage, \"Run unit tests to collect and show code coverage data.\":\n\n  var test_filenames = newSeq[string]()\n  if true:\n    # Run one module and its test file. Replace module name as needed.\n    test_filenames.add(\"test_readerJpeg.nim\")\n  else:\n    test_filenames = get_test_filenames()\n\n  # Compile test code with coverage support.\n  for filename in test_filenames:\n    echo \"compiling: \" & filename\n    var baseName = changeFileExt(filename, \"\")\n    var command = \"nim c --verbosity:0 -d:test --hints:off -p:metar --out:bin/test/$1 --debugger:native --passC:--coverage --passL:--coverage tests/$2\" % [baseName, filename]\n    echo command\n    exec command\n\n  exec \"lcov --base-directory . --directory ~/.cache/nim/ --zerocounters -q\"\n\n  # Run test code.\n  for filename in test_filenames:\n    let baseName = changeFileExt(filename, \"\")\n    let cmd = \"bin/test/$1\" % [baseName]\n    echo cmd\n    exec cmd\n\n  # Delete the system files since we do not care about their coverage data.\n  exec r\"find ~/.cache/nim -name stdlib\\*gcda -delete\"\n\n  # Collect the coverate info.\n  exec r\"lcov --base-directory . --directory ~/.cache/nim/ -c -o coverage.info\"\n\n  # Remove Nim system libs from the coverage info.\n  # exec r\"lcov --remove coverage.info \\\"*/lib/*\\\" -o coverage.info\"\n\n  # Generate the html from the coverage info.\n  exec r\"genhtml -o metar/coverage/html coverage.info\"\n  open_in_browser(r\"metar/coverage/html/index.html\")\n\n\ntask dot, \"Create and show the metar modules dependency graph.\":\n  createDependencyGraph()\n  exec \"open -a Firefox docs/html/dependencies.svg\"\n\n  # You can set the border color like this:\n  # macros [color = red];\n  # strutils [color = red];\n  # json [color = red];\n  # tables [color = red];\n\n  # Set the line color to blue:\n  # abc -> def [color = blue]\n\n  # Set the arrowhead shape:\n  # abc -> def [arrowhead = diamond]\n\n  # find all files in the project and set their color blue.\n  # find metar -maxdepth 1 -name \\*.nim | sed 's%metar/%%' | sed 's/.nim/ [color blue]/'\n\n  # Make a dotted line.\n  # version -> ver [style = dotted]\n  # metar -> ver [style = dotted]\n\n\ntask showdebugger, \"Show example command line to debug code with lldb.\":\n  echo \"\"\n  echo \"Common switches:\"\n  echo \"  nimswitches='c --debugger:native --verbosity:0 --hints:off'\"\n  echo \"\"\n\n  echo \"Compile test_readerJpeg with debugging info:\"\n  echo \"  nim $nimswitches --out:bin/test/test_readerJpeg tests/test_readerJpeg.nim\"\n  echo \"\"\n\n  echo \"Compile metar with debugging info:\"\n  echo \"  nim $nimswitches --out:bin/test/metar metar/metar.nim\"\n  echo \"\"\n  echo \"Launch metar with the debugger:\"\n  echo \"  lldb bin/linux/metar testfiles/image.jpg\"\n  echo \"\"\n\n# task jsondoc, \"Write doc comments to a json file for metar.nim.\":\n#   exec r\"nim jsondoc0 --out:docs/metar.json metar/metar\"\n#   exec \"open -a Firefox docs/metar.json\"\n\n# task jsondoct, \"Write doc comments to a json file for t.nim.\":\n#   exec r\"nim jsondoc0 --out:docs/tdoc0.json metar/private/t\"\n#   exec r\"nim jsondoc --out:docs/tdoc.json metar/private/t\"\n#   exec \"open -a Firefox docs/tdoc.json\"\n\n# The metar image is called metar_image\n# The container is called metar_container\n\ntask dcreate, \"Create a metar linux docker image.\":\n  exec r\"docker build -t metar-image env/linux/.\"\n\ntask drun, \"Run the metar linux docker container.\":\n  exec r\"./env/run-metar-container.sh\"\n\ntask ddelete, \"Delete the metar linux docker container.\":\n  try:\n    exec r\"docker stop metar-container; docker rm metar-container\"\n  except:\n    discard\n\ntask dlist, \"List the metar linux docker image and container.\":\n  try:\n    exec r\"echo 'image:';docker images | grep metar-image ; echo '\\ncontainer:';docker ps -a | grep metar-container\"\n  except:\n    discard\n\ntask mxwin, \"Compile for windows 64 bit using the xcompile docker image.\":\n\n  build_metar_and_python_module(host = \"windows\", name = \"metar.exe\", libName = \"metar.dll\", release = true, strip = false, nimOptions = \"--os:windows --cpu:amd64 \", xcompile = true)\n\ntask mxmac, \"Compile for mac 64 bit using the xcompile docker image.\":\n\n  build_metar_and_python_module(host = \"macosx\", name = \"metar\", libName = \"metar.so\", release = true, strip = false, nimOptions = \"--os:macosx --cpu:amd64 \", xcompile = true)\n\ntask mxlinux, \"Compile for linux 64 bit using the xcompile docker image.\":\n\n  build_metar_and_python_module(host = \"linux\", name = \"metar\", libName = \"metar.so\", release = true, strip = true, nimOptions = \"--os:linux --cpu:amd64 \", xcompile = true)\n",
"https://github.com/achesak/nim-gitapi": "[Package]\nname = \"gitapi\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with git version control software\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-open-elevation/master/open_elevation.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Juan Carlos\"\ndescription   = \"OpenStreetMap Elevation API MultiSync Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/leeooox/nimvisa": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"leeooox\"\ndescription   = \"nimvisa is C wrapper for NI-VISA instrument control library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"docs\"]\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/zoispag/amka-nim/master/amka.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zois Pagoulatos\"\ndescription   = \"A validator for greek social security number (AMKA)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n",
"https://raw.githubusercontent.com/minefuto/qwertycd/master/qwertycd.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"minefuto\"\ndescription   = \"Terminal UI based cd command\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"qwertycd\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"illwill >= 0.2.0\"\nrequires \"parsetoml >= 0.5.0\"\nwhen defined(windows):\n  requires \"regex >= 0.19.0\"\n",
"https://github.com/fallingduck/options-nim": "[Package]\nname          = \"options\"\nversion       = \"0.1.0\"\nauthor        = \"Nim Runtime Library\"\ndescription   = \"Temporary package for people running 0.11.2 stable.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://github.com/nitely/nim-hpack": "# Package\n\nversion = \"0.2.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"HPACK (Header Compression for HTTP/2)\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipDirs = @[\"tests\"]\n\nrequires \"nim >= 0.19.0\"\n\ntask gen, \"Gen data\":\n  exec \"nim c -r gen/huffman.nim\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/hpack/hcollections.nim\"\n  exec \"nim c -r src/hpack/encoder.nim\"\n  exec \"nim c -r src/hpack/huffman_encoder.nim\"\n  exec \"nim c -r src/hpack/decoder.nim\"\n  exec \"nim c -r src/hpack/huffman_decoder.nim\"\n  exec \"nim c -r tests/tests.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc2 -o:./docs --project ./src/hpack.nim\"\n  exec \"mv ./docs/hpack.html ./docs/index.html\"\n  exec \"rm -fr ./docs/*/*_data.html\"\n",
"https://github.com/Halsys/nim-bgfx": "# Package\nversion = \"0.2.2\"\nauthor = \"Cory Noll Crimmins - Golden\"\ndescription = \"Wrapper for the graphics library; BGFX.\"\nlicense = \"BSD\"\nskipDirs = @[\"examples\"]\n\n# Dependencies\nrequires \"nim >= 0.16.1\"\n",
"https://raw.githubusercontent.com/ftsf/nico/master/nico.nimble": "# Package\n\nversion       = \"0.3.2\"\nauthor        = \"Jez 'Impbox' Kabanov\"\ndescription   = \"Nico Game Engine\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"sdl2_nim >= 2.0.10.0\"\nrequires \"gifenc >= 0.1.0\"\nrequires \"webaudio >= 0.2.1\"\nrequires \"html5_canvas >= 0.1.0\"\nrequires \"ajax >= 0.1.1\"\nrequires \"nimPNG\"\n\nskipDirs = @[\"examples\",\"tests\",\"android\",\"tools\"]\ninstallDirs = @[\"exampleApp\"]\n\nbin = @[\"nicoboot\"]\n\ntask test, \"run tests\":\n  exec \"nim c -p:. -r tests/copymem.nim\"\n  exec \"nim c -p:. -r tests/fonts.nim\"\n  exec \"nim c -p:. -r tests/config.nim\"\n  exec \"nim c -p:. -r tests/palette.nim\"\n  exec \"nim c -p:. -r tests/tilemap.nim\"\n\ntask testjs, \"compile tests with js backend\":\n  # test they compile with js backend, harder to test running\n  exec \"nim js -p:. tests/copymem.nim\"\n  exec \"nim js -p:. tests/fonts.nim\"\n  exec \"nim js -p:. tests/config.nim\"\n  exec \"nim js -p:. tests/palette.nim\"\n  exec \"nim js -p:. tests/tilemap.nim\"\n\ntask paintout, \"compile paintout example\":\n  exec \"nim c -p:. -d:debug examples/paintout.nim\"\n  exec \"nim js -p:. -d:debug --lineTrace:on --stackTrace:on -o:examples/paintout.js examples/paintout.nim\"\n\ntask platformer, \"compile platformer example\":\n  exec \"nim c -p:. -d:release --multimethods:on -o:examples/platformer examples/platformer.nim\"\n  exec \"nim js -p:. -d:release --multimethods:on -o:examples/platformer.js examples/platformer.nim\"\n\ntask audio, \"compile audio example\":\n  exec \"nim c -p:. -d:debug -o:examples/audio examples/audio.nim\"\n  exec \"nim js -p:. -d:release -o:examples/audio.js examples/audio.nim\"\n\ntask vertex, \"compile vertex example\":\n  exec \"nim c -p:. -d:debug -o:examples/vertex examples/vertex.nim\"\n  exec \"nim js -p:. -d:release -o:examples/vertex.js examples/vertex.nim\"\n\ntask gui, \"compile gui example\":\n  exec \"nim c -p:. -d:debug -o:examples/gui examples/gui.nim\"\n  exec \"nim js -p:. -d:release -o:examples/gui.js examples/gui.nim\"\n\ntask benchmark, \"compile benchmark example\":\n  exec \"nim c -p:. -d:release -d:danger -o:examples/benchmark examples/benchmark.nim\"\n  exec \"nim js -p:. -d:release -d:danger -o:examples/benchmark.js examples/benchmark.nim\"\n\ntask runbenchmark, \"compile and run benchmark example\":\n  exec \"nim c -r -p:. -d:release -d:danger -o:examples/benchmark examples/benchmark.nim\"\n\ntask examples, \"compile all examples\":\n  exec \"nimble paintout\"\n  exec \"nimble platformer\"\n  exec \"nimble audio\"\n  exec \"nimble vertex\"\n  exec \"nimble gui\"\n  exec \"nimble benchmark\"\n\ntask runplatformer, \"runs platformer\":\n  exec \"nim c -r -p:. -d:release -o:examples/platformer examples/platformer.nim\"\n\ntask nicosynth, \"runs nicosynth\":\n  exec \"nim c -r -p:. -d:release -o:tools/nicosynth tools/nicosynth.nim\"\n",
"https://raw.githubusercontent.com/andreaferretti/nim-teafiles/master/teafiles.nimble": "# Copyright 2017 UniCredit S.p.A.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nmode = ScriptMode.Verbose\n\npackageName   = \"teafiles\"\nversion       = \"0.1.5\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"TeaFiles for Nim\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"test.nim\", \"acme.tea\"]\n\nrequires \"nim >= 0.18.0\"\n\n--forceBuild\n\ntask test, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --run\n  setCommand \"c\", \"test.nim\"\n\ntask gendoc, \"generate documentation\":\n  --docSeeSrcUrl: https://github.com/unicredit/nim-teafiles/blob/master\n  setCommand \"doc2\", \"teafiles.nim\"",
"https://raw.githubusercontent.com/rolandgg/nimTiingo/master/nimTiingo.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Roland Grein\"\ndescription   = \"Tiingo\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/status-im/nim-ethash/master/ethash.nimble": "packageName   = \"ethash\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A Nim implementation of Ethash, the Ethereum proof-of-work hashing function\"\nlicense       = \"Apache License 2.0\"\nsrcDir        = \"src\"\n\n### Dependencies\n\nrequires \"nim >= 0.18.0\", \"nimcrypto >= 0.1.0\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Run Proof-of-Work tests (without mining)\":\n  test \"all_tests\"\n\ntask testRelease, \"test release mode\":\n  switch(\"define\", \"release\")\n  testTask()\n\ntask test_mining, \"Run Proof-of-Work and mining tests (test in release mode + OpenMP + march=native)\":\n  switch(\"define\", \"release\")\n  switch(\"define\", \"openmp\")\n  switch(\"define\", \"march_native\")\n  switch(\"define\", \"ethash_mining\")\n  test \"all_tests\"\n",
"https://raw.githubusercontent.com/markspanbroek/mnemonic/master/mnemonic.nimble": "# Package\n\nversion     = \"0.1.3\"\nauthor      = \"Mark Spanbroek\"\ndescription = \"Create memorable sentences from byte sequences.\"\nlicense     = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.6 & < 2.0.0\"\nrequires \"nimsha2 >= 0.1.1 & < 0.2.0\"\n",
"https://github.com/doongjohn/vscds": "# Package\n\nversion       = \"0.3.3\"\nauthor        = \"doongjohn\"\ndescription   = \"<VS Code Data Swapper> Easily manage multiple data folders.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"vscds\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"nimlevenshtein >= 0.1.0\"\n",
"https://raw.githubusercontent.com/jackhftang/lrucache/master/lrucache.nimble": "# Package\n\nversion       = \"1.1.3\"\nauthor        = \"Jack Tang\"\ndescription   = \"Least recently used (LRU) cache\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"lrucache.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html src/lrucache.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://github.com/rustomax/npg": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Max Skybin\"\ndescription   = \"Password generator in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"npg\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"passgen >= 0.1.0\"",
"https://github.com/achesak/nim-geoip": "[Package]\nname = \"freegeoip\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Retrieve info about a location from an IP address \"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/achesak/nim-freegeoip/master/freegeoip.nimble": "[Package]\nname = \"freegeoip\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Retrieve info about a location from an IP address \"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/srwiley/listsv/master/listsv.nimble": "[Package]\nname          = \"listsv\"\nversion       = \"0.1.0\"\nauthor        = \"srwiley\"\ndescription   = \"Implements basic operations on singly and doubly linked lists with generic value types.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/SolitudeSF/mpwc": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Master Password command line utility\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"mpwc\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"masterpassword >= 0.2.0\", \"cligen >= 1.0.0\"\n",
"https://raw.githubusercontent.com/CORDEA/oauth/master/oauth.nimble": "# Package\nversion     = \"0.10\"\nauthor      = \"Yoshihiro Tanaka\"\ndescription = \"OAuth library for nim\"\nlicense     = \"Apache License 2.0\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 0.19.0\"\nrequires \"sha1\"\n",
"https://github.com/Calinou/clr": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Hugo Locurcio\"\ndescription   = \"Get information about colors and convert them in the command line\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"clr\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\nrequires \"chroma#1bbe72ead9fe8270a8d038eb92bd4f83b3f0fc87\"\nrequires \"cligen >= 0.9.31\"\n",
"https://raw.githubusercontent.com/BarrOff/nim-pari/master/nimpari.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"BarrOff\"\ndescription   = \"Nim wrapper for the PARI library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"nimterop >= 0.6.11\"\n",
"https://raw.githubusercontent.com/Guevara-chan/Xors3D-for-Nim/master/Xors3D.nimble": "    \r\n# Package\r\n\r\nversion       = \"0.1.0\"\r\nauthor        = \"Guevara-chan\"\r\ndescription   = \"Blitz3D-esque DX9 engine for Nim\"\r\nlicense       = \"MIT\"\r\nsrcDir        = \"Headers\"\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.18.0\"",
"https://github.com/fenekku/commandeer": "# Package\n\nversion     = \"0.12.3\"\nauthor      = \"Guillaume Viger\"\ndescription = \"A small command line parsing DSL\"\nlicense     = \"MIT\"\n\ninstallFiles = @[\"commandeer.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask tests, \"Run the Commandeer tester\":\n  exec \"nim compile --run runTests\"\n",
"https://raw.githubusercontent.com/treeform/jsony/master/jsony.nimble": "version     = \"0.0.5\"\nauthor      = \"Andre von Houck\"\ndescription = \"A loose direct to object json parser with hooks.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://github.com/fowlmouth/nake/": "version = \"1.9.4\"\nauthor = \"fowl\"\ndescription = \"make-like for Nim. Describe your builds as tasks!\"\nlicense = \"MIT\"\n\ninstallFiles = @[\n    \"LICENSE.rst\",\n    \"README.rst\",\n    \"nake.nim\",\n    \"nakefile.nim\",\n    \"nakelib.nim\"\n    ]\n\nbin = @[\"nake\"]\n\n# Deps\nrequires \"nim >= 0.10.2\"\n",
"https://github.com/luked99/linuxfb.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Luke Diamand\"\ndescription   = \"Wrapper for <linux/fb.h> framebuffer ioctls\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\"\n\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/tester\"\n",
"https://github.com/jackvandrunen/findtests": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jacob VanDrunen\"\ndescription   = \"A helper module for writing unit tests with nake or similar build system.\"\nlicense       = \"ISC\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/status-im/nim-confutils": "mode = ScriptMode.Verbose\n\npackageName   = \"confutils\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Simplified handling of command line options and config files\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.0.0\",\n         \"stew\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r --threads:off -d:release tests/test_all\"\n  exec \"nim c -r --threads:on -d:release tests/test_all\"\n",
"https://github.com/nortero-code/rx-nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Kristian Hasselknippe\"\ndescription   = \"An implementation of rx observables in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/euantorano/dotenv.nim": "# Package\n\nversion       = \"1.1.1\"\nauthor        = \"Euan T\"\ndescription   = \"dotenv implementation for Nim. Loads environment variables from `.env`\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/main.nim\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc --index:on -o:docs/dotenv.html src/dotenv.nim\"\n",
"https://github.com/roose/nim-wox": "# Package\n\nversion       = \"1.2.1\"\nauthor        = \"roose\"\ndescription   = \"Helper library for writing Wox plugins in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"unicodeplus >= 0.8.0\"\n\ntask tests, \"Run Wox.nim tester\":\n  exec \"nim c -r tests/woxtests\"",
"https://github.com/CosmicToast/pipe": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Chloe Kudryavtsev\"\ndescription   = \"Pipe operator for nim.\"\nlicense       = \"MIT\"\n\n# Base\n\nskipDirs = @[\"tests\"]\n\ntask clean, \"Clean various files\":\n    rmDir \"tests/nimcache\"\n    rmDir \"nimcache\"\n    rmfile \"pipe\"\n    rmfile \"tests/test\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n# Tests\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/test\"\n",
"https://raw.githubusercontent.com/marcoapintoo/nim-pythonize/master/pythonize.nimble": "[Package]\nname          = \"pythonize\"\nversion       = \"1.0.0\"\nauthor        = \"Marco Antonio Pinto\"\ndescription   = \"A higher-level wrapper for the Python Programing Language\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires:     \"nim >= 0.10.0, python >= 1.0\"\n",
"https://github.com/YesDrX/randgen": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"YesDrX\"\ndescription   = \"A random variable generator library for nim-lang.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask donothing, \"donothing\":\n    exec \"nim c -r src/randgen.nim\"\n    rmFile \"src/randgen\"\n",
"https://github.com/OpenSystemsLab/struct.nim": "[Package]\nname          = \"struct\"\nversion       = \"0.2.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"Python-like 'struct' for Nim\"\nlicense       = \"MIT\"\n\nskipFiles     = \"test.nim\"\n\n[Deps]\nRequires: \"nim >= 0.20.2\"\n",
"https://github.com/juancarlospaco/nim-steam": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Steam API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/SolitudeSF/mpdclient": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"SolitudeSF\"\ndescription   = \"MPD client library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/nim-lang/python": "# Package\nversion = \"1.2\"\nauthor = \"Andreas Rumpf, Matic Kukovec\"\ndescription = \"Wrapper to interface with Python 1/2 interpreter\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.13.0\"\n",
"https://github.com/xmonader/nim-redisparser": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"xmonader\"\ndescription   = \"RESP(REdis Serialization Protocol) Serialization for Nim\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/samdmarshall/cmd.nim": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"interactive command prompt\"\nlicense       = \"BSD 3-Clause\"\nsrcDir        = \"src\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://github.com/brentp/nim-lapper": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"fast, simple interval overlaps with binary search\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.19.2\" #, \"nim-lang/c2nim>=0.9.13\"\nsrcDir = \"src\"\n\nskipFiles = @[\"bench.nim\", \"example.nim\"]\n\nskipDirs = @[\"tests\"]\n\ntask test, \"run the tests\":\n  exec \"nim c -d:release --lineDir:on -r src/lapper\"\n\ntask docs, \"make docs\":\n  exec \"nim doc2 src/lapper; mkdir -p docs; mv lapper.html docs/index.html\"\n",
"https://github.com/jackhftang/wyhash.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jack Tang\"\ndescription   = \"A new awesome nimble package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"wyhash.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    # print current version\n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://github.com/fowlmouth/nimrod-chipmunk/": "# Package\nversion = \"6.1.5\"\nauthor = \"fowl, matkuki\"\ndescription = \"chipmunk 2d physics library\"\nlicense = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.14.0\"\n",
"https://github.com/yglukhov/cassandra": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Cassandra driver bindings\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\", \"genbindings\"]\n",
"https://raw.githubusercontent.com/achesak/nim-coverartarchive/master/coverartarchive.nimble": "[Package]\nname = \"coverartarchive\"\nversion = \"0.3\"\nauthor = \"Adam Chesak\"\ndescription = \"Cover Art Archive API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://api.github.com/repos/philip-wernersbach/nim-orient/contents": "[{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"77792f57a331a19324610907f43c146c2df2265d\",\"size\":254,\"url\":\"https://api.github.com/repos/philip-wernersbach/nim-orient/contents/README.md?ref=master\",\"html_url\":\"https://github.com/philip-wernersbach/nim-orient/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/philip-wernersbach/nim-orient/git/blobs/77792f57a331a19324610907f43c146c2df2265d\",\"download_url\":\"https://raw.githubusercontent.com/philip-wernersbach/nim-orient/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/philip-wernersbach/nim-orient/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/philip-wernersbach/nim-orient/git/blobs/77792f57a331a19324610907f43c146c2df2265d\",\"html\":\"https://github.com/philip-wernersbach/nim-orient/blob/master/README.md\"}}]",
"https://raw.githubusercontent.com/xland/nimeverything/master//nimeverything.nimble": "[Package]\nname          = \"nimeverything\"\nversion       = \"0.1.0\"\nauthor        = \"liulun\"\ndescription   = \"everything wrapper (everything:http://www.voidtools.com/)\"\nlicense       = \"MIT\"\n",
"https://github.com/shakna-israel/nimcat": "[Package]\nname = \"nimcat\"\nversion = \"0.0.0\"\nauthor = \"James Milne\"\ndescription = \"An implementation of cat\"\nlicense = \"MIT\"\nbin = \"nimcat\"\nSkipDirs = \"bins\"\n\n[Deps]\nrequires: \"nim >= 0.10.0\"\n",
"https://github.com/tulayang/httpform": "[Package]\nname          = \"httpform\"\nversion       = \"0.1.0\"\nauthor        = \"Wang Tong\"\ndescription   = \"Http request form parser\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.0\"\n",
"https://github.com/yglukhov/closure_compiler.git": "# Package\nversion = \"0.3.5\"\nauthor = \"Yuriy Glukhov\"\ndescription = \"Bindings to closure compiler web API\"\nlicense = \"MIT\"\nbin = @[\"closure_compiler\"]\ninstallDirs = @[\"compiler-latest\"]\n\n",
"https://github.com/technicallyagd/ringDeque": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"T.agd\"\ndescription   = \"deque implementatoin using DoublyLinkedRing\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/diegogub/jdec": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Diego Guraieb\"\ndescription   = \"easy json helpers to marshal and unmarshal json\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/juancarlospaco/webgui": "version       = \"0.9.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Web Technologies based Crossplatform GUI, modified wrapper for modified webview.h\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"examples\", \"docs\"]\n\nrequires \"nim >= 1.2.4\"\n\n\nimport distros\n\ntask setup, \"Setup\":\n  if not defined(ssl):\n    echo \"SSL is required for HTTPS.\"\n\n  if detectOs(Ubuntu):\n    foreignDep \"build-essential\"\n    foreignDep \"gtk+-3.0\"\n    foreignDep \"webkit2gtk-4.0\"\n\nbefore install:\n  setupTask()\n",
"https://github.com/Adeohluwa/validator": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Adeoluwa Adejumo\"\ndescription   = \"This library provides several functions to validate real world data types\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/nim-lang/nimble": "# Package\n\nversion       = \"0.13.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Nim package manager.\"\nlicense       = \"BSD\"\n\nbin = @[\"nimble\"]\nsrcDir = \"src\"\ninstallExt = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu):\n    foreignDep \"libssl-dev\"\n  else:\n    foreignDep \"openssl\"\n\ntask test, \"Run the Nimble tester!\":\n  withDir \"tests\":\n    exec \"nim c -r tester\"\n",
"https://github.com/achesak/nim-sndhdr": "[Package]\nname = \"sndhdr\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Library for detecting the format of a sound file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/genotrance/nimssh2": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"genotrance\"\ndescription   = \"libssl2 wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimssh2\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n\n",
"https://github.com/jyapayne/subfield": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joey Payne\"\ndescription   = \"A sub-field accessor macro for the Nim programming language.\"\nlicense       = \"MIT\"\n\nbin = @[\"subfield\"]\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\", \"einheit >= 0.1.6\"\n\ntask tests, \"run all tests\":\n  exec \"nim c -r tests/tests.nim\"\n",
"https://github.com/jasonk000/nimbpf": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jason Koch\"\ndescription   = \"libbpf for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"nimterop\"\n",
"https://raw.githubusercontent.com/singularperturbation/base62-encode/master/base62.nimble": "[Package]\nname          = \"base62\"\nversion       = \"0.1.0\"\nauthor        = \"perturbation\"\ndescription   = \"Encoder/Decoder.  Defaults to Base-62, but allows for an arbitrary alphabet.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/Jeff-Ciesielski/fixmath": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"LibFixMath 16:16 fixed point support for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.1\"\n",
"https://github.com/felipetesc/NimChromePath": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"felipetesc\"\ndescription   = \"Thin lib to find if chrome exists on Windows, Mac, or Linux\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/jiro4989/rena/master/rena.nimble": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"jiro4989\"\ndescription   = \"rena is a tiny fire/directory renaming command.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"rena\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 0.9.32\"\n\nimport strformat, os\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble build -d:release -Y\"\n\ntask archive, \"Create archived assets\":\n  let app = \"rena\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://raw.githubusercontent.com/Knaque/rabbit/master/rabbit.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Reilly Moore\"\ndescription   = \"The Hundred Rabbits theme ecosystem brought to Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"chroma >= 0.1.3\"",
"https://raw.githubusercontent.com/stisa/jswebsockets/master/jswebsockets.nimble": "# Package\nversion       = \"0.1.3\"\nauthor        = \"stisa\"\ndescription   = \"Wrapper for js websockets\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\nskipDirs = @[\"templates\"]\n# Deps\nrequires: \"nim >= 0.16.0\"\nimport ospaths\n\ntask docs, \"Build docs\":\n  mkdir \"docs\"\n  exec(\"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\"/\"jswebsockets.html \" & \".\"/\"src\"/\"jswebsockets.nim\")\n\ntask examples, \"Build examples\":\n  exec(\"exampler\")\n  mkdir \"docs\"/\"examples\"\n  withdir \"examples\":\n    for file in listfiles(\".\"):\n      if splitfile(file).ext == \".nim\":\n        exec \"nim js -d:test --verbosity:0 --hints:off -o:\" & \"..\"/\"docs\"/\"examples\"/ file.changefileext(\"js\") & \" \" & file\n",
"https://github.com/planetis-m/bingo": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"Binary serialization framework\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/pigmej/nim-simple-decimal": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jedrzej Nowak\"\ndescription   = \"A simple decimal library\"\nlicense       = \"MIT\"\nskipFiles     = @[\"test.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18\"\n\ntask test, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --run\n  setCommand \"c\", \"simpledecimal\"\n",
"https://github.com/samdmarshall/influx.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"wrapper for communicating with InfluxDB over the REST interface\"\nlicense       = \"BSD 3-Clause\"\nsrcDir        = \"src\"\n\nskipDirs      = @[\"tests\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/test\"\n",
"https://github.com/haxscramper/hasts": "# Package\n\nversion       = \"0.1.6\"\nauthor        = \"haxscramper\"\ndescription   = \"AST for various markup languages\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmisc >= 0.9.15\"\n",
"https://raw.githubusercontent.com/xflywind/nimish/master/nimish.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"C macro for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimish\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/nim-lang/irc/master/irc.nimble": "# Package\n\nversion = \"0.3.0\"\nauthor = \"Dominik Picheta\"\ndescription = \"IRC client module\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.9.5\"\n",
"https://api.github.com/repos/julienaubert/nim-sndfile/contents": "[{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"4ebb5e9086120fda2be448260813076414b5f146\",\"size\":207,\"url\":\"https://api.github.com/repos/julienaubert/nim-sndfile/contents/README.md?ref=master\",\"html_url\":\"https://github.com/julienaubert/nim-sndfile/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/julienaubert/nim-sndfile/git/blobs/4ebb5e9086120fda2be448260813076414b5f146\",\"download_url\":\"https://raw.githubusercontent.com/julienaubert/nim-sndfile/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/julienaubert/nim-sndfile/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/julienaubert/nim-sndfile/git/blobs/4ebb5e9086120fda2be448260813076414b5f146\",\"html\":\"https://github.com/julienaubert/nim-sndfile/blob/master/README.md\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"b5eece6fc384c5e611d9da1ea27391522c2118ad\",\"size\":0,\"url\":\"https://api.github.com/repos/julienaubert/nim-sndfile/contents/examples?ref=master\",\"html_url\":\"https://github.com/julienaubert/nim-sndfile/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/julienaubert/nim-sndfile/git/trees/b5eece6fc384c5e611d9da1ea27391522c2118ad\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/julienaubert/nim-sndfile/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/julienaubert/nim-sndfile/git/trees/b5eece6fc384c5e611d9da1ea27391522c2118ad\",\"html\":\"https://github.com/julienaubert/nim-sndfile/tree/master/examples\"}},{\"name\":\"sndfile.babel\",\"path\":\"sndfile.babel\",\"sha\":\"05abe1fd442fc16fa1361d98774913af518329e1\",\"size\":171,\"url\":\"https://api.github.com/repos/julienaubert/nim-sndfile/contents/sndfile.babel?ref=master\",\"html_url\":\"https://github.com/julienaubert/nim-sndfile/blob/master/sndfile.babel\",\"git_url\":\"https://api.github.com/repos/julienaubert/nim-sndfile/git/blobs/05abe1fd442fc16fa1361d98774913af518329e1\",\"download_url\":\"https://raw.githubusercontent.com/julienaubert/nim-sndfile/master/sndfile.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/julienaubert/nim-sndfile/contents/sndfile.babel?ref=master\",\"git\":\"https://api.github.com/repos/julienaubert/nim-sndfile/git/blobs/05abe1fd442fc16fa1361d98774913af518329e1\",\"html\":\"https://github.com/julienaubert/nim-sndfile/blob/master/sndfile.babel\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"fbfd00e66e2a1dd2930f306ebdb45d722b229fa1\",\"size\":0,\"url\":\"https://api.github.com/repos/julienaubert/nim-sndfile/contents/src?ref=master\",\"html_url\":\"https://github.com/julienaubert/nim-sndfile/tree/master/src\",\"git_url\":\"https://api.github.com/repos/julienaubert/nim-sndfile/git/trees/fbfd00e66e2a1dd2930f306ebdb45d722b229fa1\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/julienaubert/nim-sndfile/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/julienaubert/nim-sndfile/git/trees/fbfd00e66e2a1dd2930f306ebdb45d722b229fa1\",\"html\":\"https://github.com/julienaubert/nim-sndfile/tree/master/src\"}}]",
"https://raw.githubusercontent.com/status-im/nim-web3/master/web3.nimble": "mode = ScriptMode.Verbose\n\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"This is the humble begginings of library similar to web3.[js|py]\"\nlicense       = \"MIT or Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\nrequires \"chronicles\"\nrequires \"chronos\"\nrequires \"eth\"\nrequires \"faststreams\"\nrequires \"json_rpc\"\nrequires \"json_serialization\"\nrequires \"nimcrypto\"\nrequires \"stew\"\nrequires \"stint\"\n\n### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  # TODO, don't forget to change defaultLang to `cpp` if the project requires C++\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://raw.githubusercontent.com/jyapayne/nim-extensions/master/extensions.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"Nim extensions. Includes an object oriented programming (oop, class) macro\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/treeform/ptest": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"treeform\"\ndescription   = \"You debug with print statements? Why don't you also test with them?\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nbin = @[\"ptest\"]",
"https://github.com/status-im/nim-bearssl": "# Package\nversion       = \"0.1.5\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"BearSSL wrapper\"\nlicense       = \"MIT or Apache License 2.0\"\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  exec \"nim -v\"\n  test \"-d:debug\", \"tests/test1\"\n  test \"-d:release\", \"tests/test1\"\n  test \"--gc:arc -d:release\", \"tests/test1\"\n",
"https://api.github.com/repos/esbullington/nimrod-hex/contents": "[{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"da53d897ce16f375c4e8876ca096fa7567867ff7\",\"size\":1085,\"url\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/esbullington/nimrod-hex/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/da53d897ce16f375c4e8876ca096fa7567867ff7\",\"download_url\":\"https://raw.githubusercontent.com/esbullington/nimrod-hex/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/da53d897ce16f375c4e8876ca096fa7567867ff7\",\"html\":\"https://github.com/esbullington/nimrod-hex/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"7e4e9567ee1989d3081a962a3302af308c324cb4\",\"size\":358,\"url\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/README.md?ref=master\",\"html_url\":\"https://github.com/esbullington/nimrod-hex/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/7e4e9567ee1989d3081a962a3302af308c324cb4\",\"download_url\":\"https://raw.githubusercontent.com/esbullington/nimrod-hex/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/7e4e9567ee1989d3081a962a3302af308c324cb4\",\"html\":\"https://github.com/esbullington/nimrod-hex/blob/master/README.md\"}},{\"name\":\"hex.babel\",\"path\":\"hex.babel\",\"sha\":\"042b3b6d6b97748acec2797e8ce88cb5a3b3366b\",\"size\":154,\"url\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/hex.babel?ref=master\",\"html_url\":\"https://github.com/esbullington/nimrod-hex/blob/master/hex.babel\",\"git_url\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/042b3b6d6b97748acec2797e8ce88cb5a3b3366b\",\"download_url\":\"https://raw.githubusercontent.com/esbullington/nimrod-hex/master/hex.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/hex.babel?ref=master\",\"git\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/042b3b6d6b97748acec2797e8ce88cb5a3b3366b\",\"html\":\"https://github.com/esbullington/nimrod-hex/blob/master/hex.babel\"}},{\"name\":\"hex.nim\",\"path\":\"hex.nim\",\"sha\":\"4104f2d20888e1d94815d8619520c350b35855ee\",\"size\":2383,\"url\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/hex.nim?ref=master\",\"html_url\":\"https://github.com/esbullington/nimrod-hex/blob/master/hex.nim\",\"git_url\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/4104f2d20888e1d94815d8619520c350b35855ee\",\"download_url\":\"https://raw.githubusercontent.com/esbullington/nimrod-hex/master/hex.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/hex.nim?ref=master\",\"git\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/4104f2d20888e1d94815d8619520c350b35855ee\",\"html\":\"https://github.com/esbullington/nimrod-hex/blob/master/hex.nim\"}},{\"name\":\"hex_test.nim\",\"path\":\"hex_test.nim\",\"sha\":\"78e366564ad8058fc01442077790709b8be99f17\",\"size\":1327,\"url\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/hex_test.nim?ref=master\",\"html_url\":\"https://github.com/esbullington/nimrod-hex/blob/master/hex_test.nim\",\"git_url\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/78e366564ad8058fc01442077790709b8be99f17\",\"download_url\":\"https://raw.githubusercontent.com/esbullington/nimrod-hex/master/hex_test.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/esbullington/nimrod-hex/contents/hex_test.nim?ref=master\",\"git\":\"https://api.github.com/repos/esbullington/nimrod-hex/git/blobs/78e366564ad8058fc01442077790709b8be99f17\",\"html\":\"https://github.com/esbullington/nimrod-hex/blob/master/hex_test.nim\"}}]",
"https://github.com/planety/logue": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"flywind\"\ndescription   = \"Command line tools for Prologue.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"logue\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"cligen >= 1.2.2\"\n",
"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents": "[{\"name\":\".travis.yml\",\"path\":\".travis.yml\",\"sha\":\"bf3a635090542af9b0a6978f89bfec939f3224db\",\"size\":394,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/.travis.yml?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/.travis.yml\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/bf3a635090542af9b0a6978f89bfec939f3224db\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/.travis.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/.travis.yml?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/bf3a635090542af9b0a6978f89bfec939f3224db\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/.travis.yml\"}},{\"name\":\"GenTests\",\"path\":\"GenTests\",\"sha\":\"85895e1e27c3de3d94a3311fa4cefba11845a1a1\",\"size\":0,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/GenTests?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/tree/master/GenTests\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/trees/85895e1e27c3de3d94a3311fa4cefba11845a1a1\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/GenTests?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/trees/85895e1e27c3de3d94a3311fa4cefba11845a1a1\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/tree/master/GenTests\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"992e69fddbbf86c17578cbe3c26ee89eb2188a12\",\"size\":1082,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/992e69fddbbf86c17578cbe3c26ee89eb2188a12\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/992e69fddbbf86c17578cbe3c26ee89eb2188a12\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/LICENSE\"}},{\"name\":\"Makefile\",\"path\":\"Makefile\",\"sha\":\"c7ef31ff4c5c04ffe3511b47522aa2c548b64326\",\"size\":194,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/Makefile?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/Makefile\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/c7ef31ff4c5c04ffe3511b47522aa2c548b64326\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/Makefile\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/Makefile?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/c7ef31ff4c5c04ffe3511b47522aa2c548b64326\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/Makefile\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"836a2c3e46b463a40cd84d400b1069704707adb8\",\"size\":2028,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/README.md?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/836a2c3e46b463a40cd84d400b1069704707adb8\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/836a2c3e46b463a40cd84d400b1069704707adb8\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/README.md\"}},{\"name\":\"example.nim\",\"path\":\"example.nim\",\"sha\":\"1358e03e4d42417bcdcff16cdff45e61189b5fa1\",\"size\":848,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/example.nim?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/example.nim\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/1358e03e4d42417bcdcff16cdff45e61189b5fa1\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/example.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/example.nim?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/1358e03e4d42417bcdcff16cdff45e61189b5fa1\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/example.nim\"}},{\"name\":\"gentest.rb\",\"path\":\"gentest.rb\",\"sha\":\"ec6b3e5cdf9794628342b94a689052ac780edf75\",\"size\":318,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/gentest.rb?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/gentest.rb\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/ec6b3e5cdf9794628342b94a689052ac780edf75\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/gentest.rb\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/gentest.rb?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/ec6b3e5cdf9794628342b94a689052ac780edf75\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/gentest.rb\"}},{\"name\":\"msgpack.html\",\"path\":\"msgpack.html\",\"sha\":\"2c67cc4775e7e7769c4164f5eb86ff6fefb0cb52\",\"size\":83027,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/msgpack.html?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/msgpack.html\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/2c67cc4775e7e7769c4164f5eb86ff6fefb0cb52\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/msgpack.html\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/msgpack.html?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/2c67cc4775e7e7769c4164f5eb86ff6fefb0cb52\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/msgpack.html\"}},{\"name\":\"msgpack.nim\",\"path\":\"msgpack.nim\",\"sha\":\"6adc2857312b70b07790692fb3a010c9a2fd5b84\",\"size\":24488,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/msgpack.nim?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/msgpack.nim\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/6adc2857312b70b07790692fb3a010c9a2fd5b84\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/msgpack.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/msgpack.nim?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/6adc2857312b70b07790692fb3a010c9a2fd5b84\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/msgpack.nim\"}},{\"name\":\"msgpack.nimble\",\"path\":\"msgpack.nimble\",\"sha\":\"1312d25d3147e8444757a9512347dc75e5a32fd0\",\"size\":197,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/msgpack.nimble?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/msgpack.nimble\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/1312d25d3147e8444757a9512347dc75e5a32fd0\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/msgpack.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/msgpack.nimble?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/1312d25d3147e8444757a9512347dc75e5a32fd0\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/msgpack.nimble\"}},{\"name\":\"overview.svg\",\"path\":\"overview.svg\",\"sha\":\"7a9102bf167fe93f356f0900e3b879e06788e126\",\"size\":66605,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/overview.svg?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/overview.svg\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/7a9102bf167fe93f356f0900e3b879e06788e126\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/overview.svg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/overview.svg?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/7a9102bf167fe93f356f0900e3b879e06788e126\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/overview.svg\"}},{\"name\":\"stack.yaml\",\"path\":\"stack.yaml\",\"sha\":\"777b1a2ef31bc854ecf7e934ec8e061259dc0333\",\"size\":2125,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/stack.yaml?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/stack.yaml\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/777b1a2ef31bc854ecf7e934ec8e061259dc0333\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/stack.yaml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/stack.yaml?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/777b1a2ef31bc854ecf7e934ec8e061259dc0333\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/stack.yaml\"}},{\"name\":\"unwrapinto.nim\",\"path\":\"unwrapinto.nim\",\"sha\":\"0e3a30a829d103df530865f6fd351dcf3f6cd0aa\",\"size\":186,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/unwrapinto.nim?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/unwrapinto.nim\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/0e3a30a829d103df530865f6fd351dcf3f6cd0aa\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/unwrapinto.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/unwrapinto.nim?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/0e3a30a829d103df530865f6fd351dcf3f6cd0aa\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/unwrapinto.nim\"}},{\"name\":\"unwrappable.nim\",\"path\":\"unwrappable.nim\",\"sha\":\"d4e01fd336d01818ce52084fd9a22d2b24fa2d7a\",\"size\":411,\"url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/unwrappable.nim?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/unwrappable.nim\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/d4e01fd336d01818ce52084fd9a22d2b24fa2d7a\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/unwrappable.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/contents/unwrappable.nim?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/msgpack-nim/git/blobs/d4e01fd336d01818ce52084fd9a22d2b24fa2d7a\",\"html\":\"https://github.com/akiradeveloper/msgpack-nim/blob/master/unwrappable.nim\"}}]",
"https://raw.githubusercontent.com/OHermesJunior/rain.nim/master/rain.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"OHermesJunior\"\ndescription   = \"Rain simulation in your terminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"rain\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/nim-lang/iup": "[Package]\nname          = \"iup\"\nversion       = \"3.0.0\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"Nim wrapper for IUP\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"",
"https://raw.githubusercontent.com/tormund/os_files/master/os_files.nimble": "# Package\nversion = \"0.1.2\"\nauthor = \"Tormund\"\ndescription = \"\"\"Native file dialogs (x11, windows, osx) with extension filters and predefined path.\n    System file icons in any resolution (x11 with theme support, windows, osx).\n    Open file in default application (x11, windows, osx)\"\"\"\n\nlicense = \"MIT\"\n\nwhen defined(windows):\n    requires \"winim >= 3.1.1\"\n\nrequires \"oldgtk3\"\nrequires \"jsbind\"\nrequires \"https://github.com/yglukhov/darwin\"\n",
"https://github.com/OpenSystemsLab/jsmn.nim": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"Jsmn - a world fastest JSON parser - in pure Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/madprops/nap": "# Package\n\nversion       = \"1.5.1\"\nauthor        = \"madprops\"\ndescription   = \"Argument parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/SciNim/rnim/master/rnim.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Vindaar\"\ndescription   = \"A library to interface between Nim and R\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.3.7\"\n",
"https://github.com/barcharcraz/vecmath": "[Package]\nname = \"vecmath\"\nversion = \"0.1.0\"\nauthor = \"Charlie Barto\"\ndescription = \"various maths fucntions useful to graphics\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/paul-nameless/nim-fswatch/master/libfswatch.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Paul Nameless\"\ndescription   = \"Nim binding to libfswatch\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/JohnAD/webterminal": "# Package\n\nversion       = \"0.0.2\"\nauthor        = \"John Dupuy\"\ndescription   = \"Simple HTML5/Javascript text terminal for embedding an nim app on a web page.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/achesak/nim-srt/master/srt.nimble": "[Package]\nname = \"srt\"\nversion = \"1.1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for parsing SRT (SubRip) subtitle files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://github.com/nim-lang/Nim.git": "\nversion = system.NimVersion\nauthor = \"Andreas Rumpf\"\ndescription = \"Compiler package providing the compiler sources as a library.\"\nlicense = \"MIT\"\n\ninstallDirs = @[\"compiler\", \"nimsuggest\"]\n\nrequires \"nim >= 0.14.0\"\n",
"https://raw.githubusercontent.com/xmonader/nim-configparser/master/configparser.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"pure Ini configurations parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/greencardamom/awk": "# Package\n\nversion       = \"1.0\"\nauthor        = \"Green Cardamom\"\ndescription   = \"A library of awk functions in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.1\"\nrequires \"nre >= 1.0.0\"\n\n",
"https://github.com/Yardanico/nim-mathexpr": "version       = \"1.3.1\"\nauthor        = \"Danil Yarantsev (Yardanico)\"\ndescription   = \"MathExpr - tiny mathematical expression evaluator library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.0\"",
"https://raw.githubusercontent.com/angluca/mui/master/mui.nimble": "# Package\n\nversion       = \"2.0.1\"\nauthor        = \"Angluca\"\ndescription   = \"A tiny immediate-mode UI library\"\nlicense       = \"MIT\"\n\ninstallDirs = @[\"src\",\"demo\"]\ninstallFiles = @[\"mui.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\n",
"https://github.com/genotrance/nimfuzzy": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"genotrance\"\ndescription   = \"Fuzzy search wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimfuzzy\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim cpp --passC:\\\"-DFTS_FUZZY_MATCH_IMPLEMENTATION\\\" -r tests/fuzztest.nim\"\n\n",
"https://github.com/DangerOnTheRanger/nimatic": "# package\n\nversion = \"0.2.0\"\nauthor = \"Kermit Alexander II\"\ndescription = \"A static site generator written in Nim\"\nlicense = \"2-clause BSD\"\nsrcDir = \"src\"\nbin = @[\"nimatic\"]\nskipExt = @[\"nim\"]\n\n# dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"markdown >= 0.8.0\"\n",
"https://github.com/jiro4989/nimtetris": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"jiro4989\"\ndescription   = \"A simple terminal tetris in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimtetris\"]\nbinDir        = \"bin\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.2\"\nrequires \"illwill >= 0.1.0\"\n\nimport os, strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"nimtetris\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/FedericoCeratto/nim-libu2f": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Wrapper for the libu2f server and client\"\nlicense       = \"LGPLv3\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.0\"\n\n",
"https://api.github.com/repos/nimious/io-usb/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"a8240ca01b9f32e0ea46c6f8b05bfcb7e82d3ec0\",\"size\":113,\"url\":\"https://api.github.com/repos/nimious/libusb/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nimious/libusb/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nimious/libusb/git/blobs/a8240ca01b9f32e0ea46c6f8b05bfcb7e82d3ec0\",\"download_url\":\"https://raw.githubusercontent.com/nimious/libusb/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/libusb/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nimious/libusb/git/blobs/a8240ca01b9f32e0ea46c6f8b05bfcb7e82d3ec0\",\"html\":\"https://github.com/nimious/libusb/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"size\":1076,\"url\":\"https://api.github.com/repos/nimious/libusb/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nimious/libusb/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nimious/libusb/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"download_url\":\"https://raw.githubusercontent.com/nimious/libusb/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/libusb/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nimious/libusb/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"html\":\"https://github.com/nimious/libusb/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"8ecb43f74db5b192b68e671f33f980ee3ab69ef8\",\"size\":3080,\"url\":\"https://api.github.com/repos/nimious/libusb/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nimious/libusb/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nimious/libusb/git/blobs/8ecb43f74db5b192b68e671f33f980ee3ab69ef8\",\"download_url\":\"https://raw.githubusercontent.com/nimious/libusb/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/libusb/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nimious/libusb/git/blobs/8ecb43f74db5b192b68e671f33f980ee3ab69ef8\",\"html\":\"https://github.com/nimious/libusb/blob/master/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"cf95706ba66301cbd7219f4dfe1adbaa53f14b69\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/libusb/contents/docs?ref=master\",\"html_url\":\"https://github.com/nimious/libusb/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/nimious/libusb/git/trees/cf95706ba66301cbd7219f4dfe1adbaa53f14b69\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/libusb/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/nimious/libusb/git/trees/cf95706ba66301cbd7219f4dfe1adbaa53f14b69\",\"html\":\"https://github.com/nimious/libusb/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"80e4e0075e9f6a1bb4fcb353b9761065232a7cea\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/libusb/contents/examples?ref=master\",\"html_url\":\"https://github.com/nimious/libusb/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/nimious/libusb/git/trees/80e4e0075e9f6a1bb4fcb353b9761065232a7cea\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/libusb/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/nimious/libusb/git/trees/80e4e0075e9f6a1bb4fcb353b9761065232a7cea\",\"html\":\"https://github.com/nimious/libusb/tree/master/examples\"}},{\"name\":\"libusb.nimble\",\"path\":\"libusb.nimble\",\"sha\":\"4b0298ba9c5130ede3399691029405d479f4be7f\",\"size\":258,\"url\":\"https://api.github.com/repos/nimious/libusb/contents/libusb.nimble?ref=master\",\"html_url\":\"https://github.com/nimious/libusb/blob/master/libusb.nimble\",\"git_url\":\"https://api.github.com/repos/nimious/libusb/git/blobs/4b0298ba9c5130ede3399691029405d479f4be7f\",\"download_url\":\"https://raw.githubusercontent.com/nimious/libusb/master/libusb.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/libusb/contents/libusb.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nimious/libusb/git/blobs/4b0298ba9c5130ede3399691029405d479f4be7f\",\"html\":\"https://github.com/nimious/libusb/blob/master/libusb.nimble\"}},{\"name\":\"nimdoc.cfg\",\"path\":\"nimdoc.cfg\",\"sha\":\"501a32c6abd9b8ff347b2c5199261360a5d7c95d\",\"size\":102,\"url\":\"https://api.github.com/repos/nimious/libusb/contents/nimdoc.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/libusb/blob/master/nimdoc.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/libusb/git/blobs/501a32c6abd9b8ff347b2c5199261360a5d7c95d\",\"download_url\":\"https://raw.githubusercontent.com/nimious/libusb/master/nimdoc.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/libusb/contents/nimdoc.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/libusb/git/blobs/501a32c6abd9b8ff347b2c5199261360a5d7c95d\",\"html\":\"https://github.com/nimious/libusb/blob/master/nimdoc.cfg\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"81a55b8a7ce334f2ad7348dca9356c0b359f4df4\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/libusb/contents/src?ref=master\",\"html_url\":\"https://github.com/nimious/libusb/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nimious/libusb/git/trees/81a55b8a7ce334f2ad7348dca9356c0b359f4df4\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/libusb/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nimious/libusb/git/trees/81a55b8a7ce334f2ad7348dca9356c0b359f4df4\",\"html\":\"https://github.com/nimious/libusb/tree/master/src\"}}]",
"https://github.com/juancarlospaco/nim-tinyfiledialogs": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"TinyFileDialogs for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/disruptek/criterion": "version       = \"0.2.7\"\nauthor        = \"LemonBoy\"\ndescription   = \"Statistic-driven microbenchmark framework\"\nlicense       = \"MIT\"\n\nwhen not defined(release):\n  requires \"https://github.com/disruptek/balls >= 2.0.0 & < 3.0.0\"\n\ntask test, \"run unit tests\":\n  when defined(windows):\n    exec \"balls.cmd\"\n  else:\n    exec \"balls\"\n\ntask demo, \"generate svg\":\n  exec \"\"\"demo docs/fib.svg \"nim c -d:danger --out=\\$1 --define:tfibOutput:off tests/tfib.nim\"\"\"\"\n  exec \"\"\"demo docs/brief.svg \"nim c -d:danger --out=\\$1 --define:briefOutput:on tests/tfib.nim\"\"\"\"\n  exec \"\"\"demo docs/many.svg \"nim c -d:danger --out=\\$1 tests/many.nim\"\"\"\"\n",
"https://raw.githubusercontent.com/achesak/nim-noaa/master/noaa.nimble": "[Package]\nname = \"noaa\"\nversion = \"0.1\"\nauthor = \"Adam Chesak\"\ndescription = \"NOAA weather API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://raw.githubusercontent.com/euantorano/progress.nim/master/progress.nimble": "# Package\n\nversion       = \"1.1.2\"\nauthor        = \"Euan T\"\ndescription   = \"A simple progress bar for Nim.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc2 --index:on -o:docs/progress.html src/progress.nim\"\n",
"https://raw.githubusercontent.com/bitstormGER/ArrayFire-Nim/master/ArrayFireNim.nimble": "version     = \"0.2.1\"\nauthor      = \"bitstorm\"\ndescription = \"Arrayfire wrapper for nim\"\nlicense     = \"BSD\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\nwhen defined(nimdistros):\n    import distros\n    if detectOs(ArchLinux):\n        foreignDep \"arrayfire\"\n\n\ntask tests, \"Run all Arrayfire-Nim tests\":\n    exec \"testament all\"\n",
"https://github.com/zevv/nimcmaes": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Ico Doornekamp\"\ndescription   = \"Nim CMAES library\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/RainbowAsteroids/host/master/host.nimble": "import os\n\n# Package\n\nversion       = \"1.2.1\"\nauthor        = \"Rainbow Asteroids\"\ndescription   = \"A program to staticlly host files or directories over HTTP\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"host\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n\n# Tasks\n\ntask release, \"Builds the release version of host and puts it a output/ directory\":\n  mkDir(\"output\")\n  exec(\"nim c -d:release --outdir:output src/host\")\n\nafter install:\n  if system.hostOS == \"linux\":\n    echo \"Adding man pages to ~/.nimble/man...\"\n\n    if not dirExists($getHomeDir() & \"/.nimble/man\"):\n      cpDir(\"man\", $getHomeDir() & \"/.nimble/man\")\n    echo \"Man page installed!\"\n\n    if not staticExec(\"manpath\").contains(\".nimble/man\"):\n      echo \"~/.nimble/man isn't in your manpath! Be sure fix that for access to the host man page.\"\n",
"https://raw.githubusercontent.com/vycb/gdbmc.nim/master/gdbmc.nimble": "# Package\n\nversion       = \"0.9.9\"\nauthor        = \"vycb\"\ndescription   = \"This library is a wrapper to C GDBM one\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\nskipFiles = @[\"deduplicate.nim,src\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2\"\n\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -d:INTALLED_GDBM_LIB -d:test -r gdbmc.nim\"\n",
"https://github.com/flenniken/metar": "import os\nimport strutils\n\n# https://github.com/nim-lang/nimble#nimble-reference\n\n# Include the metar version number.\ninclude metar/version\n\nversion = metarVersion\nauthor = \"Steve Flenniken\"\ndescription = \"Metadata Reader for Images\"\nlicense = \"MIT\"\nbinDir = \"bin\"\n\n# The nimpy package is required for the library module but not the\n# exe.  Nimpy does not update the its version number, its always at\n# 0.1.0. So we use the git version number instead. See the package\n# source code at ~/.nimble/pkgs. Update the version.nim file and the\n# Dockerfile when you update the version.\nrequires \"nim >= 1.0.4\", \"nimpy#c8ec14a\" # Search for nimpyVersion*.\n\nbin = @[\"metar/metar\"]\n# skipExt = @[\"nim\"]\n# skipDirs = @[\"tests\", \"private\"]\n\n\nproc getDirName(host: string): string =\n  ## Return the host dir name given the nim hostOS name.\n  ## Current possible host values: \"windows\", \"macosx\", \"linux\", \"netbsd\",\n  ## \"freebsd\", \"openbsd\", \"solaris\", \"aix\", \"haiku\", \"standalone\".\n\n  if host == \"macosx\":\n    result = \"mac\"\n  elif host == \"linux\":\n    result = \"linux\"\n  elif host == \"windows\":\n    result = \"win\"\n  else:\n    assert false, \"add a new platform\"\n\n\nproc get_output_path(host: string, baseName: string=\"\", release: bool=true): string =\n  ## Return the path to a folder or file for the output binaries. The\n  ## path is dependent on the host platform and whether it is a debug\n  ## or release build.  Pass hostOS for the current platform. Pass a\n  ## baseName to get a full path to the file.\n\n  var dirName = getDirName(host)\n\n  var components = newSeq[string]()\n  components.add(\"bin\")\n  components.add(dirName)\n  if not release:\n    components.add(\"debug\")\n  if baseName != \"\":\n    components.add(baseName)\n  result = joinPath(components)\n\n\nproc build_metar_and_python_module(host = hostOS, name = \"metar\", libName = \"metar.so\",\n    ignoreOutput = false, release = true, strip = true, xcompile = false,\n    nimOptions = \"\", buildExe=true, buildLib=true) =\n\n  let hints = \"--hint[Processing]:off --hint[CC]:off --hint[Link]:off \"\n\n  var ignore: string\n  if ignoreOutput:\n    ignore = \">/dev/null 2>&1\"\n  else:\n    ignore = \"\"\n\n  var rel: string\n  var relDisplay: string\n  if release:\n    rel = \"-d:release \"\n    relDisplay = \"release\"\n  else:\n    rel = \"\"\n    relDisplay = \"debug\"\n\n  var docker: string\n  if xcompile:\n    docker = \"docker run --rm -v `pwd`:/usr/local/src xcompile \"\n  else:\n    docker = \"\"\n\n  if buildExe:\n    let output = get_output_path(host, name, release)\n    echo \"===> Building $1 $2 for $3 <===\" % [relDisplay, name, host]\n    exec r\"rm -f $1\" % [output]\n\n    let cmd = \"$5nim c $2--out:$1 $3$6$4metar/metar\" % [output, rel, nimOptions, ignore, docker, hints]\n    echo cmd\n    exec cmd\n\n    if strip:\n      exec r\"strip $1\" % [output]\n\n  if buildLib:\n    let output = get_output_path(host, libName, release)\n    echo \"===> Building $1 $2 for $3 <===\" % [relDisplay, libName, host]\n    exec r\"rm -f $1\" % [output]\n\n    let cmd = \"$5nim c $2--out:$1 $3-d:buildingLib --app:lib $6metar/metar $4\" % [output, rel, nimOptions, ignore, docker, hints]\n    echo cmd\n    exec cmd\n\n    # Put the setup file next to the lib ready to install.\n    var dirName = getDirName(host)\n    let setupFilename = \"bin/$1/setup.py\" % [dirName]\n    if not system.fileExists(setupFilename):\n      let cmd = r\"cp python/setup.py $1\" % [setupFilename]\n      echo cmd\n      exec cmd\n\n    exec r\"find . -name \\*.pyc -delete\"\n\n    if strip:\n      exec r\"strip -x $1\" % [output]\n\n\nproc createDependencyGraph() =\n  # Create my.dot file with the contents of metar.dot after stripping\n  # out nim modules.\n  exec \"nim --hints:off genDepend metar/metar.nim\"\n  exec \"\"\"find metar -maxdepth 1 -name \\*.nim | sed \"s:metar/::\" | sed \"s:.nim::\" >names.txt\"\"\"\n  exec \"python python/dotMetar.py names.txt metar/metar.dot >metar/my.dot\"\n  exec \"dot -Tsvg metar/my.dot -o docs/html//dependencies.svg\"\n\n\ntask m, \"Build metar exe and python module, release versions.\":\n  build_metar_and_python_module()\n\ntask mall, \"Build metar exe and python module both debug and release.\":\n  build_metar_and_python_module()\n  build_metar_and_python_module(release=false)\n\n\ntask md, \"Build debug version of metar.\":\n  build_metar_and_python_module(buildLib=false, release=false)\n\n\ntask mdlib, \"Build debug version of the python module.\":\n  build_metar_and_python_module(buildExe=false, release=false)\n\n\nproc get_test_module_cmd(filename: string, release = false): string =\n  ## Return the command line to test one module.\n\n  # You can add -f to force a recompile of imported modules, good for\n  # testing \"imported but not used\" warnings.\n\n  var rel: string\n  if release:\n    rel = \"-d:release \"\n  else:\n    rel = \"\"\n  result = \"nim c -f --verbosity:0 -d:test $2--hints:off -r -p:metar --out:bin/test/$1 tests/$1\" % [filename, rel]\n\nproc get_test_filenames(): seq[string] =\n  ## Return each nim file in the tests folder.\n  exec \"find tests -maxdepth 1 -type f -name \\\\*.nim | sed 's/tests\\\\///' | sed 's/.nim//' >testfiles.txt\"\n  let text = slurp(\"testfiles.txt\")\n  result = @[]\n  for filename in text.splitLines():\n    if filename.len > 0:\n      result.add(filename)\n  exec \"rm -f testfiles.txt\"\n\nproc runShellTests(release: bool) =\n  echo \"\"\n  echo \"\\e[1;34m[Suite] \\e[00mShell Tests\"\n  if release:\n    exec \"bash -c \\\"tests/test_shell.sh release\\\"\"\n  else:\n    exec \"bash -c tests/test_shell.sh\"\n\nproc testPython() =\n  ## Test the python module.\n  echo \"\"\n  echo \"\\e[1;34m[Suite] \\e[00mTest Python Module\\n\"\n\n  var result = gorgeEx(\"hash python3 2>/dev/null\")\n  if result.exitCode != 0:\n    echo \"Skipping because python3 does not exist.\"\n  else:\n    exec \"python3 python/test_metar.py\"\n\nproc runTests(release: bool) =\n  var relDisplay: string\n  if release:\n    relDisplay = \"release\"\n  else:\n    relDisplay = \"debug\"\n  echo \"==> Run $1 unit tests. <==\" % [relDisplay]\n\n  runShellTests(release)\n  testPython()\n\n  ## Test each nim file in the tests folder.\n  for filename in get_test_filenames():\n    let cmd = get_test_module_cmd(filename, release)\n    exec cmd\n\ntask testpython, \"Test the python module.\":\n  testPython()\n\n\n# task args, \"Show command line arguments.\":\n#   # Nimble needs to improve it command line processing.\n#   # https://github.com/nim-lang/nimble/issues/723\n#   # todo: pass arguments to the tasks.\n#   let count = system.paramCount()+1\n#   echo \"argument count: $1\" % $count\n#   for i in 0..count-1:\n#     echo \"$1: $2\" % [$i, system.paramStr(i)]\n\n\ntask test, \"Run all the tests in debug.\":\n  runTests(false)\n\ntask testall, \"Run all the tests in both debug and release.\":\n  runTests(false)\n  runTests(true)\n\ntask showtests, \"Show the command lines to run unit tests individually.\":\n  for filename in get_test_filenames():\n    let cmd = get_test_module_cmd(filename)\n    echo cmd\n  echo \"\"\n  echo \"Run one test called \\\"happy path\\\" in the moduled test_metar:\"\n  let cmd = get_test_module_cmd(\"test_metar.nim\")\n  echo cmd & \"\"\" \"happy path\"\"\"\"\n\ntask clean, \"Delete unneeded temporary files created by the build processes.\":\n  # ## Delete binary files in the test dir (files with no extension).\n  # exec \"find tests -type f ! -name \\\"*.*\\\" | xargs rm\"\n\n  # # # Delete binary files in the metar dir (files with no extension).\n  # exec \"find metar -type f ! -name \\\"*.*\\\" | xargs rm\"\n\n  # Delete files generated by dot.\n  exec \"rm -f metar.deps\"\n  exec \"rm -f metar/metar.deps\"\n  exec \"rm -f metar/metar.dot\"\n  exec \"rm -f metar/my.dot\"\n  exec \"rm -f metar/metar.png\"\n  # exec \"rm -f metar_*.nims\"\n  exec \"rm -f testfiles.txt\"\n  exec \"rm -f docfiles.txt\"\n  exec \"rm -f names.txt\"\n\n  # Delete files generated by coverage.\n  exec \"rm -f coverage.info\"\n  exec \"rm -fr metar/coverage\"\n  # exec r\"find tests -type f -perm +001 | grep -v '\\.' | xargs -r rm\"\n\n  exec \"rm -f docs/*.json\"\n\n  # Delete unneeded files in bin folder.\n  exec \"rm -f bin/test/test_*\"\n  exec \"rm -f bin/metar*\"\n  exec \"rm -f bin/metar.so*\"\n\n  # Delete ~ files\n  exec r\"find . -type f -name \\*~ -delete\"\n\n  exec \"rm -f readme.html\"\n  # exec \"rm -f *.nims\"\n\n  exec \"rm -f tshell.txt\"\n\n  exec \"rm -f .DS_Store\"\n  exec \"rm -f docs/.DS_Store\"\n\n\n\nproc doc_module(name: string) =\n  let cmd = \"nim doc --hints:off -d:test --index:on --out:docs/html/$1.html metar/$1.nim\" % [name]\n  echo cmd\n  exec cmd\n\nproc open_in_browser(filename: string) =\n  ## Open the given file in a browser if the system has an open command.\n  exec \"(hash open 2>/dev/null && open $1) || echo 'open $1'\" % filename\n\n# pandoc works as well.\n# task docp, \"Build project.md document\":\n#   exec \"pandoc docs/project.md -o docs/html/project.html\"\n#   open_in_browser(\"docs/html/project.html\")\n\n# task docp, \"Build project.md document\":\n#   exec \"markdown docs/project.md -o docs/html/project.html\"\n#   open_in_browser(\"docs/html/project.html\")\n\n\nproc buildMainDocs() =\n  exec \"nim rst2html --hints:off --out:docs/html/main.html docs/main.rst\"\n  exec \"nim rst2html --hints:off --out:docs/html/project.html docs/project.rst\"\n  exec \"nim rst2html --hints:off --out:readme.html readme.rst\"\n  exec \"nim buildIndex --hints:off -d:test --out:docs/html/theindex.html docs/html/\"\n  exec \"rm docs/html/*.idx\"\n  createDependencyGraph()\n  # Open the main.html file in a browser when the open command exists.\n  # exec \"(hash open 2>/dev/null && open docs/html/main.html) || echo 'open docs/html/main.html'\"\n  open_in_browser(\"readme.html\")\n\n\ntask docs1, \"Build docs for one module.\":\n  doc_module(\"hexDump\")\n  buildMainDocs()\n\n\ntask docs, \"Build all the docs.\":\n  exec \"find metar -type f -name \\\\*.nim | grep -v metar/private | sed 's;metar/;;' | grep -v '^private' | sed 's/.nim//' >docfiles.txt\"\n  let fileLines = slurp(\"docfiles.txt\")\n  for filename in fileLines.splitLines():\n    if filename.len > 0:\n      # echo filename\n      doc_module(filename)\n  exec \"rm docfiles.txt\"\n\n  buildMainDocs()\n\n\ntask tree, \"Show the project directory tree.\":\n  exec \"tree -I 'metarenv|private|testfiles.extra|*.nims' | less\"\n\ntask bins, \"Show the binary file details.\":\n  exec r\"find bin -name metar\\* -type f | xargs ls -l\"\n\n# task t, \"Build and run t.nim.\":\n#   let cmd = \"nim c -r -d:release --out:bin/test/t metar/private/t\"\n#   echo cmd\n#   exec cmd\n\n# task tlib, \"Build t python library\":\n#   # Note the nim and the lib name must match, for example: t.so and t.nim.\n#   # tlib.so and t.nim results in the error:\n#   # ImportError: dynamic module does not define init function (inittlib)\n#   exec r\"nim c --app:lib --out:bin/test/t.so metar/private/t\"\n#   exec r\"python python/test.py\"\n\n\n# task t2, \"Build and run t2.nim\":\n#   exec \"nim c -r --out:bin/test/t2 metar/private/t2\"\n\ntask coverage, \"Run unit tests to collect and show code coverage data.\":\n\n  var test_filenames = newSeq[string]()\n  if true:\n    # Run one module and its test file. Replace module name as needed.\n    test_filenames.add(\"test_readerJpeg.nim\")\n  else:\n    test_filenames = get_test_filenames()\n\n  # Compile test code with coverage support.\n  for filename in test_filenames:\n    echo \"compiling: \" & filename\n    var baseName = changeFileExt(filename, \"\")\n    var command = \"nim c --verbosity:0 -d:test --hints:off -p:metar --out:bin/test/$1 --debugger:native --passC:--coverage --passL:--coverage tests/$2\" % [baseName, filename]\n    echo command\n    exec command\n\n  exec \"lcov --base-directory . --directory ~/.cache/nim/ --zerocounters -q\"\n\n  # Run test code.\n  for filename in test_filenames:\n    let baseName = changeFileExt(filename, \"\")\n    let cmd = \"bin/test/$1\" % [baseName]\n    echo cmd\n    exec cmd\n\n  # Delete the system files since we do not care about their coverage data.\n  exec r\"find ~/.cache/nim -name stdlib\\*gcda -delete\"\n\n  # Collect the coverate info.\n  exec r\"lcov --base-directory . --directory ~/.cache/nim/ -c -o coverage.info\"\n\n  # Remove Nim system libs from the coverage info.\n  # exec r\"lcov --remove coverage.info \\\"*/lib/*\\\" -o coverage.info\"\n\n  # Generate the html from the coverage info.\n  exec r\"genhtml -o metar/coverage/html coverage.info\"\n  open_in_browser(r\"metar/coverage/html/index.html\")\n\n\ntask dot, \"Create and show the metar modules dependency graph.\":\n  createDependencyGraph()\n  exec \"open -a Firefox docs/html/dependencies.svg\"\n\n  # You can set the border color like this:\n  # macros [color = red];\n  # strutils [color = red];\n  # json [color = red];\n  # tables [color = red];\n\n  # Set the line color to blue:\n  # abc -> def [color = blue]\n\n  # Set the arrowhead shape:\n  # abc -> def [arrowhead = diamond]\n\n  # find all files in the project and set their color blue.\n  # find metar -maxdepth 1 -name \\*.nim | sed 's%metar/%%' | sed 's/.nim/ [color blue]/'\n\n  # Make a dotted line.\n  # version -> ver [style = dotted]\n  # metar -> ver [style = dotted]\n\n\ntask showdebugger, \"Show example command line to debug code with lldb.\":\n  echo \"\"\n  echo \"Common switches:\"\n  echo \"  nimswitches='c --debugger:native --verbosity:0 --hints:off'\"\n  echo \"\"\n\n  echo \"Compile test_readerJpeg with debugging info:\"\n  echo \"  nim $nimswitches --out:bin/test/test_readerJpeg tests/test_readerJpeg.nim\"\n  echo \"\"\n\n  echo \"Compile metar with debugging info:\"\n  echo \"  nim $nimswitches --out:bin/test/metar metar/metar.nim\"\n  echo \"\"\n  echo \"Launch metar with the debugger:\"\n  echo \"  lldb bin/linux/metar testfiles/image.jpg\"\n  echo \"\"\n\n# task jsondoc, \"Write doc comments to a json file for metar.nim.\":\n#   exec r\"nim jsondoc0 --out:docs/metar.json metar/metar\"\n#   exec \"open -a Firefox docs/metar.json\"\n\n# task jsondoct, \"Write doc comments to a json file for t.nim.\":\n#   exec r\"nim jsondoc0 --out:docs/tdoc0.json metar/private/t\"\n#   exec r\"nim jsondoc --out:docs/tdoc.json metar/private/t\"\n#   exec \"open -a Firefox docs/tdoc.json\"\n\n# The metar image is called metar_image\n# The container is called metar_container\n\ntask dcreate, \"Create a metar linux docker image.\":\n  exec r\"docker build -t metar-image env/linux/.\"\n\ntask drun, \"Run the metar linux docker container.\":\n  exec r\"./env/run-metar-container.sh\"\n\ntask ddelete, \"Delete the metar linux docker container.\":\n  try:\n    exec r\"docker stop metar-container; docker rm metar-container\"\n  except:\n    discard\n\ntask dlist, \"List the metar linux docker image and container.\":\n  try:\n    exec r\"echo 'image:';docker images | grep metar-image ; echo '\\ncontainer:';docker ps -a | grep metar-container\"\n  except:\n    discard\n\ntask mxwin, \"Compile for windows 64 bit using the xcompile docker image.\":\n\n  build_metar_and_python_module(host = \"windows\", name = \"metar.exe\", libName = \"metar.dll\", release = true, strip = false, nimOptions = \"--os:windows --cpu:amd64 \", xcompile = true)\n\ntask mxmac, \"Compile for mac 64 bit using the xcompile docker image.\":\n\n  build_metar_and_python_module(host = \"macosx\", name = \"metar\", libName = \"metar.so\", release = true, strip = false, nimOptions = \"--os:macosx --cpu:amd64 \", xcompile = true)\n\ntask mxlinux, \"Compile for linux 64 bit using the xcompile docker image.\":\n\n  build_metar_and_python_module(host = \"linux\", name = \"metar\", libName = \"metar.so\", release = true, strip = true, nimOptions = \"--os:linux --cpu:amd64 \", xcompile = true)\n",
"https://github.com/Akito13/easy-bcrypt.git": "# Package\n\nversion         = \"2.0.3\"\nauthor          = \"Ricardo Garcia\"\ndescription     = \"A simple wrapper providing a convenient reentrant interface for the bcrypt password hashing algorithm.\"\nlicense         = \"CC0\"\n\ninstallFiles    = @[\"COPYING\", \"easy_bcrypt.nim\"]\ninstallDirs     = @[\"lib\"]\n",
"https://raw.githubusercontent.com/soasme/nim-mustache/master/mustache.nimble": "# Package\n\nversion       = \"0.3.2\"\nauthor        = \"Ju Lin\"\ndescription   = \"Mustache in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"mustache\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/Skrylar/sksbox": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Skrylar\"\ndescription   = \"A Nim-native implementation of the sBOX file format.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\nskipDirs = @[\"examples\"]\n\n",
"https://raw.githubusercontent.com/emekoi/vecio.nim/master/vecio.nimble": "# Imports & Consts\n\nimport strutils\n\nconst indexFile = \"\"\"\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"refresh\" content=\"0; url=vecio.html\" />\n  </head>\n</html>\n\"\"\"\n\n# Package\n\nversion       = \"0.1.0\"\nauthor        = \"emekoi\"\ndescription   = \"vectored io for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\", \"docs\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask docs, \"generate documentation\":\n  try:\n    if not existsDir(\"docs\"):\n      mkDir(\"docs\")\n    writeFile(\"docs/index.html\", indexFile)\n    exec \"nim doc2 -o:docs/vecio.html src/vecio.nim\"\n  except:\n    discard\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_sermon/master/sermon.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"Tool to monitor various items on your Linux server\"\nlicense       = \"MIT\"\nbin           = @[\"sermon\"]\ninstallDirs   = @[\"src\"]\ninstallFiles  = @[\"config_default.cfg\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\nrequires \"jester >= 0.4.3\"\n\nimport distros\ntask setup, \"Generating executable\":\n  if detectOs(Windows):\n    echo \"Cannot run on Windows\"\n    quit()\n\nbefore install:\n  setupTask()",
"https://github.com/dom96/notifications": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"GUI notifications for Mac OS X\\'s Notification Center\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.12.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c tests/alltests\"\n  cpFile \"tests/alltests\", \"alltests\"\n  exec \"chmod +x alltests\"\n  exec \"./alltests\"\n  rmFile \"alltests\"\n",
"https://github.com/juancarlospaco/sweetanitify": "version       = \"1.2.2\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Sweet_Anita Translator, help spread awareness about Tourettes\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://raw.githubusercontent.com/haxscramper/hpprint/master/hpprint.nimble": "version       = \"0.2.12\"\nauthor        = \"haxscramper\"\ndescription   = \"Generic configurable pretty-printer\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.4.0\"\nrequires \"shell\", \"with\"\nrequires \"hdrawing >= 0.1.2\", \"hasts >= 0.1.4\", \"hnimast >= 0.3.10\"\nrequires \"hmisc >= 0.9.16\"\n\n\nlet\n  testDir = \"/tmp/docker-hpprint\"\n  localDevel = @[\"hmisc\"]\n",
"https://raw.githubusercontent.com/BarrOff/roots/master/roots.nimble": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"BarrOff\"\ndescription   = \"Root finding functions for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/kijowski/autotyper": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Michal Kijowski\"\ndescription   = \"Keyboard typing emulator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"autotyper\"]\nbinDir        = \"bin\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"cligen\"\n\n# Tasks\n\ntask doc, \"Generate documentation\":\n  rmDir \"docs\"\n  exec \"nim doc --project --index:on --git.url:https://github.com/kijowski/autotyper --git.commit:master --out=docs src/autotyperpkg/typer.nim\"\n  exec \"nim buildIndex -o:docs/theindex.html docs\"",
"https://github.com/capocasa/nim-opus": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Carlo Capocasa\"\ndescription   = \"A nim wrapper for the opus audio decoder\"\nlicense       = \"BSD-3-Clause\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"nimterop\"\n\nimport distros\nforeignDep \"cmake\"\n",
"https://github.com/xflywind/cal": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"flywind\"\ndescription   = \"A simple interactive calculator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"cal\"]\n\n\n\n# Dependencies\n\n\n",
"https://github.com/pragmagic/godot-nim": "version = \"0.8.1\"\nauthor = \"Xored Software, Inc.\"\ndescription = \"Godot Engine bindings\"\nlicense = \"MIT\"\nsrcDir = \"godot\"\n\nrequires \"nim >= 0.17.3\", \"compiler >= 0.17.3\"",
"https://raw.githubusercontent.com/jiro4989/faker/master/faker.nimble": "# Package\n\nversion       = \"0.14.0\"\nauthor        = \"jiro4989\"\ndescription   = \"faker is a Nim package that generates fake data for you.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"faker/cli/faker\"]\nbinDir        = \"bin\"\n\nfrom os import `/`, splitFile\nfrom algorithm import sort\nimport strformat, strutils, sequtils\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nlet\n  providerDir = \"src\" / \"faker\" / \"provider\"\n\ntask docs, \"Generate API documents\":\n  exec \"nimble doc --index:on --project --out:docs --hints:off src/faker.nim\"\n\ntask genMod, \"Generate module\":\n  let module = paramStr(paramCount())\n  if module == \"genMod\":\n    echo \"Need 1 args\"\n    quit 1\n\n  # Copy module dir\n  let\n    srcModule = \"job\"\n    srcDir = providerDir / srcModule\n    dstDir = providerDir / module\n  rmDir dstDir\n  cpDir srcDir, dstDir\n  echo \"Generated: \" & module\n\n  # Copy module index file\n  let\n    srcFile = srcDir & \".nim\"\n    dstFile = dstDir & \".nim\"\n  rmFile dstFile\n  cpFile srcFile, dstFile\n  echo \"Generated: \" & dstFile\n\n  # Rename module name\n  for path in listFiles(dstDir):\n    let (dir, name, ext) = splitFile(path)\n    if name == \"interfaces\":\n      continue\n    let newName = name.replace(srcModule, module)\n    let newPath = dir / newName & ext\n    mvFile path, newPath\n    echo \"Generated: \" & newPath\n\ntask tool, \"Build tools\":\n  exec \"nim c tools/generator.nim\"\n",
"https://raw.githubusercontent.com/cwpearson/nim-murmurhash/master/murmurhash.nimble": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"Carl Pearson\"\ndescription   = \"Pure nim implementation of murmur hash\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://github.com/h3rald/litestore": "import\n  strutils\n\nfrom os import parentDir, `/`\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/litestorepkg/lib/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/litestorepkg/lib/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import litestorepkg/lib/config\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = pkgLicense\nbin           = @[pkgName]\nsrcDir        = \"src\"\nskipDirs      = @[\"test\"]\ninstallExt    = @[\"nim\", \"c\", \"h\", \"json\", \"ico\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"jwt >= 0.2\", \"nimgen\", \"duktape\"\n\n# Build\n\nconst\n  parallel = \"\" #\"--parallelBuild:1 --verbosity:3\"\n  compile = \"nim c -d:release --opt:size \" & parallel\n  linux_x64 = \"--cpu:amd64 --os:linux --passL:-static\"\n  windows_x64 = \"--cpu:amd64 --os:windows\"\n  macosx_x64 = \"\"\n  ls = \"litestore\"\n  doc = \"LiteStore_UserGuide.htm\"\n  db = \"data.db\"\n  ls_file = \"litestore.nim\"\n  zip = \"zip -X\"\n\nproc shell(command, args = \"\", dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"litestore\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build LiteStore for Windows (x64)\":\n  shell compile, windows_x64, ls_file\n\ntask linux_x64_build, \"Build LiteStore for Linux (x64)\":\n  shell compile, linux_x64,  ls_file\n\ntask macosx_x64_build, \"Build LiteStore for Mac OS X (x64)\":\n  shell compile, macosx_x64, ls_file\n\ntask release, \"Release LiteStore\":\n  echo \"Generating Guide...\"\n  shell \"./build_guide\"\n  echo \"Preparing Data Store preloaded with Admin App...\"\n  cd \"src\"\n  if db.existsFile:\n    db.rmFile\n  shell \"litestore -d:admin import\"\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, \"$1 $2 $3 $4\" % [filename_for(\"windows\", \"x64\"), ls & \".exe\", doc, db]\n  shell \"rm\", ls & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, \"$1 $2 $3 $4\" % [filename_for(\"linux\", \"x64\"), ls, doc, db]\n  shell \"rm\", ls \n\n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, \"$1 $2 $3 $4\" % [filename_for(\"macosx\", \"x64\"), ls, doc, db]\n  shell \"rm\", ls\n  echo \"\\n\\n\\n ALL DONE!\"\n",
"https://api.github.com/repos/nim-lang/pas2nim/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"739a54a856e2edd3381bad98e0398a26def7d6a0\",\"size\":9,\"url\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nim-lang/pas2nim/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/739a54a856e2edd3381bad98e0398a26def7d6a0\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/pas2nim/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/739a54a856e2edd3381bad98e0398a26def7d6a0\",\"html\":\"https://github.com/nim-lang/pas2nim/blob/master/.gitignore\"}},{\"name\":\"LICENSE.txt\",\"path\":\"LICENSE.txt\",\"sha\":\"2c84057cd51117c06350dbf4164fc8a90193f249\",\"size\":1080,\"url\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/LICENSE.txt?ref=master\",\"html_url\":\"https://github.com/nim-lang/pas2nim/blob/master/LICENSE.txt\",\"git_url\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/2c84057cd51117c06350dbf4164fc8a90193f249\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/pas2nim/master/LICENSE.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/LICENSE.txt?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/2c84057cd51117c06350dbf4164fc8a90193f249\",\"html\":\"https://github.com/nim-lang/pas2nim/blob/master/LICENSE.txt\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"49be540669869b5ac20c5debf68916f37bd1625f\",\"size\":382,\"url\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nim-lang/pas2nim/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/49be540669869b5ac20c5debf68916f37bd1625f\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/pas2nim/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/49be540669869b5ac20c5debf68916f37bd1625f\",\"html\":\"https://github.com/nim-lang/pas2nim/blob/master/README.md\"}},{\"name\":\"nim.cfg\",\"path\":\"nim.cfg\",\"sha\":\"c86ab5509dab81a8d9b5aeef07fff2a43e98fbbd\",\"size\":58,\"url\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/nim.cfg?ref=master\",\"html_url\":\"https://github.com/nim-lang/pas2nim/blob/master/nim.cfg\",\"git_url\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/c86ab5509dab81a8d9b5aeef07fff2a43e98fbbd\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/pas2nim/master/nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/nim.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/c86ab5509dab81a8d9b5aeef07fff2a43e98fbbd\",\"html\":\"https://github.com/nim-lang/pas2nim/blob/master/nim.cfg\"}},{\"name\":\"pas2nim.babel\",\"path\":\"pas2nim.babel\",\"sha\":\"7f0c91d29dd629665ae409ffcc39fbef4f418c2c\",\"size\":234,\"url\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/pas2nim.babel?ref=master\",\"html_url\":\"https://github.com/nim-lang/pas2nim/blob/master/pas2nim.babel\",\"git_url\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/7f0c91d29dd629665ae409ffcc39fbef4f418c2c\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/pas2nim/master/pas2nim.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/pas2nim.babel?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/7f0c91d29dd629665ae409ffcc39fbef4f418c2c\",\"html\":\"https://github.com/nim-lang/pas2nim/blob/master/pas2nim.babel\"}},{\"name\":\"pas2nim.nim\",\"path\":\"pas2nim.nim\",\"sha\":\"6220ddc011f08b1bbedf76272ef3d93884ae5a0c\",\"size\":1820,\"url\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/pas2nim.nim?ref=master\",\"html_url\":\"https://github.com/nim-lang/pas2nim/blob/master/pas2nim.nim\",\"git_url\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/6220ddc011f08b1bbedf76272ef3d93884ae5a0c\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/pas2nim/master/pas2nim.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/pas2nim.nim?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/6220ddc011f08b1bbedf76272ef3d93884ae5a0c\",\"html\":\"https://github.com/nim-lang/pas2nim/blob/master/pas2nim.nim\"}},{\"name\":\"paslex.nim\",\"path\":\"paslex.nim\",\"sha\":\"5b4246ebe85ac557fde710f2ad58c2591ff02fe1\",\"size\":15828,\"url\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/paslex.nim?ref=master\",\"html_url\":\"https://github.com/nim-lang/pas2nim/blob/master/paslex.nim\",\"git_url\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/5b4246ebe85ac557fde710f2ad58c2591ff02fe1\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/pas2nim/master/paslex.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/paslex.nim?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/5b4246ebe85ac557fde710f2ad58c2591ff02fe1\",\"html\":\"https://github.com/nim-lang/pas2nim/blob/master/paslex.nim\"}},{\"name\":\"pasparse.nim\",\"path\":\"pasparse.nim\",\"sha\":\"fa5167a94b725d4297e86df6a452e1b3b93e2751\",\"size\":46403,\"url\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/pasparse.nim?ref=master\",\"html_url\":\"https://github.com/nim-lang/pas2nim/blob/master/pasparse.nim\",\"git_url\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/fa5167a94b725d4297e86df6a452e1b3b93e2751\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/pas2nim/master/pasparse.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/pas2nim/contents/pasparse.nim?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/pas2nim/git/blobs/fa5167a94b725d4297e86df6a452e1b3b93e2751\",\"html\":\"https://github.com/nim-lang/pas2nim/blob/master/pasparse.nim\"}}]",
"https://github.com/Vindaar/LatexDSL": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Vindaar\"\ndescription   = \"A DSL to write LaTeX in Nim. No idea who wants that.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/PMunch/ansitohtml/master/ansitohtml.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"PMunch\"\ndescription   = \"A library that converts a string with ANSI CSI SGR codes (colours and such) into a string with HTML tags\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"ansiparse\"\n",
"https://github.com/gokr/spryvm": "# Package\nversion       = \"0.9.3\"\nauthor        = \"Göran Krampe\"\ndescription   = \"Homoiconic dynamic language interpreter in Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n# Deps\nrequires \"nim >= 1.2.0\"\nrequires \"python\"\nrequires \"ui\"\nrequires \"snappy\"\nrequires \"https://github.com/status-im/nim-rocksdb.git#5b1307cb1f4c85bb72ff781d810fb8c0148b1183\"\n\ntask test, \"Run the tests\":\n  withDir \"tests\":\n    exec \"nim c -r all\"\n",
"https://github.com/achesak/nim-imghdr": "[Package]\nname = \"imghdr\"\nversion = \"2.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Library for detecting the format of an image\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/nim-lang/niminst/master/niminst.nimble": "[Package]\r\nname          = \"niminst\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Tool to generate installers for Nim\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.11.0\"\r\n",
"https://raw.githubusercontent.com/Vladar4/nimgame/master//nimgame.nimble": "[Package]\nname          = \"nimgame\"\nversion       = \"0.3.2\"\nauthor        = \"Vladar\"\ndescription   = \"\"\"Simple 2D game engine for Nim language.\"\"\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.12.2\"\n\n",
"https://github.com/genotrance/tissue": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"genotrance\"\ndescription   = \"Test failing snippets from Nim's issues\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\nbin = @[\"tissue\"]\n",
"https://raw.githubusercontent.com/gokr/nim-sophia/master/sophia.nimble": "[Package]\nname          = \"sophia\"\nversion       = \"0.1\"\nauthor        = \"Göran Krampe\"\ndescription   = \"A wrapper for the Sophia embedded key/value store.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires      = \"nim >= 0.13.1\" # Just haven't tested older\n",
"https://raw.githubusercontent.com/davidgarland/sol/master/sol.nimble": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"davidgarland\"\ndescription   = \"A portable SIMD-accelerated vector library written in C99 with Nim bindings.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\n# Tasks\n\ntask clean, \"Cleans up files.\":\n  exec \"rm -rf tests/test\"\n",
"https://github.com/lcrees/romans": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lcrees\"\ndescription   = \"Conversion between integers and Roman numerals\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n\ntask tests, \"Run tests\":\n    exec \"nim c -r tests/test_romans.nim\"",
"https://raw.githubusercontent.com/achesak/nim-pastebin/master/pastebin.nimble": "[Package]\nname          = \"pastebin\"\nversion       = \"0.2\"\nauthor        = \"Adam Chesak\"\ndescription   = \"Pastebin API wrapper\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/FedericoCeratto/nim-sdnotify": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Systemd service notification helper\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\n",
"https://github.com/haxscramper/hnimast": "# Package\n\nversion       = \"0.3.16\"\nauthor        = \"haxscramper\"\ndescription   = \"User-friendly wrapper for nim ast\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmisc >= 0.9.16\"\nrequires \"macroutils\"\nrequires \"compiler\"\n\ntask docgen, \"Generate documentation\":\n  exec(\"hmisc-putils docgen\")\n",
"https://github.com/juancarlospaco/nimbug": "version       = \"0.2.2\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Nim Semi-Auto Bug Report Tool\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimbug\"]\n\nrequires \"nim >= 1.2.2\"\n",
"https://raw.githubusercontent.com/pragmagic/redux.nim/master/redux.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Pragmagic, Inc.\"\ndescription   = \"Predictable state container.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17\"\n",
"https://raw.githubusercontent.com/Ephiiz/simple_vector/master/simple_vector.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Ephiiz\"\ndescription   = \"Simple vector library for nim-lang.\"\nlicense       = \"GNU Lesser General Public License v2.1\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/pdrb/tcping": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Pedro Buteri Gonring\"\ndescription   = \"Ping hosts using tcp packets\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"tcping\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/cowboy-coders/nim-libclang/master/libclang.nimble": "[Package]\nname          = \"libclang\"\nversion       = \"0.1.0\"\nauthor        = \"Will Szumski\"\ndescription   = \"Bindings for libclang\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nInstallExt    = \"nim\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.4\"\n",
"https://github.com/nimscale/isa": "[Package]\nname          = \"isa\"\nversion       = \"0.1.0\"\ndescription   = \"Nim bindings for ISA-L (Intel Storage Acceleration Library)\"\nlicense       = \"Apache License\"\nauthor        = \"nimscale\"\nskipDirs      = \"examples\"\n\n[Deps]\nRequires: \"nim >= 0.15.2\"\nRequires: \"collections >= 0.3.1\"\n",
"https://raw.githubusercontent.com/zielmicha/capnp.nim/master/capnp.nimble": "[Package]\nname          = \"capnp\"\nversion       = \"0.0.3\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"Cap'n Proto bindings\"\nlicense       = \"MIT\"\nbin           = \"capnp/capnpc\"\n\n[Deps]\nRequires: \"nim >= 0.12.0\"\nRequires: \"collections >= 0.1.2\"\n",
"https://github.com/Psirus/NimOSC": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Christoph Pohl\"\ndescription   = \"A wrapper around liblo for the Open Sound Control (OSC) protocol\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0\"\n",
"https://raw.githubusercontent.com/def-/nim-bpg/master/bpg.nimble": "# Package\n\nversion     = \"0.1\"\nauthor      = \"Dennis Felsing\"\ndescription = \"Bindings for Bellard's BPG (Better Portable Graphics) library\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n# Dependencies\n\nrequires \"nim > 0.10\"\n",
"https://raw.githubusercontent.com/theduke/nim-playground/master/playground.nimble": "[Package]\nname          = \"playground\"\nversion       = \"0.1.0\"\nauthor        = \"Christoph Herzog\"\ndescription   = \"Website and server for easily playing with nim code.\"\nlicense       = \"MIT\"\n\nbin           = \"playground\"\n\n[Deps]\nRequires: \"nim >= 0.12.0, jester >= 0.1\"\n",
"https://github.com/ethosa/shizuka": "[Package]\r\nname = \"shizuka\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.2.4\"\r\ndescription = \"The Nim framework for VK.\"\r\nlicense = \"MIT\"\r\nsrcDir = \"shizuka\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://github.com/SolitudeSF/discord_rpc": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Discord RPC client\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"uuids\", \"packedjson\"\n",
"https://raw.githubusercontent.com/flyx/emerald/master/emerald.nimble": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"Felix Krause\"\ndescription   = \"macro-based HTML templating engine\"\nlicense       = \"WTFPL\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\n# No longer needed - nimble install will suffice\n\n# task \"build\", \"build emerald library\":\n#   exec \"nim c --noMain -c src/emerald\"\n#   setCommand \"nop\"\n\n# No longer needed - simply prefix test entrypoint \n# file in ./tests dir with 't'\n\n# task \"test\", \"run emerald test suite\":\n#   exec \"nim c -d:debug -r test/tests.nim\"\n#   setCommand \"nop\"\n\n# this is needed because nim doesn't run clang with -m32 when compiling a\n# 32bit binary. Therefore, we need to generate C code and compile it\n# manually.\n\ntask test32, \"run emerald test suite in 32bit mode\":\n  echo \"NOTE: If you get include errors, edit emerald.nimble to point to your Nim location\"\n  exec \"nim c -d:debug --cpu:i386 --compileOnly --nimcache:tests/.nimcache --genScript tests/ttests.nim\"\n  setCommand \"nop\"\n  withDir \"tests\":\n    # Customize the value of -I to point to your Nim installation\n    exec \"sed -i '' 's,clang,clang -m32 -I/Users/zachcarter/.choosenim/toolchains/nim-#devel/lib,' .nimcache/compile_ttests.sh\"\n    withDir \".nimcache\":\n      exec \"sh compile_ttests.sh\"\n      exec \"./ttests\"\n\n# Can't get this task to work - keep running into:\ndiscard \"\"\"\nlayout.nim(12, 32) template/generic instantiation from here\n/Users/zachcarter/projects/litz/zacharycarter/emerald.git/src/emerald/html.nim(660, 36) Warning: use {.base.} for base methods; baseless methods are deprecated [UseBase]\nSIGSEGV: Illegal storage access. (Attempt to read from nil?)\nstack trace: (most recent call last)\nUsers/zachcarter/.choosenim/toolchains/nim-#devel/lib/system/nimscript.nim(237) documentationTask\nUsers/zachcarter/.choosenim/toolchains/nim-#devel/lib/system/nimscript.nim(237, 7) Error: unhandled exception: FAILED: nim c -r generate.nim\n\"\"\"\ntask documentation, \"build documentation site\":\n  withDir \"doc\":\n    exec \"nim c -r generate.nim\"\n    setCommand \"nop\"\n",
"https://github.com/disruptek/foreach": "version = \"1.0.2\"\nauthor = \"disruptek\"\ndescription = \"A sugary for loop with syntax for typechecking loop variables\"\nlicense = \"MIT\"\nrequires \"nim >= 0.20.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r foreach.nim\"\n",
"https://github.com/beef331/constructor": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jason Beetham\"\ndescription   = \"Automates constructor creation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/SolitudeSF/shlex": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Split string into shell words\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/FedeOmoto/llvm": "[Package]\nname        = \"llvm\"\nversion     = \"3.5\"\nauthor      = \"Federico Omoto\"\ndescription = \"LLVM wrapper\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n[Deps]\nrequires = \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/ba0f3/vmprotect.nim/master/vmprotect.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"Wrapper for VMProtect SDK\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/ethosa/anime": "[Package]\r\nname = \"anime\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.6\"\r\ndescription = \"The Nim wrapper for tracemoe.\"\r\nlicense = \"AGPLv3\"\r\nsrcDir = \"src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/haxscramper/hasts/master/hasts.nimble": "# Package\n\nversion       = \"0.1.6\"\nauthor        = \"haxscramper\"\ndescription   = \"AST for various markup languages\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmisc >= 0.9.15\"\n",
"https://github.com/chocobo333/asciitype": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"chocobo333\"\ndescription   = \"This module performs character tests.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/j-a-s-d/xam/master/xam.nimble": "version     = \"0.1.4\"\nauthor      = \"Javier Santo Domingo\"\ndescription = \"xam\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.0.6\"\n\n",
"https://raw.githubusercontent.com/D-Nice/argon2_bind/master/argon2_bind.nimble": "import\n  strutils\nfrom os import `/`\n\nconst vFile = \"version.txt\"\nwhen (thisDir() / \"src\" / vFile).fileExists:\n  const vPath = thisDir() / \"src\" / vFile\nwhen (thisDir() / vFile).fileExists:\n  const vPath = thisDir() / vFile\n\n# Package\nversion       = vPath.staticRead.splitLines[0]\nauthor        = \"D-Nice\"\ndescription   = \"Bindings for the reference Argon2 C lib\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"c\", \"h\", \"txt\"]\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\nimport\n  sugar,\n  sequtils,\n  strutils\n\nfunc srcPaths: seq[string] =\n  const dirs =\n    @[\n      \"src/\"\n    ]\n  for dir in dirs:\n    result.add(dir.listFiles.filter(x => x[dir.len .. x.high].endsWith(\".nim\")))\n\nfunc testPaths: seq[string] =\n  const dir = \"tests/\"\n  return dir.listFiles.filter(x =>\n    x[dir.len .. x.high].startsWith('t') and\n    x.endsWith(\".nim\")\n  )\n\n# Nimscript Tasks\n\n## docs\ntask docs, \"Deploy doc html + search index to public/ directory\":\n  let\n    deployDir = projectDir() & \"/public\"\n    deployFile = deployDir & \"/index.html\"\n    genDocCmd = \"nim doc --out:$1 --index:on $2\" % [deployFile, srcPaths()[0]]\n    genTheIndexCmd = \"nim buildIndex -o:$1/theindex.html $1\" % [deployDir]\n    deployJsFile = deployDir & \"/dochack.js\"\n    docHackJsSource = \"https://nim-lang.github.io/Nim/dochack.js\" # devel docs dochack.js\n  mkDir deployDir\n  rmFile deployFile\n  exec genDocCmd\n  exec genTheIndexCmd\n  when defined Linux:\n    exec \"ln -sf index.html public/\" & srcPaths()[0][4 .. ^4] & \"html\"\n  if not fileExists deployJsFile:\n    echo deployJsFile\n    withDir deployDir:\n      exec \"curl -LO \" & docHackJsSource\n\n## checks\nconst checkCmd = \"nim c -cf -w:on --hints:off -o:/dev/null --styleCheck:\"\ntask check_src, \"Compile src with all checks on\":\n  for src in srcPaths():\n    exec checkCmd & \"error \" & src\ntask check_tests, \"Compile tests with all checks on\":\n  for test in testPaths():\n    exec checkCmd & \"error \" & test\ntask check_all, \"Compile check everything and run tests\":\n  exec \"nimble check_src && nimble check_tests\"\n\n## fuzzing (for alpine nim image)\ntask fuzz_fast, \"Runs afl on getOutput\":\n  exec \"export AFL_HARDEN=1; nim c --dynlibOverride:libargon2 -L:/usr/lib/libargon2.a -f -o:/tmp/nim/argon2_full/fuzz_fast tests/fuzzer/fast.nim && afl-fuzz -i tests/fuzzer/in-fuzz -o tests/fuzzer/out-fuzz_fast /tmp/nim/argon2_full/fuzz_fast\"\ntask fuzz_fast_more, \"Runs afl on getOutput\":\n  exec \"export AFL_HARDEN=1; nim c --dynlibOverride:libargon2 -L:/usr/lib/libargon2.a -f -o:/tmp/nim/argon2_full/fuzz_fast_more tests/fuzzer/fast_more.nim && afl-fuzz -i tests/fuzzer/in-fuzz -o tests/fuzzer/out-fuzz_fast_more /tmp/nim/argon2_full/fuzz_fast_more\"\ntask fuzz_slow, \"Runs afl on getOutput\":\n  exec \"export AFL_HARDEN=1; nim c --dynlibOverride:libargon2 -L:/usr/lib/libargon2.a -f -o:/tmp/nim/argon2_full/fuzz_slow tests/fuzzer/slow.nim && afl-fuzz -i tests/fuzzer/in-fuzz -o tests/fuzzer/out-fuzz_slow /tmp/nim/argon2_full/fuzz_slow\"\ntask fuzz_slow_more, \"Runs afl on getOutput\":\n  exec \"export AFL_HARDEN=1; nim c --dynlibOverride:libargon2 -L:/usr/lib/libargon2.a -f -o:/tmp/nim/argon2_full/fuzz_slow_more tests/fuzzer/slow_more.nim && afl-fuzz -i tests/fuzzer/in-fuzz -o tests/fuzzer/out-fuzz_slow_more /tmp/nim/argon2_full/fuzz_slow_more\"\n\n## dependency installer\ntask install_deps, \"Installs dependencies for supported systems\":\n  when defined(Linux):\n    const distro = staticExec(\"cat /etc/os-release | grep ^ID_LIKE= || cat /etc/os-release | grep ^ID=\")\n    case distro.split('=', 1)[1]:\n      of \"alpine\":\n        exec \"apk add --no-cache argon2-dev rsync\"\n      of \"debian\":\n        exec \"apt install -y libargon2-dev rsync\"\n      else:\n        echo \"Unknown Linux distro... install libargon2-dev or the appropriate argon2 development files for your distro manually!\"\n  else:\n    echo \"Unsupported OS\"\ntask install_fuzz, \"Installs dependencies including those for fuzzing\":\n  when defined(Linux):\n    const distro = staticExec(\"cat /etc/os-release | grep ^ID_LIKE= || cat /etc/os-release | grep ^ID=\")\n    case distro.split('=', 1)[1]:\n      of \"alpine\":\n        exec \"apk add --no-cache afl\"\n      of \"debian\":\n        exec \"apt install -y afl || echo AFL unavailable: fuzzing tasks unusuable\"\n  exec \"nimble install_deps\"\ntask i, \"Installs dependencies for supported systems\":\n  exec \"nimble install_deps\"\n\ntask update_argon2, \"Pulls the latest argon2 submodule and copies the necessary files for static compilation\":\n  exec \"git submodule update --recursive --remote\"\n  const\n    cmd = \"rsync -a --delete .github/phc-winner-argon2/\"\n    dest = \" src/argon2_bind/argon2/\"\n  exec cmd & \"include\" & dest\n  exec cmd & \"src\"  & dest\n\n",
"https://github.com/soasme/nim-schedules": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Ju Lin\"\ndescription   = \"A Nim scheduler library that lets you kick off jobs at regular intervals.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/status-im/nim-ttmath/master/ttmath.nimble": "packageName   = \"ttmath\"\nversion       = \"0.5.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A Nim wrapper for ttmath: big numbers with fixed size\"\nlicense       = \"Apache License 2.0\"\nsrcDir        = \"src\"\n\n### Dependencies\nrequires \"nim >= 0.18.1\"\n\nproc test(name: string, lang = \"cpp\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache: \"nimcache\"\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Run tests\":\n  test \"test1\"\n",
"https://github.com/fowlmouth/nimlibs/": "[Package]\nname = \"fowltek\"\nversion = \"0.9.3\"\nauthor = \"fowl\"\ndescription = \"Assorted wrappers and reusable libraries.\"\nlicense = \"MIT\"\n\n[Deps]\nRequires = \"nim >= 0.9.3\"\n",
"https://github.com/vitreo12/omnicollider": "# MIT License\n# \n# Copyright (c) 2020 Francesco Cameli\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nversion       = \"0.2.3\"\nauthor        = \"Francesco Cameli\"\ndescription   = \"SuperCollider wrapper for omni.\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 1.0.0\"\nrequires \"cligen >= 1.0.0\"\nrequires \"omni >= 0.2.3\"\n\n#Ignore omnicollider_lang\nskipDirs = @[\"omnicollider_lang\"]\n\n#Install build/deps\ninstallDirs = @[\"omnicolliderpkg\"] \n\n#Compiler executable\nbin = @[\"omnicollider\"]\n\n#If using \"nimble install\" instead of \"nimble installOmniCollider\", make sure omnicollider-lang is still getting installed\nbefore install:\n    let package_dir = getPkgDir()\n    \n    withDir(package_dir):\n        exec \"git submodule update --init --recursive\"\n\n    withDir(package_dir & \"/omnicollider_lang\"):\n        exec \"nimble install\"\n\n#before/after are BOTH needed for any of the two to work\nafter install:\n    discard\n\n#As nimble install, but with -d:release, -d:danger and --opt:speed. Also installs omni_lang.\ntask installOmniCollider, \"Install the omnicollider-lang package and the omnicollider compiler\":\n    #Build and install the omnicollider compiler executable. This will also trigger the \"before install\" to install omnicollider_lang\n    exec \"nimble install --passNim:-d:release --passNim:-d:danger --passNim:--opt:speed\"",
"https://raw.githubusercontent.com/brentp/kexpr-nim/master/kexpr.nimble": "# Package\n\nversion = \"0.0.2\"\ndescription   = \"math expression evaluator library\"\nauthor        = \"Brent Pedersen\"\nlicense       = \"MIT\"\nskipFiles     = @[\"tests.nim\"]\n#installFiles  = @[\"src/kexpr.nim\", \"src/kexpr-c.c\", \"src/kexpr-c.h\"]\n\nrequires \"nim >= 0.17.0\"\n\ntask test, \"tests\":\n    exec \"nim c -r tests.nim\"\n\ntask docs, \"make the docs\":\n    exec \"nim doc kexpr.nim\"\n    exec \"mv kexpr.html docs/index.html\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-kdialog/master/kdialog.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Juan Carlos\"\ndescription   = \"KDialog Qt5 Wrapper, easy API, KISS design\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/treeform/ptest/master/ptest.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"treeform\"\ndescription   = \"You debug with print statements? Why don't you also test with them?\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nbin = @[\"ptest\"]",
"https://github.com/nim-appkit/values": "[Package]\nname          = \"values\"\nversion       = \"0.1.1\"\nauthor        = \"Christoph Herzog\"\ndescription   = \"Library for working with arbitrary values + a map data structure.\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/jasonk000/nimpmda": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jason Koch\"\ndescription   = \"PCP PMDA module bindings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/Senketsu/nsu": "# Package\nversion = \"0.1.5\"\nauthor = \"Senketsu\"\ndescription = \"A small screenshot library / utility for Windows & X11 based systems.\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nbin = @[\"nsu\"]\n\n# Dependencies\nrequires \"nim >= 0.17.2\", \"x11 >= 1.0.0\", \"winim >= 3.2.4\", \"flippy == 0.4.0\"\n",
"https://github.com/fragcolor-xyz/nimtorch": "# Package\n\nversion     = \"0.2.3\"\nauthor      = \"Giovanni Petrantoni\"\ndescription = \"A nim flavor of pytorch\"\nlicense     = \"MIT\"\nskipDirs    = @[\"docker\", \"media\", \"conda\", \"bin\", \"scripts\"]\nskipFiles   = @[\".gitlab-ci.yml\", \".travis.yml\"]\n\n# Deps\n\nrequires \"nim >= 0.19.2\"\nrequires \"fragments >= 0.1.27\"\n\ntask test, \"Run cpu tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test torch\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test torch\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test tests/test_xor.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test tests/test_xor.nim\"\"\"\n\ntask test_wasm, \"Run wasm tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js torch && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js torch/nn/modules.nim && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js torch/nn/init.nim && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js torch/nn/functional.nim && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js tests/test_autograd.nim && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js tests/test_xor.nim && node test.js\"\"\"\n\ntask test_cuda, \"Run cuda gpu tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda torch\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda torch\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda tests/test_xor.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda tests/test_xor.nim\"\"\"\n\ntask test_clang, \"Run clang tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test torch\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test torch\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test tests/test_xor.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test tests/test_xor.nim\"\"\"\n\ntask test_static, \"Run clang tests\":\n  exec \"\"\"nim torch -d:staticlibs -r -o:test torch\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test torch\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test tests/test_xor.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test tests/test_xor.nim\"\"\"\n\ntask test_clang_cuda, \"Run clang cuda gpu tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda torch\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda torch\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda tests/test_xor.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda tests/test_xor.nim\"\"\"",
"https://github.com/fallingduck/sequester": "[Package]\nname          = \"sequester\"\nversion       = \"0.1.0\"\nauthor        = \"Jack VanDrunen\"\ndescription   = \"Library for converting sequences to strings. Also has PHP-inspired explode and implode procs.\"\nlicense       = \"ISC\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://github.com/JohnAD/jestermongopool": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"Jester plugin(s) that support the MongoPool MongoDb driver.\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"jesterwithplugins >= 0.5.0\", \"mongopool >= 1.0.1\"\n",
"https://github.com/moigagoo/loco": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Konstantin Molchanov\"\ndescription   = \"Localization package for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/qqtop/NimFinLib/master/nimFinLib.nimble": "[Package]\nname          = \"nimFinLib\"\nversion       = \"0.3.0.5\"\nauthor        = \"qqTop\"\ndescription   = \"Financial Library for Nim\"\nlicense       = \"MIT\"\n\n\n[Deps]\nRequires:  \"nim >= 1.4.0\"\nRequires:  \"https://github.com/qqtop/NimCx >= 0.9.9\"\n",
"https://github.com/PMunch/protobuf-nim": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Pure Nim library for using protobuf in Nim. It is implemented through a string parsing macro that generate code based on the official protobuf specification.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"combparser\"\n",
"https://github.com/stisa/jupyternim": "# Package\n\nversion       = \"0.6.1\"\nauthor        = \"stisa\"\ndescription   = \"A Jupyter Kernel for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"zmq >= 0.3.1\"\nrequires \"hmac\"\nrequires \"nimSHA2\"\nrequires \"nimPNG\"\n\ninstallDirs = @[\"jupyternimpkg\", \"jupyternimspec\"]\nsrcDir = \"src\"\nbin = @[\"jupyternim\"]\n\nimport os, strutils\n\nafter install:\n  var jnpath = gorgeEx(\"nimble path jupyternim\")\n  jnpath.output.stripLineEnd\n  if jnpath.exitCode == 0:\n    exec(jnpath.output / bin[0].changeFileExt(ExeExt))\n  else:\n    echo \"Error: jupyternim not installed in nimble\"\n\ntask dev, \"Build a debug version\":\n  # Assumes cwd is jupyternim/\n  var jnpath = gorgeEx(\"nimble path jupyternim\")\n  jnpath.output.stripLineEnd\n  if jnpath.exitCode == 0:\n    exec(\"nim c -d:debug -o:\" & jnpath.output / bin[0].changeFileExt(ExeExt) & \" src/jupyternim.nim\")\n  else:\n    echo \"Can't find an installed jupyternim\"\n\ntask hcr, \"Build a debug version with -d:useHcr\":\n  # Assumes cwd is jupyternim/\n  var jnpath = gorgeEx(\"nimble path jupyternim\")\n  jnpath.output.stripLineEnd\n  if jnpath.exitCode == 0:\n    exec(\"nim c -d:debug -d:useHcr -o:\" & jnpath.output / bin[0].changeFileExt(ExeExt) & \" src/jupyternim.nim\")\n  else:\n    echo \"Can't find an installed jupyternim\"\n\ntask rhcr, \"Build and register a release version with -d:useHcr\":\n  # Assumes cwd is jupyternim/\n  var jnpath = gorgeEx(\"nimble path jupyternim\")\n  jnpath.output.stripLineEnd\n  if jnpath.exitCode == 0:\n    exec(\"nim c -d:release -d:useHcr -o:\" & jnpath.output / bin[0].changeFileExt(ExeExt) & \" src/jupyternim.nim\")\n    exec(jnpath.output / bin[0].changeFileExt(ExeExt))\n  else:\n    echo \"Can't find an installed jupyternim\"\n\ntask docs, \"Build docs\":\n  exec(r\"nim doc -O:.\\docs\\display.html .\\src\\jupyternimpkg\\display.nim\")\n  exec(r\"nim doc -O:.\\docs\\index.html .\\src\\jupyternim.nim\")",
"https://raw.githubusercontent.com/andreaferretti/lda/master/lda.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Latent Dirichlet allocation\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"run tests\":\n  --path: \".\"\n  --run\n  setCommand \"c\", \"tests/test.nim\"\n\ntask benchmark, \"run benchmarks\":\n  --path: \".\"\n  --run\n  --define: release\n  setCommand \"c\", \"tests/benchmark.nim\"\n\ntask toy, \"run toy example\":\n  --path: \".\"\n  --run\n  --define: release\n  --gc: markAndSweep\n  setCommand \"c\", \"examples/toy.nim\"\n\ntask pubmed, \"run pubmed example\":\n  --path: \".\"\n  --run\n  --define: release\n  setCommand \"c\", \"examples/pubmed.nim\"",
"https://raw.githubusercontent.com/LemonBoy/jstin/master/jstin.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"LemonBoy\"\ndescription   = \"JS {de,}serialization as it says on the tin\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://github.com/irskep/BearLibTerminal-Nim": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Steve Landey (irskep)\"\ndescription   = \"Wrapper for the C[++] library BearLibTerminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/enimatek-nl/torm": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"enimatek\"\ndescription   = \"Tiny object relational mapper for SQLite in Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.1\"\n",
"https://github.com/PMunch/getmac": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"PMunch\"\ndescription   = \"A package to get the MAC address of a local IP address\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"optionsutils >= 1.0.0\"\n",
"https://raw.githubusercontent.com/andreas-wilm/nimreadfq/master/readfq.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Andreas Wilm\"\ndescription   = \"Wrapper for Heng Li's kseq\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.19, zip >= 0.2.1\"\n\nskipDirs = @[\"tests\"]\n\ntask test, \"run the tests\":\n  exec \"nim c -r tests/tester\"\n",
"https://github.com/Varriount/DevIL": "[Package]\nname          = \"DevIL\"\nversion       = \"0.1.0\"\nauthor        = \"Clay Sweetser (Varriount)\"\ndescription   = \"Wrapper for the DevIL library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.2\"",
"https://raw.githubusercontent.com/PMunch/nimlsp/master/nimlsp.nimble": "# Package\n\nversion       = \"0.2.6\"\nauthor        = \"PMunch\"\ndescription   = \"Nim Language Server Protocol - nimlsp implements the Language Server Protocol\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimlsp\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n#requires \"packedjson\"\nrequires \"astpatternmatching\"\nrequires \"jsonschema >= 0.2.1\"\n\n# nimble test does not work for me out of the box\n#task test, \"Runs the test suite\":\n  #exec \"nim c -r tests/test_messages.nim\"\n#  exec \"nim c -d:debugLogging -d:jsonSchemaDebug -r tests/test_messages2.nim\"\n\ntask debug, \"Builds the language server\":\n  exec \"nim c --threads:on -d:nimcore -d:nimsuggest -d:debugCommunication -d:debugLogging -o:nimlsp src/nimlsp\"\n\nbefore test:\n  if not fileExists(\"nimlsp\"):\n    exec \"nimble build\"\n\ntask findNim, \"Tries to find the current Nim installation\":\n  echo NimVersion\n  echo currentSourcePath\n",
"https://github.com/xyb/googlesearch.nim": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"Xie Yanbo\"\ndescription   = \"Nim library for scraping google search results\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"googlesearch\", \"googledistance\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"nimquery >= 1.2.2\"\n",
"https://raw.githubusercontent.com/SSPkrolik/nimongo/master/nimongo.nimble": "# Package\ndescription = \"Pure Nim driver for MongoDB with support of synchronous and asynchronous I/O modes\"\nversion     = \"0.3\"\nlicense     = \"MIT\"\nauthor      = \"Rostyslav Dzinko <rostislav.dzinko@gmail.com>\"\n\n# Dependencies\nrequires \"scram >= 0.1.13\"\n\nproc runTest(input: string) =\n  let cmd = \"nim c -r \" & input\n  echo \"running: \" & cmd\n  exec cmd\n\nproc runTestThreaded(input: string) =\n  let cmd = \"nim c --threads:on -r \" & input\n  echo \"running: \" & cmd\n  exec cmd\n\nproc testNoMongod() =\n  runTest \"nimongo/bson.nim\"\n  runTest \"tests/bsontest.nim\"\n  runTestThreaded \"nimongo/bson.nim\"\n  runTestThreaded \"tests/bsontest.nim\"\n\ntask test, \"tests\":\n  testNoMongod()\n  runTest \"tests/nimongotest.nim\"\n  runTestThreaded \"tests/nimongotest.nim\"\n\ntask test_ci, \"tests for CI\":\n  testNoMongod()\n",
"https://github.com/PMunch/binaryparse": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Binary parser (and writer) in pure Nim. Generates efficient parsing procedures that handle many commonly seen patterns seen in binary files and does sub-byte field reading.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\n",
"https://raw.githubusercontent.com/SSPkrolik/nim-native-dialogs/master/native_dialogs.nimble": "# Package `native_dialogs`\n\nversion       = \"0.1.0\"\nauthor        = \"Rostyslav Dzinko (rostislav.dzinko@gmail.com)\"\ndescription   = \"Implements framework-agnostic native operating system dialogs calls\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.10.0\"\nrequires \"oldwinapi\"\nrequires \"gtk2\"",
"https://raw.githubusercontent.com/treeform/word2vec/master/word2vec.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"treeform\"\ndescription   = \"Word2vec implemented in nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/milisarge/nimrpc_milis": "[Package]\nname        = \"nimrpc_milis\"\nversion     = \"0.1.0\"\nauthor      = \"milisarge\"\ndescription = \"RPC implementation for Nim based on msgpack4nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n[Deps]\nRequires:   \"\"\"\n\nnim >= 0.11.2\nmsgpack4nim >= 0.1.2\n\n\n\"\"\"\n\n",
"https://github.com/dom96/pwned": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A client for the Pwned passwords API.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"pwned\"]\n\nskipExt = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n",
"https://github.com/juancarlospaco/nim-constants": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Mathematical numerical named static constants useful for different disciplines\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://github.com/skunkiferous/moduleinit": "# Package\r\n\r\nversion       = \"0.4.0\"\r\nauthor        = \"Sebastien Diot\"\r\ndescription   = \"Nim module/thread initialisation ordering library\"\r\nlicense       = \"MIT\"\r\n\r\nsrcDir        = \"src\"\r\n\r\n#bin = @[\"moduleinit\"]\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.18.0\"\r\n\r\n# Tasks\r\n\r\nimport ospaths\r\nimport strutils\r\ntask tests, \"Runs tests\":\r\n  withdir \"tests\":\r\n    for file in listfiles(\".\"):\r\n      let sf = splitfile(file)\r\n      if (sf.ext == \".nim\") and sf.name.startsWith(\"test\"):\r\n        echo(\"Testing \" & file)\r\n        exec \"nim c -r --threads:on --verbosity:0 --hints:off \" & file\r\n",
"https://github.com/genotrance/nim7z": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"genotrance\"\ndescription   = \"7z extraction for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nim7z\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/HugoGranstrom/symbolicnim/master/symbolicnim.nimble": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"HugoGranstrom\"\ndescription   = \"A symbolic algebra library written in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\ntask test, \"Runs the test suite\":\n  const filenames = [\"tests/testSuite.nim\", \"tests/testSuiteCT.nim\"]\n  when defined(windows):\n    const binaryExt = \".exe\"\n  else:\n    const binaryExt = \"\"\n  echo \"####################\\nRunning tests using Refc GC:\\n####################\"\n  for name in filenames:\n    exec \"nim c -r --gc:refc -o:bin/testSuite\" & binaryExt &  \" \" & name\n  echo \"####################\\nRunning tests using GC:ARC:\\n####################\"\n  for name in filenames:\n    exec \"nim c -r --gc:arc -o:bin/testSuite\" & binaryExt &  \" \" & name\n  echo \"####################\\nRunning tests using GC:ORC:\\n####################\"\n  for name in filenames:\n    exec \"nim c -r --gc:orc -o:bin/testSuite\" & binaryExt &  \" \" & name\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"arraymancer >= 0.5\"\nrequires \"terminaltables\"\n",
"https://github.com/andreaferretti/patty": "mode = ScriptMode.Verbose\n\nversion       = \"0.3.4\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Algebraic data types and pattern matching\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"test\", \"test.nim\", \"testhelp.nim\", \".travis.yml\"]\n\nrequires \"nim >= 0.14.0\"\n\n\ntask tests, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"test.nim\"\n\ntask test, \"run tests\":\n  setCommand \"tests\"",
"https://github.com/nim-lang/gtk2": "[Package]\nname: \"gtk2\"\nversion: \"1.4\"\nauthor: \"Nim developers\"\ndescription: \"Wrapper for gtk2, a feature rich toolkit for creating graphical user interfaces.\"\nlicense: \"MIT\"\n\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nim > 0.9.2, cairo\"\n",
"https://raw.githubusercontent.com/euantorano/tempdir.nim/master/tempdir.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Euan T\"\ndescription   = \"A Nim library to create and manage temporary directories.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc --index:on -o:docs/tempdir.html src/tempdir.nim\"\n",
"https://raw.githubusercontent.com/Carpall/nobject/master/nobject.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Carpall\"\ndescription   = \"A partially compile and runtime evaluated object, inspired to .net object\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n",
"https://github.com/nim-lang/joyent_http_parser": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zahary Karadjov\"\ndescription   = \"Joyent\\'s high performance parser.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/dfdeshom/nimsnappy/master/nimsnappy.nimble": "[Package]\nname          = \"nimsnappy\"\nversion       = \"0.1.1\"\nauthor        = \"didier deshommes\"\ndescription   = \"Snappy lib wrapper for Nim\"\nlicense       = \"BSD-3\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-fswatch/master/fswatch.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"fswatch library wrapper\"\nlicense       = \"GPL-3.0\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/zielmicha/capnp.nim": "[Package]\nname          = \"capnp\"\nversion       = \"0.0.3\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"Cap'n Proto bindings\"\nlicense       = \"MIT\"\nbin           = \"capnp/capnpc\"\n\n[Deps]\nRequires: \"nim >= 0.12.0\"\nRequires: \"collections >= 0.1.2\"\n",
"https://raw.githubusercontent.com/andreaferretti/nimlapack/master/nimlapack.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Nim binding for LAPACK\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"lapacke.h\", \"lapack.h\", \"lapack.c2nim\", \"nimlapack.html\"]\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.16.0\"\n\nimport strutils\n\ntask header, \"generate bindings from header\":\n  let\n    libPath = \"lapack.h\"\n    patchPath = \"lapack.c2nim\"\n    headerPath = \"lapack-tmp.h\"\n    libContent = readFile(libPath)\n    patchContent = readFile(patchPath)\n  writeFile(headerPath, patchContent & libContent)\n  exec(\"c2nim \" & headerPath & \" -o:nimlapack.nim\")\n  exec(\"rm \" & headerPath)\n\ntask check, \"check that generated bindings do compile\":\n  exec(\"nim c -c nimlapack.nim\")\n\ntask docs, \"generate documentation\":\n  exec(\"nim doc2 nimlapack.nim\")\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\ntask test, \"run NimLAPACK tests\":\n  configForTests()\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testopenblas, \"run NimLAPACK tests on OpenBLAS\":\n  configForTests()\n  --define:\"lapack=openblas\"\n  setCommand \"c\", \"tests/test.nim\"",
"https://raw.githubusercontent.com/SolitudeSF/xcm/master/xcm.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Color management utility for X\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"xcm\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"x11#74cbb2c73be7f4b079b6f4edbadc1d1f00d9af15\", \"cligen >= 0.9.41\"\n",
"https://github.com/juancarlospaco/nim-libravatar": "version       = \"0.5.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Libravatar library for Nim, Gravatar alternative. Libravatar is an open source free federated avatar api & service.\"\nlicense       = \"PPL\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.4\"\n",
"https://raw.githubusercontent.com/nimious/spacenav/master/spacenav.nimble": "[Package]\nname: \"spacenav\"\nversion: \"1.0\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for libspnav, the free 3Dconnexion device driver\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://raw.githubusercontent.com/jiro4989/pnm/master/pnm.nimble": "# Package\n\nversion       = \"2.1.1\"\nauthor        = \"jiro4989\"\ndescription   = \"pnm is library for PNM (Portable AnyMap).\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\nimport strformat\n\ntask examples, \"Run example code\":\n  for d in [\"write_pbm\", \"write_pgm\", \"write_ppm\", \"read_file\"]:\n    withDir &\"examples/{d}\":\n      exec \"nim c -d:release main.nim\"\n      exec \"./main\"\n      exec \"echo -----------------------------\"\n\ntask convert, \"PNM to PNG\":\n  exec \"convert examples/write_pbm/out.pbm -scale 200x200 docs/pbm_example.png\"\n  exec \"convert examples/write_pgm/out.pgm -scale 500x400 docs/pgm_example.png\"\n  exec \"convert examples/write_ppm/out1.ppm -scale 512x512 docs/ppm_example1.png\"\n  exec \"convert examples/write_ppm/out2.ppm -scale 512x512 docs/ppm_example2.png\"\n  exec \"convert examples/read_file/out1.ppm -scale 512x512 docs/ppm_example1.convert.png\"\n",
"https://github.com/MnlPhlp/pomTimer": "# Package\n\nversion       = \"1.1\"\nauthor        = \"MnlPhlp\"\ndescription   = \"A simple pomodoro timer for the comandline with cli-output and notifications.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"pomTimer\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\",\"progress\",\"notify\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/choosenim_gui/master/choosenimgui.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Choosenim with GUI\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"choosenimgui\"]\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\nrequires \"webgui >= 0.1.0\"\n",
"https://github.com/nimious/io-egl.git": "[Package]\nname: \"egl\"\nversion: \"0.1\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for EGL, the native platform interface for rendering APIs\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2, x11\"\n",
"https://github.com/Nycto/PerlinNim": "# Package\n\nversion       = \"0.6.1\"\nauthor        = \"Nycto\"\ndescription   = \"A Perlin Noise Implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\n\n# Targets\n\ntask demo, \"Executes demo code\":\n    exec \"nimble c ./bin/noise1d.nim\"\n    exec \"nimble c ./bin/noise2d.nim\"\n    exec \"./bin/noise2d --perlin\"\n    exec \"./bin/noise1d --perlin\"\n    exec \"./bin/noise2d --simplex\"\n    exec \"./bin/noise1d --simplex --zoom=2\"\n\n",
"https://raw.githubusercontent.com/jangko/nimSHA2/master/nimSHA2.nimble": "# Package\nversion       = \"0.1.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"SHA2 secure hash algorithm - 2 - [224, 256, 384, 512 bits]\"\nlicense       = \"MIT\"\nskipDirs     = @[\"tests\", \"docs\"]\n\n# Deps\nrequires \"nim >= 0.11.2\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  test \"-d:release\", \"tests/test\"\n\ntask testvcc, \"Run tests with vcc compiler\":\n  test \"--cc:vcc -d:release\", \"tests/test\"\n",
"https://raw.githubusercontent.com/xmonader/nim-redisparser/master/redisparser.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"xmonader\"\ndescription   = \"RESP(REdis Serialization Protocol) Serialization for Nim\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/YesDrX/numnim/master/numnim.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"YesDrX\"\ndescription   = \"A numpy like ndarray and dataframe library for nim-lang.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\nskipDirs      = @[\"core/parallel\"]\n# Dependencies\nrequires \"nim >= 1.0.0\", \"nimblas >= 0.2.2\", \"nimlapack >= 0.2.0\", \"nimpy >= 0.1.0\"\n\ntask test, \"Run the tests\":\n    exec \"nim c -r tests/incltests.nim\"\n    rmFile \"tests/incltests\"\n",
"https://raw.githubusercontent.com/xxtea/xxtea-nim/master/xxtea.nimble": "[Package]\nname          = \"xxtea\"\nversion       = \"1.0.2\"\nauthor        = \"Ma Bingyao\"\ndescription   = \"XXTEA for encryption algorithm library Nim.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/genotrance/nimarchive/master/nimarchive.nimble": "# Package\n\nversion       = \"0.5.4\"\nauthor        = \"genotrance\"\ndescription   = \"libarchive wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.6.6\"\n\nvar\n  name = \"nimarchive\"\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\": buildDocs(@[\"nimarchive.nim\"], \"build/htmldocs\")\nelse:\n  task docs, \"Do nothing\": discard\n\ntask test, \"Run tests\":\n  exec \"nim c --path:.. -f -d:release -r tests/t\" & name & \".nim\"\n  exec \"nim c --path:.. -d:release -r tests/t\" & name & \"_extract.nim\"\n  docsTask()\n",
"https://raw.githubusercontent.com/yglukhov/cassandra/master/cassandra.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Cassandra driver bindings\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\", \"genbindings\"]\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-georefar/master/georefar.nimble": "version       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"GeoRef Argentina Government MultiSync API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/paranim/paratext/master/paratext.nimble": "# Package\n\nversion       = \"0.9.0\"\nauthor        = \"oakes\"\ndescription   = \"A library for rendering text with paranim\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"paranim >= 0.10.0\"\n",
"https://github.com/PMunch/zhangshasha": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"This module is a port of the Java implementation of the Zhang-Shasha algorithm for tree edit distance\"\nlicense       = \"MIT\"\nskipFiles = @[\"example.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://github.com/achesak/nim-pythonmath": "[Package]\nname = \"pythonmath\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \" Nim module to provide an interface as similar as possible to Python's math libary\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/treeform/benchy": "version     = \"0.0.1\"\nauthor      = \"Andre von Houck\"\ndescription = \"Benchmarking\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://raw.githubusercontent.com/zacharycarter/bgfx.nim/master/bgfxdotnim.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zachary Carter\"\ndescription   = \"Bindings to BGFX\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"",
"https://github.com/juancarlospaco/nim-kdialog": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Juan Carlos\"\ndescription   = \"KDialog Qt5 Wrapper, easy API, KISS design\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/cjxgm/barbarus": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Giumo Clanjor (哆啦比猫/兰威举)\"\ndescription   = \"A simple extensible i18n engine.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.2\"\n\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-gatabase/master/gatabase.nimble": "version       = \"0.9.9\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Compile-Time ORM for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\", \"examples\", \"docs\"]\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/brentp/nim-kmer": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"dna kmer ops for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\" #, \"nim-lang/c2nim>=0.9.13\"\n\nskipDirs = @[\"tests\"]\n\ntask test, \"run the tests\":\n  exec \"nim c -d:release --lineDir:on --debuginfo -r kmer\"\n",
"https://github.com/pdrb/nim-fwrite": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Pedro Buteri Gonring\"\ndescription   = \"Create files of the desired size\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"fwrite\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/Matceporial/nim-urand/master/urand.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Matceporial\"\ndescription   = \"Simple method of obtaining secure random numbers from the OS\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/cjxgm/jsonob/master/jsonob.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Giumo Clanjor (哆啦比猫/兰威举)\"\ndescription   = \"JSON / Object mapper\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.2\"\n\n",
"https://raw.githubusercontent.com/narimiran/blake2/master/blake2.nimble": "# Package\nversion       = \"0.4\"\nauthor        = \"tankfeeder\"\ndescription   = \"blake2 - cryptographic hash function\"\nlicense       = \"CC0\"\nskipExt       = @[\"txt\"]\n",
"https://raw.githubusercontent.com/markspanbroek/asynctest/master/asynctest.nimble": "version = \"0.2.1\"\nauthor = \"asynctest Authors\"\ndescription = \"Test asynchronous code\"\nlicense = \"MIT\"\n\nrequires \"nim >= 1.2.0 & < 2.0.0\"\n",
"https://github.com/mikra01/nimodpi": "# Package\nversion = \"0.1.0\"\nauthor = \"Michael Krauter\"\ndescription = \" oracle odpi-c wrapper \"\nlicense = \"MIT\"\nskipDirs = @[\"demo\"]\n\n# Dependencies\nrequires \"nim >= 1.2.6\"\nrequires \"nimterop >= 0.6.11\"\n\n\ntask demo, \"running demo\":\n  exec \"nim odpic_demo\"\n\ntask db_oracle, \"running db_oracle examples \":\n  exec \"nim oracle_demo\"\n\n",
"https://github.com/SolitudeSF/imageman": "# Package\n\nversion       = \"0.7.6\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Image manipulation library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"stb_image >= 2.2\"\n\ntask examples, \"Run examples\":\n  withDir \"examples\":\n    let srcs = [\"resize.nim\", \"flip.nim\"]\n    for src in srcs:\n      echo \"Run: \" & src & \" example\"\n      exec \"nim c -r --hints:off --verbosity:0 \" & src\n",
"https://github.com/ThomasTJdev/nim_slacklib": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"ThomasTJ (https://github.com/ThomasTJdev)\"\ndescription   = \"Library for working with a slack app or sending messages to a slack channel\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n",
"https://github.com/genotrance/nimterop": "# Package\n\nversion = \"0.6.13\"\nauthor      = \"genotrance\"\ndescription = \"C/C++ interop for Nim\"\nlicense     = \"MIT\"\n\nbin = @[\"nimterop/toast\", \"nimterop/loaf\"]\ninstallDirs = @[\"nimterop\"]\n\n# Dependencies\nrequires \"nim >= 0.20.2\", \"regex >= 0.15.0\", \"cligen >= 1.0.0\"\n\nimport nimterop/docs\nimport os\n\nproc execCmd(cmd: string) =\n  exec \"tests/timeit \" & cmd\n\nproc execTest(test: string, flags = \"\", runDocs = true) =\n  execCmd \"nim c --hints:off -f -d:checkAbi \" & flags & \" -r \" & test\n  let\n    # -d:checkAbi broken in cpp mode until post 1.2.0\n    cppAbi = when (NimMajor, NimMinor) >= (1, 3): \"-d:checkAbi \" else: \"\"\n  execCmd \"nim cpp --hints:off \" & cppAbi & flags & \" -r \" & test\n\n  if runDocs:\n    let docPath = \"build/html_\" & test.extractFileName.changeFileExt(\"\") & \"_docs\"\n    rmDir docPath\n    mkDir docPath\n    buildDocs(@[test], docPath, nimArgs = \"--hints:off \" & flags)\n\ntask buildTimeit, \"build timer\":\n  exec \"nim c --hints:off -d:danger tests/timeit\"\n\ntask buildLoaf, \"build loaf\":\n  execCmd(\"nim c --hints:off -d:danger nimterop/loaf.nim\")\n\ntask buildToast, \"build toast\":\n  execCmd(\"nim c --hints:off -d:danger nimterop/toast.nim\")\n\ntask bt, \"build toast\":\n  buildToastTask()\n\ntask btd, \"build toast\":\n  execCmd(\"nim c -g nimterop/toast.nim\")\n\ntask docs, \"Generate docs\":\n  buildDocs(@[\"nimterop/all.nim\"], \"build/htmldocs\")\n\ntask minitest, \"Test for Nim CI\":\n  exec \"nim c -f -d:danger nimterop/loaf.nim\"\n  exec \"nim c -f -d:danger nimterop/toast\"\n  exec \"nim c -f -d:checkAbi -r tests/tast2.nim\"\n  exec \"nim c -f -d:checkAbi -d:zlibJBB -d:zlibSetVer=1.2.11 -r tests/zlib.nim\"\n\ntask basic, \"Basic tests\":\n  execTest \"tests/tast2.nim\"\n  execTest \"tests/tast2.nim\", \"-d:NOHEADER\"\n  execTest \"tests/tast2.nim\", \"-d:NOHEADER -d:WRAPPED\"\n\n  execTest \"tests/tnimterop_c.nim\"\n  execTest \"tests/tnimterop_c.nim\", \"-d:FLAGS=\\\"-H\\\"\"\n\n  execCmd \"nim cpp --hints:off -f -r tests/tnimterop_cpp.nim\"\n  execCmd \"./nimterop/toast tests/toast.cfg tests/include/toast.h\"\n\ntask wrapper, \"Wrapper tests\":\n  execTest \"tests/tpcre.nim\"\n\n  when defined(Linux):\n    execTest \"tests/rsa.nim\"\n    execTest \"tests/rsa.nim\", \"-d:FLAGS=\\\"-H\\\"\"\n\n  # Platform specific tests\n  when defined(Windows):\n    execTest \"tests/tmath.nim\"\n    execTest \"tests/tmath.nim\",  \"-d:FLAGS=\\\"-H\\\"\"\n  if defined(OSX) or defined(Windows) or not existsEnv(\"TRAVIS\"):\n    execTest \"tests/tsoloud.nim\"\n    execTest \"tests/tsoloud.nim\",  \"-d:FLAGS=\\\"-H\\\"\"\n\ntask getheader, \"getHeader tests\":\n  withDir(\"tests\"):\n    exec \"nim e getheader.nims\"\n\ntask package, \"Wrapper package tests\":\n  if not existsEnv(\"APPVEYOR\"):\n    withDir(\"tests\"):\n      exec \"nim e wrappers.nims\"\n\ntask test, \"Test\":\n  rmFile(\"tests/timeit.txt\")\n\n  buildTimeitTask()\n  buildLoafTask()\n  buildToastTask()\n\n  basicTask()\n\n  wrapperTask()\n\n  getheaderTask()\n\n  packageTask()\n\n  docsTask()\n\n  echo readFile(\"tests/timeit.txt\")\n",
"https://raw.githubusercontent.com/aidansteele/aws_sdk.nim/master/aws_sdk.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Aidan Steele\"\ndescription   = \"AWS SDK for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"stringinterpolation\"\nrequires \"sph\"\nrequires \"nim >= 0.13.1\"\n\ntask tests, \"Run tests\":\n    for t in [\"smoketest\"]:\n        exec(\"nim c -r -d:ssl tests/t\" & t)\n",
"https://raw.githubusercontent.com/andreaferretti/neo/master/neo.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"neo\"\nversion       = \"0.3.1\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Linear Algebra for Nim\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\", \"benchmarks\", \"htmldocs\"]\nskipFiles     = @[\"_config.yml\"]\n\nrequires \"nim >= 0.18.0\", \"nimblas >= 0.2.0\", \"nimcuda >= 0.1.6\",\n  \"nimlapack >= 0.1.1\"\n\n--forceBuild\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu) or detectOs(Debian):\n    foreignDep \"libblas-dev\"\n    foreignDep \"libopenblas-dev\"\n    foreignDep \"liblapack-dev\"\n  elif detectOs(MacOsX):\n    foreignDep \"liblas\"\n    foreignDep \"lapack\"\n  else:\n    foreignDep \"libblas\"\n    foreignDep \"liblapack\"\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\nproc configForBenchmarks() =\n  --define: release\n  --path: \".\"\n  --run\n\ntask test, \"run CPU tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testdense, \"run CPU dense tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tdense.nim\"\n\ntask testsparse, \"run CPU sparse tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tsparse.nim\"\n\ntask teststatic, \"run CPU static tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tstatics.nim\"\n\ntask testshared, \"run CPU shared heap tests\":\n  configForTests()\n  --threads:on\n  setCommand \"c\", \"tests/tshared.nim\"\n\ntask testopenblas, \"run CPU tests on openblas\":\n  configForTests()\n  --define:\"blas=openblas\"\n  --define:\"lapack=openblas\"\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testmkl, \"run CPU tests on mkl\":\n  configForTests()\n  --define:\"blas=mkl_intel_lp64\"\n  --clibdir: \"/opt/intel/mkl/lib/intel64\"\n  --passl: \"/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  --passl: \"-lmkl_core\"\n  --passl: \"-lmkl_sequential\"\n  --passl: \"-lpthread\"\n  --passl: \"-lm\"\n  --dynlibOverride:mkl_intel_lp64\n  setCommand \"c\", \"tests/all.nim\"\n\ntask compilecuda, \"only compile GPU tests (when not having a GPU)\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --compileOnly\n  setCommand \"c\", \"tests/allcuda.nim\"\n\ntask testcuda, \"run GPU tests\":\n  configForTests()\n  --gc:markAndSweep # TODO: remove temporary workaround\n  setCommand \"c\", \"tests/allcuda.nim\"\n\ntask testcudadense, \"run GPU dense tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tcudadense.nim\"\n\ntask testcudasparse, \"run GPU sparse tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tcudasparse.nim\"\n\ntask testrw, \"run tests for rewrite macros\":\n  configForTests()\n  --define:neoCountRewrites\n  setCommand \"c\", \"tests/rewrites.nim\"\n\ntask benchmark, \"run CPU benchmarks\":\n  configForBenchmarks()\n  setCommand \"c\", \"benchmarks/bench_cpu.nim\"\n\ntask benchmarkcuda, \"run GPU benchmarks\":\n  configForBenchmarks()\n  setCommand \"c\", \"benchmarks/bench_gpu.nim\"\n\ntask docs, \"generate documentation\":\n  exec(\"mkdir -p htmldocs/neo\")\n  --project\n  --git.url: \"https://github.com/andreaferretti/neo\"\n  --git.commit: master\n  setCommand \"doc\", \"neo.nim\"",
"https://github.com/achesak/nim-uri2": "[Package]\nname = \"uri2\"\nversion = \"0.3\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for better URI handling\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/hlaaftana/applicates": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"hlaaftana\"\ndescription   = \"instantiated \\\"pointers\\\" to cached AST\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\nimport os\n\ntask docs, \"build docs\":\n  const\n    gitUrl = \"https://github.com/hlaaftana/applicates\"\n    gitCommit = \"master\"\n    gitDevel = \"master\" \n  for f in walkDirRec(\"src\"):\n    exec \"nim doc --git.url:\" & gitUrl &\n      \" --git.commit:\" & gitCommit &\n      \" --git.devel:\" & gitDevel &\n      \" --outdir:docs \" & f\n\ntask tests, \"runs tests with all define variations\":\n  echo \"testing normally\"\n  exec \"nimble test\"\n  echo \"testing with macro cache\"\n  exec \"nimble test -d:applicatesUseMacroCache\"\n  echo \"testing with table cache\"\n  exec \"nimble test -d:applicatesCacheUseTable\"\n",
"https://github.com/Vindaar/nim-mpfit": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Sebastian Schmidt\"\ndescription   = \"Wrapper for the cMPFIT non-linear least squares fitting library (Levenberg-Marquardt)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\nimport ospaths, strutils, strformat\nconst\n  pkgName = \"mpfit\"\n  orgFile = \"docs\" / (pkgName & \".org\")\n  rstFile = \"docs\" / (pkgName & \".rst\")\n  rstFileAuto = \"docs\" / (pkgName & \"_autogen.rst\")\n\nproc basename(f: string): string =\n  let (dir, name, ext) = f.splitFile\n  result = name\n\nproc removePrefix(f, prefix: string): string =\n  result = f\n  result.removePrefix(prefix)\n\n# doc generation inspired by `strfmt`\ntask docs, \"Generate HTML docs using the Org file\":\n  # https://github.com/jgm/pandoc/issues/4749\n  exec \"pandoc \" & orgFile & \" -o \" & rstFile\n  var files: seq[string]\n  template walk(path: string, outf: untyped): untyped {.dirty.} =\n    for filePath in listFiles(path):\n      if filePath.endsWith(\".nim\"):\n        let outfile = outf\n        exec &\"nim doc {outfile} {filePath}\"\n        files.add outfile.removePrefix(\"-o:\")\n  walk(\"src\", \"-o:index.html\")\n  walk(\"src\" / pkgName, &\"-o:{filePath.basename}.html\")\n  mvFile rstFile, rstFileAuto\n  for f in files:\n    let fname = f.basename & \".html\"\n    mvFile fname, \"docs/\" & $fname\n",
"https://raw.githubusercontent.com/barcharcraz/vecmath/master/vecmath.nimble": "[Package]\nname = \"vecmath\"\nversion = \"0.1.0\"\nauthor = \"Charlie Barto\"\ndescription = \"various maths fucntions useful to graphics\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/status-im/nim-rocksdb/master/rocksdb.nimble": "packageName   = \"rocksdb\"\nversion       = \"0.3.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for Facebook's RocksDB, an embeddable, persistent key-value store for fast storage\"\nlicense       = \"Apache License 2.0 or GPLv2\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n### Dependencies\nrequires \"nim >= 1.2.0\",\n         \"stew\",\n         \"tempfile\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache: nimcache\n  switch(\"out\", (\"./build/\" & name))\n  --threads: on\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Run tests\":\n  test \"all\"\n\n",
"https://github.com/andreaferretti/linear-algebra": "mode = ScriptMode.Verbose\n\npackageName   = \"linalg\"\nversion       = \"0.6.6\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Linear Algebra for Nim\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\", \"bench\"]\nskipFiles     = @[\"linalg.html\"]\n\nrequires \"nim >= 0.13.1\", \"nimblas >= 0.1.3\"\n\n--forceBuild\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu) or detectOs(Debian):\n    foreignDep \"libblas-dev\"\n    foreignDep \"libopenblas-dev\"\n    foreignDep \"liblapack-dev\"\n  else:\n    foreignDep \"libblas\"\n    foreignDep \"liblapack\"\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\nproc configForBenchmarks() =\n  --define: release\n  --path: \".\"\n  --run\n\nproc configForCuda() =\n  switch(\"cincludes\", \"/usr/local/cuda/targets/x86_64-linux/include\")\n  switch(\"clibdir\", \"/usr/local/cuda/targets/x86_64-linux/lib\")\n  --define: cublas\n\ntask test, \"run standard tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testopenblas, \"run standard tests on openblas\":\n  configForTests()\n  --define: openblas\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testmkl, \"run standard tests on mkl\":\n  configForTests()\n  --dynlibOverride:mkl_intel_lp64\n  --passL:\"/home/papillon/.intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  --define: mkl\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testcuda, \"run tests for the cuda implementation\":\n  configForTests()\n  configForCuda()\n  setCommand \"c\", \"tests/cublas.nim\"\n\ntask bench, \"run standard benchmarks\":\n  configForBenchmarks()\n  setCommand \"c\", \"bench/matrix_matrix_mult.nim\"\n\ntask benchcuda, \"run benchmarks for the cuda implementation\":\n  configForBenchmarks()\n  configForCuda()\n  setCommand \"c\", \"bench/cuda/matrix_vector_mult.nim\"\n\ntask gendoc, \"generate documentation\":\n  --define: cublas\n  --docSeeSrcUrl: https://github.com/andreaferretti/linear-algebra/blob/master\n  setCommand \"doc2\", \"linalg.nim\"\n",
"https://raw.githubusercontent.com/gokr/sprymicro/master/sprymicro.nimble": "# Package\nversion       = \"0.0.2\"\nauthor        = \"Göran Krampe\"\ndescription   = \"Small demo Spry interpreters\"\nlicense       = \"MIT\"\nbin           = @[\"sprymicro\", \"sprymin\"]\n\n# This forces no installation except binaries\nskipExt       = @[\"nim\"]\ninstallDirs   = @[]\n\n# Deps\nrequires \"spryvm\"\n\ntask test, \"Run the tests\":\n  withDir \"tests\":\n    exec \"nim c -r all\"\n",
"https://raw.githubusercontent.com/LucaWolf/des.nim/master/des.nimble": "# Package\r\n\r\nversion       = \"0.0.12\"\r\nauthor        = \"LucaWolf <LucaWolf@users.noreply.github.com>\"\r\ndescription   = \"3DES native library for Nim\"\r\nlicense       = \"MIT\"\r\n\r\nskipDirs = @[\"tests\"]\r\n#bin = @[\"tests/des_test\"]\r\n\r\n# Dependencies\r\n\r\n#tests tdefault\r\n\r\nrequires \"nim >= 1.0.0\"\r\n\r\n",
"https://raw.githubusercontent.com/jackhftang/timestamp.nim/master/timestamp.nimble": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"Jack Tang\"\ndescription   = \"An alternative time library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"timestamp.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html src/timestamp.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://raw.githubusercontent.com/paranim/parasound/master/parasound.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"oakes\"\ndescription   = \"Bindings for miniaudio\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/yglukhov/sound.git": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Cross-platform sound mixer\"\nlicense       = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.10.0\"\nrequires \"jnim\"\nrequires \"https://github.com/yglukhov/async_http_request\"\nrequires \"jsbind\"\nrequires \"https://github.com/yglukhov/android\"\n",
"https://raw.githubusercontent.com/achesak/nim-yahooweather/master/yahooweather.nimble": "[Package]\nname = \"yahooweather\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Yahoo! Weather API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/status-im/nim-ranges/master/ranges.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"ranges\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Exploration of various implementations of memory range types\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.17.0\"\n\nproc configForTests() =\n  --hints: off\n  --debuginfo\n  --path: \".\"\n  --run\n  --threads: on\n\ntask test, \"run CPU tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n\n",
"https://github.com/PMunch/notificatcher": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"PMunch\"\ndescription   = \"Small program to read freedesktop notifications and format them as strings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"notificatcher\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"dbus\"\nrequires \"https://github.com/PMunch/docopt.nim#dispatch\"\n",
"https://github.com/icyphox/nanoid.nim": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Anirudh\"\ndescription   = \"The Nim implementation of NanoID\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\", \"random >= 0.5.5\"\n\n",
"https://raw.githubusercontent.com/ebran/grim/master/grim.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Erik G. Brandt\"\ndescription   = \"Bringer of property graphs to Nim!\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4\"\nrequires \"yaml#head\"\nrequires \"zero_functional\"\n\n# Tasks\n\n# build HTML documentation\ntask docs, \"Build the documentation (in HTML)\":\n  # Build documentation from .rst files in docs/ folder\n  for dir in \"docs\" & listDirs(\"docs\"):\n    for file in listFiles(dir):\n      if file[^4..^1] == \".rst\":\n        selfExec \"rst2html --outdir:$1 $2\".format(dir, file)\n  \n  # Build reference documentation from comments in code\n  selfExec \"doc --outdir:docs/ --project --index:on --git.url:https://www.github.com/ebran/grim src/grim.nim\"\n  selfExec \"buildIndex --outdir:docs/ -o:docs/theindex docs\"\n  # Get rid of xml header line\n  exec \"sed -i '1d' docs/index.html\"\n\n# Tutorials\ntask northwind, \"Northwind tutorial\":\n  withDir(\"tutorials\"):\n    # selfExec \"c -r northwind.nim\"                        # debug mode\n    selfExec \"c -d:release -d:danger -r northwind.nim\"  # release mode\n",
"https://raw.githubusercontent.com/bunkford/qrcodegen/master/qrcodegen.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"QR Code Generator for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires: \"nim >= 0.10.0\"",
"https://raw.githubusercontent.com/nim-lang/fusion/master/fusion.nimble": "# Package\n\nversion       = \"1.0\"\nauthor        = \"Araq\"\ndescription   = \"Extensions for Nim's stdlib\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\ntask docs, \"\":\n  # JavaScript\n  when (NimMajor, NimMinor) >= (1, 5):\n    exec \"nim c -r -d:fusionDocJs src/fusion/docutils \" & srcDir\n  # C\n  exec \"nim c -r src/fusion/docutils \" & srcDir\n",
"https://raw.githubusercontent.com/nimscale/dpdk/master/dpdk.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Kean Sum Ooi\"\ndescription   = \"Nim bindings to DPDK\"\nlicense       = \"Apache\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\nskipDirs = @[\"logs\", \"dpdk-stable-16.07.2\"]\n\nskipFiles = @[\"dpdk-16.07.2.tar.xz\", \"instC_DPDK.sh\", \"uninstC_DPDK.sh\"]\n\n# rteErrorWrapper/librte_error_wrapper.a installed by instC_DPDK.sh\nskipExt = @[\"a\"]\n\n#  pre uninstall hook to install dpdk 16.07.2\nbefore install:\n  exec \"./instC_DPDK.sh\"\n  \n# post uninstall hook uninstall dpdk 16.07.2\nafter uninstall:\n  exec \"./uninstC_DPDK.sh\"\n\ntask info, \"Installs C DPDK library\":\n  echo \"This installs the Nim bindings (wrapper Nim include files) to the C DPDK library.\\n\"\n  echo \"The C DPDK 16.07.2 library is also installed along with the Nim bindings\"\n  echo \"Tested to work using nim 0.16.0\"\n  echo \"Any bugs found, please email me: keansum <at> gmail <dot> com\"\n \n\n",
"https://raw.githubusercontent.com/krisppurg/dimscord/master/dimscord.nimble": "# Package\n\nversion       = \"1.2.5\"\nauthor        = \"KrispPurg\"\ndescription   = \"A Discord Bot & REST Library for Nim.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"zippy >= 0.2.1\", \"ws <= 0.4.0\", \"regex >= 0.15.0\", \"libsodium <= 0.6.0\", \"flatty >= 0.1.2\"\n\ntask genDoc, \"Generates the documentation for dimscord\":\n    rmDir(\"docs\") # Clean old doc folder\n    exec(\"nim doc2 --outdir=docs --project --index:on --git.url:https://github.com/krisppurg/dimscord --git.commit:master dimscord.nim\")\n    exec(\"nim buildindex -o:docs/theindex.html docs/\") # This builds the index to allow search to work\n\n    writeFile(\"docs/index.html\", \"\"\"\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta http-equiv=\"Refresh\" content=\"0; url=dimscord.html\"/>\n      </head>\n      <body>\n        <p>Click <a href=\"dimscord.html\">this link</a> if this does not redirect you.</p>\n      </body>\n    </html>\n    \"\"\")\n",
"https://github.com/rogercloud/nim-routine": "[Package]\nname          = \"nimroutine\"\nversion       = \"0.1.1\"\nauthor        = \"Roger Shi\"\ndescription   = \"A go routine like nim implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.11.3\"\n",
"https://raw.githubusercontent.com/disruptek/github/master/github.nimble": "version = \"2.0.4\"\nauthor = \"disruptek\"\ndescription = \"github api\"\nlicense = \"MIT\"\nrequires \"npeg < 1.0.0\"\nrequires \"https://github.com/disruptek/rest.git >= 1.0.5 & < 2.0.0\"\n\nsrcDir = \"src\"\n\nproc execCmd(cmd: string) =\n  echo \"execCmd:\" & cmd\n  exec cmd\n\nproc execTest(test: string) =\n  execCmd \"nim c           -f -r \" & test\n  execCmd \"nim c   -d:release -r \" & test\n  execCmd \"nim c   -d:danger  -r \" & test\n  execCmd \"nim cpp            -r \" & test\n  execCmd \"nim cpp -d:danger  -r \" & test\n  when NimMajor >= 1 and NimMinor >= 1:\n    execCmd \"nim c   --gc:arc -r \" & test\n    execCmd \"nim cpp --gc:arc -r \" & test\n\ntask test, \"run tests for travis\":\n  execTest(\"tests/tgithub.nim\")\n",
"https://raw.githubusercontent.com/6A/getch/master/getch.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Gregoire GEIS\"\ndescription   = \"getch() for Windows and Unix\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\"\n\n",
"https://github.com/LucaWolf/des.nim": "# Package\r\n\r\nversion       = \"0.0.12\"\r\nauthor        = \"LucaWolf <LucaWolf@users.noreply.github.com>\"\r\ndescription   = \"3DES native library for Nim\"\r\nlicense       = \"MIT\"\r\n\r\nskipDirs = @[\"tests\"]\r\n#bin = @[\"tests/des_test\"]\r\n\r\n# Dependencies\r\n\r\n#tests tdefault\r\n\r\nrequires \"nim >= 1.0.0\"\r\n\r\n",
"https://github.com/juancarlospaco/ballena-itcher": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Flash ISO images to SD cards & USB drives, safely and easily.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"ballena_itcher\"]\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/planetis-m/eminim/master/eminim.nimble": "# Package\n\nversion       = \"2.8.2\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"JSON serialization framework for Nim\"\nlicense       = \"MIT\"\nskipDirs = @[\"tests\",\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/nim-lang/cairo": "# Package\n\nversion = \"1.1.1\"\nauthor       = \"Andreas Rumpf\"\ndescription  = \"Wrapper for cairo, a vector graphics library with display and print output\"\nlicense      = \"MIT\"\n\nsrcDir       = \"src\"\n\n# Deps\n\nrequires \"nim >= 1.0.0\"\n\n\ntask test, \"Tests the tests\":\n  exec \"nim c -r tests/arc\"\n  exec \"nim c -r tests/clip\"\n  exec \"nim c -r tests/clip_image\"\n  exec \"nim c -r tests/curve_to\"\n  exec \"nim c -r tests/dash\"\n  exec \"nim c -r tests/fill_and_stroke\"\n  exec \"nim c -r tests/gradient\"\n  exec \"nim c -r tests/image\"\n  exec \"nim c -r tests/image_pattern\"\n  exec \"nim c -r tests/line_cap\"\n  exec \"nim c -r tests/line_join\"\n  exec \"nim c -r tests/rounded_rectangle\"\n  exec \"nim c -r tests/text\"\n  exec \"nim c -r tests/text_align\"\n",
"https://github.com/bung87/fastText": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"bung87\"\ndescription   = \"fastText porting in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\n# import distros\n# import ospaths\n\n# var cmd = \"\"\n# if detectOs(Windows):\n#   cmd = \"cmd /c \"\n\n# task test, \"Run tests\":\n#   withDir(\"tests\"):\n#     exec \"nim cpp -r testfast\"\n",
"https://github.com/Michedev/DecisionTreeNim": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Michele De Vita\"\ndescription   = \"Decision tree and Random forest CART implementation for nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"sequtils2 >= 1.1.0\"\n",
"https://raw.githubusercontent.com/Vindaar/polynumeric/master/polynumeric.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Vindaar\"\ndescription   = \"Polynomial operations\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/bung87/datetime_parse": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"bung87\"\ndescription   = \"parse datetime from various resources\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"c\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"timezones >= 0.5.1\"\n\ntask dist,\"dist src/datetime_parse.nim \":\n  exec \"nim js --taintMode:off -d:release -d:nodejs --checks:on -o:dist/datetime_parse.js src/datetime_parse\"\n\ntask distjs,\"dist src/datetime_parse.nim \":\n  exec \"nim js --taintMode:off -d:release -d:nodejs --checks:on -o:lib/datetime_parse.js src/datetime_parse\"\n\ntask buildjs,\"build src/datetime_parse.nim \":\n  exec \"nim js --taintMode:off  -d:nodejs --checks:on -o:build/datetime_parse.js src/datetime_parse\"\n\ntask testjs,\"test js\":\n  exec \"nimble buildjs && node tests/test4.js\"\n\ntask tests, \"Runs the test suite\":\n  exec \"nimble test\"\n  exec \"nimble testjs\"",
"https://github.com/gmshiba/nish": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"gmshiba\"\ndescription   = \"nsh: Nim SHell(cross platform)\"\nlicense       = \"MIT\"\nbinDir        = \"bin\"\nsrcDir        = \"src\"\ninstallFiles  = @[\"apd.bat\", \"pipe.bat\"]\ninstallDirs   = @[\"nshpkg\"]\nbin           = @[\"nsh\", \"tocl\"]\n\n# Dependencies\n\n\nrequires \"nim >= 0.18.0\"\n# requires \"unixcmd >= 0.1.0\"\n",
"https://github.com/tulayang/asyncevents": "[Package]\nname          = \"asyncevents\"\nversion       = \"0.3.0\"\nauthor        = \"Wang Tong\"\ndescription   = \"Asynchronous event loop for progaming with MVC\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.12.0\"\n",
"https://raw.githubusercontent.com/status-im/nim-libp2p/master/libp2p.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"libp2p\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"LibP2P implementation\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"examples\", \"Nim\", \"tools\", \"scripts\", \"docs\"]\n\nrequires \"nim >= 1.2.0\",\n         \"nimcrypto >= 0.4.1\",\n         \"bearssl >= 0.1.4\",\n         \"chronicles >= 0.7.2\",\n         \"chronos >= 2.5.2\",\n         \"metrics\",\n         \"secp256k1\",\n         \"stew#head\"\n\nproc runTest(filename: string, verify: bool = true, sign: bool = true,\n             moreoptions: string = \"\") =\n  var excstr = \"nim c --opt:speed -d:debug --verbosity:0 --hints:off\"\n  excstr.add(\" --warning[CaseTransition]:off --warning[ObservableStores]:off --warning[LockLevel]:off\")\n  excstr.add(\" -d:libp2p_pubsub_sign=\" & $sign)\n  excstr.add(\" -d:libp2p_pubsub_verify=\" & $verify)\n  excstr.add(\" \" & moreoptions & \" \")\n  if verify and sign:\n    # build it with TRACE and JSON logs\n    exec excstr & \" -d:chronicles_log_level=TRACE -d:chronicles_sinks:json\" & \" tests/\" & filename\n  # build it again, to run it with less verbose logs\n  exec excstr & \" -d:chronicles_log_level=INFO -r\" & \" tests/\" & filename\n  rmFile \"tests/\" & filename.toExe\n\nproc buildSample(filename: string) =\n  var excstr = \"nim c --opt:speed --threads:on -d:debug --verbosity:0 --hints:off\"\n  excstr.add(\" --warning[CaseTransition]:off --warning[ObservableStores]:off --warning[LockLevel]:off\")\n  excstr.add(\" examples/\" & filename)\n  exec excstr\n  rmFile \"examples\" & filename.toExe\n\ntask testnative, \"Runs libp2p native tests\":\n  runTest(\"testnative\")\n\ntask testdaemon, \"Runs daemon tests\":\n  runTest(\"testdaemon\")\n\ntask testinterop, \"Runs interop tests\":\n  runTest(\"testinterop\")\n\ntask testpubsub, \"Runs pubsub tests\":\n  runTest(\"pubsub/testgossipinternal\", sign = false, verify = false, moreoptions = \"-d:pubsub_internal_testing\")\n  runTest(\"pubsub/testpubsub\")\n  runTest(\"pubsub/testpubsub\", sign = false, verify = false)\n  runTest(\"pubsub/testpubsub\", sign = false, verify = false, moreoptions = \"-d:libp2p_pubsub_anonymize=true\")\n\ntask testpubsub_slim, \"Runs pubsub tests\":\n  runTest(\"pubsub/testgossipinternal\", sign = false, verify = false, moreoptions = \"-d:pubsub_internal_testing\")\n  runTest(\"pubsub/testpubsub\")\n\ntask testfilter, \"Run PKI filter test\":\n  runTest(\"testpkifilter\",\n           moreoptions = \"-d:libp2p_pki_schemes=\\\"secp256k1\\\"\")\n  runTest(\"testpkifilter\",\n           moreoptions = \"-d:libp2p_pki_schemes=\\\"secp256k1;ed25519\\\"\")\n  runTest(\"testpkifilter\",\n           moreoptions = \"-d:libp2p_pki_schemes=\\\"secp256k1;ed25519;ecnist\\\"\")\n  runTest(\"testpkifilter\",\n           moreoptions = \"-d:libp2p_pki_schemes=\")\n\ntask test, \"Runs the test suite\":\n  exec \"nimble testnative\"\n  exec \"nimble testpubsub\"\n  exec \"nimble testdaemon\"\n  exec \"nimble testinterop\"\n  exec \"nimble testfilter\"\n\ntask test_slim, \"Runs the test suite\":\n  exec \"nimble testnative\"\n  exec \"nimble testpubsub_slim\"\n  exec \"nimble testinterop\"\n  exec \"nimble testfilter\"\n\ntask examples_build, \"Build the samples\":\n  buildSample(\"directchat\")\n",
"https://github.com/FedericoCeratto/nim-seccomp": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Seccomp (Linux sandboxing) adapter\"\nlicense       = \"LGPLv2.1\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\ntask release, \"Build a release\":\n  exec \"nim c -d:release seccomp.nim\"\n\ntask test, \"Basic test\":\n  exec \"nim c -p:. -r tests/basic_test.nim\"\n  exec \"nim c -p:. -r tests/syscall_num.nim\"\n\ntask test_trigger_seccomp, \"Test triggering seccomp\":\n  exec \"nim c -p:. -r tests/trigger_seccomp.nim\"\n",
"https://raw.githubusercontent.com/ftsf/nim-webaudio/master/webaudio.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Jez Kabanov\"\ndescription   = \"API for Web Audio (JS)\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nskipDirs = @[\"tests\"]\n\ntask test, \"run tests\":\n  exec(\"nim js -o:tests/test.js --path:. tests/test.nim\")\n",
"https://raw.githubusercontent.com/nim-lang/ui/master/ui.nimble": "# Package\r\n\r\nversion       = \"0.9.4\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Nim\\'s official UI library\"\r\nlicense       = \"MIT\"\r\n\r\ninstallDirs = @[\"ui\",\"res\"]\r\ninstallFiles = @[\"ui.nim\"]\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.19.4\"\r\n\r\n",
"https://raw.githubusercontent.com/inim-repl/INim/master/inim.nimble": "# Package\n\nskipDirs      = @[\"tests\"]\nversion       = \"0.6.1\"\nauthor        = \"Andrei Regiani\"\ndescription   = \"Interactive Nim Shell / REPL / Playground\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"inimpkg\"]\ninstallExt    = @[\"nim\"]\nbin           = @[\"inim\"]\n\n# Dependencies\n\nrequires \"cligen >= 1.2.0\"\n\nrequires \"noise >= 0.1.4\"\n\ntask test, \"Run all tests\":\n  exec \"mkdir -p bin\"\n  exec \"nim c -d:NoColor -d:prompt_no_history --out:bin/inim inim.nim\"\n  exec \"nim c -r -d:prompt_no_history tests/test.nim\"\n  # Recompile with tty checks\n  exec \"nim c -d:NoColor -d:NOTTYCHECK -d:prompt_no_history --out:bin/inim inim.nim\"\n  exec \"nim c -r -d:withTools -d:prompt_no_history tests/test_commands.nim\"\n  exec \"nim c -r -d:prompt_no_history tests/test_interface.nim\"\n",
"https://raw.githubusercontent.com/skrylar/skbintext/master/skbintext.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joshua Cearley\"\ndescription   = \"A Binary<->Text converter.\"\nlicense       = \"MPL-2\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_onedrive/master/onedrive.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"Get information on files and folders in OneDrive.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"packedjson >= 0.1.0\"",
"https://github.com/Vindaar/polynumeric": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Vindaar\"\ndescription   = \"Polynomial operations\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/nitely/nim-unicodeplus/master/unicodeplus.nimble": "# Package\n\nversion = \"0.8.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Common unicode operations\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"unicodedb >= 0.8\"\nrequires \"segmentation >= 0.1\"\n\ntask test, \"Test\":\n  exec \"nim c -r tests/tests\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/unicodeplus.nim\"\n",
"https://raw.githubusercontent.com/Aearnus/unicode_numbers/master/unicode_numbers.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Tyler Limkemann\"\ndescription   = \"Converts a number into a specially formatted Unicode string\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://github.com/filcuc/nimqml": "[Package]\nname          = \"nimqml\"\nversion       = \"0.8.0\"\nauthor        = \"Filippo Cucchetto\"\ndescription   = \"QML bindings for Nim\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/akavel/dali/master/dali.nimble": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"Mateusz Czapliński\"\ndescription   = \"Dalvik Assembler/Linker\"\nlicense       = \"AGPL-3.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"patty 0.3.3\"\n",
"https://github.com/s3pt3mb3r/colorizeEcho": "# Package\n\nversion       = \"1.0\"\nauthor        = \"s3pt3mb3r\"\ndescription   = \"colorizeEcho is a package which colorize echo message on Windows command prompt.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/nim-lang/basic3d": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Deprecated package from the stdlib.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/genotrance/nimkerberos/master/nimkerberos.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"WinKerberos wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimkerberos\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n\n",
"https://raw.githubusercontent.com/pragmagic/godot-nim/master/godot.nimble": "version = \"0.8.1\"\nauthor = \"Xored Software, Inc.\"\ndescription = \"Godot Engine bindings\"\nlicense = \"MIT\"\nsrcDir = \"godot\"\n\nrequires \"nim >= 0.17.3\", \"compiler >= 0.17.3\"",
"https://github.com/snus-kin/twitter.nim": "# Package\nversion = \"1.0.1\"\nauthor = \"snus-kin\"\ndescription = \"A twitter API wrapper for Nim.\"\nlicense = \"MIT\"\n\n# Deps\nrequires: \"nim >= 1.2.0\"\nrequires: \"uuids >= 0.1.10, hmac >= 0.1.9\"\n\ntask test, \"Runs tests\":\n  exec \"nim c -r twitter.nim\"\n",
"https://raw.githubusercontent.com/subsetpark/untitled-shell-history-application/master/usha.nimble": "# Package\n\nversion       = \"0.3\"\nauthor        = \"Zach Smith\"\ndescription   = \"untitled shell history application\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"docopt\"\n\nbin = @[\"usha\"]\n",
"https://api.github.com/repos/yglukhov/sound/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"size\":10,\"url\":\"https://api.github.com/repos/yglukhov/sound/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/yglukhov/sound/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/yglukhov/sound/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/sound/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/sound/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/sound/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"html\":\"https://github.com/yglukhov/sound/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"49f711a09f8883d18c12f3528a9a46af02c90c80\",\"size\":1081,\"url\":\"https://api.github.com/repos/yglukhov/sound/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/yglukhov/sound/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/yglukhov/sound/git/blobs/49f711a09f8883d18c12f3528a9a46af02c90c80\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/sound/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/sound/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/sound/git/blobs/49f711a09f8883d18c12f3528a9a46af02c90c80\",\"html\":\"https://github.com/yglukhov/sound/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"539edc851273d5616dcfdc1dc2cbaf598de3bdca\",\"size\":1214,\"url\":\"https://api.github.com/repos/yglukhov/sound/contents/README.md?ref=master\",\"html_url\":\"https://github.com/yglukhov/sound/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/yglukhov/sound/git/blobs/539edc851273d5616dcfdc1dc2cbaf598de3bdca\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/sound/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/sound/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/sound/git/blobs/539edc851273d5616dcfdc1dc2cbaf598de3bdca\",\"html\":\"https://github.com/yglukhov/sound/blob/master/README.md\"}},{\"name\":\"sound.nimble\",\"path\":\"sound.nimble\",\"sha\":\"2070ad711aa44834cf6dfb96eebb3a1b5991c1fb\",\"size\":305,\"url\":\"https://api.github.com/repos/yglukhov/sound/contents/sound.nimble?ref=master\",\"html_url\":\"https://github.com/yglukhov/sound/blob/master/sound.nimble\",\"git_url\":\"https://api.github.com/repos/yglukhov/sound/git/blobs/2070ad711aa44834cf6dfb96eebb3a1b5991c1fb\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/sound/master/sound.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/sound/contents/sound.nimble?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/sound/git/blobs/2070ad711aa44834cf6dfb96eebb3a1b5991c1fb\",\"html\":\"https://github.com/yglukhov/sound/blob/master/sound.nimble\"}},{\"name\":\"sound\",\"path\":\"sound\",\"sha\":\"3d878ccc6b1a292079cfa35079f998ed50e375b5\",\"size\":0,\"url\":\"https://api.github.com/repos/yglukhov/sound/contents/sound?ref=master\",\"html_url\":\"https://github.com/yglukhov/sound/tree/master/sound\",\"git_url\":\"https://api.github.com/repos/yglukhov/sound/git/trees/3d878ccc6b1a292079cfa35079f998ed50e375b5\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/sound/contents/sound?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/sound/git/trees/3d878ccc6b1a292079cfa35079f998ed50e375b5\",\"html\":\"https://github.com/yglukhov/sound/tree/master/sound\"}}]",
"https://raw.githubusercontent.com/tulayang/httpform/master/httpform.nimble": "[Package]\nname          = \"httpform\"\nversion       = \"0.1.0\"\nauthor        = \"Wang Tong\"\ndescription   = \"Http request form parser\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.0\"\n",
"https://raw.githubusercontent.com/jjv360/nim-classes/master/classes.nimble": "# Package\nversion       = \"0.2.0\"\nauthor        = \"jjv360\"\ndescription   = \"Adds class support to Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\nrequires \"nim >= 1.4.0\"\n\n# Tasks\ntask test, \"Test\": exec \"nim compile --run --d:debugclasses test.nim\"",
"https://raw.githubusercontent.com/jyapayne/einheit/master/einheit.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Joey Payne\"\ndescription   = \"Tool for providing unit tests. Einheit is German for Unit.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/test.nim\"\n\ntask testjs, \"Run tests on Node.js\":\n  exec \"nim js -d:nodejs -r tests/test.nim\"\n",
"https://raw.githubusercontent.com/samdmarshall/notmuch.nim/master/notmuch.nimble": "# Package\n\nversion       = \"5.2.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"wrapper for the notmuch 0.28.0 mail library\"\nlicense       = \"BSD 3-Clause\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://github.com/Clonkk/nimfftw3": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"rcaillaud\"\ndescription   = \"Nim FFTW bindings\"\nlicense       = \"LGPL-2.1\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"arraymancer >= 0.6.1\"\n\ntask gendoc, \"gen doc\":\n  exec(\"nimble doc --project src/fftw3.nim --out:docs/\")\n\n",
"https://raw.githubusercontent.com/haxscramper/hcparse/master/hcparse.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"haxscramper\"\ndescription   = \"High-level nim wrapper for C/C++ parsing\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"hnimast\", \"hmisc >= 0.4.0\", \"hpprint\"\nrequires \"nimtraits\"\n# requires \"https://github.com/disruptek/gram\"\n",
"https://raw.githubusercontent.com/Parashurama/nim-i18n/master/i18n.nimble": "[Package]\nname          : \"i18n\"\nversion       : \"0.1.1\"\nauthor        : \"Parashurama\"\ndescription   : \"Bring a gettext-like internationalisation module to Nim\"\nlicense       : \"MIT\"\n\nInstallDirs : \"private\"\nInstallFiles : \"i18n.nim\"\n\n[Deps]\nrequires: \"nim >= 0.12\"\n",
"https://github.com/xflywind/async": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zeshen Xing\"\ndescription   = \"Cross platform system API for os and net.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/haxscramper/htsparse/master/htsparse.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"haxscramper\"\ndescription   = \"Nim wrappers for tree-sitter parser grammars\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmisc >= 0.9.0\"\nrequires \"hparse\"\n\ntask docgen, \"Generate documentation\":\n  exec(\"hmisc-putils docgen\")\n\ntask dockerdocgen, \"Generate documentation in docker container\":\n  exec(\"hmisc-putils dockerdocgen -lcligen -lhmisc -lhasts -lhnimast -lhdrawing -lhpprint -lhparse\")\n\ntask dockertest, \"Run tests in docker container\":\n  exec(\"\"\"\nhmisc-putils dockertest --projectDir:$(pwd) \\\n  -lcligen -lhmisc -lhasts -lhnimast -lhdrawing -lhpprint -lhparse \\\n  --preTestCmds='wget https://github.com/tree-sitter/tree-sitter/archive/0.17.3.tar.gz' \\\n  --preTestCmds='tar -xvf 0.17.3.tar.gz' \\\n  --preTestCmds='cd tree-sitter-0.17.3' \\\n  --preTestCmds='sudo make install PREFIX=/usr'\n\"\"\")\n",
"https://github.com/Vindaar/nimhdf5": "# Package\n\nversion       = \"0.3.13\"\nauthor        = \"Sebastian Schmidt\"\ndescription   = \"Bindings for the HDF5 data format C library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"examples, c_headers\"]\nskipExt       = @[\"nim~\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"https://github.com/vindaar/seqmath >= 0.1.12\"\n# for blosc support install:\n# requires \"nblosc >= 1.15.0\"\n\ntask test, \"Runs all tests\":\n  exec \"nim c -r tests/tbasic.nim\"\n  exec \"nim c -r tests/tdset.nim\"\n  exec \"nim c -r tests/tread1D.nim\"\n  exec \"nim c -r tests/tattributes.nim\"\n  exec \"nim c -r tests/tvlen_array.nim\"\n  exec \"nim c -r tests/tempty_hyperslab.nim\"\n  exec \"nim c -r tests/tresize.nim\"\n  exec \"nim c -r tests/treshape.nim\"\n  exec \"nim c -r tests/tutil.nim\"\n  exec \"nim c -r tests/tnested.nim\"\n  exec \"nim c -r tests/tfilter.nim\"\n  exec \"nim c -r tests/toverwrite.nim\"\n  exec \"nim c -r tests/tconvert.nim\"\n  exec \"nim c -r tests/tdelete.nim\"\n  exec \"nim c -r tests/tresize_by_add.nim\"\n  exec \"nim c -r tests/tStringAttributes.nim\"\n  exec \"nim c -r tests/tCompound.nim\"\n  # regression tests\n  exec \"nim c -r tests/tint64_dset.nim\"\n  exec \"nim c -r tests/t17.nim\"\n  exec \"nim c -r tests/tIntegerTypes.nim\"\n",
"https://raw.githubusercontent.com/Vindaar/ggplotnim/master/ggplotnim.nimble": "# Package\n\nversion       = \"0.3.22\"\nauthor        = \"Sebastian Schmidt\"\ndescription   = \"A port of ggplot2 for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"https://github.com/Vindaar/seqmath >= 0.1.11\"\nrequires \"ginger >= 0.2.8\"\nrequires \"persvector >= 1.0.0\"\nrequires \"shell >= 0.4.3\"\nrequires \"arraymancer >= 0.6.2\"\nrequires \"webview\"\n\ntask testCI, \"Run standard tests w/o cairo dependency\":\n  # This runs all tests suitable for a CI environment, which does not provide\n  # cairo. Most tests are independent of cairo anyways\n  exec \"nim c -d:noCairo -r tests/testDf.nim\"\n  exec \"nim c -d:noCairo -r tests/tests.nim\"\n  exec \"nim c -d:noCairo -r tests/test_issue2.nim\"\n  exec \"nim c -d:noCairo -r tests/test_issue20.nim\"\n  exec \"nim c -d:noCairo -r tests/test_issue28.nim\"\n\ntask test, \"Run standard tests\":\n  exec \"nim c -r tests/testDf.nim\"\n  exec \"nim c -r tests/tests.nim\"\n  exec \"nim c -r tests/test_issue2.nim\"\n  exec \"nim c -r tests/test_issue20.nim\"\n  exec \"nim c -r tests/test_issue28.nim\"\n\ntask fulltest, \"Run all tests, including recipe comparison (requires ntangle)\":\n  exec \"nim c -r tests/testDf.nim\"\n  exec \"nim c -r tests/tests.nim\"\n  exec \"nim c -r tests/test_issue2.nim\"\n  exec \"nim c -r tests/test_issue20.nim\"\n  exec \"nim c -r tests/test_issue28.nim\"\n  exec \"nim c -r tests/tCompareRecipes.nim\"\n\nimport os, strutils, strformat\nconst\n  pkgName = \"ggplotnim\"\n  orgFile = \"docs\" / (pkgName & \".org\")\n  rstFile = \"docs\" / (pkgName & \".rst\")\n  rstFileAuto = \"docs\" / (pkgName & \"_autogen.rst\")\n\nproc basename(f: string): string =\n  let (dir, name, ext) = f.splitFile\n  result = name\n\nproc removePrefix(f, prefix: string): string =\n  result = f\n  result.removePrefix(prefix)\n\ntemplate canImport(x: untyped): untyped =\n  compiles:\n    import x\n\nwhen canImport(docs / docs):\n  # can define the `gen_docs` task (docs already imported now)\n  # this is to hack around weird nimble + nimscript behavior.\n  # when overwriting an install nimble will try to parse the generated\n  # nimscript file and for some reason then it won't be able to import\n  # the module (even if it's put into `src/`).\n  task gen_docs, \"Generate ggplotnim documentation\":\n    # build the actual docs and the index\n    exec \"pandoc \" & orgFile & \" -o \" & rstFile\n    buildDocs(\n      \"src/\", \"docs/\",\n      defaultFlags = \"--hints:off --warnings:off\"\n    )\n\ntask recipes, \"Generate and run all recipes\":\n  when not defined(windows):\n    # depend on existing `.nim` files in repo on windows then..\n    exec \"ntangle recipes.org\"\n  exec \"nim c -r recipes/allRecipes.nim\"\n\ntask recipesJson, \"Generate and run all recipes with JSON output\":\n  when not defined(windows):\n    exec \"ntangle recipes.org\"\n  exec \"nim c -r recipes/recipeFiles.nim\" # to generate the `_json.nim` files\n  exec \"nim c -r recipes/allRecipesJson.nim\"\n\ntask generateJson, \"Generate the JSON results for all recipes\":\n  exec \"nim c -r recipes/runRecipes.nim --json\"\n\ntask recipesPlots, \"Generate the PNGs from all recipes\":\n  exec \"\"\"for f in media/recipes/r*.pdf; do inkscape $f --export-png=\"${f/.pdf/.png}\"; done\"\"\"\n",
"https://raw.githubusercontent.com/IDF31/geminim/master/geminim.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"IDF\"\ndescription   = \"A simple gemini server written in nim\"\nlicense       = \"BSD2\"\nsrcDir        = \"src\"\nbin           = @[\"geminim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/achesak/nim-fileinput": "[Package]\nname = \"fileinput\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"iterates through files and lines of files, based on Python's fileinput module\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/juancarlospaco/nim-euclidean": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Euclidean Division & Euclidean Modulo\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://github.com/SciNim/rnim": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Vindaar\"\ndescription   = \"A library to interface between Nim and R\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.3.7\"\n",
"https://github.com/Araq/gh_nimrod_doc_pages": "[Package]\nname         = \"gh_nimrod_doc_pages\"\nversion      = \"0.2.5\"\nauthor       = \"Grzegorz Adam Hankiewicz\"\ndescription  = \"Generates a GitHub documentation website for Nim projects.\"\nlicense      = \"MIT\"\nbin          = \"gh_nimrod_doc_pages\"\n\nInstallFiles = \"\"\"\n\ngh_nimrod_doc_pages.nimble\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nargument_parser >= 0.2.0\nhttps://github.com/gradha/badger_bits.git >= 0.2.4\nlazy_rest >= 0.2.2\nmidnight_dynamite >= 1.0.0\n\n\"\"\"\n",
"https://raw.githubusercontent.com/inv2004/coinbase-pro-nim/master/coinbase_pro.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"inv2004\"\ndescription   = \"Coinbase pro client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"ws\"\nrequires \"decimal\"\nrequires \"uuids\"\n",
"https://raw.githubusercontent.com/zielmicha/collections.nim/master/collections.nimble": "version       = \"0.5.2\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"Various collections and utilities\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"doc\", \"tests\"]\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/dariolah/libssh-nim": "# Package\n\nversion       = \"0.90.0\"\nauthor        = \"Dario Lah\"\ndescription   = \"libssh FFI bindings\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Linux):\n    foreignDep \"libssh.so\"\n\n  elif detectOs(Windows):\n    foreignDep \"ssh.dll\"\n  else:\n    foreignDep \"libssh.dylib\"\n",
"https://raw.githubusercontent.com/PMunch/zhangshasha/master/zhsh.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"This module is a port of the Java implementation of the Zhang-Shasha algorithm for tree edit distance\"\nlicense       = \"MIT\"\nskipFiles = @[\"example.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/jiro4989/nmi/master/nmi.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"nmi display animations aimed to correct users who accidentally enter nmi instead of nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nmi\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/makingspace/syphus": "# Package\n\nversion       = \"0.4\"\nauthor        = \"Zach Smith\"\ndescription   = \"An implementation of the tabu search heuristic in Nim.\"\nlicense       = \"BSD-3\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.1\"\nskipDirs = @[\"tests\"]\nsrcDir = \"syphus-nim\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/sam.nim/master/sam.nimble": "# Package\n\nversion       = \"0.1.16\"\nauthor        = \"Huy Doan\"\ndescription   = \"Fast and just works JSON-Binding for Nim\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 0.20, jsmn >= 0.2\"\n",
"https://raw.githubusercontent.com/nim-lang/zip/master/zip.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Anonymous\"\ndescription   = \"Wrapper for the zip library\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\n\ntask tests, \"Run lib tests\":\n  withDir \"tests\":\n    exec \"nim c -r ziptests\"\n    exec \"nim c -r zlibtests\"\n    exec \"nim c -r gziptests\"\n\nwhen defined(nimdistros) and not defined(useLibzipSrc):\n  import distros\n  if detectOs(MacOSX):\n    foreignDep \"libzip\"\n  else:\n    foreignDep \"libzip\"\n",
"https://raw.githubusercontent.com/OHermesJunior/nimRC4/master/RC4.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"OHermesJunior\"\ndescription   = \"RC4 library implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipDirs = @[\"tests\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/hyu1996/qeu": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"hyu\"\ndescription   = \"compare two number\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/xmonader/nim-magic/master/magic.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"libmagic for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/arnetheduck/nim-sqlite3-abi": "packageName   = \"sqlite3_abi\"\nversion       = \"3.34.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for SQLite\"\nlicense       = \"Apache License 2.0 or MIT\"\ninstallFiles  = @[\"sqlite3_abi.nim\", \"sqlite3_gen.nim\", \"sqlite3.c\", \"sqlite3.h\"]\n\n### Dependencies\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/matthewjcavalier/illwill_unsafe": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"John Novak <john@johnnovak.net>, Matt Cavalier<matt@cavalier.dev>\"\ndescription   = \"A fork of John Novak (john@johnnovak.net)'s illwill package that is less safe numbers wise\"\nlicense       = \"WTFPL\"\n\nskipDirs = @[\"doc\", \"examples\", \"img\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\ntask examples, \"Compiles the examples\":\n  exec \"nim c -d:release examples/boxdrawing.nim\"\n  exec \"nim c -d:release examples/drawtest.nim\"\n  exec \"nim c -d:release examples/fullscreen.nim\"\n  exec \"nim c -d:release examples/keycodes.nim\"\n  exec \"nim c -d:release examples/readmeexample.nim\"\n  exec \"nim c -d:release examples/simplekeycodes.nim\"\n\ntask examplesDebug, \"Compiles the examples (debug mode)\":\n  exec \"nim c examples/boxdrawing.nim\"\n  exec \"nim c examples/drawtest.nim\"\n  exec \"nim c examples/fullscreen.nim\"\n  exec \"nim c examples/keycodes.nim\"\n  exec \"nim c examples/readmeexample.nim\"\n  exec \"nim c examples/simplekeycodes.nim\"\n\ntask docgen, \"Generate HTML documentation\":\n  exec \"nim doc -o:doc/illwill.html illwill\"\n\n",
"https://raw.githubusercontent.com/boydgreenfield/nimrod-murmur/master/murmur3.nimble": "[Package]\nname          = \"murmur3\"\nversion       = \"0.2.0\"\nauthor        = \"Nick Boyd Greenfield\"\ndescription   = \"Simple Murmurhash3 wrapper (for strings only at the moment). MurmurHash code is by Austin Appleby and in the public domain.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.16.0\"\n",
"https://github.com/lamartire/anycase": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lamartire\"\ndescription   = \"Convert strings to any case\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/rockcavera/pcgbasic": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"rockcavera\"\ndescription   = \"Permuted Congruential Generator (PCG) Random Number Generation (RNG) for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/c0ntribut0r/cat-400/master/c4.nimble": "import strutils\nimport strformat\nimport os\n\n# Package info\nversion = \"0.2.0\"\nauthor = \"c0ntribut0r\"\ndescription = \"Game framework\"\nlicense = \"MPL-2.0\"\n\n# srcDir = \"c4\"\n# installDirs = @[\"c4\"]\n# installExt = @[\"nim\", \"nims\", \"nimble\", \"txt\"]\nskipDirs = @[\"docs\"]\n\n# Dependencies\nrequires \"nim >= 1.0\"\nrequires \"msgpack4nim >= 0.3.0\"\n# requires \"cligen >= 0.9.41\"\n# requires \"fsm >= 0.1.0\"\n# requires \"sdl2_nim >= 2.0.9.2\"\n# when defined(linux):\n#   requires \"x11 >= 1.1\"\n\n\nproc dirGenDocs(src, dst: string) =\n  mkDir dst\n\n  for file in src.listFiles:\n    let (dir, name, ext) = file.splitFile()\n\n    if ext == \".nim\" and not name.startsWith(\"_\"):\n      echo &\"Processing {file}\"\n      let\n        destDir = dst / dir.tailDir\n        destFile = destDir / name.addFileExt(\"html\")\n\n      mkDir destDir\n      discard staticExec(&\"nim doc0 -o={destFile} {file}\")\n\n  for dir in src.listDirs:\n    let (head, tail) = dir.splitPath()\n    if not tail.startsWith(\"_\") and tail != nimcacheDir():\n      dirGenDocs(dir, dst)\n\ntask genDocs, \"Generate doc files\":\n  const docsDir = \"docs\" / \"ref\"\n  docsDir.rmDir()\n  dirGenDocs(\"c4\", docsDir)\n  echo &\"Generated documetation at {docsDir}\"\n",
"https://github.com/Knaque/rabbit": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Reilly Moore\"\ndescription   = \"The Hundred Rabbits theme ecosystem brought to Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"chroma >= 0.1.3\"",
"https://github.com/niv/jser.nim": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"niv\"\ndescription   = \"json de/serializer for native data types\"\nlicense       = \"MIT\"\n\nskipDirs      = @[ \"tests/\" ]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\n",
"https://raw.githubusercontent.com/juancarlospaco/parselicense/master/parselicense.nimble": "version     = \"0.1.0\"\nauthor      = \"Juan Carlos\"\ndescription = \"Parse Standard SPDX Licenses from string to Enum\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nskipDirs    = @[\"tools\", \"docs\", \"javascript\", \"examples\"]\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/walkre-niboshi/nim-ncurses/master/ncurses.nimble": "# Package\nversion       = \"1.0.2\"\nauthor        = \"Raymond Nowley\"\ndescription   = \"A wrapper for NCurses\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.19.0\"\n",
"https://api.github.com/repos/MarcAzar/BipBuffer/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"2906034834d351bca16092c4a3dfa74bdd3c6377\",\"size\":18,\"url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/MarcAzar/BipBuffer/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/2906034834d351bca16092c4a3dfa74bdd3c6377\",\"download_url\":\"https://raw.githubusercontent.com/MarcAzar/BipBuffer/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/2906034834d351bca16092c4a3dfa74bdd3c6377\",\"html\":\"https://github.com/MarcAzar/BipBuffer/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"0b1bd8f347fff583de1133d57868c7f0fb49e51e\",\"size\":1065,\"url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/MarcAzar/BipBuffer/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/0b1bd8f347fff583de1133d57868c7f0fb49e51e\",\"download_url\":\"https://raw.githubusercontent.com/MarcAzar/BipBuffer/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/0b1bd8f347fff583de1133d57868c7f0fb49e51e\",\"html\":\"https://github.com/MarcAzar/BipBuffer/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"1e54cee0ee428e5e744e2fcb44579acdffd859f0\",\"size\":1955,\"url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/README.md?ref=master\",\"html_url\":\"https://github.com/MarcAzar/BipBuffer/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/1e54cee0ee428e5e744e2fcb44579acdffd859f0\",\"download_url\":\"https://raw.githubusercontent.com/MarcAzar/BipBuffer/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/1e54cee0ee428e5e744e2fcb44579acdffd859f0\",\"html\":\"https://github.com/MarcAzar/BipBuffer/blob/master/README.md\"}},{\"name\":\"_config.yml\",\"path\":\"_config.yml\",\"sha\":\"277f1f2c510d1d7ef67d0278b7b2ca730f64c1e3\",\"size\":27,\"url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/_config.yml?ref=master\",\"html_url\":\"https://github.com/MarcAzar/BipBuffer/blob/master/_config.yml\",\"git_url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/277f1f2c510d1d7ef67d0278b7b2ca730f64c1e3\",\"download_url\":\"https://raw.githubusercontent.com/MarcAzar/BipBuffer/master/_config.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/_config.yml?ref=master\",\"git\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/277f1f2c510d1d7ef67d0278b7b2ca730f64c1e3\",\"html\":\"https://github.com/MarcAzar/BipBuffer/blob/master/_config.yml\"}},{\"name\":\"bipbuffer.nimble\",\"path\":\"bipbuffer.nimble\",\"sha\":\"152d6746cd2bac55c6f4cfa16dcc4c347b67bda5\",\"size\":207,\"url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/bipbuffer.nimble?ref=master\",\"html_url\":\"https://github.com/MarcAzar/BipBuffer/blob/master/bipbuffer.nimble\",\"git_url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/152d6746cd2bac55c6f4cfa16dcc4c347b67bda5\",\"download_url\":\"https://raw.githubusercontent.com/MarcAzar/BipBuffer/master/bipbuffer.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/bipbuffer.nimble?ref=master\",\"git\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/blobs/152d6746cd2bac55c6f4cfa16dcc4c347b67bda5\",\"html\":\"https://github.com/MarcAzar/BipBuffer/blob/master/bipbuffer.nimble\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"27b2966a65ae45d4f15b39141efd2af5e00b692f\",\"size\":0,\"url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/docs?ref=master\",\"html_url\":\"https://github.com/MarcAzar/BipBuffer/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/trees/27b2966a65ae45d4f15b39141efd2af5e00b692f\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/trees/27b2966a65ae45d4f15b39141efd2af5e00b692f\",\"html\":\"https://github.com/MarcAzar/BipBuffer/tree/master/docs\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"5c32488043e545ba9ba423f3a946a8035ddbc5cd\",\"size\":0,\"url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/src?ref=master\",\"html_url\":\"https://github.com/MarcAzar/BipBuffer/tree/master/src\",\"git_url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/trees/5c32488043e545ba9ba423f3a946a8035ddbc5cd\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/trees/5c32488043e545ba9ba423f3a946a8035ddbc5cd\",\"html\":\"https://github.com/MarcAzar/BipBuffer/tree/master/src\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"8923b86cc39bacff1c9d1180c54f4431b2fff822\",\"size\":0,\"url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/tests?ref=master\",\"html_url\":\"https://github.com/MarcAzar/BipBuffer/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/trees/8923b86cc39bacff1c9d1180c54f4431b2fff822\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/MarcAzar/BipBuffer/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/MarcAzar/BipBuffer/git/trees/8923b86cc39bacff1c9d1180c54f4431b2fff822\",\"html\":\"https://github.com/MarcAzar/BipBuffer/tree/master/tests\"}}]",
"https://github.com/andreaferretti/rosencrantz": "mode = ScriptMode.Verbose\n\npackageName   = \"rosencrantz\"\nversion       = \"0.4.3\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Web server DSL\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\", \"htmldocs\"]\nskipFiles     = @[\"test.sh\"]\n\nrequires \"nim >= 0.19.0\"\n\n--forceBuild\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n\n\ntask server, \"compile server\":\n  configForTests()\n  switch(\"out\", \"tests/rosencrantz\")\n  setCommand \"c\", \"tests/server.nim\"\n\ntask client, \"run client\":\n  configForTests()\n  --run\n  setCommand \"c\", \"tests/client.nim\"\n\ntask gendoc, \"generate documentation\":\n  --docSeeSrcUrl: https://github.com/andreaferretti/rosencrantz/blob/master\n  --project\n  setCommand \"doc\", \"rosencrantz\"\n\ntask todo, \"run todo example\":\n  --path: \".\"\n  --run\n  setCommand \"c\", \"tests/todo.nim\"\n\ntask tests, \"run tests\":\n  exec \"./test.sh\"\n\ntask test, \"run tests\":\n  setCommand \"tests\"",
"https://raw.githubusercontent.com/ba0f3/timecop.nim/master/timecop.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"Time travelling for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"subhook >= 0.1.1\"\n",
"https://raw.githubusercontent.com/mkanenobu/nim-gimei/master/gimei.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Mitsuru Kanenobu\"\ndescription   = \"random Japanese name and address generator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"test\", \"data\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n\n# Tasks\ntask update_asset, \"update asset file\":\n  ## for develop\n  requires \"yaml >= 0.12.0\"\n  try:\n    exec \"nim c -r tasks/update_asset.nim\"\n  finally:\n    rmFile \"update_asset\"\n\ntask document, \"update document\":\n  rmDir \"htmldoc\"\n  mkDir \"htmldoc\"\n\n  try:\n    exec \"\"\"\n    for file in `find src | grep nim`; do\n      nim doc --outdir:htmldocs $file\n    done\n    \"\"\"\n  except:\n    rmDir \"htmldoc\"\n\ntask check_style, \"check coding style\":\n  let suppressUnusedHints = \"--hint[CC]:off --hint[Processing]:off --hint[Conf]:off\"\n  proc checkStyle(fileName: string) =\n    try:\n      exec(\"nim c --compileOnly:on \" & suppressUnusedHints & \" --styleCheck:error \" & fileName)\n    except:\n      # Supress error message\n      discard\n  checkStyle(\"src/gimei.nim\")\n",
"https://github.com/disruptek/meow": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance\"\ndescription   = \"meowhash wrapper for Nim\"\nlicense       = \"MIT\"\n\nbin = @[\"meow\"]\ninstallFiles = @[\"meow.nim\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.6.8\"\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\":\n    buildDocs(@[\"meow.nim\"], \"build/htmldocs\")\nelse:\n  task docs, \"Do nothing\": discard\n",
"https://raw.githubusercontent.com/kidandcat/jsutils/master/jsutils.nimble": "# Package\n\nversion       = \"0.2.7\"\nauthor        = \"Jairo\"\ndescription   = \"Utils to work with javascript\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/PMunch/ansitohtml": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"PMunch\"\ndescription   = \"A library that converts a string with ANSI CSI SGR codes (colours and such) into a string with HTML tags\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"ansiparse\"\n",
"https://raw.githubusercontent.com/tulayang/asyncevents/master/asyncevents.nimble": "[Package]\nname          = \"asyncevents\"\nversion       = \"0.3.0\"\nauthor        = \"Wang Tong\"\ndescription   = \"Asynchronous event loop for progaming with MVC\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.12.0\"\n",
"https://github.com/baabelfish/mangle": "# Package\nname          = \"mangle\"\nversion       = \"0.1.0\"\nauthor        = \"baabelfish\"\ndescription   = \"Yet another iterator library\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.13.0\"\n",
"https://raw.githubusercontent.com/xflywind/xlsx/master/xlsx.nimble": "# Package\n\nversion       = \"0.4.4\"\nauthor        = \"flywind\"\ndescription   = \"Read and parse Excel files\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"zip >= 0.2.1\"\n\n# tests\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/alltests.nim\"\n\ntask test_arc, \"Run all tests with arc\":\n  exec \"nim c -r --gc:arc tests/alltests.nim\"\n\n# docs\ntask docs, \"Generate docs\":\n\n  exec \"nim doc2 \" & \n    \"--git.commit:master \" &\n    \"--index:on \" &\n    \"--git.devel:master \" &\n    \"--git.url:https://github.com/xflywind/xlsx \" &\n    \"-o:docs/utils.html \" &\n    \"src/xlsx/utils.nim\"\n",
"https://raw.githubusercontent.com/numforge/laser/master/laser.nimble": "# Laser\n# Copyright (c) 2018 Mamy André-Ratsimbazafy\n# Distributed under the Apache v2 License (license terms are at http://www.apache.org/licenses/LICENSE-2.0).\n# This file may not be copied, modified, or distributed except according to those terms.\n\npackageName   = \"Laser\"\nversion       = \"0.0.1\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"High Performance Computing and Image Toolbox: SIMD, JIT Assembler, OpenMP, runtime CPU feature detection, optimised machine learning primitives\"\nlicense       = \"Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 0.19.2\"\n\n### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://github.com/treeform/urlly": "version     = \"0.2.0\"\nauthor      = \"Andre von Houck\"\ndescription = \"URI and URL parsing for Nim for C/JS backends. Similar api to browsers's `window.location`.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://raw.githubusercontent.com/genotrance/nimmonocypher/master/nimmonocypher.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"monocypher wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimmonocypher\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/SolitudeSF/mpdclient/master/mpdclient.nimble": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"SolitudeSF\"\ndescription   = \"MPD client library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/M4RC3L05/redux-nim/master/redux_nim.nimble": "# Package\n\nversion       = \"1.0.3\"\nauthor        = \"M4RC3L0\"\ndescription   = \"Redux Implementation in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://raw.githubusercontent.com/mashingan/anonimongo/master/anonimongo.nimble": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"Rahmatullah\"\ndescription   = \"Anonimongo - Another pure Nim Mongo driver\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n#installDirs   = @[\"cinclude\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"nimSHA2 >= 0.1.1\", \"scram >= 0.1.9\",\n         \"sha1 >= 1.1\", \"dnsclient\", \"supersnappy\", \"zippy\"\n\ntask bson, \"Unit test Bson\":\n  exec \"nim c -r ./tests/test_bson_test.nim\"\n",
"https://github.com/FedericoCeratto/nim-libgcrypt": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Libgcrypt wrapper\"\nlicense       = \"LGPL-2.1\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.6\"\n",
"https://raw.githubusercontent.com/nimious/isense/master/isense.nimble": "[Package]\nname: \"io-isense\"\nversion: \"0.1\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for the InterSense SDK\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://raw.githubusercontent.com/ba0f3/fastcgi.nim/master/fastcgi.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"FastCGI library for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.9\"\n",
"https://github.com/Xe/argument_parser/": "[Package]\nname          = \"argument_parser\"\nversion       = \"0.4.3\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Provides a complex commandline parser.\"\"\"\nlicense       = \"MIT\"\n\ninstallDirs = \"\"\"\n\ndocs\nexamples\n\n\"\"\"\n\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\nargument_parser.nim\nnakefile.nim\nnakefile.nimrod.cfg\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nhttps://github.com/Xe/badger_bits.git >= 0.2.2\nnake >= 1.4\nnim >= 0.10.2\n\n\"\"\"\n",
"https://github.com/zielmicha/libsodium.nim": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"libsodium wrapper\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/treeform/pg": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Andre von Houck\"\ndescription   = \"Very simple PostgreSQL async api for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.1\"\n",
"https://raw.githubusercontent.com/rockcavera/winversion/master/winversion.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"rockcavera\"\ndescription   = \"This package allows you to determine the running version of the Windows operating system.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/genotrance/nimmonocypher": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"monocypher wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimmonocypher\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/codehz/nim-vtable/master/vtable.nimble": "# Package\n\nversion       = \"0.3.3\"\nauthor        = \"CodeHz\"\ndescription   = \"Vtable for nim\"\nlicense       = \"LGPL-3.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n",
"https://raw.githubusercontent.com/m13253/nim-kissfft/master/kissfft.nimble": "[Package]\nname          = \"kissfft\"\nversion       = \"0.0.1\"\nauthor        = \"StarBrilliant\"\ndescription   = \"Nim binding for KissFFT Fast Fourier Transform library\"\nlicense       = \"BSD\"\n",
"https://github.com/vitreo12/omnimax": "# MIT License\n# \n# Copyright (c) 2020 Francesco Cameli\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nversion       = \"0.2.3\"\nauthor        = \"Francesco Cameli\"\ndescription   = \"Max wrapper for omni.\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 1.0.0\"\nrequires \"cligen >= 1.0.0\"\nrequires \"omni >= 0.2.3\"\n\n#Ignore omnimax_lang\nskipDirs = @[\"omnimax_lang\"]\n\n#Install omnimaxpkg\nwhen defined(Windows):\n    installDirs = @[\"omnimaxpkg\"]\n\n#nimble bug: can't install JitterAPI.framework and all its symbolic links\n#gotta install just the folder containing all the files (JitterAPI.framework/Versions/A), and rebuild the links in the \"after\" hook\nelse:\n    installDirs  = @[\n        \"omnimaxpkg/JIT\", \n        \"omnimaxpkg/Static\", \n        \"omnimaxpkg/deps/max-api/include\", \n        \"omnimaxpkg/deps/max-api/script\", \n        \"omnimaxpkg/deps/max-api/site\", \n        \"omnimaxpkg/deps/max-api/lib/mac/JitterAPI.framework/Versions/A\", \n    ] \n\n#Compiler executable\nbin = @[\"omnimax\"]\n\n#If using \"nimble install\" instead of \"nimble installOmniMax\", make sure omnimax_lang is still getting installed\nbefore install:\n    #getPkgDir() here points to the current omnimax source folder\n    let package_dir = getPkgDir()\n    \n    withDir(package_dir):\n        exec \"git submodule update --init --recursive\"\n\n    withDir(getPkgDir() & \"/omnimax_lang\"):\n        exec \"nimble install\"\n\n#before/after are BOTH needed for any of the two to work\nafter install:\n    #Nothing to do on Windows\n    when defined(Windows):\n        discard\n    \n    #On MacOS, reconstruct the JitterAPI.framework symbolic links\n    else:\n        #getPkgDir() here points to the one installed in .nimble/pkgs\n        let jitter_api_framework_path = getPkgDir() & \"/omnimaxpkg/deps/max-api/lib/mac/JitterAPI.framework\"\n        exec \"ln -s \" & $jitter_api_framework_path & \"/Versions/A \" & $jitter_api_framework_path & \"/Versions/Current\"\n        exec \"ln -s \" & $jitter_api_framework_path & \"/Versions/Current/Resources \" & $jitter_api_framework_path & \"/Resources\"\n        exec \"ln -s \" & $jitter_api_framework_path & \"/Versions/Current/JitterAPI \" & $jitter_api_framework_path & \"/JitterAPI\"\n\n#As nimble install, but with -d:release, -d:danger and --opt:speed. Also installs omnimax_lang.\ntask installOmniMax, \"Install the omnimax_lang package and the omnimax compiler\":\n    #Build and install the omnimax compiler executable. This will also trigger the \"before install\" to install omnimax_lang\n    exec \"nimble install --passNim:-d:release --passNim:-d:danger --passNim:--opt:speed\"",
"https://raw.githubusercontent.com/matkuki/python3/master/python3.nimble": "[Package]\nname: \"python3\"\nversion: \"1.4\"\nauthor: \"Matic Kukovec\"\ndescription: \"Wrapper to interface with Python 3 interpreter (static / dynamic)\"\nlicense: \"MIT\"\nsrcDir = \"src\"\n\n[Deps]\nrequires: \"nim >= 1.0.0\"\n\n",
"https://raw.githubusercontent.com/zielmicha/reactorfuse/master/reactorfuse.nimble": "[Package]\nname          = \"reactorfuse\"\nversion       = \"0.0.1\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"Filesystem in userspace (FUSE) support for reactor.nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15.0\"\nRequires: \"reactor >= 0.3.2\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-easings/master/easings.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Robert Penner Easing Functions for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/baabelfish/mangle/master/mangle.nimble": "# Package\nname          = \"mangle\"\nversion       = \"0.1.0\"\nauthor        = \"baabelfish\"\ndescription   = \"Yet another iterator library\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.13.0\"\n",
"https://raw.githubusercontent.com/luked99/libevdev.nim/master/libevdev.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Luke Diamand\"\ndescription   = \"Wrapper for <linux/fb.h> framebuffer ioctls\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\"\n\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/tester\"\n",
"https://raw.githubusercontent.com/makingspace/cittadino/master/cittadino.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Zach Smith\"\ndescription   = \"A simple PubSub framework using STOMP.\"\nlicense       = \"BSD2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"https://github.com/subsetpark/nim-stomp.git >= 0.1.3\"\n",
"https://github.com/LemonHX/PPM-Nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lemonhx\"\ndescription   = \"lib for ppm image\"\nlicense       = \"LXXSDT-MIT\"\nsrcDir        = \"src\"\nbackend       = \"cpp\"",
"https://github.com/onecodex/nim-bitarray": "[Package]\nname          = \"bitarray\"\nversion       = \"0.6.0\"\nauthor        = \"Nick Boyd Greenfield\"\ndescription   = \"Efficient in-memory or mmap-backed bitarray implementation in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"bitarray\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"",
"https://raw.githubusercontent.com/achesak/nim-ffbookmarks/master/ffbookmarks.nimble": "[Package]\nname = \"ffbookmarks\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for working with Firefox bookmarks\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/rosado/edn.nim": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Roland Sadowski\"\ndescription   = \"EDN and Clojure parser\"\nlicense       = \"EPL-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/yglukhov/variant/master/variant.nimble": "# Package\n\nversion       = \"0.2.11\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Variant type and type matching\"\nlicense       = \"MIT\"\n\ntask test, \"Run tests\":\n    exec \"nim c -r variant\"\n    exec \"nim c -r -d:variantDebugTypes variant\"\n    exec \"nim c -r --gc:arc variant\"\n    exec \"nim c -r --gc:arc -d:variantDebugTypes variant\"\n    exec \"nim js -r variant\"\n    exec \"nim js -r -d:variantDebugTypes variant\"\n    # exec \"nim cpp -r variant\"\n    # exec \"nim cpp -r -d:variantDebugTypes variant\"\n",
"https://raw.githubusercontent.com/rspeer/wiki2text/master/wiki2text.nimble": "[Package]\nname          = \"wiki2text\"\nversion       = \"0.2.1\"\nauthor        = \"Rob Speer\"\ndescription   = \"Quickly extracts natural-language text from a MediaWiki XML file.\"\nlicense       = \"MIT\"\nbin           = \"wiki2text\"\nSkipExt       = \"nim\"\nSkipFiles     = \"Makefile\"\n\n[Deps]\nRequires: \"nim >= 0.11\"\n",
"https://raw.githubusercontent.com/Tangdongle/nimobserver/master/nimobserver.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Tangdongle\"\ndescription   = \"An implementation of the observer pattern\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Run the tests\":\n    exec(\"mkdir -p tests/bin\")\n    exec(\"nim c -r --threads:on --gc:boehm --out:tests/bin/nimobserver_tests tests/nimobserver_tests\")\n",
"https://raw.githubusercontent.com/bung87/buffer/master/buffer.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"bung87\"\ndescription   = \"buffer\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"struct\"",
"https://raw.githubusercontent.com/nim-appkit/values/master/values.nimble": "[Package]\nname          = \"values\"\nversion       = \"0.1.1\"\nauthor        = \"Christoph Herzog\"\ndescription   = \"Library for working with arbitrary values + a map data structure.\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/ba0f3/pfring.nim/master/pfring.nimble": "[Package]\nname          = \"pfring\"\nversion       = \"0.0.3\"\nauthor        = \"Huy Doan\"\ndescription   = \"PF_RING wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipFiles     = \"test.nim\"\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://github.com/Imperator26/binance": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Federico A. Corazza\"\ndescription   = \"A library to access the Binance API.\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\", \"nimSHA2 >= 0.1.1\"\n",
"https://github.com/rockcavera/winversion": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"rockcavera\"\ndescription   = \"This package allows you to determine the running version of the Windows operating system.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/Araq/ormin": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Araq\"\ndescription   = \"Prepared SQL statement generator. A lightweight ORM.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\nrequires \"websocket >= 0.2.2\"\n\nbin = @[\"tools/ormin_importer\"]\n\nskipDirs = @[\"examples\"]\ninstallExt = @[\"nim\"]\n\ntask test, \"Run all test suite\":\n  exec \"nim c -r tests/tfeature\"\n  exec \"nim c -r tests/tcommon\"\n  exec \"nim c -r tests/tsqlite\"\n  exec \"nim c -r -d:postgre tests/tfeature\"\n  exec \"nim c -r -d:postgre tests/tcommon\"\n  exec \"nim c -r tests/tpostgre\"\n\ntask buildexamples, \"Build examples: chat and forum\":\n  selfExec \"c examples/chat/server\"\n  selfExec \"js examples/chat/frontend\"\n  selfExec \"c examples/forum/forum\"\n  selfExec \"c examples/forum/forumproto\"\n  selfExec \"c examples/tweeter/src/tweeter\"",
"https://raw.githubusercontent.com/zielmicha/libsodium.nim/master/sodium.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"libsodium wrapper\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/pragmagic/names": "version     = \"0.1.0\"\nauthor      = \"Ruslan Mustakov\"\ndescription = \"String interning library\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n",
"https://api.github.com/repos/twist-vector/nim-geohash/contents": "[{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"6f373c1bbd5c461870ced8e86713fc49b2c6461a\",\"size\":4981,\"url\":\"https://api.github.com/repos/twist-vector/nim-geohash/contents/README.md?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-geohash/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-geohash/git/blobs/6f373c1bbd5c461870ced8e86713fc49b2c6461a\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nim-geohash/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-geohash/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-geohash/git/blobs/6f373c1bbd5c461870ced8e86713fc49b2c6461a\",\"html\":\"https://github.com/twist-vector/nim-geohash/blob/master/README.md\"}},{\"name\":\"geohash.nim\",\"path\":\"geohash.nim\",\"sha\":\"a56d298e38b0b0552aaf894adef31f3c1b74f758\",\"size\":7090,\"url\":\"https://api.github.com/repos/twist-vector/nim-geohash/contents/geohash.nim?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-geohash/blob/master/geohash.nim\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-geohash/git/blobs/a56d298e38b0b0552aaf894adef31f3c1b74f758\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nim-geohash/master/geohash.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-geohash/contents/geohash.nim?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-geohash/git/blobs/a56d298e38b0b0552aaf894adef31f3c1b74f758\",\"html\":\"https://github.com/twist-vector/nim-geohash/blob/master/geohash.nim\"}},{\"name\":\"private\",\"path\":\"private\",\"sha\":\"87d2d10f9e7401b1d9b560ff235c9bfc09031315\",\"size\":0,\"url\":\"https://api.github.com/repos/twist-vector/nim-geohash/contents/private?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-geohash/tree/master/private\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-geohash/git/trees/87d2d10f9e7401b1d9b560ff235c9bfc09031315\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-geohash/contents/private?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-geohash/git/trees/87d2d10f9e7401b1d9b560ff235c9bfc09031315\",\"html\":\"https://github.com/twist-vector/nim-geohash/tree/master/private\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"4d6cb424fe6a11973372109e5d996675702904e9\",\"size\":0,\"url\":\"https://api.github.com/repos/twist-vector/nim-geohash/contents/tests?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-geohash/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-geohash/git/trees/4d6cb424fe6a11973372109e5d996675702904e9\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-geohash/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-geohash/git/trees/4d6cb424fe6a11973372109e5d996675702904e9\",\"html\":\"https://github.com/twist-vector/nim-geohash/tree/master/tests\"}}]",
"https://raw.githubusercontent.com/ReneSac/memviews/master/memviews.nimble": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"ReneSac\"\ndescription   = \"Unsafe in-place slicing\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"c_alikes >= 0.2.0\"\n",
"https://raw.githubusercontent.com/Vladar4/nimgame2/master/nimgame2.nimble": "# Package\n\nversion       = \"0.6.1\"\nauthor        = \"Vladar\"\ndescription   = \"A simple 2D game engine for Nim language.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"sdl2_nim#head\"\n\n# Options\n\nskipDirs = @[\"demos\"]\n\n",
"https://api.github.com/repos/FedeOmoto/llvm/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"size\":10,\"url\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/FedeOmoto/llvm/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/FedeOmoto/llvm/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"download_url\":\"https://raw.githubusercontent.com/FedeOmoto/llvm/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/FedeOmoto/llvm/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"html\":\"https://github.com/FedeOmoto/llvm/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"6cab80e4246fd9b83a0d77908dfa3854087b927f\",\"size\":1082,\"url\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/FedeOmoto/llvm/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/FedeOmoto/llvm/git/blobs/6cab80e4246fd9b83a0d77908dfa3854087b927f\",\"download_url\":\"https://raw.githubusercontent.com/FedeOmoto/llvm/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/FedeOmoto/llvm/git/blobs/6cab80e4246fd9b83a0d77908dfa3854087b927f\",\"html\":\"https://github.com/FedeOmoto/llvm/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"e6216768ba0331d5de99a66576ba2fc47c245a0f\",\"size\":132,\"url\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/README.md?ref=master\",\"html_url\":\"https://github.com/FedeOmoto/llvm/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/FedeOmoto/llvm/git/blobs/e6216768ba0331d5de99a66576ba2fc47c245a0f\",\"download_url\":\"https://raw.githubusercontent.com/FedeOmoto/llvm/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/FedeOmoto/llvm/git/blobs/e6216768ba0331d5de99a66576ba2fc47c245a0f\",\"html\":\"https://github.com/FedeOmoto/llvm/blob/master/README.md\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"ec5afa83ab41e107ba3d32307e17fdd65e4ea987\",\"size\":0,\"url\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/examples?ref=master\",\"html_url\":\"https://github.com/FedeOmoto/llvm/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/FedeOmoto/llvm/git/trees/ec5afa83ab41e107ba3d32307e17fdd65e4ea987\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/FedeOmoto/llvm/git/trees/ec5afa83ab41e107ba3d32307e17fdd65e4ea987\",\"html\":\"https://github.com/FedeOmoto/llvm/tree/master/examples\"}},{\"name\":\"llvm.nimble\",\"path\":\"llvm.nimble\",\"sha\":\"4e21c760a09220cab1ef9c5d2901060138cc85f9\",\"size\":186,\"url\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/llvm.nimble?ref=master\",\"html_url\":\"https://github.com/FedeOmoto/llvm/blob/master/llvm.nimble\",\"git_url\":\"https://api.github.com/repos/FedeOmoto/llvm/git/blobs/4e21c760a09220cab1ef9c5d2901060138cc85f9\",\"download_url\":\"https://raw.githubusercontent.com/FedeOmoto/llvm/master/llvm.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/llvm.nimble?ref=master\",\"git\":\"https://api.github.com/repos/FedeOmoto/llvm/git/blobs/4e21c760a09220cab1ef9c5d2901060138cc85f9\",\"html\":\"https://github.com/FedeOmoto/llvm/blob/master/llvm.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"620095a6ae255d78970900a8f5e72fc9f9540345\",\"size\":0,\"url\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/src?ref=master\",\"html_url\":\"https://github.com/FedeOmoto/llvm/tree/master/src\",\"git_url\":\"https://api.github.com/repos/FedeOmoto/llvm/git/trees/620095a6ae255d78970900a8f5e72fc9f9540345\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/FedeOmoto/llvm/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/FedeOmoto/llvm/git/trees/620095a6ae255d78970900a8f5e72fc9f9540345\",\"html\":\"https://github.com/FedeOmoto/llvm/tree/master/src\"}}]",
"https://raw.githubusercontent.com/fox-cat/ms/master/ms.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"fox-cat\"\ndescription   = \"convert different time formats into milliseconds\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.2.4\"\n",
"https://github.com/iffy/nim-argparse": "# Package\n\nversion       = \"2.0.0\"\nauthor        = \"Matt Haggard\"\ndescription   = \"A command line argument parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.10\"\n",
"https://github.com/johnnovak/illwill": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"John Novak <john@johnnovak.net>\"\ndescription   = \"A curses inspired simple cross-platform console library for Nim\"\nlicense       = \"WTFPL\"\n\nskipDirs = @[\"doc\", \"examples\", \"img\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\ntask examples, \"Compiles the examples\":\n  exec \"nim c -d:release examples/boxdrawing.nim\"\n  exec \"nim c -d:release examples/drawtest.nim\"\n  exec \"nim c -d:release examples/fullscreen.nim\"\n  exec \"nim c -d:release examples/keycodes.nim\"\n  exec \"nim c -d:release examples/readmeexample.nim\"\n  exec \"nim c -d:release examples/simplekeycodes.nim\"\n  exec \"nim c -d:release examples/mouse.nim\"\n  exec \"nim c -d:release examples/mouseMinimal.nim\"\n\ntask examplesDebug, \"Compiles the examples (debug mode)\":\n  exec \"nim c examples/boxdrawing.nim\"\n  exec \"nim c examples/drawtest.nim\"\n  exec \"nim c examples/fullscreen.nim\"\n  exec \"nim c examples/keycodes.nim\"\n  exec \"nim c examples/readmeexample.nim\"\n  exec \"nim c examples/simplekeycodes.nim\"\n  exec \"nim c examples/mouse.nim\"\n  exec \"nim c examples/mouseMinimal.nim\"\n\ntask docgen, \"Generate HTML documentation\":\n  exec \"nim doc -o:doc/illwill.html illwill\"\n\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-circleci/master/circleci_client.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"CircleCI API client\"\nlicense       = \"LGPLv3\"\n\nbin           = @[\"circleci_client\"]\n\n# Dependencies\n\nrequires \"nim >= 0.14.2\"\n\n",
"https://raw.githubusercontent.com/fowlmouth/nimlibs/master//fowltek.nimble": "[Package]\nname = \"fowltek\"\nversion = \"0.9.3\"\nauthor = \"fowl\"\ndescription = \"Assorted wrappers and reusable libraries.\"\nlicense = \"MIT\"\n\n[Deps]\nRequires = \"nim >= 0.9.3\"\n",
"https://raw.githubusercontent.com/SolitudeSF/masterpassword/master/masterpassword.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Master Password algorithm implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"nimcrypto#a065c1741836462762d18d2fced1fedd46095b02\"\n",
"https://github.com/ithkuil/redissessions/": "[Package]\nname          = \"redissessions\"\nversion       = \"0.2.0\"\nauthor        = \"Jason Livesay\"\ndescription   = \"Redis sessions for jester\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.2, jester >= 0.1\"\n",
"https://github.com/haxscramper/nimtraits": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"haxscramper\"\ndescription   = \"Trait system for nim\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"hmisc\", \"hpprint\", \"hnimast\"\n",
"https://github.com/treeform/bitty/": "version     = \"0.1.1\"\nauthor      = \"Andre von Houck\"\ndescription = \"Utilities with dealing with 1d and 2d bit arrays.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://raw.githubusercontent.com/sealmove/testify/master/testify.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"File-based unit testing system\"\nlicense       = \"MIT\"\nbin           = @[\"testify\"]\n",
"https://raw.githubusercontent.com/vegansk/nimfp/master/nimfp.nimble": "# Package\nversion       = \"0.4.5\"\nauthor        = \"Anatoly Galiulin <galiulin.anatoly@gmail.com>\"\ndescription   = \"Nim functional programming library\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.19.0\", \"nimboost >= 0.5.5\", \"classy >= 0.0.3\"\n",
"https://github.com/status-im/nim-ethash": "packageName   = \"ethash\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A Nim implementation of Ethash, the Ethereum proof-of-work hashing function\"\nlicense       = \"Apache License 2.0\"\nsrcDir        = \"src\"\n\n### Dependencies\n\nrequires \"nim >= 0.18.0\", \"nimcrypto >= 0.1.0\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Run Proof-of-Work tests (without mining)\":\n  test \"all_tests\"\n\ntask testRelease, \"test release mode\":\n  switch(\"define\", \"release\")\n  testTask()\n\ntask test_mining, \"Run Proof-of-Work and mining tests (test in release mode + OpenMP + march=native)\":\n  switch(\"define\", \"release\")\n  switch(\"define\", \"openmp\")\n  switch(\"define\", \"march_native\")\n  switch(\"define\", \"ethash_mining\")\n  test \"all_tests\"\n",
"https://github.com/mjendrusch/nimna": "mode = ScriptMode.Verbose\n\npackageName    = \"nimna\"\nversion        = \"0.1.0\"\nauthor         = \"Michael Jendrusch\"\ndescription    = \"Nucleic acid folding in Nim\"\nlicense        = \"MIT\"\nskipDirs       = @[\"tests\", \"examples\", \"experimental\"]\nskipFiles      = @[\"nimna.html\", \"api.html\"]\n\nrequires \"nim >= 0.17.3\"\n\nproc testConfig() =\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\nproc exampleConfig() =\n  --define: release\n  --path: \".\"\n\nwhen defined(windows):\n  task deps, \"build dependencies\":\n    exec \"powershell.exe \\\"iwr -outf viennaInstaller.exe https://www.tbi.univie.ac.at/RNA/download/win/windows/Install-ViennaRNA-2.4.3_64bit.exe\\\"\"\n    exec \"viennaInstaller.exe\"\nelse:\n  task deps, \"build dependencies\":\n    exec \"mkdir -p deps/lib\"\n    exec \"wget -O ./deps/vrna.tar.gz https://www.tbi.univie.ac.at/RNA/download/sourcecode/2_4_x/ViennaRNA-2.4.3.tar.gz\"\n    exec \"cd ./deps && tar -xzf vrna.tar.gz\"\n    ## Disable link-time optimization, linking takes ages otherwise.\n    ## Disable C11 features.\n    exec \"cd ./deps/ViennaRNA-2.4.3 && ./configure --prefix=$(readlink -f \\\"../\\\") --disable-c11 --disable-lto && make && make install\"\n  task jsDeps, \"build dependencies for the JS backend\":\n    discard\n\nafter install:\n  ## Currently untested.\n  ## Clean the install dir, should it still contain dependencies\n  ## from a previous install.\n  exec \"cd $(nimble path nimna) && rm -rf deps\"\n  exec \"cd $(nimble path nimna) && mkdir -p deps/lib\"\n  exec \"cd $(nimble path nimna) && wget -O ./deps/vrna.tar.gz https://www.tbi.univie.ac.at/RNA/download/sourcecode/2_4_x/ViennaRNA-2.4.3.tar.gz\"\n  exec \"cd $(nimble path nimna) && cd ./deps && tar -xzf vrna.tar.gz\"\n  ## Disable link-time optimization, linking takes ages otherwise.\n  ## Disable C11 features.\n  exec \"cd $(nimble path nimna) && cd ./deps/ViennaRNA-2.4.3 && ./configure --prefix=$(readlink -f \\\"../\\\") --disable-c11 --disable-lto && make && make install\"\n  exec \"echo \\\"\\\" >> ~/.bashrc\"\n  exec \"echo \\\"# nimna dependencies:\\\" >> ~/.bashrc\"\n  exec \"echo \\\"export LIBRARY_PATH=$LIBRARY_PATH:$(nimble path nimna)/deps/lib/\\\" >> ~/.bashrc\"\n  exec \"echo \\\"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(nimble path nimna)/deps/lib/\\\" >> ~/.bashrc\"\n  exec \"echo \\\"alias nimnacleanup=\\\\\\\"cd $(nimble path nimna) && rm -rf deps && cd -\\\\\\\"\\\" >> ~/.bashrc\"\n\nafter deps:\n  when defined(windows):\n    discard\n  else:\n    exec \"echo \\\"\\\" >> ~/.bashrc\"\n    exec \"echo \\\"# nimna dependencies:\\\" >> ~/.bashrc\"\n    exec \"echo \\\"export LIBRARY_PATH=$LIBRARY_PATH:$(nimble path nimna)/deps/lib/\\\" >> ~/.bashrc\"\n    exec \"echo \\\"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(nimble path nimna)/deps/lib/\\\" >> ~/.bashrc\"\n    exec \"echo \\\"alias nimnacleanup=\\\\\\\"cd $(nimble path nimna) && rm -rf deps && cd -\\\\\\\"\\\" >> ~/.bashrc\"\n\ntask docs, \"build nimna docs\":\n  exec \"mkdir -p htmldocs\"\n  exec \"mkdir -p htmldocs/nimna\"\n  exec \"mkdir -p htmldocs/nimna/private\"\n  exec \"mkdir -p htmldocs/nimna/base\"\n  exec \"cd nimna && nim doc2 design.nim\"\n  --project\n  --path:\".\"\n  setCommand \"doc2\", \"nimna.nim\"\nafter docs:\n  exec \"mv nimna/design.html htmldocs/nimna/design.html\"\n\ntask test, \"run nimna tests\":\n  testConfig()\n  setCommand \"c\", \"tests/tall.nim\"\n\ntask examples, \"build nimna example applications\":\n  exampleConfig()\n  setCommand \"c\", \"examples/foldAndPlot.nim\"\n  setCommand \"c\", \"examples/randomSearch.nim\"\n",
"https://github.com/HugoGranstrom/symbolicnim": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"HugoGranstrom\"\ndescription   = \"A symbolic algebra library written in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\ntask test, \"Runs the test suite\":\n  const filenames = [\"tests/testSuite.nim\", \"tests/testSuiteCT.nim\"]\n  when defined(windows):\n    const binaryExt = \".exe\"\n  else:\n    const binaryExt = \"\"\n  echo \"####################\\nRunning tests using Refc GC:\\n####################\"\n  for name in filenames:\n    exec \"nim c -r --gc:refc -o:bin/testSuite\" & binaryExt &  \" \" & name\n  echo \"####################\\nRunning tests using GC:ARC:\\n####################\"\n  for name in filenames:\n    exec \"nim c -r --gc:arc -o:bin/testSuite\" & binaryExt &  \" \" & name\n  echo \"####################\\nRunning tests using GC:ORC:\\n####################\"\n  for name in filenames:\n    exec \"nim c -r --gc:orc -o:bin/testSuite\" & binaryExt &  \" \" & name\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"arraymancer >= 0.5\"\nrequires \"terminaltables\"\n",
"https://github.com/planetis-m/sparseset": "# Package\n\nversion       = \"0.6.0\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"Sparsets for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/andreaferretti/cello/master/cello.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"String algorithms with succinct data structures\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\", \"benchmarks\", \"img\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\", \"spills >= 0.1.3\"\n\ntask test, \"run cello tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"tests/test.nim\"\n\ntask tests, \"run cello tests\":\n  setCommand \"test\"\n\ntask benchmarkRRR, \"benchmark RRR bit array\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkRRR\"\n\ntask benchmarkWT, \"benchmark wavelet tree\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkWT\"\n\ntask benchmarkBW, \"benchmark Burrows-Wheeler transform\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkBW\"\n\ntask benchmarkFM, \"benchmark FM indices\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkFM\"\n\ntask benchmarkRO, \"benchmark Ratcliff-Obershelp similarity\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkRO\"\n\ntask spaceRRR, \"benchmark the space of RRR bit array\":\n  withDir \"benchmarks\":\n    exec \"nimble spaceRRR\"\n\ntask spaceWT, \"benchmark the space of wavelet tree\":\n  withDir \"benchmarks\":\n    exec \"nimble spaceWT\"",
"https://api.github.com/repos/olahol/nimrod-murmur/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"a20762eff14dc7a8a1a49c283c39f2c60e41d6fa\",\"size\":15,\"url\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/olahol/nimrod-murmur/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/a20762eff14dc7a8a1a49c283c39f2c60e41d6fa\",\"download_url\":\"https://raw.githubusercontent.com/olahol/nimrod-murmur/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/a20762eff14dc7a8a1a49c283c39f2c60e41d6fa\",\"html\":\"https://github.com/olahol/nimrod-murmur/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"7f5faad57a093f1a03abfb723cacfbf02defd5a0\",\"size\":1100,\"url\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/olahol/nimrod-murmur/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/7f5faad57a093f1a03abfb723cacfbf02defd5a0\",\"download_url\":\"https://raw.githubusercontent.com/olahol/nimrod-murmur/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/7f5faad57a093f1a03abfb723cacfbf02defd5a0\",\"html\":\"https://github.com/olahol/nimrod-murmur/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"a536a5b9925873dfee84b54669bf4cd33830db3a\",\"size\":433,\"url\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/README.md?ref=master\",\"html_url\":\"https://github.com/olahol/nimrod-murmur/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/a536a5b9925873dfee84b54669bf4cd33830db3a\",\"download_url\":\"https://raw.githubusercontent.com/olahol/nimrod-murmur/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/a536a5b9925873dfee84b54669bf4cd33830db3a\",\"html\":\"https://github.com/olahol/nimrod-murmur/blob/master/README.md\"}},{\"name\":\"murmur.babel\",\"path\":\"murmur.babel\",\"sha\":\"9a8d8e6f430902c9c9d3c443c12ef0612cf36f3e\",\"size\":205,\"url\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/murmur.babel?ref=master\",\"html_url\":\"https://github.com/olahol/nimrod-murmur/blob/master/murmur.babel\",\"git_url\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/9a8d8e6f430902c9c9d3c443c12ef0612cf36f3e\",\"download_url\":\"https://raw.githubusercontent.com/olahol/nimrod-murmur/master/murmur.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/murmur.babel?ref=master\",\"git\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/9a8d8e6f430902c9c9d3c443c12ef0612cf36f3e\",\"html\":\"https://github.com/olahol/nimrod-murmur/blob/master/murmur.babel\"}},{\"name\":\"murmur.nim\",\"path\":\"murmur.nim\",\"sha\":\"bf99a9de0d713c4badbc4db1f069e1107b1c9cd8\",\"size\":2244,\"url\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/murmur.nim?ref=master\",\"html_url\":\"https://github.com/olahol/nimrod-murmur/blob/master/murmur.nim\",\"git_url\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/bf99a9de0d713c4badbc4db1f069e1107b1c9cd8\",\"download_url\":\"https://raw.githubusercontent.com/olahol/nimrod-murmur/master/murmur.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/olahol/nimrod-murmur/contents/murmur.nim?ref=master\",\"git\":\"https://api.github.com/repos/olahol/nimrod-murmur/git/blobs/bf99a9de0d713c4badbc4db1f069e1107b1c9cd8\",\"html\":\"https://github.com/olahol/nimrod-murmur/blob/master/murmur.nim\"}}]",
"https://github.com/moigagoo/norm": "# Package\n\nversion       = \"2.2.2\"\nauthor        = \"Constantine Molchanov\"\ndescription   = \"Nim ORM for SQLite and PostgreSQL.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\", \"htmldocs\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"ndb >= 0.19.8\"\n\ntask test, \"Run tests\":\n  exec \"testament all\"\n\ntask docs, \"Generate docs\":\n  rmDir \"htmldocs\"\n  exec \"nimble doc --outdir:htmldocs --project --index:on src/norm\"\n  exec \"nim rst2html -o:htmldocs/index.html README.rst\"\n  exec \"testament html\"\n  mvFile(\"testresults.html\", \"htmldocs/testresults.html\")\n  cpFile(\"CNAME\", \"htmldocs/CNAME\")\n",
"https://raw.githubusercontent.com/elddy/SMB-Nim/master/SMBExec.nimble": "# Package\n\nversion     = \"1.0.0\"\nauthor      = \"elddy, kevrool\"\ndescription = \"Nim-SMBExec - SMBExec implementation in Nim\"\nlicense     = \"GPL-3.0\"\nskipDirs    = @[\"Examples\"]\n\n# Deps\nrequires \"nim >= 1.2.0\", \"hashlib\", \"hmac\", \"regex\"",
"https://github.com/jlp765/parsefixed": "[Package]\nname: \"parsefixed\"\nversion: \"0.1.2\"\nauthor: \"James Parkinson\"\ndescription: \"parser for text files with Fixed-Width fields\"\nlicense: \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nodestdlib/master/nodejs.nimble": "version     = \"15.0.0\"\nauthor      = \"Juan Carlos\"\ndescription = \"NodeJS Standard Library for Nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.5.0\"\n",
"https://github.com/AdrianV/nimcb": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Adrian Veith\"\ndescription   = \"Integrate nim projects in the C++Builder build process\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimcb\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/RaimundHuebel/nimhighlight": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Raimund Hübel\"\ndescription   = \"Tool/Lib to highlight text in CLI by using regular expressions.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"highlight\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/nim-appkit/omnilog/master/omnilog.nimble": "[Package]\nname          = \"omnilog\"\nversion       = \"0.1.0\"\nauthor        = \"Christoph Herzog\"\ndescription   = \"Advanced logging library for Nim with structured logging, formatters, filters and writers.\"\nlicense       = \"LGPL\"\n\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.12.0, values >= 0.1\"\n",
"https://github.com/achesak/nim-itn": "[Package]\nname = \"itn\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for parsing ITN (TomTom intinerary) files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"size\":10,\"url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"download_url\":\"https://raw.githubusercontent.com/FedericoCeratto/nim-libnotify/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"html\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"341c30bda4457610db4829294e5d7e526d4c835b\",\"size\":7652,\"url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/341c30bda4457610db4829294e5d7e526d4c835b\",\"download_url\":\"https://raw.githubusercontent.com/FedericoCeratto/nim-libnotify/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/341c30bda4457610db4829294e5d7e526d4c835b\",\"html\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/LICENSE\"}},{\"name\":\"README.adoc\",\"path\":\"README.adoc\",\"sha\":\"417a36e0f8bb83c4036f8ad394c876c5430693f4\",\"size\":914,\"url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/README.adoc?ref=master\",\"html_url\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/README.adoc\",\"git_url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/417a36e0f8bb83c4036f8ad394c876c5430693f4\",\"download_url\":\"https://raw.githubusercontent.com/FedericoCeratto/nim-libnotify/master/README.adoc\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/README.adoc?ref=master\",\"git\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/417a36e0f8bb83c4036f8ad394c876c5430693f4\",\"html\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/README.adoc\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"4ff0c3fa4932e25e7a883fa604c36b14ab80fb9e\",\"size\":0,\"url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/docs?ref=master\",\"html_url\":\"https://github.com/FedericoCeratto/nim-libnotify/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/trees/4ff0c3fa4932e25e7a883fa604c36b14ab80fb9e\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/trees/4ff0c3fa4932e25e7a883fa604c36b14ab80fb9e\",\"html\":\"https://github.com/FedericoCeratto/nim-libnotify/tree/master/docs\"}},{\"name\":\"libnotify.nim\",\"path\":\"libnotify.nim\",\"sha\":\"ab88bfb0bceddabbf8fa7e9405cd7253f1ac4f91\",\"size\":2711,\"url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/libnotify.nim?ref=master\",\"html_url\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/libnotify.nim\",\"git_url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/ab88bfb0bceddabbf8fa7e9405cd7253f1ac4f91\",\"download_url\":\"https://raw.githubusercontent.com/FedericoCeratto/nim-libnotify/master/libnotify.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/libnotify.nim?ref=master\",\"git\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/ab88bfb0bceddabbf8fa7e9405cd7253f1ac4f91\",\"html\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/libnotify.nim\"}},{\"name\":\"libnotify.nimble\",\"path\":\"libnotify.nimble\",\"sha\":\"d7485d7d00391e9c22b27357fb08115482c528d7\",\"size\":238,\"url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/libnotify.nimble?ref=master\",\"html_url\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/libnotify.nimble\",\"git_url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/d7485d7d00391e9c22b27357fb08115482c528d7\",\"download_url\":\"https://raw.githubusercontent.com/FedericoCeratto/nim-libnotify/master/libnotify.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/libnotify.nimble?ref=master\",\"git\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/d7485d7d00391e9c22b27357fb08115482c528d7\",\"html\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/libnotify.nimble\"}},{\"name\":\"test_libnotify.nim\",\"path\":\"test_libnotify.nim\",\"sha\":\"2dbba9a78c1f46c995a777a82c88885eca47cf2a\",\"size\":544,\"url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/test_libnotify.nim?ref=master\",\"html_url\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/test_libnotify.nim\",\"git_url\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/2dbba9a78c1f46c995a777a82c88885eca47cf2a\",\"download_url\":\"https://raw.githubusercontent.com/FedericoCeratto/nim-libnotify/master/test_libnotify.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/contents/test_libnotify.nim?ref=master\",\"git\":\"https://api.github.com/repos/FedericoCeratto/nim-libnotify/git/blobs/2dbba9a78c1f46c995a777a82c88885eca47cf2a\",\"html\":\"https://github.com/FedericoCeratto/nim-libnotify/blob/master/test_libnotify.nim\"}}]",
"https://github.com/Yardanico/nimpylib": "version       = \"0.3.0\"\nauthor        = \"Danil Yarantsev (Yardanico), Juan Carlos (juancarlospaco)\"\ndescription   = \"Nim library with python-like functions and operators\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim r --experimental:strictFuncs --gc:orc tests/tester\"\n  # Test all runnableExamples\n  exec \"nim doc --project --outdir:docs src/pylib.nim\"\n",
"https://raw.githubusercontent.com/lihf8515/miniblink/master/miniblink.nimble": "# Package\r\n\r\nversion       = \"0.1.0\"\r\nauthor        = \"Lihaifeng <lihaifeng@wxm.com>\"\r\ndescription   = \"A miniblink library for nim.\"\r\nlicense       = \"MIT\"\r\nskipDirs      = @[\"examples\"]\r\nsrcDir        = \"src\"\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 1.2.0\"\r\n",
"https://raw.githubusercontent.com/levovix0/siwin/master/siwin.nimble": "version       = \"0.3.0\"\nauthor        = \"levovix0\"\ndescription   = \"Nim Simple Window Maker\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.6\"\nrequires \"with\"\n\nwhen defined linux:\n  requires \"x11\"\nwhen defined windows:\n  requires \"winim\"\n",
"https://github.com/xzeshen/bio": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Bytes utils for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/momeemt/nimaterial": "version       = \"0.3.0\"\nauthor        = \"Momeemt\"\ndescription   = \"nimaterial is a CSS output library based on material design.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"Palette >= 0.1.0\"",
"https://raw.githubusercontent.com/WilliamDraco/NWNT/master/nwnt.nimble": "# Package\n\nversion          = \"1.3.2\"\nauthor           = \"WilliamDraco\"\ndescription      = \"GFF <-> NWNT Converter (NeverWinter Nights Text)\"\nlicense          = \"MIT\"\nsrcDir           = \"src\"\ninstallExt       = @[\"nim\"]\nnamedBin[\"nwnt\"] = \"nwn_nwnt\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"neverwinter >= 1.4.1\"\nrequires \"docopt >= 0.6.8\"\n",
"https://raw.githubusercontent.com/citycide/glob/master/glob.nimble": "version       = \"0.11.0\"\nauthor        = \"Bo Lingen\"\ndescription   = \"Pure library for matching file paths against Unix style glob patterns.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"docsrc\"]\nskipFiles     = @[\"tests.nim\"]\n\nrequires \"nim >= 1.0.0 & < 2.0.0\"\nrequires \"regex >= 0.19.0 & < 0.20.0\"\n\ntask test, \"Run the test suite\":\n  exec \"nimble c -y --hints:off --verbosity:0 -r tests.nim\"\n\ntask docs, \"Generate the documentation\":\n  rmDir(\"docs\")\n  exec \"nim doc --project -o:docs src/glob.nim\"\n  cpFile(\"docsrc/redirect.html\", \"docs/index.html\")\n\ntask prep_release, \"Prepare for release\":\n  if \"fugitive\".findExe == \"\":\n    echo \"Could not locate `fugitive` for updating the changelog.\"\n    echo \"Please run `nimble install fugitive` or ensure it is in your PATH.\"\n  elif \"git\".findExe == \"\":\n    echo \"Could not locate `git`. Please install it or ensure it is in your PATH.\"\n  else:\n    exec \"fugitive changelog changelog.md -t:v\" & version\n    exec \"git add changelog.md glob.nimble\"\n    exec \"git commit -m 'release: \" & version & \"'\"\n    exec \"git tag -a v\" & version & \" -m v\" & version\n",
"https://raw.githubusercontent.com/exelotl/nim-sunvox/master/sunvox.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"exelotl\"\ndescription   = \"Nim bindings for SunVox modular synthesizer\"\nlicense       = \"0BSD\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/achesak/nim-ffbookmarks": "[Package]\nname = \"ffbookmarks\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for working with Firefox bookmarks\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/numforge/loopfusion": "packageName   = \"loopfusion\"\nversion       = \"0.0.1\"\nauthor        = \"Mamy André-Ratsimbazafy (Numforge SARL)\"\ndescription   = \"Loop efficiently over a variadic number of containers\"\nlicense       = \"MIT or Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\n\nskipDirs = @[\"experimental\", \"build\", \"tests\"]\n\n# ### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache: \"nimcache\"\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://github.com/juancarlospaco/nim-calibre": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Calibre Database Lib for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/def-/iterutils/master/iterutils.nimble": "# Package\nversion = \"0.4\"\nauthor = \"Dennis Felsing\"\ndescription = \"Functional operations for iterators and slices, similar to sequtils\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.13.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/iterutils.nim\"\n  exec \"nim c -r tests/tests.nim\"\n\ntask testperf, \"TestPerf\":\n  exec \"nim c -d:release --stacktrace:off -d:case1 -r tests/performance.nim\"\n  exec \"nim c -d:release --stacktrace:off -d:case2 -r tests/performance.nim\"\n  exec \"nim c -d:release --stacktrace:off -d:case3 -r tests/performance.nim\"\n",
"https://github.com/emekoi/vecio.nim": "# Imports & Consts\n\nimport strutils\n\nconst indexFile = \"\"\"\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"refresh\" content=\"0; url=vecio.html\" />\n  </head>\n</html>\n\"\"\"\n\n# Package\n\nversion       = \"0.1.0\"\nauthor        = \"emekoi\"\ndescription   = \"vectored io for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\", \"docs\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask docs, \"generate documentation\":\n  try:\n    if not existsDir(\"docs\"):\n      mkDir(\"docs\")\n    writeFile(\"docs/index.html\", indexFile)\n    exec \"nim doc2 -o:docs/vecio.html src/vecio.nim\"\n  except:\n    discard\n",
"https://raw.githubusercontent.com/beshrkayali/webdavclient/master/webdavclient.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Beshr Kayali\"\ndescription   = \"WebDAV Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://api.github.com/repos/MrJohz/appdirs/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"869ff863f2043593d515d0a651e4691c47bf748e\",\"size\":50,\"url\":\"https://api.github.com/repos/MrJohz/appdirs/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/MrJohz/appdirs/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/869ff863f2043593d515d0a651e4691c47bf748e\",\"download_url\":\"https://raw.githubusercontent.com/MrJohz/appdirs/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MrJohz/appdirs/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/869ff863f2043593d515d0a651e4691c47bf748e\",\"html\":\"https://github.com/MrJohz/appdirs/blob/master/.gitignore\"}},{\"name\":\"LICENSE.txt\",\"path\":\"LICENSE.txt\",\"sha\":\"4f526c1f24512e3fb4f3265494f0fe1422838f6d\",\"size\":1047,\"url\":\"https://api.github.com/repos/MrJohz/appdirs/contents/LICENSE.txt?ref=master\",\"html_url\":\"https://github.com/MrJohz/appdirs/blob/master/LICENSE.txt\",\"git_url\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/4f526c1f24512e3fb4f3265494f0fe1422838f6d\",\"download_url\":\"https://raw.githubusercontent.com/MrJohz/appdirs/master/LICENSE.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MrJohz/appdirs/contents/LICENSE.txt?ref=master\",\"git\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/4f526c1f24512e3fb4f3265494f0fe1422838f6d\",\"html\":\"https://github.com/MrJohz/appdirs/blob/master/LICENSE.txt\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"973595eba37ce3e2ae9e26af11cdc1be1b9eaa3f\",\"size\":1417,\"url\":\"https://api.github.com/repos/MrJohz/appdirs/contents/README.md?ref=master\",\"html_url\":\"https://github.com/MrJohz/appdirs/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/973595eba37ce3e2ae9e26af11cdc1be1b9eaa3f\",\"download_url\":\"https://raw.githubusercontent.com/MrJohz/appdirs/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MrJohz/appdirs/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/973595eba37ce3e2ae9e26af11cdc1be1b9eaa3f\",\"html\":\"https://github.com/MrJohz/appdirs/blob/master/README.md\"}},{\"name\":\"appdirs.babel\",\"path\":\"appdirs.babel\",\"sha\":\"041912366c2fc0b9b6cbda3930ffab5dd7cc8a2d\",\"size\":189,\"url\":\"https://api.github.com/repos/MrJohz/appdirs/contents/appdirs.babel?ref=master\",\"html_url\":\"https://github.com/MrJohz/appdirs/blob/master/appdirs.babel\",\"git_url\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/041912366c2fc0b9b6cbda3930ffab5dd7cc8a2d\",\"download_url\":\"https://raw.githubusercontent.com/MrJohz/appdirs/master/appdirs.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MrJohz/appdirs/contents/appdirs.babel?ref=master\",\"git\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/041912366c2fc0b9b6cbda3930ffab5dd7cc8a2d\",\"html\":\"https://github.com/MrJohz/appdirs/blob/master/appdirs.babel\"}},{\"name\":\"appdirs.nim\",\"path\":\"appdirs.nim\",\"sha\":\"07ffc5d6c804248dc820c260a8ed75f91c34f4f1\",\"size\":10379,\"url\":\"https://api.github.com/repos/MrJohz/appdirs/contents/appdirs.nim?ref=master\",\"html_url\":\"https://github.com/MrJohz/appdirs/blob/master/appdirs.nim\",\"git_url\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/07ffc5d6c804248dc820c260a8ed75f91c34f4f1\",\"download_url\":\"https://raw.githubusercontent.com/MrJohz/appdirs/master/appdirs.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MrJohz/appdirs/contents/appdirs.nim?ref=master\",\"git\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/07ffc5d6c804248dc820c260a8ed75f91c34f4f1\",\"html\":\"https://github.com/MrJohz/appdirs/blob/master/appdirs.nim\"}},{\"name\":\"nakefile.nim\",\"path\":\"nakefile.nim\",\"sha\":\"418f7f90f671df709a1ff7396918c431e3094641\",\"size\":486,\"url\":\"https://api.github.com/repos/MrJohz/appdirs/contents/nakefile.nim?ref=master\",\"html_url\":\"https://github.com/MrJohz/appdirs/blob/master/nakefile.nim\",\"git_url\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/418f7f90f671df709a1ff7396918c431e3094641\",\"download_url\":\"https://raw.githubusercontent.com/MrJohz/appdirs/master/nakefile.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MrJohz/appdirs/contents/nakefile.nim?ref=master\",\"git\":\"https://api.github.com/repos/MrJohz/appdirs/git/blobs/418f7f90f671df709a1ff7396918c431e3094641\",\"html\":\"https://github.com/MrJohz/appdirs/blob/master/nakefile.nim\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"e61e8a9b8e44cba58fad7d7034e87e9002e7aed8\",\"size\":0,\"url\":\"https://api.github.com/repos/MrJohz/appdirs/contents/tests?ref=master\",\"html_url\":\"https://github.com/MrJohz/appdirs/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/MrJohz/appdirs/git/trees/e61e8a9b8e44cba58fad7d7034e87e9002e7aed8\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/MrJohz/appdirs/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/MrJohz/appdirs/git/trees/e61e8a9b8e44cba58fad7d7034e87e9002e7aed8\",\"html\":\"https://github.com/MrJohz/appdirs/tree/master/tests\"}}]",
"https://raw.githubusercontent.com/super-massive-black-holes/AstroNimy/master/AstroNimy.nimble": "[Package]\nname          = \"AstroNimy\"\nversion       = \"0.1.0\"\nauthor        = \"Supermassive Blackholes\"\ndescription   = \"astronomical library for Nim programming language\"\nlicense       = \"MIT\"\n",
"https://raw.githubusercontent.com/nnahito/nim_searched/master/nim_searches.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"nnahito\"\ndescription   = \"search algorithms\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://github.com/Vladar4/nimgame/": "[Package]\nname          = \"nimgame\"\nversion       = \"0.3.2\"\nauthor        = \"Vladar\"\ndescription   = \"\"\"Simple 2D game engine for Nim language.\"\"\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.12.2\"\n\n",
"https://github.com/jiro4989/pnm": "# Package\n\nversion       = \"2.1.1\"\nauthor        = \"jiro4989\"\ndescription   = \"pnm is library for PNM (Portable AnyMap).\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\nimport strformat\n\ntask examples, \"Run example code\":\n  for d in [\"write_pbm\", \"write_pgm\", \"write_ppm\", \"read_file\"]:\n    withDir &\"examples/{d}\":\n      exec \"nim c -d:release main.nim\"\n      exec \"./main\"\n      exec \"echo -----------------------------\"\n\ntask convert, \"PNM to PNG\":\n  exec \"convert examples/write_pbm/out.pbm -scale 200x200 docs/pbm_example.png\"\n  exec \"convert examples/write_pgm/out.pgm -scale 500x400 docs/pgm_example.png\"\n  exec \"convert examples/write_ppm/out1.ppm -scale 512x512 docs/ppm_example1.png\"\n  exec \"convert examples/write_ppm/out2.ppm -scale 512x512 docs/ppm_example2.png\"\n  exec \"convert examples/read_file/out1.ppm -scale 512x512 docs/ppm_example1.convert.png\"\n",
"https://raw.githubusercontent.com/disruptek/criterion/master/criterion.nimble": "version       = \"0.2.7\"\nauthor        = \"LemonBoy\"\ndescription   = \"Statistic-driven microbenchmark framework\"\nlicense       = \"MIT\"\n\nwhen not defined(release):\n  requires \"https://github.com/disruptek/balls >= 2.0.0 & < 3.0.0\"\n\ntask test, \"run unit tests\":\n  when defined(windows):\n    exec \"balls.cmd\"\n  else:\n    exec \"balls\"\n\ntask demo, \"generate svg\":\n  exec \"\"\"demo docs/fib.svg \"nim c -d:danger --out=\\$1 --define:tfibOutput:off tests/tfib.nim\"\"\"\"\n  exec \"\"\"demo docs/brief.svg \"nim c -d:danger --out=\\$1 --define:briefOutput:on tests/tfib.nim\"\"\"\"\n  exec \"\"\"demo docs/many.svg \"nim c -d:danger --out=\\$1 tests/many.nim\"\"\"\"\n",
"https://github.com/gokr/spry": "# Package\nversion       = \"0.9.0\"\nauthor        = \"Göran Krampe\"\ndescription   = \"Homoiconic dynamic language in Nim\"\nlicense       = \"MIT\"\nbin           = @[\"spry\",\"ispry\"]\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nskipExt       = @[\"nim\"]\n\n# Deps\nrequires \"spryvm\"\n\n",
"https://github.com/capocasa/scnim": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Carlo Capocasa\"\ndescription   = \"Develop SuperCollider UGens in Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"example\", \"dev\"]\n",
"https://github.com/citycide/glob": "version       = \"0.11.0\"\nauthor        = \"Bo Lingen\"\ndescription   = \"Pure library for matching file paths against Unix style glob patterns.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"docsrc\"]\nskipFiles     = @[\"tests.nim\"]\n\nrequires \"nim >= 1.0.0 & < 2.0.0\"\nrequires \"regex >= 0.19.0 & < 0.20.0\"\n\ntask test, \"Run the test suite\":\n  exec \"nimble c -y --hints:off --verbosity:0 -r tests.nim\"\n\ntask docs, \"Generate the documentation\":\n  rmDir(\"docs\")\n  exec \"nim doc --project -o:docs src/glob.nim\"\n  cpFile(\"docsrc/redirect.html\", \"docs/index.html\")\n\ntask prep_release, \"Prepare for release\":\n  if \"fugitive\".findExe == \"\":\n    echo \"Could not locate `fugitive` for updating the changelog.\"\n    echo \"Please run `nimble install fugitive` or ensure it is in your PATH.\"\n  elif \"git\".findExe == \"\":\n    echo \"Could not locate `git`. Please install it or ensure it is in your PATH.\"\n  else:\n    exec \"fugitive changelog changelog.md -t:v\" & version\n    exec \"git add changelog.md glob.nimble\"\n    exec \"git commit -m 'release: \" & version & \"'\"\n    exec \"git tag -a v\" & version & \" -m v\" & version\n",
"https://github.com/treeform/word2vec": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"treeform\"\ndescription   = \"Word2vec implemented in nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/PMunch/nimlsp": "# Package\n\nversion       = \"0.2.6\"\nauthor        = \"PMunch\"\ndescription   = \"Nim Language Server Protocol - nimlsp implements the Language Server Protocol\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimlsp\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n#requires \"packedjson\"\nrequires \"astpatternmatching\"\nrequires \"jsonschema >= 0.2.1\"\n\n# nimble test does not work for me out of the box\n#task test, \"Runs the test suite\":\n  #exec \"nim c -r tests/test_messages.nim\"\n#  exec \"nim c -d:debugLogging -d:jsonSchemaDebug -r tests/test_messages2.nim\"\n\ntask debug, \"Builds the language server\":\n  exec \"nim c --threads:on -d:nimcore -d:nimsuggest -d:debugCommunication -d:debugLogging -o:nimlsp src/nimlsp\"\n\nbefore test:\n  if not fileExists(\"nimlsp\"):\n    exec \"nimble build\"\n\ntask findNim, \"Tries to find the current Nim installation\":\n  echo NimVersion\n  echo currentSourcePath\n",
"https://raw.githubusercontent.com/technicallyagd/unpack/master/unpack.nimble": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"T.agd\"\ndescription   = \"Array/Sequence/Object destructuring/unpacking macro\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/ba0f3/anybar.nim": "[Package]\nname          = \"Anybar\"\nversion       = \"0.0.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"Anybar client written in Nim\"\nlicense       = \"MIT\"\n\nbin = \"anybar\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/sealmove/LZ77": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"Implementation of various LZ77 algorithms\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n",
"https://raw.githubusercontent.com/nimlibs/simdX86/master/simdX86.nimble": "import ospaths\n\nversion       = \"0.1.0\"\nauthor        = \"James C. Osborn\"\ndescription   = \"Wrappers for X86 SIMD intrinsics\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.17.0\"\n\nvar nimcmd = \"nim c -r -p:. -t:-march=native \"\n\ntask test, \"runs basic tests\":\n  exec nimcmd & \"simdX86\"/\"simdX86Test\"\n\ntask testSse, \"runs SSE tests\":\n  exec nimcmd & \"simdX86\"/\"simdSse\"\n\ntask testAvx, \"runs AVX tests\":\n  exec nimcmd & \"simdX86\"/\"simdAvx\"\n\ntask testAvx512, \"runs AVX512 tests\":\n  exec nimcmd & \"simdX86\"/\"simdAvx512\"\n\ntask clean, \"removes test artifacts\":\n  rmdir \"simdX86\"/\"nimcache\"\n  rmfile \"simdX86\"/\"simdX86Test\"\n  rmfile \"simdX86\"/\"simdSse\"\n  rmfile \"simdX86\"/\"simdAvx\"\n  rmfile \"simdX86\"/\"simdAvx512\"\n",
"https://github.com/xflywind/websocketx": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"flywind\"\ndescription   = \"Websocket for httpx.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"ws >= 0.4.3\"\nrequires \"httpx >= 0.1.8\"\n",
"https://github.com/cheatfate/asyncpg": "# Package\nversion     = \"0.1.0\"\nauthor      = \"Eugene Kabanov\"\ndescription = \"Asynchronous PostgreSQL driver for Nim\"\nlicense     = \"MIT\"\n# Skip tests directory\nskipDirs = @[\"tests\"]\n# Deps\nrequires \"nim >= 0.16.0\"\n",
"https://raw.githubusercontent.com/iourinski/mutableseqs/master/mutableseqs.nimble": "[Package]\nname          = \"mutableseqs\"\nversion       = \"0.1.0\"\nauthor        = \"Dima\"\ndescription   = \"utilities for transforming sequences\"\nlicense       = \"MIT\"\nbin           = \"mutableseqs\"\n[Deps]\n\nRequires: \"nim >= 0.15.2\"\n\n",
"https://github.com/nim-lang/mongo": "[Package]\nname: \"mongo\"\nversion: \"0.3\"\nauthor: \"Erik Johansson Andersson\"\ndescription: \"A MongoDB wrapper\"\nlicense: \"MIT\"\nsrcDir: \"lib\"\n\n[Deps]\nrequires: \"nim >= 0.10.2\"\n",
"https://github.com/pragmagic/isaac/": "[Package]\nname: \"isaac\"\nversion: \"0.1.3\"\nauthor: \"Xored Software, Inc.\"\ndescription: \"ISAAC PRNG implementation\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n",
"https://api.github.com/repos/fowlmouth/nim-termbox/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"d8caf66dd0b10957513e907acb12709baf9e7e15\",\"size\":148,\"url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nim-termbox/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/d8caf66dd0b10957513e907acb12709baf9e7e15\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nim-termbox/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/d8caf66dd0b10957513e907acb12709baf9e7e15\",\"html\":\"https://github.com/fowlmouth/nim-termbox/blob/master/.gitignore\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"48a1e9d0f653b5a70ae1a23a9237bbb6146660d9\",\"size\":52,\"url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/README.md?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nim-termbox/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/48a1e9d0f653b5a70ae1a23a9237bbb6146660d9\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nim-termbox/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/48a1e9d0f653b5a70ae1a23a9237bbb6146660d9\",\"html\":\"https://github.com/fowlmouth/nim-termbox/blob/master/README.md\"}},{\"name\":\"aalib.nim\",\"path\":\"aalib.nim\",\"sha\":\"3212a0cff287a037a8038535a667d9b47d7ed472\",\"size\":32419,\"url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/aalib.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nim-termbox/blob/master/aalib.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/3212a0cff287a037a8038535a667d9b47d7ed472\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nim-termbox/master/aalib.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/aalib.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/3212a0cff287a037a8038535a667d9b47d7ed472\",\"html\":\"https://github.com/fowlmouth/nim-termbox/blob/master/aalib.nim\"}},{\"name\":\"caca.nim\",\"path\":\"caca.nim\",\"sha\":\"e8e04d5dcec45da99c9b5b995747735685fd0e80\",\"size\":36737,\"url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/caca.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nim-termbox/blob/master/caca.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/e8e04d5dcec45da99c9b5b995747735685fd0e80\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nim-termbox/master/caca.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/caca.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/e8e04d5dcec45da99c9b5b995747735685fd0e80\",\"html\":\"https://github.com/fowlmouth/nim-termbox/blob/master/caca.nim\"}},{\"name\":\"newt.nim\",\"path\":\"newt.nim\",\"sha\":\"80372e34b6a476e85d52fe976d47c3d7b07945fa\",\"size\":17911,\"url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/newt.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nim-termbox/blob/master/newt.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/80372e34b6a476e85d52fe976d47c3d7b07945fa\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nim-termbox/master/newt.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/newt.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/80372e34b6a476e85d52fe976d47c3d7b07945fa\",\"html\":\"https://github.com/fowlmouth/nim-termbox/blob/master/newt.nim\"}},{\"name\":\"termbox.babel\",\"path\":\"termbox.babel\",\"sha\":\"f776ad435b9f6a6410b911b9f0daaefd2fffa4f3\",\"size\":210,\"url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/termbox.babel?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nim-termbox/blob/master/termbox.babel\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/f776ad435b9f6a6410b911b9f0daaefd2fffa4f3\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nim-termbox/master/termbox.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/termbox.babel?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/f776ad435b9f6a6410b911b9f0daaefd2fffa4f3\",\"html\":\"https://github.com/fowlmouth/nim-termbox/blob/master/termbox.babel\"}},{\"name\":\"termbox.nim\",\"path\":\"termbox.nim\",\"sha\":\"fbcdc658df96d377e7345abd99d10d89a8d934ae\",\"size\":5374,\"url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/termbox.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nim-termbox/blob/master/termbox.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/fbcdc658df96d377e7345abd99d10d89a8d934ae\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nim-termbox/master/termbox.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nim-termbox/contents/termbox.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nim-termbox/git/blobs/fbcdc658df96d377e7345abd99d10d89a8d934ae\",\"html\":\"https://github.com/fowlmouth/nim-termbox/blob/master/termbox.nim\"}}]",
"https://github.com/Udiknedormin/NimUnits": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"M. Kotwica\"\ndescription   = \"Units of measure.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://github.com/rxi/cmixer_sdl2-nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rxi\"\ndescription   = \"Lightweight audio mixer for SDL2\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"cmixer\"\nrequires \"sdl2\"\n",
"https://github.com/BarrOff/nim-pari": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"BarrOff\"\ndescription   = \"Nim wrapper for the PARI library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"nimterop >= 0.6.11\"\n",
"https://raw.githubusercontent.com/status-im/nim-eth-keyfile/master/eth_keyfile.nimble": "packageName   = \"eth_keyfile\"\nversion       = \"0.1.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Tools for handling the encrypted keyfile format used to store Ethereum private keys\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\", \"Nim\", \"nim\"]\n\n### Dependencies\n\nrequires \"nim > 0.18.0\",\n         \"nimcrypto\",\n         \"eth_keys\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/testuuid\"\n  exec \"nim c -r tests/testkeyfile\"\n  exec \"nim c -r -d:release tests/testuuid\"\n  exec \"nim c -r -d:release tests/testkeyfile\"\n",
"https://github.com/rustomax/ndf": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"Max Skybin\"\ndescription   = \"Duplicate files finder\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"ndf\"]\n\n# Dependencies\nrequires \"nim >= 1.4.2\", \"docopt >= 0.6.5, murmurhash >= 0.4.0\"",
"https://github.com/zengxs/nim-cmark": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zengxs\"\ndescription   = \"libcmark wrapper for Nim\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"a\", \"nim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nwhen defined(nimdistros):\n  import distros\n  foreignDep \"cmake\"\n\n\n# Tasks\n\ntask prebuild, \"Generate required headers for libcmark\":\n  withDir \"libcmark\":\n    exec \"make\"\n\n  cpFile \"./libcmark/build/src/libcmark.a\", \"./src/libcmark.a\"\n\nbefore install:\n  exec \"nimble prebuild\"\n\nbefore test:\n  exec \"nimble prebuild\"\n",
"https://github.com/def-/nim-syscall": "# Package\n\nversion       = \"0.1\"\nauthor        = \"Dennis Felsing\"\ndescription   = \"Raw system calls for Nim\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.10.3\"\n\ntask tests, \"Test syscall\":\n  exec \"nim c -r src/syscall\"\n",
"https://github.com/keyme/nim_bitvec": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"Extensible Bit Vector library for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/snus-kin/twitter.nim/master/twitter.nimble": "# Package\nversion = \"1.0.1\"\nauthor = \"snus-kin\"\ndescription = \"A twitter API wrapper for Nim.\"\nlicense = \"MIT\"\n\n# Deps\nrequires: \"nim >= 1.2.0\"\nrequires: \"uuids >= 0.1.10, hmac >= 0.1.9\"\n\ntask test, \"Runs tests\":\n  exec \"nim c -r twitter.nim\"\n",
"https://raw.githubusercontent.com/Halsys/nim-bgfx/master/bgfx.nimble": "# Package\nversion = \"0.2.2\"\nauthor = \"Cory Noll Crimmins - Golden\"\ndescription = \"Wrapper for the graphics library; BGFX.\"\nlicense = \"BSD\"\nskipDirs = @[\"examples\"]\n\n# Dependencies\nrequires \"nim >= 0.16.1\"\n",
"https://raw.githubusercontent.com/ba0f3/funchook.nim/master/funchook.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"funchook wrapper\"\nlicense       = \"GPLv2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/yglukhov/kiwi/master/kiwi.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Cassowary constraint solving\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/common.nim\"\n  exec \"nim js -r tests/common.nim\"\n",
"https://raw.githubusercontent.com/jyapayne/mort/master/mort.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"A dead code locator for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/jiro4989/envconfig": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"envconfig provides a function to get config objects from environment variables.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"regex >= 0.13.0\"\n\ntask docs, \"Generate API documents\":\n  exec \"nimble doc -Y --index:on --project --out:docs --hints:off src/envconfig.nim\"\n",
"https://github.com/khchen/minhook": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Ward\"\ndescription   = \"MinHook wrapper for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/bunkford/winserial/master/winserial.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"Serial library for Windows.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires: \"nim >= 0.20.0\", \"winim >= 3.2.4\"",
"https://api.github.com/repos/akiradeveloper/nim-fuse/contents": "[{\"name\":\".travis.yml\",\"path\":\".travis.yml\",\"sha\":\"b68bba5e10c4cdffcd6afa4f12b6135894135074\",\"size\":1394,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/.travis.yml?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/.travis.yml\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/b68bba5e10c4cdffcd6afa4f12b6135894135074\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/.travis.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/.travis.yml?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/b68bba5e10c4cdffcd6afa4f12b6135894135074\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/.travis.yml\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"992e69fddbbf86c17578cbe3c26ee89eb2188a12\",\"size\":1082,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/992e69fddbbf86c17578cbe3c26ee89eb2188a12\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/992e69fddbbf86c17578cbe3c26ee89eb2188a12\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"173eb7f070e0d250df804c90117db3714da6a7f0\",\"size\":909,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/README.md?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/173eb7f070e0d250df804c90117db3714da6a7f0\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/173eb7f070e0d250df804c90117db3714da6a7f0\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/README.md\"}},{\"name\":\"arch.svg\",\"path\":\"arch.svg\",\"sha\":\"9110ae1cb4cce9a02f276a5097c6b439dbef5eef\",\"size\":122041,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/arch.svg?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/arch.svg\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/9110ae1cb4cce9a02f276a5097c6b439dbef5eef\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/arch.svg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/arch.svg?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/9110ae1cb4cce9a02f276a5097c6b439dbef5eef\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/arch.svg\"}},{\"name\":\"c_bridge.c\",\"path\":\"c_bridge.c\",\"sha\":\"da25b8c09598f32c7db3abd2594af8694df1c7a1\",\"size\":8147,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/c_bridge.c?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/c_bridge.c\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/da25b8c09598f32c7db3abd2594af8694df1c7a1\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/c_bridge.c\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/c_bridge.c?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/da25b8c09598f32c7db3abd2594af8694df1c7a1\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/c_bridge.c\"}},{\"name\":\"fuse.html\",\"path\":\"fuse.html\",\"sha\":\"f4be3ce5f10a9b5a65bd225ce2d7b661ac3efc4a\",\"size\":117044,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/fuse.html?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/fuse.html\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/f4be3ce5f10a9b5a65bd225ce2d7b661ac3efc4a\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/fuse.html\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/fuse.html?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/f4be3ce5f10a9b5a65bd225ce2d7b661ac3efc4a\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/fuse.html\"}},{\"name\":\"fuse.nim\",\"path\":\"fuse.nim\",\"sha\":\"14c59bb199e5ca90645940ac1a733919a2cd81f1\",\"size\":44631,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/fuse.nim?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/fuse.nim\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/14c59bb199e5ca90645940ac1a733919a2cd81f1\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/fuse.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/fuse.nim?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/14c59bb199e5ca90645940ac1a733919a2cd81f1\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/fuse.nim\"}},{\"name\":\"fuse.nimble\",\"path\":\"fuse.nimble\",\"sha\":\"20030e40af3b897466440bb2246b5bf7f2dfcd9c\",\"size\":187,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/fuse.nimble?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/fuse.nimble\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/20030e40af3b897466440bb2246b5bf7f2dfcd9c\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/fuse.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/fuse.nimble?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/20030e40af3b897466440bb2246b5bf7f2dfcd9c\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/fuse.nimble\"}},{\"name\":\"hifuse.nim\",\"path\":\"hifuse.nim\",\"sha\":\"82ac8a344a9e1b2faff1d61c1651c874b1569579\",\"size\":8851,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/hifuse.nim?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/hifuse.nim\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/82ac8a344a9e1b2faff1d61c1651c874b1569579\",\"download_url\":\"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/hifuse.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/hifuse.nim?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/blobs/82ac8a344a9e1b2faff1d61c1651c874b1569579\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/blob/master/hifuse.nim\"}},{\"name\":\"test\",\"path\":\"test\",\"sha\":\"86c52040a04440ebe595af62dd652806f744c9c0\",\"size\":0,\"url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/test?ref=master\",\"html_url\":\"https://github.com/akiradeveloper/nim-fuse/tree/master/test\",\"git_url\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/trees/86c52040a04440ebe595af62dd652806f744c9c0\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/contents/test?ref=master\",\"git\":\"https://api.github.com/repos/akiradeveloper/nim-fuse/git/trees/86c52040a04440ebe595af62dd652806f744c9c0\",\"html\":\"https://github.com/akiradeveloper/nim-fuse/tree/master/test\"}}]",
"https://raw.githubusercontent.com/flaviut/optional_t/master/optional_t.nimble": "[Package]\nname        = \"optional_t\"\nversion     = \"1.2.0\"\nauthor      = \"Flaviu Tamas\"\ndescription = \"A simple Option[T] library\"\nlicense     = \"MIT\"\nsrcdir      = \"src\"\n\n[Deps]\nRequires: \"nimrod >= 0.10.1\"\n",
"https://github.com/markspanbroek/asynctest": "version = \"0.2.1\"\nauthor = \"asynctest Authors\"\ndescription = \"Test asynchronous code\"\nlicense = \"MIT\"\n\nrequires \"nim >= 1.2.0 & < 2.0.0\"\n",
"https://raw.githubusercontent.com/genotrance/nimgen/master/nimgen.nimble": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"genotrance\"\ndescription   = \"c2nim helper to simplify and automate the wrapping of C libraries\"\nlicense       = \"MIT\"\n\nbin = @[\"nimgen\"]\nsrcDir = \"src\"\nskipDirs = @[\"nimgen\", \"tests\", \"web\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"c2nim >= 0.9.14\", \"regex >= 0.12.0\"\n\ntask test, \"Test nimgen\":\n    exec \"nim c -r tests/rununittests.nim\"\n    exec \"nim e tests/nimgentest.nims\"\n",
"https://github.com/treeform/steganography": "# Package\n\nversion      = \"0.1.0\"\nauthor       = \"Andre von Houck\"\ndescription  = \"Steganography - hide data inside an image.\"\nlicense      = \"MIT\"\n\nsrcDir       = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.20.0\"\nrequires \"flippy >= 0.2.1\"\n",
"https://github.com/Yardanico/nim-adb": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yardanico\"\ndescription   = \"ADB protocol implementation in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/c-blake/procs": "# Package\nversion     = \"0.3.0\"\nauthor      = \"Charles Blake\"\ndescription = \"Unix process&system query&formatting library&multi-command CLI in Nim\"\nlicense     = \"MIT/ISC\"\nbin         = @[ \"procs\" ]\n\n# Dependencies\nrequires \"nim >= 0.20.0\", \"cligen >= 1.2.0\"\nskipDirs = @[\"configs\"]\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-dnsprotec/master/dnsprotec.nimble": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"DNS /etc/hosts file manager, Block 1 Million malicious domains with 1 command\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"dnsprotec\"]\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/MasonMcGill/optionals/master/optionals.nimble": "[Package]\nname        = \"optionals\"\nversion     = \"0.1.0\"\nauthor      = \"Mason McGill\"\ndescription = \"Option types\"\nlicense     = \"MIT\"\nsrcDir      = \"source\"\n\n[Deps]\nRequires: \"nimrod >= 0.10.0\"\n",
"https://github.com/ba0f3/subhook.nim": "# Package\n\nversion       = \"0.5.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"subhook wrapper\"\nlicense       = \"BSD2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://raw.githubusercontent.com/JohnAD/jestermongopool/master/jestermongopool.nimble": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"Jester plugin(s) that support the MongoPool MongoDb driver.\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"jesterwithplugins >= 0.5.0\", \"mongopool >= 1.0.1\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/jsmn.nim/master/jsmn.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"Jsmn - a world fastest JSON parser - in pure Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/jlp765/tnim": "[Package]\nname        = \"tnim\"\nversion     = \"2.0.6\"\nauthor      = \"James Parkinson\"\ndescription = \"Nim REPL - a sandbox for testing Nim code\"\nlicense     = \"MIT\"\n\nbin         = \"tnim\"\nbinDir      = \"bin\"\n\n[Deps]\nrequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/Bennyelg/nimPresto/master/db_presto.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"Bennyelg\"\ndescription   = \"prestodb connector\"\nlicense       = \"MIT\"\nskipDirs = @[\"tests\"]\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\n",
"https://raw.githubusercontent.com/niv/websocket.nim/master/websocket.nimble": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"niv\"\ndescription   = \"websockets for nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n",
"https://github.com/alialrahahleh/fjq": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Ali AlRahahleh\"\ndescription   = \"Fast JSON parser\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\nbin           = @[\"fjq\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/MasonMcGill/optionals.git": "[Package]\nname        = \"optionals\"\nversion     = \"0.1.0\"\nauthor      = \"Mason McGill\"\ndescription = \"Option types\"\nlicense     = \"MIT\"\nsrcDir      = \"source\"\n\n[Deps]\nRequires: \"nimrod >= 0.10.0\"\n",
"https://github.com/planetis-m/gnuplotlib": "# mode = ScriptMode.Verbose\n\npackageName   = \"gnuplotlib\"\nversion       = \"2.6.1\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"Nim gnuplot interface\"\nlicense       = \"MIT\"\nskipDirs = @[\"examples\", \"tests\"]\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/achesak/nim-sndhdr/master/sndhdr.nimble": "[Package]\nname = \"sndhdr\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Library for detecting the format of a sound file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/yglukhov/nimsl": "# Package\nversion = \"0.3.2\"\nauthor = \"Yuriy Glukhov\"\ndescription = \"Shaders in Nim\"\nlicense = \"MIT\"\n\n# Dependencies\nrequires \"variant\"\n\n# Tests\nconst allTests = [\"test\", \"nimsl/private/var_decls\"]\n\ntask test, \"Run tests\":\n    exec \"nimble jsTests\"\n    exec \"nimble cTests\"\n\ntask jsTests, \"\":\n    for t in allTests:\n        exec(\"nim js -r -d:nodejs \" & t)\n\ntask cTests, \"\":\n    for t in allTests:\n        exec(\"nim c -r \" & t)\n",
"https://raw.githubusercontent.com/barcharcraz/nimlibpng/master/png.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Charles Barto\"\ndescription   = \"Wrapper around the libpng library for png graphics\"\nlicense       = \"MIT\"\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n\nsrcDir = \"src\"\n",
"https://github.com/ftsf/gifenc": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Jez Kabanov\"\ndescription   = \"Gif Encoder\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://github.com/snus-kin/flickr-image-bot": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"snus-kin\"\ndescription   = \"Twitter bot for fetching flickr images with tags\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"flickr_image_bot\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\nrequires \"https://github.com/snus-kin/twitter.nim\"\n",
"https://github.com/SolitudeSF/tam": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Tales of Maj'Eyal addon manager\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"tam\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"cligen >= 1.0.0\", \"nimquery >= 1.2.2\", \"tiny_sqlite#3fa5c0c8c14105be8a8f9f2bd93b60678d44a33f\"\n",
"https://raw.githubusercontent.com/status-im/nim-eth-bloom/master/eth_bloom.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum Bloom Filter\"\nlicense       = \"Apache License 2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18\",\n         \"nimcrypto\",\n         \"stint\"\n\ntask test, \"Run tests\":\n  --run\n  --threads:\"on\"\n  setCommand \"c\", \"tests/test1.nim\"\n",
"https://github.com/aisk/simpleflake.nim": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"An Long\"\ndescription   = \"Simpleflake for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\n",
"https://raw.githubusercontent.com/JohnAD/mongopool/master/mongopool.nimble": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"MongoDB pooled client for threaded applications such as web servers\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"bson >= 1.1.2\", \"scram >= 0.1.13\"\n",
"https://raw.githubusercontent.com/momeemt/BlackvasCli/master/blackvas_cli.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"momeemt\"\ndescription   = \"The Blackvas CLI\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"blackvas_cli\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 1.2.0\"\nrequires \"jester >= 0.4.3\"",
"https://raw.githubusercontent.com/Udiknedormin/NimContracts/master/contracts.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"M. Kotwica\"\ndescription   = \"Design by contract (DbC) library.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n\n# Tests\nimport ospaths, sequtils\n\ntask tests, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --define:explainContracts:0\n  --path: \".\"\n  --run\n  var dir_list = @[\"tests\"]\n  while dir_list.len != 0:\n    let dir = dir_list.pop\n    dir_list.add listDirs(dir)\n    if splitPath(dir).tail != \"nimcache\":\n      for file in listFiles(dir):\n        var (_, _, ext) = splitFile(file)\n        if ext == \".nim\":\n          echo \"running ---- \" & file\n          setCommand \"c\", file\n\ntask test, \"run tests\":\n  setCommand \"tests\"\n",
"https://github.com/niv/neverwinter.nim": "import sequtils, os, strutils\n\nversion       = \"1.4.2\"\nauthor        = \"Bernhard Stöckner <n@e-ix.net>\"\ndescription   = \"Neverwinter Nights 1: Enhanced Edition data accessor library and utilities\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 1.0.8\"\n\ninstallDirs = @[\"neverwinter\"]\n\nbinDir = \"bin/\"\nbin = listFiles(thisDir()).\n  mapIt(it.splitFile).\n  filterIt(it.name.startsWith(\"nwn_\") and it.ext == \".nim\").\n  mapIt(it.name)\n\ntask clean, \"Remove compiled binaries and temporary data\":\n  for b in bin:\n    rmFile(binDir / b)\n    rmFile(binDir / b & \".exe\")\n  rmdir(nimcacheDir())\n",
"https://github.com/theAkito/sue": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Akito <the@akito.ooo>\"\ndescription   = \"Executes a program as a user different from the user running `sue`. The target program is `exec`'ed which means, that it replaces the `sue` process you are using to run the target program. This simulates native tools like `su` and `sudo` and uses the same low-level POSIX tools to achieve that, but eliminates common issues that usually arise, when using those native tools.\"\nlicense       = \"GPL-3.0-or-later\"\nsrcDir        = \"src\"\nbin           = @[\"sue\"]\nskipDirs      = @[\"tasks\"]\nskipFiles     = @[\"README.md\"]\nskipExt       = @[\"nim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"regex >= 0.16.2\"\n\n\n# Tasks\n\ntask test, \"Run simple test.\":\n  \"tests/\".cd\n  exec \"nim test.nims $USER\"\ntask xtest, \"Run extended test suite. Requires Docker.\":\n  exec \"\"\"nimble dbuild && \\\n          docker build \\\n            --no-cache \\\n            -t sue:test \\\n            -f Dockerfile \\\n            . && \\\n          docker run \\\n            --rm \\\n            -it \\\n            sue:test\n       \"\"\"\ntask configure, \"Configure project.\":\n  exec \"git fetch\"\n  exec \"git pull\"\n  exec \"git checkout master\"\n  exec \"git submodule add git@github.com:theAkito/nim-tools.git tasks\"\n  exec \"git submodule update --init --recursive\"\n  exec \"git submodule update --recursive --remote\"\ntask fbuild, \"Build project.\":\n  exec \"\"\"nim c \\\n            --define:danger \\\n            --opt:size \\\n            --out:sue \\\n            src/sue\n       \"\"\"\ntask dbuild, \"Debug Build project.\":\n  exec \"\"\"nim c \\\n            --debuginfo:on \\\n            --out:sue \\\n            src/sue\n       \"\"\"\ntask makecfg, \"Create nim.cfg for optimized builds.\":\n  exec \"nim tasks/cfg_optimized.nims\"\ntask clean, \"Removes nim.cfg.\":\n  exec \"nim tasks/cfg_clean.nims\"\n",
"https://raw.githubusercontent.com/niv/ed25519.nim/master/ed25519.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"niv\"\ndescription   = \"ed25519 key crypto bindings\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests/\"]\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\n",
"https://github.com/def-/nim-platformer": "# Package\n\nversion       = \"1.1\"\nauthor        = \"Dennis Felsing\"\ndescription   = \"An example 2D platform game with SDL2\"\nlicense       = \"MIT\"\n\nbin           = @[\"platformer\"]\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\nrequires \"sdl2 >= 1.1\"\nrequires \"strfmt >= 0.6\"\nrequires \"basic2d >= 0.1.0\"\n\ntask tests, \"Compile all tutorial steps\":\n  for i in 1..9:\n    exec \"nim c tutorial/platformer_part\" & $i\n",
"https://github.com/eXodiquas/Echon": "# Package\nversion       = \"0.1.7\"\nauthor        = \"Timo 'eXodiquas' Netzer\"\ndescription   = \"A small package to create lindenmayer-systems or l-systems.\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 1.2.2\"\n",
"https://github.com/def-/nim-brainfuck.git": "# Package\n\nversion       = \"1.1\"\nauthor        = \"Dennis Felsing\"\ndescription   = \"A brainfuck interpreter and compiler\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\nbin           = @[\"brainfuck\"]\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\nrequires \"docopt >= 0.1.0\"\n",
"https://raw.githubusercontent.com/GULPF/tiny_sqlite/master/tiny_sqlite.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"A thin SQLite wrapper\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask test, \"Run tests\":\n    exec \"nim c -r tests/tests\"\n    rmFile \"tests/tests\"\n\ntask docs, \"Generate docs\":\n    exec \"nim doc -o:docs/tiny_sqlite.html src/tiny_sqlite.nim\"",
"https://api.github.com/repos/cowboy-coders/nim-libclang/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"45661e3d7119c12f632fd41ee3fe7eefd28fb9d4\",\"size\":12,\"url\":\"https://api.github.com/repos/jovial/nim-libclang/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/jovial/nim-libclang/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/jovial/nim-libclang/git/blobs/45661e3d7119c12f632fd41ee3fe7eefd28fb9d4\",\"download_url\":\"https://raw.githubusercontent.com/jovial/nim-libclang/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jovial/nim-libclang/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/jovial/nim-libclang/git/blobs/45661e3d7119c12f632fd41ee3fe7eefd28fb9d4\",\"html\":\"https://github.com/jovial/nim-libclang/blob/master/.gitignore\"}},{\"name\":\"COPYING\",\"path\":\"COPYING\",\"sha\":\"a5401eb9d9d5287b82711d976d31a53c509a1929\",\"size\":1084,\"url\":\"https://api.github.com/repos/jovial/nim-libclang/contents/COPYING?ref=master\",\"html_url\":\"https://github.com/jovial/nim-libclang/blob/master/COPYING\",\"git_url\":\"https://api.github.com/repos/jovial/nim-libclang/git/blobs/a5401eb9d9d5287b82711d976d31a53c509a1929\",\"download_url\":\"https://raw.githubusercontent.com/jovial/nim-libclang/master/COPYING\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jovial/nim-libclang/contents/COPYING?ref=master\",\"git\":\"https://api.github.com/repos/jovial/nim-libclang/git/blobs/a5401eb9d9d5287b82711d976d31a53c509a1929\",\"html\":\"https://github.com/jovial/nim-libclang/blob/master/COPYING\"}},{\"name\":\"README\",\"path\":\"README\",\"sha\":\"2662038733c4b434e0b26df058dd5f7a64a6f17a\",\"size\":39,\"url\":\"https://api.github.com/repos/jovial/nim-libclang/contents/README?ref=master\",\"html_url\":\"https://github.com/jovial/nim-libclang/blob/master/README\",\"git_url\":\"https://api.github.com/repos/jovial/nim-libclang/git/blobs/2662038733c4b434e0b26df058dd5f7a64a6f17a\",\"download_url\":\"https://raw.githubusercontent.com/jovial/nim-libclang/master/README\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jovial/nim-libclang/contents/README?ref=master\",\"git\":\"https://api.github.com/repos/jovial/nim-libclang/git/blobs/2662038733c4b434e0b26df058dd5f7a64a6f17a\",\"html\":\"https://github.com/jovial/nim-libclang/blob/master/README\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"9525fa8c416327beaebdd47a2d90631913b1a43f\",\"size\":0,\"url\":\"https://api.github.com/repos/jovial/nim-libclang/contents/examples?ref=master\",\"html_url\":\"https://github.com/jovial/nim-libclang/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/jovial/nim-libclang/git/trees/9525fa8c416327beaebdd47a2d90631913b1a43f\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/jovial/nim-libclang/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/jovial/nim-libclang/git/trees/9525fa8c416327beaebdd47a2d90631913b1a43f\",\"html\":\"https://github.com/jovial/nim-libclang/tree/master/examples\"}},{\"name\":\"libclang.nimble\",\"path\":\"libclang.nimble\",\"sha\":\"1dc31dbca106f6480590ed6244e7dcf3ed98f8b5\",\"size\":234,\"url\":\"https://api.github.com/repos/jovial/nim-libclang/contents/libclang.nimble?ref=master\",\"html_url\":\"https://github.com/jovial/nim-libclang/blob/master/libclang.nimble\",\"git_url\":\"https://api.github.com/repos/jovial/nim-libclang/git/blobs/1dc31dbca106f6480590ed6244e7dcf3ed98f8b5\",\"download_url\":\"https://raw.githubusercontent.com/jovial/nim-libclang/master/libclang.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jovial/nim-libclang/contents/libclang.nimble?ref=master\",\"git\":\"https://api.github.com/repos/jovial/nim-libclang/git/blobs/1dc31dbca106f6480590ed6244e7dcf3ed98f8b5\",\"html\":\"https://github.com/jovial/nim-libclang/blob/master/libclang.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"ccedba1285504cb3918b1a98b27008d8b1b53a56\",\"size\":0,\"url\":\"https://api.github.com/repos/jovial/nim-libclang/contents/src?ref=master\",\"html_url\":\"https://github.com/jovial/nim-libclang/tree/master/src\",\"git_url\":\"https://api.github.com/repos/jovial/nim-libclang/git/trees/ccedba1285504cb3918b1a98b27008d8b1b53a56\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/jovial/nim-libclang/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/jovial/nim-libclang/git/trees/ccedba1285504cb3918b1a98b27008d8b1b53a56\",\"html\":\"https://github.com/jovial/nim-libclang/tree/master/src\"}}]",
"https://raw.githubusercontent.com/jackhftang/canonicaljson.nim/master/canonicaljson.nimble": "# Package\n\nversion       = \"1.1.2\"\nauthor        = \"Jack Tang\"\ndescription   = \"canonicaljson\"\nlicense       = \"MIT\"\nbackend       = \"c\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"canonicaljson.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    # print current version\n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs --project src/canonicaljson.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://raw.githubusercontent.com/juancarlospaco/nim-nominatim/master/nominatim.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"juancarlospaco\"\ndescription   = \"OpenStreetMap Nominatim API Lib and CLI Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/fowlmouth/physfs": "[Package]\nname:\"physfs\"\nversion:\"1.0\"\nauthor:\"fowl\"\ndescription:\"A library to provide abstract access to various archives.\"\nlicense:\"WTFPL\"\n#srcDir:\"src\"\n[Deps]\nrequires:\"nimrod >= 0.9.2\"\n",
"https://raw.githubusercontent.com/JohnAD/ur/master/ur.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"John Dupuy\"\ndescription   = \"Universal Result objects\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/nim-lang/Aporia": "[Package]\nname          = \"aporia\"\nversion       = \"0.4.2\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A Nim IDE.\"\nlicense       = \"GPLv2\"\nbin           = \"aporia\"\n\nskipExt = \"nim\"\n\n[Deps]\nRequires: \"nim >= 0.11.0, gtk2 >= 1.3, dialogs >= 1.1.1\"\n",
"https://raw.githubusercontent.com/xflywind/wepoll/master/wepoll.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Windows epoll wrapper.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/status-im/nim-json-rpc/master/json_rpc.nimble": "packageName   = \"json_rpc\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum remote procedure calls\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\n### Dependencies\nrequires \"nim >= 0.17.3\",\n         \"nimcrypto\",\n         \"stint\",\n         \"chronos\",\n         \"httputils\",\n         \"chronicles\",\n         \"https://github.com/status-im/news#status\",\n         \"chronicles\",\n         \"json_serialization\"\n\nproc getLang(): string =\n  # Compilation language is controlled by TEST_LANG\n  result = \"c\"\n  if existsEnv\"TEST_LANG\":\n    result = getEnv\"TEST_LANG\"\n\nproc buildBinary(name: string, srcDir = \"./\", params = \"\", cmdParams = \"\", lang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" --out:./build/\" & name & \" \" & params & \" \" & srcDir & name & \".nim\" & \" \" & cmdParams\n\ntask test, \"run tests\":\n  buildBinary \"all\", \"tests/\", \"-r -f --hints:off --debuginfo --path:'.' --threads:on -d:chronicles_log_level=ERROR\", getLang()\n",
"https://github.com/krisppurg/dimscord": "# Package\n\nversion       = \"1.2.5\"\nauthor        = \"KrispPurg\"\ndescription   = \"A Discord Bot & REST Library for Nim.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"zippy >= 0.2.1\", \"ws <= 0.4.0\", \"regex >= 0.15.0\", \"libsodium <= 0.6.0\", \"flatty >= 0.1.2\"\n\ntask genDoc, \"Generates the documentation for dimscord\":\n    rmDir(\"docs\") # Clean old doc folder\n    exec(\"nim doc2 --outdir=docs --project --index:on --git.url:https://github.com/krisppurg/dimscord --git.commit:master dimscord.nim\")\n    exec(\"nim buildindex -o:docs/theindex.html docs/\") # This builds the index to allow search to work\n\n    writeFile(\"docs/index.html\", \"\"\"\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta http-equiv=\"Refresh\" content=\"0; url=dimscord.html\"/>\n      </head>\n      <body>\n        <p>Click <a href=\"dimscord.html\">this link</a> if this does not redirect you.</p>\n      </body>\n    </html>\n    \"\"\")\n",
"https://github.com/juancarlospaco/nodestdlib": "version     = \"15.0.0\"\nauthor      = \"Juan Carlos\"\ndescription = \"NodeJS Standard Library for Nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.5.0\"\n",
"https://raw.githubusercontent.com/achesak/nim-gpx/master/gpx.nimble": "[Package]\nname = \"gpx\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for parsing GPX (GPS Exchange format) files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/jiro4989/gyaric/master/gyaric.nimble": "# Package\n\nversion       = \"1.0.2\"\nauthor        = \"jiro4989\"\ndescription   = \"gyaric is a module to encode/decode text to unreadable gyaru's text.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"gyaric/cli/gyaric\"]\nbinDir        = \"bin\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\ntask docs, \"Generate API documents\":\n  exec \"nimble doc --index:on --project --out:docs --hints:off src/gyaric.nim\"\n",
"https://github.com/juancarlospaco/nim-tinyslation": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Juan Carlos <juancarlospaco@gmail.com>\"\ndescription   = \"Text string translation from free online crowdsourced API. Tinyslation a tiny translation. Sync and Async support (MultiSync). No API Key required.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"translation\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/andreaferretti/memo": "version       = \"0.3.0\"\nauthor        = \"wiffel\"\ndescription   = \"Memoize Nim functions\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"test\", \"test.nim\"]\n\nrequires \"nim >= 0.17.3\"\n\ntask test, \"run memo tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  --define:memoDebug\n  setCommand \"c\", \"test.nim\"\n\ntask tests, \"run memo tests\":\n  setCommand \"test\"",
"https://raw.githubusercontent.com/xmonader/witai-nim/master/witai.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"wit.ai client\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/fallingduck/options-nim/master/options.nimble": "[Package]\nname          = \"options\"\nversion       = \"0.1.0\"\nauthor        = \"Nim Runtime Library\"\ndescription   = \"Temporary package for people running 0.11.2 stable.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/juancarlospaco/biblioteca-guarrilla/master/biblioteca_guarrilla.nimble": "# Package\n\nversion       = \"0.1.9\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Simple web to share books, Calibre, Jester, Spectre CSS, No JavaScript, WebP & ZIP to reduce bandwidth\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"biblioteca_guarrilla\"]\ninstallDirs   = @[\"static\", \"static/css\"]\ninstallFiles  = @[\"static/css/spectre.min.css\", \"static/css/spectre-exp.min.css\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"jester\"\nrequires \"webp\"\nrequires \"zip\"\n",
"https://api.github.com/repos/barcharcraz/nim-assimp/contents": "[{\"name\":\"assimp.nim\",\"path\":\"assimp.nim\",\"sha\":\"fe13ef6a72f79240986a4d438ef7881978fc3072\",\"size\":10654,\"url\":\"https://api.github.com/repos/barcharcraz/nim-assimp/contents/assimp.nim?ref=master\",\"html_url\":\"https://github.com/barcharcraz/nim-assimp/blob/master/assimp.nim\",\"git_url\":\"https://api.github.com/repos/barcharcraz/nim-assimp/git/blobs/fe13ef6a72f79240986a4d438ef7881978fc3072\",\"download_url\":\"https://raw.githubusercontent.com/barcharcraz/nim-assimp/master/assimp.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/barcharcraz/nim-assimp/contents/assimp.nim?ref=master\",\"git\":\"https://api.github.com/repos/barcharcraz/nim-assimp/git/blobs/fe13ef6a72f79240986a4d438ef7881978fc3072\",\"html\":\"https://github.com/barcharcraz/nim-assimp/blob/master/assimp.nim\"}},{\"name\":\"nim-assimp.babel\",\"path\":\"nim-assimp.babel\",\"sha\":\"26930d4033261f2942e47ffde65189a201188fa2\",\"size\":175,\"url\":\"https://api.github.com/repos/barcharcraz/nim-assimp/contents/nim-assimp.babel?ref=master\",\"html_url\":\"https://github.com/barcharcraz/nim-assimp/blob/master/nim-assimp.babel\",\"git_url\":\"https://api.github.com/repos/barcharcraz/nim-assimp/git/blobs/26930d4033261f2942e47ffde65189a201188fa2\",\"download_url\":\"https://raw.githubusercontent.com/barcharcraz/nim-assimp/master/nim-assimp.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/barcharcraz/nim-assimp/contents/nim-assimp.babel?ref=master\",\"git\":\"https://api.github.com/repos/barcharcraz/nim-assimp/git/blobs/26930d4033261f2942e47ffde65189a201188fa2\",\"html\":\"https://github.com/barcharcraz/nim-assimp/blob/master/nim-assimp.babel\"}},{\"name\":\"test\",\"path\":\"test\",\"sha\":\"bce96e35d35769d24507732c099ad555cb598e6c\",\"size\":0,\"url\":\"https://api.github.com/repos/barcharcraz/nim-assimp/contents/test?ref=master\",\"html_url\":\"https://github.com/barcharcraz/nim-assimp/tree/master/test\",\"git_url\":\"https://api.github.com/repos/barcharcraz/nim-assimp/git/trees/bce96e35d35769d24507732c099ad555cb598e6c\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/barcharcraz/nim-assimp/contents/test?ref=master\",\"git\":\"https://api.github.com/repos/barcharcraz/nim-assimp/git/trees/bce96e35d35769d24507732c099ad555cb598e6c\",\"html\":\"https://github.com/barcharcraz/nim-assimp/tree/master/test\"}}]",
"https://github.com/zoispag/amka-nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zois Pagoulatos\"\ndescription   = \"A validator for greek social security number (AMKA)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n",
"https://github.com/nim-lang/basic2d": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Deprecated module from stdlib.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/nim-lang/nimble/master/nimble.nimble": "# Package\n\nversion       = \"0.13.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Nim package manager.\"\nlicense       = \"BSD\"\n\nbin = @[\"nimble\"]\nsrcDir = \"src\"\ninstallExt = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu):\n    foreignDep \"libssl-dev\"\n  else:\n    foreignDep \"openssl\"\n\ntask test, \"Run the Nimble tester!\":\n  withDir \"tests\":\n    exec \"nim c -r tester\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-tinyslation/master/translation.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Juan Carlos <juancarlospaco@gmail.com>\"\ndescription   = \"Text string translation from free online crowdsourced API. Tinyslation a tiny translation. Sync and Async support (MultiSync). No API Key required.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"translation\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/Knaque/stalinsort": "# Package\nversion = \"0.3.1\"\nauthor = \"Knaque\"\ndescription = \"A Nim implementation of the Stalin Sort algorithm.\"\nlicense = \"CC0-1.0\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n\n\nsrcDir = \"src\"",
"https://github.com/sillibird/nimhq": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"SilliBird\"\ndescription   = \"HQ Trivia API wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_sqlbuilder/master/sqlbuilder.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"SQL builder\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.1\"\n",
"https://raw.githubusercontent.com/jackhftang/taskqueue.nim/master/taskqueue.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Jack Tang\"\ndescription   = \"High precision and high performance task scheduler\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"timestamp >= 0.2.3\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"taskqueue.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html src/taskqueue.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://github.com/status-im/nim-eth": "version       = \"1.0.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum Common library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"nimcrypto\",\n         \"stint\",\n         \"secp256k1\",\n         \"rocksdb\",\n         \"chronos\",\n         \"chronicles\",\n         \"stew\",\n         \"nat_traversal\",\n         \"metrics\",\n         \"sqlite3_abi\",\n         \"confutils\",\n         \"testutils\"\n\nproc runTest(path: string, release: bool = true) =\n  echo \"\\nRunning: \", path\n  let releaseMode = if release: \"-d:release\" else: \"\"\n  exec \"nim c -r \" & releaseMode &\n    \" -d:chronicles_log_level=ERROR --verbosity:0 --hints:off \" & path\n  rmFile path\n\nproc runKeyfileTests() =\n  runTest(\"tests/keyfile/all_tests\")\n\ntask test_keyfile, \"run keyfile tests\":\n  runKeyfileTests()\n\nproc runKeysTests() =\n  runTest(\"tests/keys/all_tests\")\n\ntask test_keys, \"run keys tests\":\n  runKeysTests()\n\nproc runP2pTests() =\n  for filename in [\n      \"les/test_flow_control\",\n      \"test_auth\",\n      \"test_crypt\",\n      \"test_discovery\",\n      \"test_ecies\",\n      \"test_enode\",\n      \"test_rlpx_thunk\",\n      \"test_shh\",\n      \"test_shh_config\",\n      \"test_shh_connect\",\n      \"test_protocol_handlers\",\n      \"test_enr\",\n      \"test_hkdf\",\n      \"test_lru\",\n      \"test_ip_vote\",\n      \"test_discoveryv5\",\n      \"test_discoveryv5_encoding\",\n      \"test_routing_table\"\n    ]:\n    runTest(\"tests/p2p/\" & filename)\n\ntask test_p2p, \"run p2p tests\":\n  runP2pTests()\n\nproc runRlpTests() =\n  # workaround for github action CI\n  # mysterious crash on windows-2019 64bit mode\n  # cannot reproduce locally on windows-2019\n  # running in virtualbox\n  let releaseMode = if existsEnv\"PLATFORM\":\n                      getEnv\"PLATFORM\" != \"windows-amd64\"\n                    else: true\n\n  runTest(\"tests/rlp/all_tests\", releaseMode)\n\ntask test_rlp, \"run rlp tests\":\n  runRlpTests()\n\nproc runTrieTests() =\n  runTest(\"tests/trie/all_tests\")\n\ntask test_trie, \"run trie tests\":\n  runTrieTests()\n\nproc runDbTests() =\n  runTest(\"tests/db/all_tests\")\n\ntask test_db, \"run db tests\":\n  runDbTests()\n\ntask test, \"run tests\":\n  for filename in [\n      \"test_bloom\",\n    ]:\n    runTest(\"tests/\" & filename)\n\n  runKeyfileTests()\n  runKeysTests()\n  runP2pTests()\n  runRlpTests()\n  runTrieTests()\n  runDbTests()\n\nproc runDiscv5Tests() =\n  for filename in [\n      \"test_enr\",\n      \"test_hkdf\",\n      \"test_lru\",\n      \"test_ip_vote\",\n      \"test_discoveryv5\",\n      \"test_discoveryv5_encoding\",\n      \"test_routing_table\"\n    ]:\n    runTest(\"tests/p2p/\" & filename)\n\ntask test_discv5, \"run tests of discovery v5 and its dependencies\":\n  runKeysTests()\n  runRlpTests()\n  runDiscv5Tests()\n",
"https://api.github.com/repos/onionhammer/shoconim/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"861534b1406e52d8390d627882ecea46a825dc7f\",\"size\":17,\"url\":\"https://api.github.com/repos/onionhammer/shoconim/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/onionhammer/shoconim/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/861534b1406e52d8390d627882ecea46a825dc7f\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/shoconim/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/shoconim/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/861534b1406e52d8390d627882ecea46a825dc7f\",\"html\":\"https://github.com/onionhammer/shoconim/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"0f729e67e517f3fa8134541e5f897fb549fd57e6\",\"size\":1077,\"url\":\"https://api.github.com/repos/onionhammer/shoconim/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/onionhammer/shoconim/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/0f729e67e517f3fa8134541e5f897fb549fd57e6\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/shoconim/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/shoconim/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/0f729e67e517f3fa8134541e5f897fb549fd57e6\",\"html\":\"https://github.com/onionhammer/shoconim/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"79d0368bd8964ea813b7798ffe0e43ce017965f4\",\"size\":632,\"url\":\"https://api.github.com/repos/onionhammer/shoconim/contents/README.md?ref=master\",\"html_url\":\"https://github.com/onionhammer/shoconim/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/79d0368bd8964ea813b7798ffe0e43ce017965f4\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/shoconim/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/shoconim/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/79d0368bd8964ea813b7798ffe0e43ce017965f4\",\"html\":\"https://github.com/onionhammer/shoconim/blob/master/README.md\"}},{\"name\":\"shoco.babel\",\"path\":\"shoco.babel\",\"sha\":\"5e2df8f9a6b5a47f032f8a93655644cde9ada3c9\",\"size\":155,\"url\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco.babel?ref=master\",\"html_url\":\"https://github.com/onionhammer/shoconim/blob/master/shoco.babel\",\"git_url\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/5e2df8f9a6b5a47f032f8a93655644cde9ada3c9\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/shoconim/master/shoco.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco.babel?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/5e2df8f9a6b5a47f032f8a93655644cde9ada3c9\",\"html\":\"https://github.com/onionhammer/shoconim/blob/master/shoco.babel\"}},{\"name\":\"shoco.c\",\"path\":\"shoco.c\",\"sha\":\"43e5a3bfeb71cca57dd3bf3d2fff1c580c17ef38\",\"size\":5915,\"url\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco.c?ref=master\",\"html_url\":\"https://github.com/onionhammer/shoconim/blob/master/shoco.c\",\"git_url\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/43e5a3bfeb71cca57dd3bf3d2fff1c580c17ef38\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/shoconim/master/shoco.c\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco.c?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/43e5a3bfeb71cca57dd3bf3d2fff1c580c17ef38\",\"html\":\"https://github.com/onionhammer/shoconim/blob/master/shoco.c\"}},{\"name\":\"shoco.h\",\"path\":\"shoco.h\",\"sha\":\"f30058c93d2bdd80a4bd452746eae5ffedf34983\",\"size\":221,\"url\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco.h?ref=master\",\"html_url\":\"https://github.com/onionhammer/shoconim/blob/master/shoco.h\",\"git_url\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/f30058c93d2bdd80a4bd452746eae5ffedf34983\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/shoconim/master/shoco.h\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco.h?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/f30058c93d2bdd80a4bd452746eae5ffedf34983\",\"html\":\"https://github.com/onionhammer/shoconim/blob/master/shoco.h\"}},{\"name\":\"shoco.nim\",\"path\":\"shoco.nim\",\"sha\":\"be8e697112a382112c60f7c2a627d1ddb0af431d\",\"size\":1258,\"url\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco.nim?ref=master\",\"html_url\":\"https://github.com/onionhammer/shoconim/blob/master/shoco.nim\",\"git_url\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/be8e697112a382112c60f7c2a627d1ddb0af431d\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/shoconim/master/shoco.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco.nim?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/be8e697112a382112c60f7c2a627d1ddb0af431d\",\"html\":\"https://github.com/onionhammer/shoconim/blob/master/shoco.nim\"}},{\"name\":\"shoco_model.h\",\"path\":\"shoco_model.h\",\"sha\":\"7cbf22ba23c7c0d796498c0245322fc446ffb401\",\"size\":15920,\"url\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco_model.h?ref=master\",\"html_url\":\"https://github.com/onionhammer/shoconim/blob/master/shoco_model.h\",\"git_url\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/7cbf22ba23c7c0d796498c0245322fc446ffb401\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/shoconim/master/shoco_model.h\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/shoconim/contents/shoco_model.h?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/shoconim/git/blobs/7cbf22ba23c7c0d796498c0245322fc446ffb401\",\"html\":\"https://github.com/onionhammer/shoconim/blob/master/shoco_model.h\"}}]",
"https://github.com/nimious/io-usb.git": "# Package\n\nversion     = \"1.1\"\nauthor      = \"Gerke Max Preussner <info@nimio.us>\"\ndescription = \"Bindings for libusb, the cross-platform user library to access USB devices.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/c-blake/cligen/master/cligen.nimble": "# Package\nversion     = \"1.4.1\"\nauthor      = \"Charles Blake\"\ndescription = \"Infer & generate command-line interace/option/argument parser\"\nlicense     = \"MIT/ISC\"\n\n# Deps\nrequires    \"nim >= 0.19.2\"\nskipDirs = @[\"test\"]\n",
"https://github.com/Vladar4/sdl2_nim": "# Package\n\nversion       = \"2.0.12.0\"\nauthor        = \"Vladar\"\ndescription   = \"Wrapper of the SDL 2 library for the Nim language.\"\nlicense       = \"zlib\"\n\n# Dependencies\n\nrequires \"nim >= 0.12.0\"\n\nskipDirs = @[\"docs\", \"examples\"]\n\n",
"https://raw.githubusercontent.com/liquid600pgm/rdgui/master/rdgui.nimble": "# Package\n\nversion = \"0.1.0\"\nauthor = \"liquid600pgm\"\ndescription = \"A modular GUI toolkit for rapid\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"rapid\"\n",
"https://github.com/juancarlospaco/parselicense": "version     = \"0.1.0\"\nauthor      = \"Juan Carlos\"\ndescription = \"Parse Standard SPDX Licenses from string to Enum\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nskipDirs    = @[\"tools\", \"docs\", \"javascript\", \"examples\"]\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/samdmarshall/libplist.nim/master/libplist.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"wrapper around libplist https://github.com/libimobiledevice/libplist\"\nlicense       = \"MIT\"\n\nsrcDir = \"src/\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://github.com/FedericoCeratto/nim-morelogging": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Logging helpers\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.0\", \"zip\"\n\n\ntask functional_tests, \"Functional tests\":\n  exec \"nim c -p:. tests/test_morelogging.nim\"\n  exec \"nim c -p:. tests/test_threaded.nim\"\n  exec \"./tests/test_morelogging\"\n  exec \"./tests/test_threaded\"\n",
"https://github.com/vitreo12/omni": "# MIT License\n# \n# Copyright (c) 2020 Francesco Cameli\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nversion       = \"0.2.3\"\nauthor        = \"Francesco Cameli\"\ndescription   = \"omni is a DSL for low-level audio programming.\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 1.0.0\"\nrequires \"cligen >= 1.0.0\"\n\n#Ignore omni_lang\nskipDirs = @[\"omni_lang\"]\n\n#Install examples\ninstallDirs = @[\"examples\"]\n\n#Compiler executable\nbin = @[\"omni\"]\n\n#If using \"nimble install\" instead of \"nimble installOmni\", make sure omni-lang is still getting installed\nbefore install:\n  withDir(getPkgDir() & \"/omni_lang\"):\n    exec \"nimble install\"\n\n#before/after are BOTH needed for any of the two to work\nafter install:\n  discard\n    \n#As nimble install, but with -d:release, -d:danger and --opt:speed. Also installs omni_lang.\ntask installOmni, \"Install the omni-lang package and the omni compiler\":\n  #Build and install the omni compiler executable. This will also trigger the \"before install\" to install omni_lang\n  exec \"nimble install --passNim:-d:release --passNim:-d:danger --passNim:--opt:speed\"\n\n#Needed for the walkDir function\nimport os\n\nproc runTestsInFolder(path : string, top_level : bool = false) : void =\n  for kind, file in walkDir(path):\n    let splitFile = file.splitFile\n    if kind == pcFile:\n      if splitFile.ext == \".nim\":\n        exec (\"nim c -r \" & file)\n    elif kind == pcDir:\n      if top_level and splitFile.name == \"utils\": #skip top level \"utils\" folder\n        continue\n      runTestsInFolder(file, false)\n\ntask test, \"Execute all tests\":\n  let testsDir = getPkgDir() & \"/tests\"\n  runTestsInFolder(testsDir, true)\n\n#Install the omni compiler executable before running the tests on CI \nbefore testCI:\n  exec \"nimble install\" \n\ntask testCI, \"Run tests on CI: it installs omni / omni_lang first\":\n  exec \"nimble test\"\n\n#before/after are BOTH needed for any of the two to work\nafter testCI:\n  discard\n",
"https://raw.githubusercontent.com/h3rald/nimhttpd/master/nimhttpd.nimble": "import\n  os\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen system.fileExists(thisModuleFile.parentDir / \"src/nimhttpdpkg/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/nimhttpdpkg/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import nimhttpdpkg/config\n\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = \"MIT\"\nbin           = @[\"nimhttpd\"]\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\nconst compile = \"nim c -d:release\"\nconst linux_x64 = \"--cpu:amd64 --os:linux -o:nimhttpd\"\nconst windows_x64 = \"--cpu:amd64 --os:windows -o:nimhttpd.exe\"\nconst macosx_x64 = \"-o:nimhttpd\"\nconst program = \"nimhttpd\"\nconst program_file = \"src/nimhttpd.nim\"\nconst zip = \"zip -X\"\n\nproc shell(command, args: string, dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"nimhttpd\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build NimHTTPd for Windows (x64)\":\n  shell compile, windows_x64, program_file\n\ntask linux_x64_build, \"Build NimHTTPd for Linux (x64)\":\n  shell compile, linux_x64,  program_file\n  \ntask macosx_x64_build, \"Build NimHTTPd for Mac OS X (x64)\":\n  shell compile, macosx_x64, program_file\n\ntask release, \"Release NimHTTPd\":\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, filename_for(\"windows\", \"x64\"), program & \".exe\"\n  shell \"rm\", program & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, filename_for(\"linux\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, filename_for(\"macosx\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n ALL DONE!\"\n\n",
"https://raw.githubusercontent.com/planetis-m/protocoled/master/protocoled.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Antonis\"\ndescription   = \"An interface macro for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.9\"\n",
"https://api.github.com/repos/YesDrX/bitarray/contents": "[{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"cecf5e59a104efcc0cea40eb7b0660d28676290f\",\"size\":2852,\"url\":\"https://api.github.com/repos/YesDrX/bitarray/contents/README.md?ref=master\",\"html_url\":\"https://github.com/YesDrX/bitarray/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/YesDrX/bitarray/git/blobs/cecf5e59a104efcc0cea40eb7b0660d28676290f\",\"download_url\":\"https://raw.githubusercontent.com/YesDrX/bitarray/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/YesDrX/bitarray/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/YesDrX/bitarray/git/blobs/cecf5e59a104efcc0cea40eb7b0660d28676290f\",\"html\":\"https://github.com/YesDrX/bitarray/blob/master/README.md\"}},{\"name\":\"bitarray.nimble\",\"path\":\"bitarray.nimble\",\"sha\":\"3549cea3f074ff9fec19c6bc276ba3060ddb4aae\",\"size\":175,\"url\":\"https://api.github.com/repos/YesDrX/bitarray/contents/bitarray.nimble?ref=master\",\"html_url\":\"https://github.com/YesDrX/bitarray/blob/master/bitarray.nimble\",\"git_url\":\"https://api.github.com/repos/YesDrX/bitarray/git/blobs/3549cea3f074ff9fec19c6bc276ba3060ddb4aae\",\"download_url\":\"https://raw.githubusercontent.com/YesDrX/bitarray/master/bitarray.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/YesDrX/bitarray/contents/bitarray.nimble?ref=master\",\"git\":\"https://api.github.com/repos/YesDrX/bitarray/git/blobs/3549cea3f074ff9fec19c6bc276ba3060ddb4aae\",\"html\":\"https://github.com/YesDrX/bitarray/blob/master/bitarray.nimble\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"9353777aa2b4eedc1aea9bd331bcae89a7a4842b\",\"size\":0,\"url\":\"https://api.github.com/repos/YesDrX/bitarray/contents/docs?ref=master\",\"html_url\":\"https://github.com/YesDrX/bitarray/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/YesDrX/bitarray/git/trees/9353777aa2b4eedc1aea9bd331bcae89a7a4842b\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/YesDrX/bitarray/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/YesDrX/bitarray/git/trees/9353777aa2b4eedc1aea9bd331bcae89a7a4842b\",\"html\":\"https://github.com/YesDrX/bitarray/tree/master/docs\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"542ea782b6fd852d69e97d34c7b5a279fb7dfbd3\",\"size\":0,\"url\":\"https://api.github.com/repos/YesDrX/bitarray/contents/src?ref=master\",\"html_url\":\"https://github.com/YesDrX/bitarray/tree/master/src\",\"git_url\":\"https://api.github.com/repos/YesDrX/bitarray/git/trees/542ea782b6fd852d69e97d34c7b5a279fb7dfbd3\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/YesDrX/bitarray/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/YesDrX/bitarray/git/trees/542ea782b6fd852d69e97d34c7b5a279fb7dfbd3\",\"html\":\"https://github.com/YesDrX/bitarray/tree/master/src\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"66df2b9fc032bc43d4327e38b896f6867eba60db\",\"size\":0,\"url\":\"https://api.github.com/repos/YesDrX/bitarray/contents/tests?ref=master\",\"html_url\":\"https://github.com/YesDrX/bitarray/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/YesDrX/bitarray/git/trees/66df2b9fc032bc43d4327e38b896f6867eba60db\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/YesDrX/bitarray/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/YesDrX/bitarray/git/trees/66df2b9fc032bc43d4327e38b896f6867eba60db\",\"html\":\"https://github.com/YesDrX/bitarray/tree/master/tests\"}}]",
"https://github.com/treeform/flippy": "# Package\n\nversion       = \"0.4.7\"\nauthor        = \"treeform\"\ndescription   = \"Flippy is a simple 2d image and drawing library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"vmath >= 0.3.2\"\nrequires \"chroma >= 0.1.5\"\nrequires \"nimPNG >= 0.2.6\"\nrequires \"supersnappy >= 1.0.0\"\nrequires \"bumpy >= 0.2.1\"\n",
"https://raw.githubusercontent.com/nim-lang/dialogs/master/dialogs.nimble": "[Package]\r\nname          = \"dialogs\"\r\nversion       = \"1.1.1\"\r\nauthor        = \"Anonymous\"\r\ndescription   = \"portable dialogs for Nim/Aporia\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0, gtk2 >= 1.0\"\r\n",
"https://github.com/achesak/nim-playlists": "[Package]\nname = \"playlists\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with M3U, PLS, and XSPF playlist files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/rxi/cmixer-nim/master/cmixer.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rxi\"\ndescription   = \"Lightweight audio mixer for games\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n",
"https://raw.githubusercontent.com/treeform/quickjwt/master/quickjwt.nimble": "# Package\nversion       = \"0.2.1\"\nauthor        = \"Andre von Houck\"\ndescription   = \"JSON Web Tokens for Nim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.1.1\"\n\n",
"https://raw.githubusercontent.com/paranim/paramidi/master/paramidi.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"oakes\"\ndescription   = \"A library for making MIDI music\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/xmonader/nim-asciitables/master/asciitables.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"terminal ascii tables for nim\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/PMunch/SDLGamelib/master/gamelib.nimble": "[Package]\nname\t\t= \"gamelib\"\nversion\t\t= \"0.0.1\"\nauthor\t\t= \"Peter Munch-Ellingsen\"\ndescription\t= \"\"\"A library of functions to make creating games using Nim and SDL2 easier.\nThis does not intend to be a full blown engine and tries to keep all the components loosly coupled so that individual parts can be used separately.\"\"\"\nlicense\t\t= \"MIT\"\n\nSkipFiles\t= \"\"\"\nalite.html\nLICENSE\n.gitignore\nREADME.md\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\nnim  >= 0.14.0\nsdl2 >= 1.1\n\"\"\"\n",
"https://github.com/achesak/nim-noaa": "[Package]\nname = \"noaa\"\nversion = \"0.1\"\nauthor = \"Adam Chesak\"\ndescription = \"NOAA weather API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://raw.githubusercontent.com/PMunch/notificatcher/master/notificatcher.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"PMunch\"\ndescription   = \"Small program to read freedesktop notifications and format them as strings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"notificatcher\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"dbus\"\nrequires \"https://github.com/PMunch/docopt.nim#dispatch\"\n",
"https://raw.githubusercontent.com/SolitudeSF/mpwc/master/mpwc.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Master Password command line utility\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"mpwc\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"masterpassword >= 0.2.0\", \"cligen >= 1.0.0\"\n",
"https://raw.githubusercontent.com/Knaque/nim-syllables/master/syllables.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Reilly Moore\"\ndescription   = \"Syllable estimation for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"regex >= 0.19.0\"\nrequires \"https://github.com/disruptek/testes >= 1.1.1\"",
"https://github.com/qqtop/nimcx": "[Package]\n\nname          = \"nimcx\"\nversion       = \"1.0.8\"\nauthor        = \"qqTop\"\ndescription   = \"Color and utilities library for a happy linux terminal.\"\nlicense       = \"MIT\"\n\n[Deps]\n\nRequires : \"nim >= 1.2.6\"\n\n",
"https://api.github.com/repos/micklat/NimBorg/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"3c9ef53d5df7506f8e4038ce2b3db4b461371acd\",\"size\":12,\"url\":\"https://api.github.com/repos/micklat/NimBorg/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/micklat/NimBorg/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/3c9ef53d5df7506f8e4038ce2b3db4b461371acd\",\"download_url\":\"https://raw.githubusercontent.com/micklat/NimBorg/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/micklat/NimBorg/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/3c9ef53d5df7506f8e4038ce2b3db4b461371acd\",\"html\":\"https://github.com/micklat/NimBorg/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"d30b81dbefbc21245375925f7b8d325a2464f8eb\",\"size\":1086,\"url\":\"https://api.github.com/repos/micklat/NimBorg/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/micklat/NimBorg/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/d30b81dbefbc21245375925f7b8d325a2464f8eb\",\"download_url\":\"https://raw.githubusercontent.com/micklat/NimBorg/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/micklat/NimBorg/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/d30b81dbefbc21245375925f7b8d325a2464f8eb\",\"html\":\"https://github.com/micklat/NimBorg/blob/master/LICENSE\"}},{\"name\":\"NimBorg.babel\",\"path\":\"NimBorg.babel\",\"sha\":\"562e4ae63e7b25698105e2ff967924ac026d40c2\",\"size\":225,\"url\":\"https://api.github.com/repos/micklat/NimBorg/contents/NimBorg.babel?ref=master\",\"html_url\":\"https://github.com/micklat/NimBorg/blob/master/NimBorg.babel\",\"git_url\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/562e4ae63e7b25698105e2ff967924ac026d40c2\",\"download_url\":\"https://raw.githubusercontent.com/micklat/NimBorg/master/NimBorg.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/micklat/NimBorg/contents/NimBorg.babel?ref=master\",\"git\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/562e4ae63e7b25698105e2ff967924ac026d40c2\",\"html\":\"https://github.com/micklat/NimBorg/blob/master/NimBorg.babel\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"3f0e7446d81fe3ede371e66197c1cf7779f76226\",\"size\":728,\"url\":\"https://api.github.com/repos/micklat/NimBorg/contents/README.md?ref=master\",\"html_url\":\"https://github.com/micklat/NimBorg/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/3f0e7446d81fe3ede371e66197c1cf7779f76226\",\"download_url\":\"https://raw.githubusercontent.com/micklat/NimBorg/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/micklat/NimBorg/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/3f0e7446d81fe3ede371e66197c1cf7779f76226\",\"html\":\"https://github.com/micklat/NimBorg/blob/master/README.md\"}},{\"name\":\"TODO.txt\",\"path\":\"TODO.txt\",\"sha\":\"d6ba5edcd6b9680465448ce564cde91be454f050\",\"size\":711,\"url\":\"https://api.github.com/repos/micklat/NimBorg/contents/TODO.txt?ref=master\",\"html_url\":\"https://github.com/micklat/NimBorg/blob/master/TODO.txt\",\"git_url\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/d6ba5edcd6b9680465448ce564cde91be454f050\",\"download_url\":\"https://raw.githubusercontent.com/micklat/NimBorg/master/TODO.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/micklat/NimBorg/contents/TODO.txt?ref=master\",\"git\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/d6ba5edcd6b9680465448ce564cde91be454f050\",\"html\":\"https://github.com/micklat/NimBorg/blob/master/TODO.txt\"}},{\"name\":\"changelog.txt\",\"path\":\"changelog.txt\",\"sha\":\"bd7b93695fd4e0947058064445fdbe6afb1529bf\",\"size\":98,\"url\":\"https://api.github.com/repos/micklat/NimBorg/contents/changelog.txt?ref=master\",\"html_url\":\"https://github.com/micklat/NimBorg/blob/master/changelog.txt\",\"git_url\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/bd7b93695fd4e0947058064445fdbe6afb1529bf\",\"download_url\":\"https://raw.githubusercontent.com/micklat/NimBorg/master/changelog.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/micklat/NimBorg/contents/changelog.txt?ref=master\",\"git\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/bd7b93695fd4e0947058064445fdbe6afb1529bf\",\"html\":\"https://github.com/micklat/NimBorg/blob/master/changelog.txt\"}},{\"name\":\"contributors.txt\",\"path\":\"contributors.txt\",\"sha\":\"c18467c6822bb4e93d2a889e6a7c501585c67b20\",\"size\":151,\"url\":\"https://api.github.com/repos/micklat/NimBorg/contents/contributors.txt?ref=master\",\"html_url\":\"https://github.com/micklat/NimBorg/blob/master/contributors.txt\",\"git_url\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/c18467c6822bb4e93d2a889e6a7c501585c67b20\",\"download_url\":\"https://raw.githubusercontent.com/micklat/NimBorg/master/contributors.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/micklat/NimBorg/contents/contributors.txt?ref=master\",\"git\":\"https://api.github.com/repos/micklat/NimBorg/git/blobs/c18467c6822bb4e93d2a889e6a7c501585c67b20\",\"html\":\"https://github.com/micklat/NimBorg/blob/master/contributors.txt\"}},{\"name\":\"nimborg\",\"path\":\"nimborg\",\"sha\":\"475942ed6a100f179a747f395c559084cdaacdec\",\"size\":0,\"url\":\"https://api.github.com/repos/micklat/NimBorg/contents/nimborg?ref=master\",\"html_url\":\"https://github.com/micklat/NimBorg/tree/master/nimborg\",\"git_url\":\"https://api.github.com/repos/micklat/NimBorg/git/trees/475942ed6a100f179a747f395c559084cdaacdec\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/micklat/NimBorg/contents/nimborg?ref=master\",\"git\":\"https://api.github.com/repos/micklat/NimBorg/git/trees/475942ed6a100f179a747f395c559084cdaacdec\",\"html\":\"https://github.com/micklat/NimBorg/tree/master/nimborg\"}}]",
"https://raw.githubusercontent.com/liquid600pgm/delight/master/delight.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"liquid600pgm\"\ndescription   = \"Engine-agnostic library for computing 2D raycasted lights\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"glm >= 1.1.1\"\n",
"https://github.com/Skrylar/nim-jack": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Skrylar\"\ndescription   = \"Shiny bindings to the JACK Audio Connection Kit.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://github.com/bung87/finalseg": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zhoupeng\"\ndescription   = \"jieba\\'s finalseg port to nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"regex\"\n\n",
"https://github.com/zendbit/nim.zfcore": "# Package\nversion     = \"1.1.3\"\nauthor      = \"Amru Rosyada\"\ndescription = \"High performance asynchttpserver and web framework for nim lang.\"\nlicense     = \"BSD\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 1.4.0\"\nrequires \"zfblast >= 0.2.0\"\nrequires \"uri3 >= 0.1.4\"\nrequires \"stdext >= 0.0.8\"\n",
"https://raw.githubusercontent.com/rockcavera/nim-iputils/master/iputils.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"rockcavera\"\ndescription   = \"Utilities for use with IP. It has functions for IPv4, IPv6 and CIDR.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"stew\"\n",
"https://api.github.com/repos/reactormonk/nim-kwin/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"739a54a856e2edd3381bad98e0398a26def7d6a0\",\"size\":9,\"url\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/reactormonk/nim-kwin/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/739a54a856e2edd3381bad98e0398a26def7d6a0\",\"download_url\":\"https://raw.githubusercontent.com/reactormonk/nim-kwin/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/739a54a856e2edd3381bad98e0398a26def7d6a0\",\"html\":\"https://github.com/reactormonk/nim-kwin/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"5e59499f4f8de37b6f0c298506a9c4ebcc30638e\",\"size\":1079,\"url\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/reactormonk/nim-kwin/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/5e59499f4f8de37b6f0c298506a9c4ebcc30638e\",\"download_url\":\"https://raw.githubusercontent.com/reactormonk/nim-kwin/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/5e59499f4f8de37b6f0c298506a9c4ebcc30638e\",\"html\":\"https://github.com/reactormonk/nim-kwin/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"d698518b3b68b47ef1fd605d3e06926728f93257\",\"size\":45,\"url\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/README.md?ref=master\",\"html_url\":\"https://github.com/reactormonk/nim-kwin/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/d698518b3b68b47ef1fd605d3e06926728f93257\",\"download_url\":\"https://raw.githubusercontent.com/reactormonk/nim-kwin/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/d698518b3b68b47ef1fd605d3e06926728f93257\",\"html\":\"https://github.com/reactormonk/nim-kwin/blob/master/README.md\"}},{\"name\":\"code-gen.rb\",\"path\":\"code-gen.rb\",\"sha\":\"b4623b05847996781b8b0557efb7e6c633013658\",\"size\":5400,\"url\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/code-gen.rb?ref=master\",\"html_url\":\"https://github.com/reactormonk/nim-kwin/blob/master/code-gen.rb\",\"git_url\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/b4623b05847996781b8b0557efb7e6c633013658\",\"download_url\":\"https://raw.githubusercontent.com/reactormonk/nim-kwin/master/code-gen.rb\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/code-gen.rb?ref=master\",\"git\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/b4623b05847996781b8b0557efb7e6c633013658\",\"html\":\"https://github.com/reactormonk/nim-kwin/blob/master/code-gen.rb\"}},{\"name\":\"kwin.babel\",\"path\":\"kwin.babel\",\"sha\":\"e1b7a01862d4400bbf001da6eac1f42a6f850949\",\"size\":218,\"url\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/kwin.babel?ref=master\",\"html_url\":\"https://github.com/reactormonk/nim-kwin/blob/master/kwin.babel\",\"git_url\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/e1b7a01862d4400bbf001da6eac1f42a6f850949\",\"download_url\":\"https://raw.githubusercontent.com/reactormonk/nim-kwin/master/kwin.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/kwin.babel?ref=master\",\"git\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/e1b7a01862d4400bbf001da6eac1f42a6f850949\",\"html\":\"https://github.com/reactormonk/nim-kwin/blob/master/kwin.babel\"}},{\"name\":\"kwin.nimrod.cfg\",\"path\":\"kwin.nimrod.cfg\",\"sha\":\"5a6ed1c720fc8fcdcdda9140eddc029c10dc5a6c\",\"size\":10,\"url\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/kwin.nimrod.cfg?ref=master\",\"html_url\":\"https://github.com/reactormonk/nim-kwin/blob/master/kwin.nimrod.cfg\",\"git_url\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/5a6ed1c720fc8fcdcdda9140eddc029c10dc5a6c\",\"download_url\":\"https://raw.githubusercontent.com/reactormonk/nim-kwin/master/kwin.nimrod.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/kwin.nimrod.cfg?ref=master\",\"git\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/blobs/5a6ed1c720fc8fcdcdda9140eddc029c10dc5a6c\",\"html\":\"https://github.com/reactormonk/nim-kwin/blob/master/kwin.nimrod.cfg\"}},{\"name\":\"kwin\",\"path\":\"kwin\",\"sha\":\"07dfabf2a9423e71742fb531340217788f8d7104\",\"size\":0,\"url\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/kwin?ref=master\",\"html_url\":\"https://github.com/reactormonk/nim-kwin/tree/master/kwin\",\"git_url\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/trees/07dfabf2a9423e71742fb531340217788f8d7104\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/reactormonk/nim-kwin/contents/kwin?ref=master\",\"git\":\"https://api.github.com/repos/reactormonk/nim-kwin/git/trees/07dfabf2a9423e71742fb531340217788f8d7104\",\"html\":\"https://github.com/reactormonk/nim-kwin/tree/master/kwin\"}}]",
"https://github.com/yglukhov/typelists": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Type lists\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20\"\n",
"https://raw.githubusercontent.com/treeform/dumpincludes/master/dumpincludes.nimble": "version     = \"0.0.1\"\nauthor      = \"treeform\"\ndescription = \"See where your exe size comes from.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nbin = @[\"dumpincludes\"]\n\nrequires \"nim >= 1.2.2\"\nrequires \"cligen >= 1.3.2\"\n",
"https://github.com/planety/Prologue": "# Package\n\nversion       = \"0.4.4\"\nauthor        = \"flywind\"\ndescription   = \"Prologue is an elegant and high performance web framework\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\nrequires \"nim >= 1.4.0\"\nrequires \"regex >= 0.16.2\"\nrequires \"nimcrypto >= 0.5.4\"\nrequires \"cookiejar >= 0.2.0\"\nrequires \"httpx >= 0.2.0\"\nrequires \"logue >= 0.2.0\"\n\n\n# tests\ntask tests, \"Run all tests\":\n  exec \"testament all\"\n\ntask tstdbackend, \"Test asynchttpserver backend\":\n  exec \"nim c -r -d:release -d:usestd tests/server/tserver_application.nim\"\n\ntask texamples, \"Test examples\":\n  exec \"nim c -d:release tests/compile/test_examples/examples.nim\"\n  exec \"nim c -d:release -d:usestd tests/compile/test_examples/examples.nim\"\n\ntask treadme, \"Test Readme\":\n  exec \"nim c -d:release tests/compile/test_readme/readme.nim\"\n\ntask tcompile, \"Test Compile\":\n  exec \"nim c -r -d:release tests/compile/test_compile/test_compile.nim\"\n\ntask docs, \"Only for gh-pages, not for users\":\n  exec \"mkdocs build\"\n  exec \"mkdocs gh-deploy\"\n\ntask apis, \"Only for api\":\n  exec \"nim doc --verbosity:0 --warnings:off --project --index:on \" &\n    \"--git.url:https://github.com/planety/prologue \" &\n    \"--git.commit:devel \" &\n    \"-o:docs/coreapi \" &\n    \"src/prologue/core/application.nim\"\n\n  exec \"nim buildIndex -o:docs/coreapi/theindex.html docs/coreapi\"\n\n  exec \"nim doc --verbosity:0 --warnings:off --project --index:on \" &\n    \"--git.url:https://github.com/planety/prologue \" &\n    \"--git.commit:devel \" &\n    \"-o:docs/plugin \" &\n    \"src/prologue/plugin.nim\"\n\n  exec \"nim buildIndex -o:docs/plugin/theindex.html docs/plugin\"\n\ntask redis, \"Install redis\":\n  exec \"nimble install redis@#c02d404 -y\"\n\ntask karax, \"Install karax\":\n  exec \"\"\"nimble install karax@\">= 1.1.2\" -y\"\"\"\n\ntask websocketx, \"Install websocketx\":\n  exec \"\"\"nimble install websocketx@\">= 0.1.2\" -y\"\"\"\n\ntask extension, \"Install all extensions\":\n  exec \"nimble redis\"\n  exec \"nimble karax\"\n  exec \"nimble websocketx\"\n",
"https://raw.githubusercontent.com/CosmicToast/pipe/master/pipe.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Chloe Kudryavtsev\"\ndescription   = \"Pipe operator for nim.\"\nlicense       = \"MIT\"\n\n# Base\n\nskipDirs = @[\"tests\"]\n\ntask clean, \"Clean various files\":\n    rmDir \"tests/nimcache\"\n    rmDir \"nimcache\"\n    rmfile \"pipe\"\n    rmfile \"tests/test\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n# Tests\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/test\"\n",
"https://github.com/samuelroy/coco": "import strutils\n\n# Package\n\nversion       = \"0.0.3\" \nauthor        = \"Samuel Roy\"\ndescription   = \"Code coverage with line and branch support for Nim\"\nlicense       = \"MIT\"\n\ninstallFiles= @[\"coco.nim\"]\nbin = @[\"coco\"]\n\n# Deps\n\nrequires \"nim >= 0.19.0\"\nrequires \"cligen\"\nrequires \"glob\"\n\ntask coverage, \"Generate code coverage report\":\n  echo \"Generate code coverage report\"\n  exec \"./coco\"\n\n",
"https://raw.githubusercontent.com/nim-lang/Aporia/master/aporia.nimble": "[Package]\nname          = \"aporia\"\nversion       = \"0.4.2\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A Nim IDE.\"\nlicense       = \"GPLv2\"\nbin           = \"aporia\"\n\nskipExt = \"nim\"\n\n[Deps]\nRequires: \"nim >= 0.11.0, gtk2 >= 1.3, dialogs >= 1.1.1\"\n",
"https://raw.githubusercontent.com/Cirru/parser.nim/master/cirru_parser.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"jiyinyiyong\"\ndescription   = \"Parser for Cirru syntax\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\n# Tasks\n\ntask t, \"Runs the test suite\":\n  exec \"nim c --hints:off -r tests/test_iterator\"\n  exec \"nim c --hints:off -r tests/test_parser\"\n  exec \"nim c --hints:off -r tests/test_lexer\"\n  exec \"nim c --hints:off -r tests/test_types\"\n\ntask perf, \"try large file\":\n  exec \"nim compile --verbosity:0 --profiler:on --stackTrace:on --hints:off -r tests/parse_cost\"\n",
"https://raw.githubusercontent.com/bluenote10/closure_methods/master/oop_utils.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Fabian Keller\"\ndescription   = \"Macro for building OOP class hierarchies based on closure methods.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.19.9\"\n\nimport ospaths\nimport oswalkdir\n\nimport algorithm\nimport sequtils\nimport sugar\nimport strutils\nimport strformat\n\ntype\n  Mode = enum\n    ModeC, ModeJS\n\n  File = string\n\nproc getFiles(baseDir: File): seq[File] =\n  result = newSeq[File]()\n  for file in oswalkdir.walkDirRec(baseDir):\n    let (_, name, ext) = file.splitFile()\n    if ext == \".nim\" and (name.contains(\"test\") or name.contains(\"error\")):\n      result.add(file)\n  result.sort((a, b) => cmp(a, b))\n\n\nproc deleteRunnable(file: File, mode: Mode) =\n  let binFileName =\n    if mode == ModeC:\n      file.changeFileExt(ExeExt)\n    else:\n      file.changeFileExt(\"js\")\n  rmFile(binFileName)\n\nproc relativeTo(path: File, base: File): File =\n  let baseSuffixed = base & \"/\"\n  if path.len > baseSuffixed.len:\n    path[baseSuffixed.len..^1]\n  else:\n    path\n\nlet colRed = \"\\e[1;31m\"\nlet colGreen = \"\\e[1;32m\"\nlet colYellow = \"\\e[1;33m\"\nlet colBlue = \"\\e[1;34m\"\nlet colWhite = \"\\e[1;37m\"\nlet colReset = \"\\e[00m\"\n\nhint(\"QuitCalled\", false)\n\nproc printPassed() =\n  echo &\"   {colGreen}[passed]{colReset}\"\n\nproc printFailed(output: string, suffix = \"\") =\n  echo &\"   {colRed}[failed] {suffix}{colReset}\"\n  echo &\"{colRed}------------------------------------------------{colReset}\"\n  echo output\n  echo &\"{colRed}------------------------------------------------{colReset}\"\n\ntask test, \"Runs the test suite\":\n  ## Executes all tests.\n  let baseDir = system.getCurrentDir() / \"tests\"\n  var files = getFiles(baseDir)\n\n  if files.len < 1:\n    echo &\"{colRed}Warning{colReset}: No tests found!\"\n    quit(\"\", 1)\n\n  let mode = ModeC\n  let compiler = if mode == ModeC: \"c\" else: \"js\"\n\n  var numPassed = 0\n  var numFailed = 0\n\n  for file in files:\n    let (_, name, _) = file.splitFile()\n    let expectedError = name.contains(\"error\")\n\n    let relativePath = file.relativeTo(baseDir)\n    echo &\" * {colYellow}{relativePath}{colReset}\"\n    let ret = gorgeEx &\"nim -r -d:release --colors:on {compiler} {file}\"\n    deleteRunnable(file, mode)\n\n    if not expectedError:\n      if ret.exitCode == 0:\n        printPassed()\n        numPassed += 1\n      else:\n        numFailed += 1\n        printFailed(ret.output)\n    else:\n      if ret.exitCode == 0:\n        printFailed(ret.output, \"test expected to fail, but passed\")\n        numFailed += 1\n      else:\n        var expectedMessage: string\n        var i = 0\n        for line in staticRead(file).splitLines():\n          if i == 1:\n            expectedMessage = line.strip()\n          inc i\n        if ret.output.contains(expectedMessage):\n          numPassed += 1\n          printPassed()\n        else:\n          numFailed += 1\n          printFailed(ret.output, &\"missing error message '{expectedMessage}'\")\n\n  if numFailed == 0:\n    echo &\"\\n{colGreen}Success{colReset}: All {numPassed} tests passed.\"\n  else:\n    echo &\"\\n{colRed}Failed{colReset}: {numFailed} out of {numFailed+numPassed} tests failed.\"\n    quit(\"\", 1)\n\n",
"https://github.com/yglukhov/nim-jwt.git": "# Package\nversion       = \"0.2\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"JSON Web Tokens for Nim\"\nlicense       = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.19.0\"\nrequires \"bearssl#68c6d27304245c948526487b37e10951acf7dbc8\"\nrequires \"https://github.com/yglukhov/bearssl_pkey_decoder\"\n",
"https://raw.githubusercontent.com/jiro4989/svgo/master/svgo.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"jiro4989\"\ndescription   = \"SVG output from a shell.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"svgo\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 0.9.32\"\n\nimport os, strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"svgo\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/nimscale/forestdb": "#Package\n\nversion       = \"1.2\"\nauthor        = \"Nimscale\"\ndescription   = \"ForestDB bind for Nim.\"\nlicense       = \"Apache Licence 2.0\"\n\nsrcDir = \"src\"\nbin = @[\"forestdb\"]\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\"\n\ntask build, \"Building forestdb!\":\n  setCommand \"nim e build.nims\"\n  #exec \"nim e build.nims\"\n\n",
"https://raw.githubusercontent.com/oswjk/nimpb/master/nimpb.nimble": "version = \"0.2.0\"\nauthor = \"Oskari Timperi\"\ndescription = \"protobuf library for Nim\"\nlicense = \"MIT\"\n\nskipDirs = @[\"examples\", \"tests\", \"protobuf-3.5.1\"]\n\nbin = @[\"nimpb/compiler/nimpb_build\"]\n\nrequires \"nim >= 0.19.0\"\n\n# Hard dependency for now. In the future we could make nimpb_protoc download\n# stuff on-demand which would make the dependency a bit lighter. Especially\n# if a user already has the protoc compiler somewhere, in which case\n# nimpb_protoc might be unnecessary.\nrequires \"nimpb_protoc\"\n\nimport ospaths, strformat\n\ntask build_protobuf, \"Download protobuf, build it and then build the conformance test suite\":\n    if not fileExists(\"protobuf-all-3.5.1.zip\"):\n        exec \"wget https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-all-3.5.1.zip\"\n    if not dirExists(\"protobuf-3.5.1\"):\n        exec \"unzip protobuf-all-3.5.1.zip\"\n    withDir \"protobuf-3.5.1\":\n        if not fileExists(\"Makefile\"):\n            exec \"./configure\"\n        exec \"make\"\n        withDir \"conformance\":\n            exec \"make\"\n\ntask run_conformance_tests, \"Run the conformance test suite\":\n    var testDir = \"tests/conformance\"\n    var proto = testDir / \"test_messages_proto3.proto\"\n    var testRunner = \"./protobuf-3.5.1/conformance/conformance-test-runner\"\n    exec &\"./nimpb/compiler/nimpb_build -I={testDir} --out={testDir} {proto}\"\n    exec &\"./nimpb/compiler/nimpb_build -I={testDir} --out={testDir} {testDir}/conformance.proto\"\n    exec &\"nimble c {testDir}/conformance_nim.nim\"\n    exec &\"{testRunner} {testDir}/conformance_nim\"\n\ntask gen_wkt, \"Re-generate WKT's\":\n    var incdir = \"../nimpb_protoc/src/nimpb_protocpkg/protobuf/include/google/protobuf\"\n    var outdir = \"nimpb/wkt\"\n    for proto in listFiles(incdir):\n        echo(&\"COMPILING {proto}\")\n        exec &\"./nimpb/compiler/nimpb_build -I={incdir} --out={outdir} {proto}\"\n",
"https://github.com/williamd1k0/chrono": "# Package\nversion       = \"0.1.0\"\nauthor        = \"William Tumeo\"\ndescription   = \"Show start/end datetime and duration of a command-line process using pipe.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"chrono\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-telegram-bot/master/nim_telegram_bot.nimble": "version     = \"0.4.5\"\nauthor      = \"Juan Carlos\"\ndescription = \"Generic Configurable Async Telegram Bot for Nim with builtin basic functionality and Plugins.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nskipDirs    = @[\"art\"]\nbin         = @[\"nim_telegram_bot\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"openexchangerates\"\nrequires \"telebot\"\nrequires \"nimpy\"\nrequires \"zip\"\n",
"https://github.com/undecided/json_builder": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Matthew Bennett-Lovesey\"\ndescription   = \"Easy and fast generator for valid json in nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\n",
"https://github.com/ba0f3/xml.nim": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Huy Doan\"\ndescription   = \"Pure Nim XML parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/enthus1ast/nimMulticast/master/multicast.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"enthus1ast\"\ndescription   = \"join and leave multicast groups / broadcast\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\nskipDirs = @[\"tests\"]\n",
"https://github.com/nitely/nim-unicodeplus": "# Package\n\nversion = \"0.8.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Common unicode operations\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"unicodedb >= 0.8\"\nrequires \"segmentation >= 0.1\"\n\ntask test, \"Test\":\n  exec \"nim c -r tests/tests\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/unicodeplus.nim\"\n",
"https://raw.githubusercontent.com/stefansalewski/minmaxheap/master/minmaxheap.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Stefan Salewski\"\ndescription   = \"MinMaxHeap\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\n",
"https://github.com/Vindaar/nblosc": "# Package\n\nversion       = \"1.15.0\"\nauthor        = \"Skrylar,Vindaar\"\ndescription   = \"BLOSC meta-compression for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/makingspace/syphus/master/syphus.nimble": "# Package\n\nversion       = \"0.4\"\nauthor        = \"Zach Smith\"\ndescription   = \"An implementation of the tabu search heuristic in Nim.\"\nlicense       = \"BSD-3\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.1\"\nskipDirs = @[\"tests\"]\nsrcDir = \"syphus-nim\"\n",
"https://raw.githubusercontent.com/Yardanico/telenim/master/telenim.nimble": "version       = \"0.2.0\"\nauthor        = \"Danil Yarantsev\"\ndescription   = \"A high-level async TDLib wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.0\"",
"https://raw.githubusercontent.com/calcit-lang/ternary-tree/master/ternary_tree.nimble": "# Package\n\nversion       = \"0.1.33\"\nauthor        = \"jiyinyiyong\"\ndescription   = \"Ternary tree of list data structure\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n\ntask t, \"Runs the test suite\":\n  # exec \"nim c --hints:off -r tests/test_revision\"\n  exec \"nim c --hints:off -r tests/test_list\"\n  exec \"nim c --hints:off -r tests/test_map\"\n\ntask perf, \"try large file\":\n  exec \"nim compile --verbosity:0 --profiler:on --stackTrace:on --hints:off -r tests/costs\"\n",
"https://raw.githubusercontent.com/oprypin/nim-random/master/random.nimble": "packageName   = \"random\"\nversion       = \"0.5.7\"\nauthor        = \"Oleh Prypin\"\ndescription   = \"Pseudo-random number generation library inspired by Python\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"test\"]\n\nrequires \"nim >= 0.12.0\"\n\ntask test, \"test nim-random\":\n  --define: test\n  --run\n  setCommand \"c\", \"test/test.nim\"\n",
"https://raw.githubusercontent.com/jiro4989/nimjson/master/nimjson.nimble": "# Package\n\nversion       = \"1.2.8\"\nauthor        = \"jiro4989\"\ndescription   = \"nimjson generates nim object definitions from json documents.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimjson\"]\nbinDir        = \"bin\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nimport strformat, os\n\ntask docs, \"Generate documents\":\n  exec \"nimble doc src/nimjson.nim -o:docs/nimjson.html\"\n\ntask examples, \"Run examples\":\n  for dir in [\"readfile\", \"mapping\"]:\n    withDir \"examples/\" & dir:\n      exec \"nim c -d:release main.nim\"\n      exec \"./main\"\n\ntask buildjs, \"Generate JS lib\":\n  mkdir \"docs/js\"\n  exec \"nimble js js/nimjson_js.nim -o:docs/js/nimjson.js\"\n",
"https://raw.githubusercontent.com/metatexx/nimzend/master/nimzend.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Hans Raaf - METATEXX GmbH\"\ndescription   = \"Native Nim Zend API glue for easy PHP extension development.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n",
"https://raw.githubusercontent.com/JohnAD/jesterwithplugins/master//jesterwithplugins.nimble": "# Package\n\nversion       = \"0.5.2\" # also change this at src/jesterwithplugins.nim line 4\nauthor        = \"Dominik Picheta\"\ndescription   = \"A sinatra-like web framework (with plugins).\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipFiles = @[\"todo.markdown\"]\nskipDirs = @[\"tests\"]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\nwhen not defined(windows):\n  requires \"httpbeast >= 0.2.2\"\n# For tests\nrequires \"https://github.com/timotheecour/asynctools#pr_fix_compilation\"\n\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r tests/tester\"",
"https://github.com/dom96/vec": "# Package\n\nversion       = \"1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A very simple vector library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/planety/gungnir": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Cryptographic signing for Nim.\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/jiro4989/rena": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"jiro4989\"\ndescription   = \"rena is a tiny fire/directory renaming command.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"rena\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 0.9.32\"\n\nimport strformat, os\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble build -d:release -Y\"\n\ntask archive, \"Create archived assets\":\n  let app = \"rena\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/paranim/paratext": "# Package\n\nversion       = \"0.9.0\"\nauthor        = \"oakes\"\ndescription   = \"A library for rendering text with paranim\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"paranim >= 0.10.0\"\n",
"https://github.com/jrfondren/getr-nim": "version       = \"0.1.1\"\nauthor        = \"Julian Fondren\"\ndescription   = \"Benchmarking wrapper around getrusage()\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"getr\"]\n\nrequires \"nim >= 0.19.4\"\n\ntask markdown, \"Generate MANPAGE.md from mdoc\":\n  exec \"mandoc -T markdown < getr.mdoc > MANPAGE.md\"\n",
"https://github.com/jiro4989/nmi": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"nmi display animations aimed to correct users who accidentally enter nmi instead of nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nmi\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://raw.githubusercontent.com/mratsim/Arraymancer/master/arraymancer.nimble": "### Package\nversion       = \"0.6.2\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"A n-dimensional tensor (ndarray) library\"\nlicense       = \"Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 1.0.0\",\n  \"nimblas >= 0.2.2\",\n  \"nimlapack >= 0.1.1\",\n  \"nimcuda >= 0.1.4\",\n  \"nimcl >= 0.1.3\",\n  \"clblast\",\n  \"stb_image\",\n  \"zip\",\n  \"untar\"\n\n## Install files\nsrcDir = \"src\"\n\n########################################################\n# External libs configuration\n\n### BLAS support\n## OSX\n# switch(\"define\",\"openblas\")\n# switch(\"clibdir\", \"/usr/local/opt/openblas/lib\")\n# switch(\"cincludes\", \"/usr/local/opt/openblas/include\")\n\n## Archlinux\n# Contrary to Debian-based distro, blas.dll doesn't supply the cblas interface\n# so \"-d:blas=cblas\" must be passed\n\n### BLIS support\n# switch(\"define\",\"blis\")\n\n### MKL support\n# Check the mkl switches in the test file for single-threaded and openp version\n\ntemplate mkl_threadedSwitches(switches: var string) =\n  switches.add \" --stackTrace:off\"\n  switches.add \" --d:blas=mkl_intel_lp64\"\n  switches.add \" --d:lapack=mkl_intel_lp64\"\n  switches.add \" --clibdir:/opt/intel/mkl/lib/intel64\"\n  switches.add \" --passl:/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  switches.add \" --passl:-lmkl_core\"\n  switches.add \" --passl:-lmkl_gnu_thread\"\n  switches.add \" --passl:-lgomp\"\n  switches.add \" --dynlibOverride:mkl_intel_lp64\"\n\ntemplate mkl_singleSwitches(switches: var string) =\n  switches.add \" --d:blas=mkl_intel_lp64\"\n  switches.add \" --d:lapack=mkl_intel_lp64\"\n  switches.add \" --clibdir:/opt/intel/mkl/lib/intel64\"\n  switches.add \" --passl:/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  switches.add \" --passl:-lmkl_core\"\n  switches.add \" --passl:-lmkl_sequential\"\n  switches.add \" --dynlibOverride:mkl_intel_lp64\"\n\n# ### Cuda configuration\n## Pass -d:cuda to build arraymancer with cuda support\n## Use the cuda switches below\n## Replace /opt/cuda by your own path\n## TODO: auto detection or at least check in common directories\n## Note: It is import to gate compiler flags like -march=native  behind Xcompiler \"-Xcompiler -march=native\"\n\n# NVCC config\ntemplate cudaSwitches(switches: var string) =\n  switches.add \" --cincludes:/opt/cuda/include\"\n  switches.add \" --cc:clang\" # We trick Nim about nvcc being clang, pending https://github.com/nim-lang/Nim/issues/6372\n  switches.add \" --clang.exe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.linkerexe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.cpp.exe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.cpp.linkerexe:/opt/cuda/bin/nvcc\"\n  # Due to the __ldg intrinsics in kernels\n  # we only support compute capabilities 3.5+\n  # See here: http://docs.nvidia.com/cuda/pascal-compatibility-guide/index.html\n  # And wikipedia for GPU capabilities: https://en.wikipedia.org/wiki/CUDA\n\n  # Note: the switches below might conflict with nim.cfg\n  # switches.add \" --gcc.options.always:\\\"-arch=sm_61 --x cu\\\"\" # Interpret .c files as .cu\n  # switches.add \" --gcc.cpp.options.always:\\\"-arch=sm_61 --x cu -Xcompiler -fpermissive\\\"\" # Interpret .c files as .cu, gate fpermissive behind Xcompiler\n  switches.add \" -d:cudnn\"\n\ntemplate cuda_mkl_openmp(switches: var string) =\n  switches.mkl_threadedSwitches()\n  switches.add \" --cincludes:/opt/cuda/include\"\n  switches.add \" --cc:clang\" # We trick Nim about nvcc being clang, pending https://github.com/nim-lang/Nim/issues/6372\n  switches.add \" --clang.exe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.linkerexe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.cpp.exe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.cpp.linkerexe:/opt/cuda/bin/nvcc\"\n\n  # Note: the switches below might conflict with nim.cfg\n  # switches.add \" --gcc.options.always:\\\"-arch=sm_61 --x cu -Xcompiler -fopenmp -Xcompiler -march=native\\\"\"\n  # switches.add \" --gcc.cpp.options.always:\\\"-arch=sm_61 --x cu -Xcompiler -fopenmp -Xcompiler -march=native\\\"\"\n\n# Clang config - make sure Clang supports your CUDA SDK version\n# https://gist.github.com/ax3l/9489132\n# https://llvm.org/docs/CompileCudaWithLLVM.html\n# | clang++ | supported CUDA release | supported SMs |\n# | ------- | ---------------------- | ------------- |\n# | 3.9-5.0 | 7.0-8.0                | 2.0-(5.0)6.0  |\n# | 6.0     | [7.0-9.0](https://github.com/llvm-mirror/clang/blob/release_60/include/clang/Basic/Cuda.h) | [(2.0)3.0-7.0](https://github.com/llvm-mirror/clang/blob/release_60/lib/Basic/Targets/NVPTX.cpp#L163-L188) |\n# | 7.0     | [7.0-9.2](https://github.com/llvm-mirror/clang/blob/release_70/include/clang/Basic/Cuda.h) | [(2.0)3.0-7.2](https://github.com/llvm-mirror/clang/blob/release_70/lib/Basic/Targets/NVPTX.cpp#L196-L223) |\n# | 8.0     | [7.0-10.0](https://github.com/llvm-mirror/clang/blob/release_80/include/clang/Basic/Cuda.h) | [(2.0)3.0-7.5](https://github.com/llvm-mirror/clang/blob/release_70/lib/Basic/Targets/NVPTX.cpp#L199-L228) |\n# | trunk   | [7.0-10.1](https://github.com/llvm-mirror/clang/blob/master/include/clang/Basic/Cuda.h) | [(2.0)3.0-7.5](https://github.com/llvm-mirror/clang/blob/master/lib/Basic/Targets/NVPTX.cpp#L200-L229) |\n#\n# template cudaSwitches(switches: var string) =\n#   switches.add \" --cincludes:/opt/cuda/include\"\n#   switches.add \" --clibdir:/opt/cuda/lib\"\n#   switches.add \" --cc:clang\"\n#   switches.add \" --clang.cpp.options.always:\\\"--cuda-path=/opt/cuda -lcudart_static -x cuda --cuda-gpu-arch=sm_61 --cuda-gpu-arch=sm_75\\\"\"\n#   switches.add \" -d:cudnn\"\n\n# template cuda_mkl_openmp(switches: var string) =\n#   switches.mkl_threadedSwitches()\n#   switches.add \" --cincludes:/opt/cuda/include\"\n#   switches.add \" --clibdir:/opt/cuda/lib\"\n#   switches.add \" --cc:clang\"\n#   switches.add \" --clang.cpp.options.always:\\\"--cuda-path=/opt/cuda -lcudart_static -x cuda --cuda-gpu-arch=sm_61 --cuda-gpu-arch=sm_75 -fopenmp -march=native\\\"\"\n#   switches.add \" -d:cudnn\"\n\n########################################################\n# Optimization\n\n# Multithreading\n# use the -d:openmp switch\n# which passC: -fopenmp to the compiler\n\n# Native processor optimization\n# use the -d:native\n# which passC: -march=native to the compiler\n\n\n##########################################################################\n## Testing tasks\n\nproc test(name, switches = \"\", split = false, lang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not split:\n    exec \"nim \" & lang & \" -o:build/\" & name & switches & \" -r tests/\" & name & \".nim\"\n  else:\n    exec \"nim \" & lang & \" -o:build/\" & name & switches & \" -r tests/_split_tests/\" & name & \".nim\"\n\ntask all_tests, \"Run all tests - Intel MKL + Cuda + OpenCL + OpenMP\":\n  var switches = \" -d:cuda -d:opencl -d:openmp\"\n  switches.cuda_mkl_openmp()\n  test \"full_test_suite\", switches, split=false, lang=\"cpp\"\n\n# Split tests are unnecessary after 1.0.0 (no more 3GB+ memory used when compiling)\n#\n# task test, \"Run all tests - Default BLAS & Lapack\":\n#   test \"tests_tensor_part01\", \"\", split = true\n#   test \"tests_tensor_part02\", \"\", split = true\n#   test \"tests_tensor_part03\", \"\", split = true\n#   test \"tests_tensor_part04\", \"\", split = true\n#   test \"tests_tensor_part05\", \"\", split = true\n#   test \"tests_cpu_remainder\", \"\", split = true\n#\n# task test_no_lapack, \"Run all tests - Default BLAS without lapack\":\n#   let switch = \" -d:no_lapack\"\n#   test \"tests_tensor_part01\", switch, split = true\n#   test \"tests_tensor_part02\", switch, split = true\n#   test \"tests_tensor_part03\", switch, split = true\n#   test \"tests_tensor_part04\", switch, split = true\n#   test \"tests_tensor_part05\", switch, split = true\n#   test \"tests_cpu_remainder\", switch, split = true\n\ntask test, \"Run all tests - Default BLAS & Lapack\":\n  test \"tests_cpu\", \"\", split = false\n\ntask test_arc, \"Run all tests under ARC - Default BLAS & Lapack\":\n  test \"tests_cpu\", \"--gc:arc\", split = false\n\ntask test_orc, \"Run all tests under ORC - Default BLAS & Lapack\":\n  test \"tests_cpu\", \"--gc:orc\", split = false\n\ntask test_no_lapack, \"Run all tests - Default BLAS without lapack\":\n  let switch = \" -d:no_lapack\"\n  test \"tests_cpu\", switch, split = false\n\ntask test_no_lapack_arc, \"Run all tests - Default BLAS without lapack under ARC\":\n  let switch = \" -d:no_lapack --gc:arc\"\n  test \"tests_cpu\", switch, split = false\n\ntask test_cpp, \"Run all tests - Cpp codegen\":\n  test \"tests_cpu\", \"\", split = false, \"cpp\"\n\ntask test_cuda, \"Run all tests - Cuda backend with CUBLAS and CuDNN\":\n  var switches = \" -d:cuda -d:cudnn\"\n  switches.add \" -d:blas=cblas\" # Archlinux, comment out on Debian/Ubuntu\n  switches.cudaSwitches()\n  test \"tests_cuda\", switches, split = false, \"cpp\"\n\ntask test_opencl, \"Run all OpenCL backend tests\":\n  var switches = \" -d:opencl\"\n  switches.add \" -d:blas=cblas\" # Archlinux, comment out on Debian/Ubuntu\n  test \"tests_opencl\", switches, split = false, \"cpp\"\n\n# task test_deprecated, \"Run all tests on deprecated procs\":\n#  test \"tests_cpu_deprecated\"\n\ntask test_openblas, \"Run all tests - OpenBLAS\":\n  var switches = \" -d:blas=openblas -d:lapack=openblas\"\n  when defined(macosx):\n    ## Should work but somehow Nim doesn't find libopenblas.dylib on MacOS\n    switches.add \" --clibdir:/usr/local/opt/openblas/lib\"\n    switches.add \" --cincludes:/usr/local/opt/openblas/include\"\n  test \"tests_cpu\", switches\n\ntask test_blis, \"Run all tests - BLIS\":\n  test \"tests_cpu\", \" -d:blis\"\n\ntask test_native, \"Run all tests - march=native\":\n  test \"tests_cpu\", \" -d:native\"\n\ntask test_openmp, \"Run all tests - OpenMP\":\n  var switches = \" -d:openmp\"\n  switches.add \" --stackTrace:off\" # stacktraces interfere with OpenMP\n  when defined(macosx): # Default compiler on Mac is clang without OpenMP and gcc is an alias to clang.\n                        # Use Homebrew GCC instead for OpenMP support. GCC (v8), must be properly linked via `brew link gcc`\n    switches.add \" --cc:gcc\"\n    switches.add \" --gcc.exe:/usr/local/bin/gcc-8\"\n    switches.add \" --gcc.linkerexe:/usr/local/bin/gcc-8\"\n  test \"tests_cpu\", switches\n\ntask test_mkl, \"Run all tests - Intel MKL - single threaded\":\n  var switches: string\n  switches.mkl_singleSwitches()\n  test \"tests_cpu\", switches\n\ntask test_mkl_omp, \"Run all tests - Intel MKL + OpenMP\":\n  var switches = \" -d:openmp\"\n  switches.mkl_threadedSwitches()\n  test \"tests_cpu\", switches\n\ntask test_release, \"Run all tests - Release mode\":\n  test \"tests_cpu\", \" -d:release\"\n\ntask test_arc_release, \"Run all tests under ARC - Release mode\":\n  test \"tests_cpu\", \" -d:release --gc:arc\"\n\ntask test_orc_release, \"Run all tests under ORC - Release mode\":\n  test \"tests_cpu\", \" -d:release --gc:orc\"\n\ntemplate canImport(x: untyped): untyped =\n  compiles:\n    import x\n\nwhen canImport(docs / docs):\n  # can define the `gen_docs` task (docs already imported now)\n  # this is to hack around weird nimble + nimscript behavior.\n  # when overwriting an install nimble will try to parse the generated\n  # nimscript file and for some reason then it won't be able to import\n  # the module (even if it's put into `src/`).\n  task gen_docs, \"Generate Arraymancer documentation\":\n    # generate nimdoc.cfg file so we can generate the correct header for the\n    # index.html page without having to mess with the HTML manually.\n    genNimdocCfg(\"src/arraymancer/\")\n    # build the actual docs and the index\n    buildDocs(\n      \"src/arraymancer/\", \"docs/build\",\n      defaultFlags = \"--hints:off --warnings:off\"\n    )\n    # Copy our stylesheets\n    cpFile(\"docs/docutils.css\", \"docs/build/docutils.css\")\n    cpFile(\"docs/nav.css\", \"docs/build/nav.css\")\n    # Process the rst\n    for filePath in listFiles(\"docs/\"):\n      if filePath[^4..^1] == \".rst\":\n        let modName = filePath[5..^5]\n        exec r\"nim rst2html -o:docs/build/\" & modName & \".html \" & filePath\n",
"https://raw.githubusercontent.com/nimious/egl/master/egl.nimble": "[Package]\nname: \"egl\"\nversion: \"0.1\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for EGL, the native platform interface for rendering APIs\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2, x11\"\n",
"https://github.com/philip-wernersbach/microasynchttpserver": "[Package]\n\nversion       = \"0.10.2\"\nauthor        = \"Philip Wernersbach\"\ndescription   = \"A thin asynchronous HTTP server library, API compatible with Nim\\'s built-in asynchttpserver.\"\nlicense       = \"MIT\"\n\n[Deps]\n\nRequires: \"picohttpparser >= 0.10.0\"\n",
"https://github.com/mjendrusch/metric": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Michael Jendrusch\"\ndescription   = \"Unit types for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n\nproc testConfig() =\n  --path: \"../src\"\n  --run\n\ntask test, \"run metric tests\":\n  testConfig()\n  setCommand \"c\", \"tests/tall.nim\"\n",
"https://github.com/minefuto/qwertycd": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"minefuto\"\ndescription   = \"Terminal UI based cd command\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"qwertycd\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"illwill >= 0.2.0\"\nrequires \"parsetoml >= 0.5.0\"\nwhen defined(windows):\n  requires \"regex >= 0.19.0\"\n",
"https://raw.githubusercontent.com/jasonprogrammer/gerbil/master/gerbil.nimble": "# Package\n\nversion     = \"0.1.0\"\nauthor      = \"Jason Jones\"\ndescription = \"Dynamic site generator\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nbin         = @[\"gerbil\"]\ninstallExt = @[\"nim\"]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\nrequires \"argparse 0.10.0\"\nrequires \"cligen 0.9.41\"\nrequires \"jester 0.4.3\"\nrequires \"markdown 0.8.0\"\nrequires \"mustache 0.2.1\"\nrequires \"nimcrypto 0.4.11\"\nrequires \"regex 0.13.0\"\nrequires \"uuids 0.1.10\"\n",
"https://github.com/davidgarland/nim-hats": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"David Garland\"\ndescription   = \"Various kinds of hashed array trees.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/achesak/nim-yahooweather": "[Package]\nname = \"yahooweather\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Yahoo! Weather API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/Araq/genieos/": "[Package]\nname          = \"genieos\"\nversion       = \"9.4.3\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Too awesome procs to be included in Nim's os module.\"\"\"\nlicense       = \"MIT\"\n#bin           = \"trash-binary/trash\"\n\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\ndocindex.rst\ndocs/CHANGES.rst\ngenieos.nim\ngenieos_pkg/genieos_macosx.m\nnakefile.nim\ntrash-binary/README.rst\ntrash-binary/trash.nim\ntrash-binary/trash.nimble\ntrash-binary/trash.nim.cfg\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nx11 >= 1.0\n\n\"\"\"\n",
"https://github.com/Nycto/QuadtreeNim": "# Package\n#\nversion       = \"0.3.1\"\nauthor        = \"Nycto\"\ndescription   = \"A Quadtree Implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[]\n\n# Deps\nrequires \"nim >= 0.13.0\"\n\n",
"https://github.com/brentp/falas": "import ospaths\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/falas.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/falaspkg/version as _\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import falaspkg/version as _\n\n# Package\n\nversion       = falasVersion\nauthor        = \"Brent Pedersen\"\ndescription   = \"fragment-aware local assembler for short reads\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nsrcDir = \"src\"\ninstallExt = @[\"nim\"]\nbin = @[\"falas\"]\n\nskipDirs = @[\"tests\"]\n\nimport ospaths,strutils\n\ntask test, \"run the tests\":\n  exec \"nim c --lineDir:on --debuginfo -r --threads:on tests/all\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"falas\")\n  for file in listfiles(\"src/\"):\n    if file.endswith(\"value.nim\"): continue\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n\n",
"https://raw.githubusercontent.com/mjfh/nim-tmplpro/master/tmplpro.nimble": "# Package\n\ndescription = \"Text template processor, handy not only for CGI\"\nversion = \"0.1.2\"\n\nauthor = \"Jordan Hrycaj\"\nlicense = \"UNLICENCE\"\n\nrequires \"nim >= 1.4.2\"\nsrcDir= \"src\"\n\n# Tasks\n\ntask test, \"Run some test\":\n  # set noisy and tracer flags to 1 for more info\n  exec \"nim c -r --hints:off -d:verbose:0 -d:noisy:0 -d:tracer:0 tests/tmplpro_test.nim\"\n\ntask clean, \"Clean up\":\n  exec \"rm -f tests/tmplpro_test\"\n\n# End\n",
"https://raw.githubusercontent.com/xflywind/shene/master/shene.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Zero-cost interface for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\n\ntask tests, \"Run all tests\":\n  exec \"testament cat /\"\n",
"https://api.github.com/repos/jpoirier/XPLM-Nim/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"cffa22309bb14b426dc4acc45d1316b377351cf7\",\"size\":79,\"url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/jpoirier/XPLM-Nim/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/blobs/cffa22309bb14b426dc4acc45d1316b377351cf7\",\"download_url\":\"https://raw.githubusercontent.com/jpoirier/XPLM-Nim/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/blobs/cffa22309bb14b426dc4acc45d1316b377351cf7\",\"html\":\"https://github.com/jpoirier/XPLM-Nim/blob/master/.gitignore\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"1c160bbffddd004b909b5684dc41079c9196e35c\",\"size\":0,\"url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/examples?ref=master\",\"html_url\":\"https://github.com/jpoirier/XPLM-Nim/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/trees/1c160bbffddd004b909b5684dc41079c9196e35c\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/trees/1c160bbffddd004b909b5684dc41079c9196e35c\",\"html\":\"https://github.com/jpoirier/XPLM-Nim/tree/master/examples\"}},{\"name\":\"license.txt\",\"path\":\"license.txt\",\"sha\":\"37e45f3c9a2cfd0b26bc091eb9345cb7f301784d\",\"size\":1696,\"url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/license.txt?ref=master\",\"html_url\":\"https://github.com/jpoirier/XPLM-Nim/blob/master/license.txt\",\"git_url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/blobs/37e45f3c9a2cfd0b26bc091eb9345cb7f301784d\",\"download_url\":\"https://raw.githubusercontent.com/jpoirier/XPLM-Nim/master/license.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/license.txt?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/blobs/37e45f3c9a2cfd0b26bc091eb9345cb7f301784d\",\"html\":\"https://github.com/jpoirier/XPLM-Nim/blob/master/license.txt\"}},{\"name\":\"readme.md\",\"path\":\"readme.md\",\"sha\":\"d90ce231ec72188de924ac9c4abf871fb783474f\",\"size\":929,\"url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/readme.md?ref=master\",\"html_url\":\"https://github.com/jpoirier/XPLM-Nim/blob/master/readme.md\",\"git_url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/blobs/d90ce231ec72188de924ac9c4abf871fb783474f\",\"download_url\":\"https://raw.githubusercontent.com/jpoirier/XPLM-Nim/master/readme.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/readme.md?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/blobs/d90ce231ec72188de924ac9c4abf871fb783474f\",\"html\":\"https://github.com/jpoirier/XPLM-Nim/blob/master/readme.md\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"a4b1bcb4a873a60131d45c822b55c7e8ee6a75ef\",\"size\":0,\"url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/src?ref=master\",\"html_url\":\"https://github.com/jpoirier/XPLM-Nim/tree/master/src\",\"git_url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/trees/a4b1bcb4a873a60131d45c822b55c7e8ee6a75ef\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/trees/a4b1bcb4a873a60131d45c822b55c7e8ee6a75ef\",\"html\":\"https://github.com/jpoirier/XPLM-Nim/tree/master/src\"}},{\"name\":\"xplm.nimble\",\"path\":\"xplm.nimble\",\"sha\":\"0c23c61204eb38084d7c65642cfd5e508b42c0a7\",\"size\":209,\"url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/xplm.nimble?ref=master\",\"html_url\":\"https://github.com/jpoirier/XPLM-Nim/blob/master/xplm.nimble\",\"git_url\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/blobs/0c23c61204eb38084d7c65642cfd5e508b42c0a7\",\"download_url\":\"https://raw.githubusercontent.com/jpoirier/XPLM-Nim/master/xplm.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/contents/xplm.nimble?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/XPLM-Nim/git/blobs/0c23c61204eb38084d7c65642cfd5e508b42c0a7\",\"html\":\"https://github.com/jpoirier/XPLM-Nim/blob/master/xplm.nimble\"}}]",
"https://raw.githubusercontent.com/nim-appkit/utils/master/utils.nimble": "[Package]\nname          = \"utils\"\nversion       = \"0.1.0\"\nauthor        = \"Christoph Herzog\"\ndescription   = \"Collection of useful Nim code.\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.12.0, values >= 0.1\"\n",
"https://github.com/yglukhov/nimpy": "version     = \"0.1.1\"\nauthor      = \"Yuriy Glukhov\"\ndescription = \"Nim python integration lib\"\nlicense     = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\nimport oswalkdir, os, strutils\n\nproc calcPythonExecutables() : seq[string] =\n  ## Calculates which Python executables to use for testing\n  ## The default is to use \"python2\" and \"python3\"\n  ##\n  ## You can override this by setting the environment\n  ## variable `NIMPY_PY_EXES` to a comma separated list\n  ## of Python executables to invoke. For example, to test\n  ## with Python 2 from the system PATH and multiple versions\n  ## of Python 3, you might invoke something like\n  ##\n  ## `NIMPY_PY_EXES=\"python2:/usr/local/bin/python3.7:/usr/local/bin/python3.8\" nimble test`\n  ##\n  ## These are launched via a shell so they can be scripts\n  ## as well as actual Python executables\n\n  let pyExes = getEnv(\"NIMPY_PY_EXES\", \"python2:python3\")\n  result = pyExes.split(\":\")\n\nproc calcLibPythons() : seq[string] =\n  ## Calculates which libpython modules to use for testing\n  ## The default is to use whichever libpython is found\n  ## by `pythonLibHandleFromExternalLib()` in py_lib.nim\n  ##\n  ## You can override this by setting the environment\n  ## variable `NIMPY_LIBPYTHONS` to a comma separated list\n  ## of libpython modules to load. For example, you might\n  ## invoke something like\n  ##\n  ## `NIMPY_LIBPYTHONS=\"/usr/lib/x86_64-linux-gnu/libpython2.7.so:/usr/lib/x86_64-linux-gnu/libpython3.8.so\" nimble test`\n  ##\n  let libPythons = getEnv(\"NIMPY_LIBPYTHONS\", \"\")\n  result = libPythons.split(\":\")\n\nproc runTests(nimFlags = \"\") =\n  let pluginExtension = when defined(windows): \"pyd\" else: \"so\"\n\n  for f in oswalkdir.walkDir(\"tests\"):\n    # Compile all nim modules, except those starting with \"t\"\n    let sf = f.path.splitFile()\n    if sf.ext == \".nim\" and not sf.name.startsWith(\"t\"):\n      exec \"nim c --passC:-g --threads:on --app:lib \" & nimFlags & \" --out:\" & f.path.changeFileExt(pluginExtension) & \" \" & f.path\n\n  let\n    sourceFile = \"tests/custommodulename\".changeFileExt(pluginExtension)\n    targetFile = \"tests/_mycustommodulename\".changeFileExt(pluginExtension)\n  try:\n    rmFile(targetFile)\n  except:\n    discard\n  mvFile(sourceFile, targetFile)\n\n  let\n    pythonExes = calcPythonExecutables()\n    libPythons = calcLibPythons()\n\n  for f in oswalkdir.walkDir(\"tests\"):\n    # Run all python modules starting with \"t\"\n    let sf = f.path.splitFile()\n    if sf.ext == \".py\" and sf.name.startsWith(\"t\"):\n      for pythonExe in pythonExes:\n        echo \"running: \", pythonExe, \" \", f.path\n        exec pythonExe & \" \" & f.path\n\n  for f in oswalkdir.walkDir(\"tests\"):\n    # Run all nim modules starting with \"t\"\n    let sf = f.path.splitFile()\n    if sf.ext == \".nim\" and sf.name.startsWith(\"t\"):\n      for libPython in libPythons:\n        exec \"nim c -d:nimpyTestLibPython=\" & libPython & \" -r \" & nimFlags & \" \" & f.path\n\ntask test, \"Run tests\":\n  runTests()\n  runTests(\"--gc:orc\")\n\ntask test_orc, \"Run tests with --gc:orc\":\n  runTests(\"--gc:orc\")\n",
"https://github.com/fowlmouth/signals.nim": "[Package]\nname:\"signals\"\nversion:\"1.0\"\nauthor:\"fowl\"\ndescription:\"Signals/slots observer pattern for event-driven programming.\"\nlicense:\"MIT\"\nsrcDir:\"src\"\n[Deps]\nrequires: \"nimrod >= 0.10.2\"\n",
"https://github.com/status-im/nim-protobuf-serialization": "import os\n\nmode = ScriptMode.Verbose\n\nversion       = \"0.2.0\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"Protobuf implementation compatible with the nim-serialization framework.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"stew\",\n         \"faststreams\",\n         \"serialization\",\n         \"combparser\"\n\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  #Explicitly specify the call depth limit in case the default changes in the future.\n  test \"--threads:off\", \"tests/test_all\"\n  test \"--threads:on\", \"tests/test_all\"\n\n  #Also iterate over every test in tests/fail, and verify they fail to compile.\n  echo \"\\r\\n\\x1B[0;94m[Suite]\\x1B[0;37m Test Fail to Compile\"\n  var tests: seq[string] = @[]\n  for path in listFiles(thisDir() / \"tests\" / \"fail\"):\n    if path.split(\".\")[^1] != \"nim\":\n      continue\n\n    if gorgeEx(\"nim c \" & path).exitCode != 0:\n      echo \"  \\x1B[0;92m[OK]\\x1B[0;37m \", path.split(DirSep)[^1]\n    else:\n      echo \"  \\x1B[0;31m[FAILED]\\x1B[0;37m \", path.split(DirSep)[^1]\n      exec \"exit 1\"\n",
"https://raw.githubusercontent.com/jangko/nimAES/master/nimAES.nimble": "packageName   = \"nimAES\"\nversion       = \"0.1.2\"\nauthor        = \"Andri Lim\"\ndescription   = \"AES encryption algorithm\"\nlicense       = \"MIT\"\nskipDirs     = @[\"tests\", \"docs\"]\n\nrequires: \"nim >= 1.0.6\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  exec \"nim -v\"\n  test \"-d:release\", \"tests/test\"\n  # exec \"nim c -r --gc:arc -d:release tests/test\"\n\ntask testvcc, \"Run tests\":\n  test \"-d:release\", \"tests/test\"\n",
"https://raw.githubusercontent.com/shakna-israel/nimcat/master/nimcat.nimble": "[Package]\nname = \"nimcat\"\nversion = \"0.0.0\"\nauthor = \"James Milne\"\ndescription = \"An implementation of cat\"\nlicense = \"MIT\"\nbin = \"nimcat\"\nSkipDirs = \"bins\"\n\n[Deps]\nrequires: \"nim >= 0.10.0\"\n",
"https://github.com/euantorano/progress.nim": "# Package\n\nversion       = \"1.1.2\"\nauthor        = \"Euan T\"\ndescription   = \"A simple progress bar for Nim.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc2 --index:on -o:docs/progress.html src/progress.nim\"\n",
"https://github.com/achesak/nim-epub": "[Package]\nname = \"epub\"\nversion = \"0.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Module for working with EPUB e-book files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim>= 0.10.2\"\n",
"https://github.com/achesak/nim-vidhdr": "[Package]\nname = \"vidhdr\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Library for determining the format of a video file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-espeak/master/espeak.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Nim Espeak NG wrapper, for super easy Voice and Text-To-Speech\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://api.github.com/repos/nimious/io-egl/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"74d2c87a2f694110ea65a41c66f9e487c91cca4b\",\"size\":60,\"url\":\"https://api.github.com/repos/nimious/egl/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nimious/egl/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nimious/egl/git/blobs/74d2c87a2f694110ea65a41c66f9e487c91cca4b\",\"download_url\":\"https://raw.githubusercontent.com/nimious/egl/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/egl/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nimious/egl/git/blobs/74d2c87a2f694110ea65a41c66f9e487c91cca4b\",\"html\":\"https://github.com/nimious/egl/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"size\":1076,\"url\":\"https://api.github.com/repos/nimious/egl/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nimious/egl/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nimious/egl/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"download_url\":\"https://raw.githubusercontent.com/nimious/egl/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/egl/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nimious/egl/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"html\":\"https://github.com/nimious/egl/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"7951a510c199e1c51d268367fd3a6e9a4ed2da24\",\"size\":1632,\"url\":\"https://api.github.com/repos/nimious/egl/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nimious/egl/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nimious/egl/git/blobs/7951a510c199e1c51d268367fd3a6e9a4ed2da24\",\"download_url\":\"https://raw.githubusercontent.com/nimious/egl/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/egl/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nimious/egl/git/blobs/7951a510c199e1c51d268367fd3a6e9a4ed2da24\",\"html\":\"https://github.com/nimious/egl/blob/master/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"7f2af707a2a0afe8ff724e48172b690df32644bc\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/egl/contents/docs?ref=master\",\"html_url\":\"https://github.com/nimious/egl/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/nimious/egl/git/trees/7f2af707a2a0afe8ff724e48172b690df32644bc\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/egl/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/nimious/egl/git/trees/7f2af707a2a0afe8ff724e48172b690df32644bc\",\"html\":\"https://github.com/nimious/egl/tree/master/docs\"}},{\"name\":\"egl.nimble\",\"path\":\"egl.nimble\",\"sha\":\"a0ae8ddffa3c8c1f60fa5d90f4f1d5c3eb8651f4\",\"size\":234,\"url\":\"https://api.github.com/repos/nimious/egl/contents/egl.nimble?ref=master\",\"html_url\":\"https://github.com/nimious/egl/blob/master/egl.nimble\",\"git_url\":\"https://api.github.com/repos/nimious/egl/git/blobs/a0ae8ddffa3c8c1f60fa5d90f4f1d5c3eb8651f4\",\"download_url\":\"https://raw.githubusercontent.com/nimious/egl/master/egl.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/egl/contents/egl.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nimious/egl/git/blobs/a0ae8ddffa3c8c1f60fa5d90f4f1d5c3eb8651f4\",\"html\":\"https://github.com/nimious/egl/blob/master/egl.nimble\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"ba170019961dc0b44f5a30192c412a1b5005fe4e\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/egl/contents/examples?ref=master\",\"html_url\":\"https://github.com/nimious/egl/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/nimious/egl/git/trees/ba170019961dc0b44f5a30192c412a1b5005fe4e\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/egl/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/nimious/egl/git/trees/ba170019961dc0b44f5a30192c412a1b5005fe4e\",\"html\":\"https://github.com/nimious/egl/tree/master/examples\"}},{\"name\":\"nim.cfg\",\"path\":\"nim.cfg\",\"sha\":\"42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"size\":13,\"url\":\"https://api.github.com/repos/nimious/egl/contents/nim.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/egl/blob/master/nim.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/egl/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"download_url\":\"https://raw.githubusercontent.com/nimious/egl/master/nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/egl/contents/nim.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/egl/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"html\":\"https://github.com/nimious/egl/blob/master/nim.cfg\"}},{\"name\":\"nimdoc.cfg\",\"path\":\"nimdoc.cfg\",\"sha\":\"300edb821c52baf0a56a7b9b49817b6fafa796ed\",\"size\":96,\"url\":\"https://api.github.com/repos/nimious/egl/contents/nimdoc.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/egl/blob/master/nimdoc.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/egl/git/blobs/300edb821c52baf0a56a7b9b49817b6fafa796ed\",\"download_url\":\"https://raw.githubusercontent.com/nimious/egl/master/nimdoc.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/egl/contents/nimdoc.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/egl/git/blobs/300edb821c52baf0a56a7b9b49817b6fafa796ed\",\"html\":\"https://github.com/nimious/egl/blob/master/nimdoc.cfg\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"3e4be37e7b5f5bacdf65d688f5b48cacb66d15a7\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/egl/contents/src?ref=master\",\"html_url\":\"https://github.com/nimious/egl/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nimious/egl/git/trees/3e4be37e7b5f5bacdf65d688f5b48cacb66d15a7\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/egl/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nimious/egl/git/trees/3e4be37e7b5f5bacdf65d688f5b48cacb66d15a7\",\"html\":\"https://github.com/nimious/egl/tree/master/src\"}}]",
"https://raw.githubusercontent.com/h3rald/nim-miniz/master/nim_miniz.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"Fabio Cevasco\"\ndescription   = \"Nim wrapper for miniz\"\nlicense       = \"MIT\"\n\ninstallExt = @[\"nim\", \"c\", \"h\"]\n\nsrcDir = \"src\"\nskipDirs = @[\"tests\"]\n",
"https://raw.githubusercontent.com/beef331/constructor/master/constructor.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jason Beetham\"\ndescription   = \"Automates constructor creation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/ftsf/nico": "# Package\n\nversion       = \"0.3.2\"\nauthor        = \"Jez 'Impbox' Kabanov\"\ndescription   = \"Nico Game Engine\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"sdl2_nim >= 2.0.10.0\"\nrequires \"gifenc >= 0.1.0\"\nrequires \"webaudio >= 0.2.1\"\nrequires \"html5_canvas >= 0.1.0\"\nrequires \"ajax >= 0.1.1\"\nrequires \"nimPNG\"\n\nskipDirs = @[\"examples\",\"tests\",\"android\",\"tools\"]\ninstallDirs = @[\"exampleApp\"]\n\nbin = @[\"nicoboot\"]\n\ntask test, \"run tests\":\n  exec \"nim c -p:. -r tests/copymem.nim\"\n  exec \"nim c -p:. -r tests/fonts.nim\"\n  exec \"nim c -p:. -r tests/config.nim\"\n  exec \"nim c -p:. -r tests/palette.nim\"\n  exec \"nim c -p:. -r tests/tilemap.nim\"\n\ntask testjs, \"compile tests with js backend\":\n  # test they compile with js backend, harder to test running\n  exec \"nim js -p:. tests/copymem.nim\"\n  exec \"nim js -p:. tests/fonts.nim\"\n  exec \"nim js -p:. tests/config.nim\"\n  exec \"nim js -p:. tests/palette.nim\"\n  exec \"nim js -p:. tests/tilemap.nim\"\n\ntask paintout, \"compile paintout example\":\n  exec \"nim c -p:. -d:debug examples/paintout.nim\"\n  exec \"nim js -p:. -d:debug --lineTrace:on --stackTrace:on -o:examples/paintout.js examples/paintout.nim\"\n\ntask platformer, \"compile platformer example\":\n  exec \"nim c -p:. -d:release --multimethods:on -o:examples/platformer examples/platformer.nim\"\n  exec \"nim js -p:. -d:release --multimethods:on -o:examples/platformer.js examples/platformer.nim\"\n\ntask audio, \"compile audio example\":\n  exec \"nim c -p:. -d:debug -o:examples/audio examples/audio.nim\"\n  exec \"nim js -p:. -d:release -o:examples/audio.js examples/audio.nim\"\n\ntask vertex, \"compile vertex example\":\n  exec \"nim c -p:. -d:debug -o:examples/vertex examples/vertex.nim\"\n  exec \"nim js -p:. -d:release -o:examples/vertex.js examples/vertex.nim\"\n\ntask gui, \"compile gui example\":\n  exec \"nim c -p:. -d:debug -o:examples/gui examples/gui.nim\"\n  exec \"nim js -p:. -d:release -o:examples/gui.js examples/gui.nim\"\n\ntask benchmark, \"compile benchmark example\":\n  exec \"nim c -p:. -d:release -d:danger -o:examples/benchmark examples/benchmark.nim\"\n  exec \"nim js -p:. -d:release -d:danger -o:examples/benchmark.js examples/benchmark.nim\"\n\ntask runbenchmark, \"compile and run benchmark example\":\n  exec \"nim c -r -p:. -d:release -d:danger -o:examples/benchmark examples/benchmark.nim\"\n\ntask examples, \"compile all examples\":\n  exec \"nimble paintout\"\n  exec \"nimble platformer\"\n  exec \"nimble audio\"\n  exec \"nimble vertex\"\n  exec \"nimble gui\"\n  exec \"nimble benchmark\"\n\ntask runplatformer, \"runs platformer\":\n  exec \"nim c -r -p:. -d:release -o:examples/platformer examples/platformer.nim\"\n\ntask nicosynth, \"runs nicosynth\":\n  exec \"nim c -r -p:. -d:release -o:tools/nicosynth tools/nicosynth.nim\"\n",
"https://raw.githubusercontent.com/bluenote10/nim-heap/master/binaryheap.nimble": "[Package]\nname          = \"binaryheap\"\nversion       = \"0.1.1\"\nauthor        = \"Fabian Keller\"\ndescription   = \"Simple binary heap implementation\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.0\"",
"https://github.com/genotrance/nimgraphql": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance\"\ndescription   = \"libgraphqlparser wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.4.4\"\n\ntask test, \"Run tests\":\n  exec \"nim cpp -d:GraphQLAstGit -p:.. -r tests/tnimgraphql.nim\"\n  exec \"nim cpp -d:GraphQLAstGit -d:GraphQLAstCompile -p:.. -r tests/tnimgraphql.nim\"\n",
"https://raw.githubusercontent.com/andreaferretti/nimblas/master/nimblas.nimble": "version       = \"0.2.2\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"BLAS interface for Nim\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.19.9\"\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\ntask test, \"run NimBLAS tests\":\n  configForTests()\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testopenblas, \"run NimBLAS tests with openBLAS\":\n  configForTests()\n  --define:\"blas=openblas\"\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testatlas, \"run NimBLAS tests with ATLAS\":\n  configForTests()\n  --define:\"blas=cblas\"\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testmkl, \"run NimBLAS tests with MKL\":\n  configForTests()\n  --define:\"blas=mkl_intel_lp64\"\n  --clibdir: \"/opt/intel/mkl/lib/intel64\"\n  --passl: \"/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  --passl: \"-lmkl_core\"\n  --passl: \"-lmkl_sequential\"\n  --passl: \"-lpthread\"\n  --passl: \"-lm\"\n  --dynlibOverride:mkl_intel_lp64\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testmklthreaded, \"run NimBLAS tests with MKL threaded\":\n  configForTests()\n  --define: \"blas=mkl_intel_lp64\"\n  --clibdir: \"/opt/intel/mkl/lib/intel64\"\n  --passl: \"/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  --passl: \"-lmkl_core\"\n  --passl: \"-lmkl_gnu_thread\"\n  --passl: \"-lgomp\"\n  --passl: \"-lm\"\n  --dynlibOverride:mkl_intel_lp64\n  setCommand \"c\", \"tests/test.nim\"\n\ntask tests, \"run tests with all BLAS versions\":\n  exec(\"nimble test\")\n  exec(\"nimble testopenblas\")\n  exec(\"nimble testatlas\")\n  exec(\"nimble testmkl\")\n  exec(\"nimble testmklthreaded\")",
"https://api.github.com/repos/kerrycobb/PhylogeNi/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"f6d725eeb3c8b4ffe7979765ca18a776c7c64a70\",\"size\":97,\"url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/.gitignore?ref=main\",\"html_url\":\"https://github.com/kerrycobb/PhylogeNi/blob/main/.gitignore\",\"git_url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/blobs/f6d725eeb3c8b4ffe7979765ca18a776c7c64a70\",\"download_url\":\"https://raw.githubusercontent.com/kerrycobb/PhylogeNi/main/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/.gitignore?ref=main\",\"git\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/blobs/f6d725eeb3c8b4ffe7979765ca18a776c7c64a70\",\"html\":\"https://github.com/kerrycobb/PhylogeNi/blob/main/.gitignore\"}},{\"name\":\"LICENSE.txt\",\"path\":\"LICENSE.txt\",\"sha\":\"6cf40acc9636e2e2d1a44f6b5ac9a8ff5ebdc85e\",\"size\":1069,\"url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/LICENSE.txt?ref=main\",\"html_url\":\"https://github.com/kerrycobb/PhylogeNi/blob/main/LICENSE.txt\",\"git_url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/blobs/6cf40acc9636e2e2d1a44f6b5ac9a8ff5ebdc85e\",\"download_url\":\"https://raw.githubusercontent.com/kerrycobb/PhylogeNi/main/LICENSE.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/LICENSE.txt?ref=main\",\"git\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/blobs/6cf40acc9636e2e2d1a44f6b5ac9a8ff5ebdc85e\",\"html\":\"https://github.com/kerrycobb/PhylogeNi/blob/main/LICENSE.txt\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"bfff9407516ef2c3e57a08ad6853eec0e418a34c\",\"size\":2338,\"url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/README.md?ref=main\",\"html_url\":\"https://github.com/kerrycobb/PhylogeNi/blob/main/README.md\",\"git_url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/blobs/bfff9407516ef2c3e57a08ad6853eec0e418a34c\",\"download_url\":\"https://raw.githubusercontent.com/kerrycobb/PhylogeNi/main/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/README.md?ref=main\",\"git\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/blobs/bfff9407516ef2c3e57a08ad6853eec0e418a34c\",\"html\":\"https://github.com/kerrycobb/PhylogeNi/blob/main/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"11658afa8fa287bfc1e9fd0acc3d6553a49934bb\",\"size\":0,\"url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/docs?ref=main\",\"html_url\":\"https://github.com/kerrycobb/PhylogeNi/tree/main/docs\",\"git_url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/trees/11658afa8fa287bfc1e9fd0acc3d6553a49934bb\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/docs?ref=main\",\"git\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/trees/11658afa8fa287bfc1e9fd0acc3d6553a49934bb\",\"html\":\"https://github.com/kerrycobb/PhylogeNi/tree/main/docs\"}},{\"name\":\"phylogeni.nimble\",\"path\":\"phylogeni.nimble\",\"sha\":\"69fbfe078b49e673a6b39dc04970a8cec6a286e5\",\"size\":181,\"url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/phylogeni.nimble?ref=main\",\"html_url\":\"https://github.com/kerrycobb/PhylogeNi/blob/main/phylogeni.nimble\",\"git_url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/blobs/69fbfe078b49e673a6b39dc04970a8cec6a286e5\",\"download_url\":\"https://raw.githubusercontent.com/kerrycobb/PhylogeNi/main/phylogeni.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/phylogeni.nimble?ref=main\",\"git\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/blobs/69fbfe078b49e673a6b39dc04970a8cec6a286e5\",\"html\":\"https://github.com/kerrycobb/PhylogeNi/blob/main/phylogeni.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"75f9fd5c1a73eea71864625e64a469a6e2b3b62b\",\"size\":0,\"url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/src?ref=main\",\"html_url\":\"https://github.com/kerrycobb/PhylogeNi/tree/main/src\",\"git_url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/trees/75f9fd5c1a73eea71864625e64a469a6e2b3b62b\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/src?ref=main\",\"git\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/trees/75f9fd5c1a73eea71864625e64a469a6e2b3b62b\",\"html\":\"https://github.com/kerrycobb/PhylogeNi/tree/main/src\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"46f0974c64b7fc15c70b028c2dea5c1210c10898\",\"size\":0,\"url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/tests?ref=main\",\"html_url\":\"https://github.com/kerrycobb/PhylogeNi/tree/main/tests\",\"git_url\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/trees/46f0974c64b7fc15c70b028c2dea5c1210c10898\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/contents/tests?ref=main\",\"git\":\"https://api.github.com/repos/kerrycobb/PhylogeNi/git/trees/46f0974c64b7fc15c70b028c2dea5c1210c10898\",\"html\":\"https://github.com/kerrycobb/PhylogeNi/tree/main/tests\"}}]",
"https://raw.githubusercontent.com/paranim/paravim/master/paravim.nimble": "# Package\n\nversion       = \"0.18.2\"\nauthor        = \"oakes\"\ndescription   = \"A parasitic editor\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\ninstallExt    = @[\n  \"nim\", \"txt\", \"ttf\", \"glsl\", \"c\", \"h\",\n  when defined(windows):\n    \"dll\"\n  elif defined(macosx):\n    \"dylib\"\n  elif defined(linux):\n    \"so\"\n]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"paranim >= 0.10.0\"\nrequires \"pararules >= 0.14.0\"\nrequires \"paratext >= 0.9.0\"\nrequires \"illwill >= 0.2.0\"\n",
"https://github.com/OpenSystemsLab/base32.nim": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Huy Doan\"\ndescription   = \"Base32 library for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\n",
"https://github.com/euantorano/serial.nim": "# Package\n\nversion       = \"1.1.5\"\nauthor        = \"Euan T\"\ndescription   = \"SerialPort library for Nim.\"\nlicense       = \"BSD-3-Clause\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/momeemt/SampleTodoList": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"momeemt\"\ndescription   = \"Sample Todo List Application\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"sampleTodoList\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"cligen >= 1.2.2\"",
"https://raw.githubusercontent.com/forlan-ua/nim-libsha/master/libsha.nimble": "version = \"1.0\"\nauthor = \"Ievgen Svietikov\"\ndescription = \"Sha1 and Sha2 implementations\"\nlicense = \"MIT\"\n\nskipDirs = @[\"tests\"]",
"https://raw.githubusercontent.com/fallingduck/sequester/master/sequester.nimble": "[Package]\nname          = \"sequester\"\nversion       = \"0.1.0\"\nauthor        = \"Jack VanDrunen\"\ndescription   = \"Library for converting sequences to strings. Also has PHP-inspired explode and implode procs.\"\nlicense       = \"ISC\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/status-im/nim-http-utils/master/httputils.nimble": "packageName   = \"httputils\"\nversion       = \"0.2.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"HTTP request/response helpers & parsing procedures\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\", \"Nim\"]\n\n### Dependencies\nrequires \"nim >= 0.17.3\"\n\ntask test, \"run tests\":\n  exec \"nim c -r -d:useSysAssert -d:useGcAssert tests/tvectors\"\n  exec \"nim c -r tests/tvectors\"\n  exec \"nim c -r -d:release --threads:on tests/tvectors\"\n",
"https://raw.githubusercontent.com/loloicci/nimly/master/nimly.nimble": "# Package\n\nversion       = \"0.7.0\"\nauthor        = \"loloicci\"\ndescription   = \"Lexer Generator and Parser Generator as a library in Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"patty >= 0.3.3\"\n",
"https://api.github.com/repos/nimious/io-spacenav/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"3c623cd5955355e5661cef68cf289880dd2e3529\",\"size\":60,\"url\":\"https://api.github.com/repos/nimious/spacenav/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nimious/spacenav/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/3c623cd5955355e5661cef68cf289880dd2e3529\",\"download_url\":\"https://raw.githubusercontent.com/nimious/spacenav/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/spacenav/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/3c623cd5955355e5661cef68cf289880dd2e3529\",\"html\":\"https://github.com/nimious/spacenav/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"d0fd0d3cda1d249e9034568fe4e73250c4689f29\",\"size\":1092,\"url\":\"https://api.github.com/repos/nimious/spacenav/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nimious/spacenav/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/d0fd0d3cda1d249e9034568fe4e73250c4689f29\",\"download_url\":\"https://raw.githubusercontent.com/nimious/spacenav/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/spacenav/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/d0fd0d3cda1d249e9034568fe4e73250c4689f29\",\"html\":\"https://github.com/nimious/spacenav/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"d78f8d3b70458cb099262ebb632c9248521f944f\",\"size\":3166,\"url\":\"https://api.github.com/repos/nimious/spacenav/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nimious/spacenav/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/d78f8d3b70458cb099262ebb632c9248521f944f\",\"download_url\":\"https://raw.githubusercontent.com/nimious/spacenav/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/spacenav/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/d78f8d3b70458cb099262ebb632c9248521f944f\",\"html\":\"https://github.com/nimious/spacenav/blob/master/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"13114ca43f7f0f87c11280add5f9036cf220d76b\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/spacenav/contents/docs?ref=master\",\"html_url\":\"https://github.com/nimious/spacenav/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/nimious/spacenav/git/trees/13114ca43f7f0f87c11280add5f9036cf220d76b\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/spacenav/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/nimious/spacenav/git/trees/13114ca43f7f0f87c11280add5f9036cf220d76b\",\"html\":\"https://github.com/nimious/spacenav/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"b0387ca0c293cee73fd9397e0d6d29b961d7076a\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/spacenav/contents/examples?ref=master\",\"html_url\":\"https://github.com/nimious/spacenav/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/nimious/spacenav/git/trees/b0387ca0c293cee73fd9397e0d6d29b961d7076a\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/spacenav/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/nimious/spacenav/git/trees/b0387ca0c293cee73fd9397e0d6d29b961d7076a\",\"html\":\"https://github.com/nimious/spacenav/tree/master/examples\"}},{\"name\":\"nim.cfg\",\"path\":\"nim.cfg\",\"sha\":\"42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"size\":13,\"url\":\"https://api.github.com/repos/nimious/spacenav/contents/nim.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/spacenav/blob/master/nim.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"download_url\":\"https://raw.githubusercontent.com/nimious/spacenav/master/nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/spacenav/contents/nim.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"html\":\"https://github.com/nimious/spacenav/blob/master/nim.cfg\"}},{\"name\":\"nimdoc.cfg\",\"path\":\"nimdoc.cfg\",\"sha\":\"1200aab44800c76b7ab052967bf8d65bc250620e\",\"size\":123,\"url\":\"https://api.github.com/repos/nimious/spacenav/contents/nimdoc.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/spacenav/blob/master/nimdoc.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/1200aab44800c76b7ab052967bf8d65bc250620e\",\"download_url\":\"https://raw.githubusercontent.com/nimious/spacenav/master/nimdoc.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/spacenav/contents/nimdoc.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/1200aab44800c76b7ab052967bf8d65bc250620e\",\"html\":\"https://github.com/nimious/spacenav/blob/master/nimdoc.cfg\"}},{\"name\":\"spacenav.nimble\",\"path\":\"spacenav.nimble\",\"sha\":\"67abe8f96db903a7af40cc0f06ea8bbc0ebd3ff1\",\"size\":225,\"url\":\"https://api.github.com/repos/nimious/spacenav/contents/spacenav.nimble?ref=master\",\"html_url\":\"https://github.com/nimious/spacenav/blob/master/spacenav.nimble\",\"git_url\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/67abe8f96db903a7af40cc0f06ea8bbc0ebd3ff1\",\"download_url\":\"https://raw.githubusercontent.com/nimious/spacenav/master/spacenav.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/spacenav/contents/spacenav.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nimious/spacenav/git/blobs/67abe8f96db903a7af40cc0f06ea8bbc0ebd3ff1\",\"html\":\"https://github.com/nimious/spacenav/blob/master/spacenav.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"d72bd204c2b43cb9c809746191561e458284b94d\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/spacenav/contents/src?ref=master\",\"html_url\":\"https://github.com/nimious/spacenav/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nimious/spacenav/git/trees/d72bd204c2b43cb9c809746191561e458284b94d\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/spacenav/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nimious/spacenav/git/trees/d72bd204c2b43cb9c809746191561e458284b94d\",\"html\":\"https://github.com/nimious/spacenav/tree/master/src\"}}]",
"https://github.com/nim-appkit/omnilog": "[Package]\nname          = \"omnilog\"\nversion       = \"0.1.0\"\nauthor        = \"Christoph Herzog\"\ndescription   = \"Advanced logging library for Nim with structured logging, formatters, filters and writers.\"\nlicense       = \"LGPL\"\n\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.12.0, values >= 0.1\"\n",
"https://github.com/treeform/sysinfo": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"treeform\"\ndescription   = \"System info, CPU, OS, Memory\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.1.1\"\n",
"https://github.com/coocheenin/easymail": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Konstantin Kuchinin\"\ndescription   = \"wrapper for the sendmail command\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask test, \"Runs the EasyMail test...\":\n  exec \"nim c -r tests/t\"",
"https://api.github.com/repos/nimious/io-gles/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"74d2c87a2f694110ea65a41c66f9e487c91cca4b\",\"size\":60,\"url\":\"https://api.github.com/repos/nimious/gles/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nimious/gles/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nimious/gles/git/blobs/74d2c87a2f694110ea65a41c66f9e487c91cca4b\",\"download_url\":\"https://raw.githubusercontent.com/nimious/gles/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/gles/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nimious/gles/git/blobs/74d2c87a2f694110ea65a41c66f9e487c91cca4b\",\"html\":\"https://github.com/nimious/gles/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"size\":1076,\"url\":\"https://api.github.com/repos/nimious/gles/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nimious/gles/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nimious/gles/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"download_url\":\"https://raw.githubusercontent.com/nimious/gles/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/gles/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nimious/gles/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"html\":\"https://github.com/nimious/gles/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"c830c085d940aa6b3a85f1a73b1286f4a044fa16\",\"size\":1021,\"url\":\"https://api.github.com/repos/nimious/gles/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nimious/gles/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nimious/gles/git/blobs/c830c085d940aa6b3a85f1a73b1286f4a044fa16\",\"download_url\":\"https://raw.githubusercontent.com/nimious/gles/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/gles/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nimious/gles/git/blobs/c830c085d940aa6b3a85f1a73b1286f4a044fa16\",\"html\":\"https://github.com/nimious/gles/blob/master/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"c29fdbb5c0abba2de7e426f0e9cc89049c5e8459\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/gles/contents/docs?ref=master\",\"html_url\":\"https://github.com/nimious/gles/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/nimious/gles/git/trees/c29fdbb5c0abba2de7e426f0e9cc89049c5e8459\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/gles/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/nimious/gles/git/trees/c29fdbb5c0abba2de7e426f0e9cc89049c5e8459\",\"html\":\"https://github.com/nimious/gles/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"b7304e76e0adfce032f3ed02301a9ef1927e3b17\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/gles/contents/examples?ref=master\",\"html_url\":\"https://github.com/nimious/gles/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/nimious/gles/git/trees/b7304e76e0adfce032f3ed02301a9ef1927e3b17\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/gles/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/nimious/gles/git/trees/b7304e76e0adfce032f3ed02301a9ef1927e3b17\",\"html\":\"https://github.com/nimious/gles/tree/master/examples\"}},{\"name\":\"gles.nimble\",\"path\":\"gles.nimble\",\"sha\":\"50e628a2a851544b65abb4d2838b0a1c7d8391b2\",\"size\":220,\"url\":\"https://api.github.com/repos/nimious/gles/contents/gles.nimble?ref=master\",\"html_url\":\"https://github.com/nimious/gles/blob/master/gles.nimble\",\"git_url\":\"https://api.github.com/repos/nimious/gles/git/blobs/50e628a2a851544b65abb4d2838b0a1c7d8391b2\",\"download_url\":\"https://raw.githubusercontent.com/nimious/gles/master/gles.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/gles/contents/gles.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nimious/gles/git/blobs/50e628a2a851544b65abb4d2838b0a1c7d8391b2\",\"html\":\"https://github.com/nimious/gles/blob/master/gles.nimble\"}},{\"name\":\"nim.cfg\",\"path\":\"nim.cfg\",\"sha\":\"42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"size\":13,\"url\":\"https://api.github.com/repos/nimious/gles/contents/nim.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/gles/blob/master/nim.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/gles/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"download_url\":\"https://raw.githubusercontent.com/nimious/gles/master/nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/gles/contents/nim.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/gles/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"html\":\"https://github.com/nimious/gles/blob/master/nim.cfg\"}},{\"name\":\"nimdoc.cfg\",\"path\":\"nimdoc.cfg\",\"sha\":\"122a385381d006a574b2b63d50125524207d0445\",\"size\":98,\"url\":\"https://api.github.com/repos/nimious/gles/contents/nimdoc.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/gles/blob/master/nimdoc.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/gles/git/blobs/122a385381d006a574b2b63d50125524207d0445\",\"download_url\":\"https://raw.githubusercontent.com/nimious/gles/master/nimdoc.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/gles/contents/nimdoc.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/gles/git/blobs/122a385381d006a574b2b63d50125524207d0445\",\"html\":\"https://github.com/nimious/gles/blob/master/nimdoc.cfg\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"31580f5707033fd0e94a06a5159ee9b0edcb07be\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/gles/contents/src?ref=master\",\"html_url\":\"https://github.com/nimious/gles/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nimious/gles/git/trees/31580f5707033fd0e94a06a5159ee9b0edcb07be\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/gles/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nimious/gles/git/trees/31580f5707033fd0e94a06a5159ee9b0edcb07be\",\"html\":\"https://github.com/nimious/gles/tree/master/src\"}}]",
"https://raw.githubusercontent.com/blmvxer/netTest/master/netTest.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"blmvxer\"\ndescription   = \"Connection Test for Nim Web Applications\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/johnnovak/nim-fmod": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"John Novak\"\ndescription   = \"Nim wrapper for the FMOD Low Level C API\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\n# Tasks\n\ntask compileExamples, \"Compiles the examples\":\n  exec \"nim c examples/playsound\"\n  exec \"nim c examples/usercreatedsound\"\n",
"https://github.com/status-im/nim-web3": "mode = ScriptMode.Verbose\n\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"This is the humble begginings of library similar to web3.[js|py]\"\nlicense       = \"MIT or Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\nrequires \"chronicles\"\nrequires \"chronos\"\nrequires \"eth\"\nrequires \"faststreams\"\nrequires \"json_rpc\"\nrequires \"json_serialization\"\nrequires \"nimcrypto\"\nrequires \"stew\"\nrequires \"stint\"\n\n### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  # TODO, don't forget to change defaultLang to `cpp` if the project requires C++\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://raw.githubusercontent.com/Vindaar/nim-mpfit/master/mpfit.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Sebastian Schmidt\"\ndescription   = \"Wrapper for the cMPFIT non-linear least squares fitting library (Levenberg-Marquardt)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\nimport ospaths, strutils, strformat\nconst\n  pkgName = \"mpfit\"\n  orgFile = \"docs\" / (pkgName & \".org\")\n  rstFile = \"docs\" / (pkgName & \".rst\")\n  rstFileAuto = \"docs\" / (pkgName & \"_autogen.rst\")\n\nproc basename(f: string): string =\n  let (dir, name, ext) = f.splitFile\n  result = name\n\nproc removePrefix(f, prefix: string): string =\n  result = f\n  result.removePrefix(prefix)\n\n# doc generation inspired by `strfmt`\ntask docs, \"Generate HTML docs using the Org file\":\n  # https://github.com/jgm/pandoc/issues/4749\n  exec \"pandoc \" & orgFile & \" -o \" & rstFile\n  var files: seq[string]\n  template walk(path: string, outf: untyped): untyped {.dirty.} =\n    for filePath in listFiles(path):\n      if filePath.endsWith(\".nim\"):\n        let outfile = outf\n        exec &\"nim doc {outfile} {filePath}\"\n        files.add outfile.removePrefix(\"-o:\")\n  walk(\"src\", \"-o:index.html\")\n  walk(\"src\" / pkgName, &\"-o:{filePath.basename}.html\")\n  mvFile rstFile, rstFileAuto\n  for f in files:\n    let fname = f.basename & \".html\"\n    mvFile fname, \"docs/\" & $fname\n",
"https://raw.githubusercontent.com/treeform/staticglfw/master/staticglfw.nimble": "\nversion     = \"4.1.2\"\nauthor      = \"Andre von Houck\"\ndescription = \"Static GLFW 3 wrapper for Nim\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.2\"\nrequires \"opengl >= 1.2.3\"\n",
"https://raw.githubusercontent.com/Double-oxygeN/tinamou/master/tinamou.nimble": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"Double_oxygeN\"\ndescription   = \"Game Library in Nim with SDL2\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"sdl2 >= 1.1\"\n\n# tasks\n\ntask release, \"do release build\":\n  exec \"nimble build -d:release --opt:speed --app:gui && strip ./bin/tinamou\"\n\ntask cleanup, \"clean up files\":\n  exec \"rm -f bin/* && rm -rf src/nimcache\"\n  exec \"find tests -type f ! -name \\\"*.*\\\" -delete && rm -rf tests/nimcache\"\n\ntask docgen, \"generate documentation\":\n  exec \"nimble doc2 src/tinamou.nim --project -o:docs\"\n\ntask test, \"test codes\":\n  withDir \"tests\":\n    exec \"nim c -r test\"\n    exec \"rm -f test\"\n",
"https://github.com/zero-functional/zero-functional": "version         = \"1.2.1\"\npackageName     = \"zero_functional\"\nauthor          = \"Alexander Ivanov / Michael Schulte\"\ndescription     = \"a library providing zero-cost for chaining functional abstractions in Nim.\"\nlicense         = \"MIT\"\nskipFiles       = @[\"test.nim\"]\nskipDirs        = @[\"benchmarks\"]\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/xland/nimeverything/": "[Package]\nname          = \"nimeverything\"\nversion       = \"0.1.0\"\nauthor        = \"liulun\"\ndescription   = \"everything wrapper (everything:http://www.voidtools.com/)\"\nlicense       = \"MIT\"\n",
"https://raw.githubusercontent.com/arturo-lang/arturo/master/arturo.nimble": "######################################################\n# Arturo\n# Programming Language + Bytecode VM compiler\n# (c) 2020 Arturo Contributors\n# (c) 2021 Yanis Zafirópulos\n#\n# @file: arturo.nimble\n######################################################\n\n# Package\n\nversion       = static readFile(\"version/version\")\nauthor        = \"Yanis Zafirópulos\"\ndescription   = \"Simple, modern and portable interpreted programming language for efficient scripting\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"arturo\"]\nbinDir        = \"bin\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/PMunch/nim-optionsutils": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"PMunch\"\ndescription   = \"Utility macros for easier handling of options in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/vitreo12/omni/master/omni.nimble": "# MIT License\n# \n# Copyright (c) 2020 Francesco Cameli\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nversion       = \"0.2.3\"\nauthor        = \"Francesco Cameli\"\ndescription   = \"omni is a DSL for low-level audio programming.\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 1.0.0\"\nrequires \"cligen >= 1.0.0\"\n\n#Ignore omni_lang\nskipDirs = @[\"omni_lang\"]\n\n#Install examples\ninstallDirs = @[\"examples\"]\n\n#Compiler executable\nbin = @[\"omni\"]\n\n#If using \"nimble install\" instead of \"nimble installOmni\", make sure omni-lang is still getting installed\nbefore install:\n  withDir(getPkgDir() & \"/omni_lang\"):\n    exec \"nimble install\"\n\n#before/after are BOTH needed for any of the two to work\nafter install:\n  discard\n    \n#As nimble install, but with -d:release, -d:danger and --opt:speed. Also installs omni_lang.\ntask installOmni, \"Install the omni-lang package and the omni compiler\":\n  #Build and install the omni compiler executable. This will also trigger the \"before install\" to install omni_lang\n  exec \"nimble install --passNim:-d:release --passNim:-d:danger --passNim:--opt:speed\"\n\n#Needed for the walkDir function\nimport os\n\nproc runTestsInFolder(path : string, top_level : bool = false) : void =\n  for kind, file in walkDir(path):\n    let splitFile = file.splitFile\n    if kind == pcFile:\n      if splitFile.ext == \".nim\":\n        exec (\"nim c -r \" & file)\n    elif kind == pcDir:\n      if top_level and splitFile.name == \"utils\": #skip top level \"utils\" folder\n        continue\n      runTestsInFolder(file, false)\n\ntask test, \"Execute all tests\":\n  let testsDir = getPkgDir() & \"/tests\"\n  runTestsInFolder(testsDir, true)\n\n#Install the omni compiler executable before running the tests on CI \nbefore testCI:\n  exec \"nimble install\" \n\ntask testCI, \"Run tests on CI: it installs omni / omni_lang first\":\n  exec \"nimble test\"\n\n#before/after are BOTH needed for any of the two to work\nafter testCI:\n  discard\n",
"https://raw.githubusercontent.com/angus-lherrou/hayaa/master/hayaa.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Angus L'Herrou\"\ndescription   = \"Conway's Game of Life implemented in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"hayaa\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\", \"illwill >= 0.2.0\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/rethinkdb.nim/master/rethinkdb.nimble": "version       = \"0.2.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"RethinkDB driver for Nim\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\", \"bench\"]\n\nrequires \"nim >= 1.0.4\", \"struct >= 0.2.1\", \"scram >= 0.1.1\"\n",
"https://raw.githubusercontent.com/oprypin/nim-csfml/master/csfml.nimble": "[Package]\nname: \"csfml\"\nversion: \"2.5.0\"\nauthor: \"Oleh Prypin\"\ndescription: \"Bindings for Simple and Fast Multimedia Library (through CSFML)\"\nlicense: \"zlib\"\nsrcDir: \"src\"\n[Deps]\nrequires: \"nim >= 0.17.0\"\n",
"https://github.com/MrJohz/appdirs": "[Package]\nname = \"Appdirs\"\nversion = \"0.1.1\"\nauthor = \"Johz\"\nlicense = \"MIT\"\ndescription = \"A utility library to find the directory you need to app in.\"\n\n[Deps]\nrequires = \"nimrod >= 0.9.5\"",
"https://github.com/gabbhack/deser": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"gabbhack\"\ndescription   = \"De/serialization library for Nim \"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\", \"htmldocs\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.2, https://github.com/gabbhack/anycase-fork >= 0.2.0\"\n\n# Tasks\nimport strformat, strutils, sequtils\n\nproc recursiveListFiles(dir: string, l: var seq[string]) =\n  for i in listDirs(dir):\n    recursiveListFiles(i, l)\n\n  for i in listFiles(dir):\n    if i.endsWith(\".nim\"):\n      l.add(i)\n\nproc recursiveListFiles(dir: string): seq[string] =\n  recursiveListFiles(dir, result)\n\ntask pretty, \"Pretty source code\":\n  for i in concat(recursiveListFiles(srcDir), recursiveListFiles(\"tests\")):\n    echo fmt\"Pretty {i}\"\n    exec fmt\"nimpretty {i} --indent:2\"\n\ntask test, \"Run tests\":\n  exec \"nimble install deser_json -y\"\n  exec \"testament all\"\n\ntask docs, \"Generate docs\":\n  rmDir \"docs\"\n  exec \"nimble doc2 --outdir:docs --project --git.url:https://github.com/gabbhack/deser --git.commit:master --index:on src/deser\"\n  exec \"testament html\"\n  mvFile(\"testresults.html\", \"docs/testresults.html\")\n",
"https://github.com/GULPF/samson": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"JSON & JSON5 implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -d:json5InternalTesting -r tests/testrunner.nim\"\n  rmFile \"tests/testrunner\"\n\ntask unicode, \"Generate Unicode ranges\":\n  exec \"nim c -r unicode_data/generate '\" &\n    thisDir() & \"/src/samson/private/generated/unicode_data.nim'\"\n  rmFile \"unicode_data/generate\"\n\ntask docs, \"Generate docs\":\n  exec \"nim doc -o:docs/samson.html src/samson\"\n  exec \"nim doc -o:docs/pragmas.html src/samson/pragmas\"\n  exec \"nim doc -o:docs/errors.html src/samson/errors\"",
"https://github.com/xioren/NimPass": "version     = \"0.0.4\"\nauthor      = \"xioren\"\ndescription = \"quickly generate secure passwords and passphrases\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nbin         = @[\"nimpass\"]\n",
"https://raw.githubusercontent.com/brentp/hts-nim/master/hts.nimble": "# Package\n\nversion       = \"0.3.14\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"hts (bam/sam) for nim\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\"]\nskipFiles = @[\"teloage.nim\"]\n\nimport os, strutils\n\ntask test, \"run the tests\":\n  exec \"nim c  -d:useSysAssert -d:useGcAssert --lineDir:on --debuginfo -r tests/all\"\n\n#before test:\n#  exec \"c2nim src/hts/private/hts_concat.h\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"hts\")\n  #exec \"nim doc2 --verbosity:0 --hints:off -o:docs/index.html  src/hts.nim\"\n  for file in listfiles(\"src/hts\"):\n    if file.endswith(\"value.nim\"): continue\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n\n",
"https://raw.githubusercontent.com/onecodex/nim-bitarray/master/bitarray.nimble": "[Package]\nname          = \"bitarray\"\nversion       = \"0.6.0\"\nauthor        = \"Nick Boyd Greenfield\"\ndescription   = \"Efficient in-memory or mmap-backed bitarray implementation in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"bitarray\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"",
"https://github.com/unimorg/unimcli": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"sovlookup\"\ndescription   = \"User-friendly nimcli.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\",\"cfg\"]\nbin           = @[\"unimcli\"]\n# skipDirs      = @[\"tests\"]\nnamedBin      = {\"unimcli\": \"unim\"}.toTable()\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"cligen >= 1.3.2\"\nrequires \"nimble\"\n",
"https://raw.githubusercontent.com/achesak/nim-uri2/master/uri2.nimble": "[Package]\nname = \"uri2\"\nversion = \"0.3\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for better URI handling\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/juancarlospaco/nim-overpass": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"juancarlospaco\"\ndescription   = \"OpenStreetMap Overpass API Lib\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/genotrance/cmake/master/cmake.nimble": "version     = \"0.1.1\"\nauthor      = \"genotrance\"\ndescription = \"CMake for Nimble\"\nlicense     = \"MIT\"\n\nbin = @[\"cmake\"]\ninstallDirs = @[\"cmake\"]\n\nrequires \"nim >= 0.19.2\", \"nimterop >= 0.5.0\"",
"https://raw.githubusercontent.com/Ahrotahn/argon2/master/argon2.nimble": "version     = \"1.0.1\"\nauthor      = \"Ahrotahn\"\ndescription = \"A nim wrapper for Argon2\"\nlicense     = \"MIT\"\n\ninstallDirs = @[\n    \"phc-winner-argon2\"\n]\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_nordnet_api/master/nordnet.nimble": "# Package\nversion       = \"0.0.7\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Scraping API for www.nordnet.dk\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"config\"]\n\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\nrequires \"nmqtt >= 1.0.0\"\nrequires \"q >= 0.0.7\"\n",
"https://raw.githubusercontent.com/kaushalmodi/nim-svdpi/master/svdpi.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Kaushal Modi\"\ndescription   = \"Small wrapper for SystemVerilog DPI-C header svdpi.h\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"nimterop >= 0.5.2\"\n",
"https://github.com/Narazaka/shioridll-nim": "# Package\n\nversion       = \"3.0.0\"\nauthor        = \"Narazaka\"\ndescription   = \"The SHIORI DLL interface\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"example\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://raw.githubusercontent.com/niv/jser.nim/master/jser.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"niv\"\ndescription   = \"json de/serializer for native data types\"\nlicense       = \"MIT\"\n\nskipDirs      = @[ \"tests/\" ]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\n",
"https://github.com/Q-Master/packets.nim": "# Package\ndescription = \"Pure Nim declarative packets system for serializing/deserializing\"\nversion     = \"0.4.0\"\nlicense     = \"MIT\"\nauthor      = \"Vladimir Berezenko <qmaster2000@gmail.com>\"\n\n# Dependencies\nrequires \"nim >= 0.20.00\", \"packedjson\", \"crc32 >= 0.1.1\"\n\ntask test, \"tests\":\n  echo \"Running stdlib json tests\"\n  exec \"nim c -r -d:packetDumpTree tests/packets.nim\"\n  echo \"Running packedjson tests\"\n  exec \"nim c -r -d:packetDumpTree -d:usePackedJson tests/packets.nim\"\n  echo \"Running no IDs stdlib json tests\"\n  exec \"nim c -r -d:packetDumpTree -d:disablePacketIDs tests/packets.nim\"\n  echo \"Running no IDs packedjson tests\"\n  exec \"nim c -r -d:packetDumpTree -d:usePackedJson -d:disablePacketIDs tests/packets.nim\"\n  \ntask bench, \"benchmarks\":\n  echo \"Running stdlib benchmark\"\n  exec \"nim c -r -d:release tests/benchmark.nim\"\n  echo \"Running packedjson benchmark\"\n  exec \"nim c -r -d:release -d:usePackedJson tests/benchmark.nim\"\n",
"https://raw.githubusercontent.com/miere43/nim-registry/master/winregistry.nimble": "# package\nversion     = \"0.2.1\"\nauthor      = \"Vladislav <miere> Vorobiev\"\ndescription = \"Deal with Windows Registry from Nim\"\nlicense     = \"MIT\"\n\n# deps \nrequires      \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/GULPF/timezones/master/timezones.nimble": "import std / os\nimport timezones / private / tzversion\n\nversion       = \"0.5.4\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"Timezone library compatible with the standard library\"\nlicense       = \"MIT\"\n\nbin = @[\"timezones/fetchjsontimezones\"]\ninstallDirs = @[\"timezones\"]\ninstallFiles = @[TzDbVersion & \".json\", \"timezones.nim\"]\nrequires \"nim >= 0.19.9\"\n\n# Tasks\n\ntask fetch, \"Fetch the timezone database\":\n    exec \"nim c -d:timezonesNoEmbeed -r timezones/fetchjsontimezones \" &\n        TzDbVersion &  \" --out:\" & thisDir() / TzDbVersion & \".json\"\n\ntask test, \"Run the tests\":\n    echo thisDir()\n    let tzdataPath = thisDir() / TzDbVersion & \".json\"\n\n    # Run tests with various backends and options\n\n    echo \"\\nRunning tests (C)\"\n    echo \"===============\"\n    exec \"nim c --hints:off -r tests/tests.nim\"\n\n    echo \"\\nRunning tests (C in release mode)\"\n    echo \"===============\"\n    exec \"nim c --hints:off -r -d:release tests/tests.nim\"\n\n    echo \"\\nRunning tests (JS)\"\n    echo \"================\"\n    exec \"nim js -d:nodejs --hints:off -r tests/tests.nim\"\n\n    echo \"\\nTesting -d:timezonesPath (C)\"\n    echo \"================\"\n    exec \"nim c --hints:off -d:timezonesPath=\\\"\" & tzdataPath &\n        \"\\\" -r tests/tests.nim\"\n\n    echo \"\\nTesting -d:timezonesPath (JS)\"\n    echo \"================\"\n    exec \"nim js -d:nodejs --hints:off -d:timezonesPath=\\\"\" & tzdataPath &\n        \"\\\" -r tests/tests.nim\"\n\n    rmFile \"tests/tests\"\n    rmFile \"tests/tests.js\"\n\n    # Test `fetchjsontimezones`\n\n    when defined(posix):\n        exec \"nim c --hints:off -r timezones/fetchjsontimezones \" &\n            \"2020d --out:testdata.json\"\n        rmFile \"testdata.json\"\n        rmFile \"timezones/fetchjsontimezones\"\n    else:\n        exec \"nim c --hints:off timezones/fetchjsontimezones\"\n\ntask docs, \"Generate docs\":\n    exec \"nim doc -o:docs/timezones.html timezones.nim\"\n    exec \"nim doc -o:docs/posixtimezones.html timezones/posixtimezones.nim\"",
"https://raw.githubusercontent.com/disruptek/openapi/master/openapi.nimble": "version = \"3.2.2\"\nauthor = \"disruptek\"\ndescription = \"OpenAPI Code Generator\"\nlicense = \"MIT\"\nrequires \"npeg < 1.0.0\"\nrequires \"foreach >= 1.0.1 & < 2.0.0\"\nrequires \"https://github.com/disruptek/rest.git >= 1.0.3 & < 2.0.0\"\n\nsrcDir = \"src\"\n\nproc execCmd(cmd: string) =\n  echo \"execCmd:\" & cmd\n  exec cmd\n\nproc execTest(test: string) =\n  execCmd \"nim c           -f -r \" & test\n  execCmd \"nim c   -d:release -r \" & test\n  execCmd \"nim c   -d:danger  -r \" & test\n  execCmd \"nim cpp            -r \" & test\n  execCmd \"nim cpp -d:danger  -r \" & test\n  when NimMajor >= 1 and NimMinor >= 1:\n    execCmd \"nim c   --gc:arc -r \" & test\n    execCmd \"nim cpp --gc:arc -r \" & test\n\ntask test, \"run tests for travis\":\n  execTest(\"tests/tests.nim\")\n",
"https://github.com/MasonMcGill/tuples.git": "[Package]\nname          = \"tuples\"\nversion       = \"0.1.0\"\nauthor        = \"Mason McGill\"\ndescription   = \"Tuple manipulation utilities\"\nlicense       = \"MIT\"\nsrcDir        = \"source\"\n\n[Deps]\nRequires: \"nimrod >= 0.10.1\"\n",
"https://github.com/juancarlospaco/nim-bytes2human": "version     = \"0.2.2\"\nauthor      = \"Juan Carlos\"\ndescription = \"Convert bytes to kilobytes, megabytes, gigabytes, etc.\"\nlicense     = \"LGPLv3\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.0.0\"  # https://github.com/juancarlospaco/nim-bytes2human/issues/2#issue-714338524\n",
"https://github.com/Vindaar/ggplotnim": "# Package\n\nversion       = \"0.3.22\"\nauthor        = \"Sebastian Schmidt\"\ndescription   = \"A port of ggplot2 for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"https://github.com/Vindaar/seqmath >= 0.1.11\"\nrequires \"ginger >= 0.2.8\"\nrequires \"persvector >= 1.0.0\"\nrequires \"shell >= 0.4.3\"\nrequires \"arraymancer >= 0.6.2\"\nrequires \"webview\"\n\ntask testCI, \"Run standard tests w/o cairo dependency\":\n  # This runs all tests suitable for a CI environment, which does not provide\n  # cairo. Most tests are independent of cairo anyways\n  exec \"nim c -d:noCairo -r tests/testDf.nim\"\n  exec \"nim c -d:noCairo -r tests/tests.nim\"\n  exec \"nim c -d:noCairo -r tests/test_issue2.nim\"\n  exec \"nim c -d:noCairo -r tests/test_issue20.nim\"\n  exec \"nim c -d:noCairo -r tests/test_issue28.nim\"\n\ntask test, \"Run standard tests\":\n  exec \"nim c -r tests/testDf.nim\"\n  exec \"nim c -r tests/tests.nim\"\n  exec \"nim c -r tests/test_issue2.nim\"\n  exec \"nim c -r tests/test_issue20.nim\"\n  exec \"nim c -r tests/test_issue28.nim\"\n\ntask fulltest, \"Run all tests, including recipe comparison (requires ntangle)\":\n  exec \"nim c -r tests/testDf.nim\"\n  exec \"nim c -r tests/tests.nim\"\n  exec \"nim c -r tests/test_issue2.nim\"\n  exec \"nim c -r tests/test_issue20.nim\"\n  exec \"nim c -r tests/test_issue28.nim\"\n  exec \"nim c -r tests/tCompareRecipes.nim\"\n\nimport os, strutils, strformat\nconst\n  pkgName = \"ggplotnim\"\n  orgFile = \"docs\" / (pkgName & \".org\")\n  rstFile = \"docs\" / (pkgName & \".rst\")\n  rstFileAuto = \"docs\" / (pkgName & \"_autogen.rst\")\n\nproc basename(f: string): string =\n  let (dir, name, ext) = f.splitFile\n  result = name\n\nproc removePrefix(f, prefix: string): string =\n  result = f\n  result.removePrefix(prefix)\n\ntemplate canImport(x: untyped): untyped =\n  compiles:\n    import x\n\nwhen canImport(docs / docs):\n  # can define the `gen_docs` task (docs already imported now)\n  # this is to hack around weird nimble + nimscript behavior.\n  # when overwriting an install nimble will try to parse the generated\n  # nimscript file and for some reason then it won't be able to import\n  # the module (even if it's put into `src/`).\n  task gen_docs, \"Generate ggplotnim documentation\":\n    # build the actual docs and the index\n    exec \"pandoc \" & orgFile & \" -o \" & rstFile\n    buildDocs(\n      \"src/\", \"docs/\",\n      defaultFlags = \"--hints:off --warnings:off\"\n    )\n\ntask recipes, \"Generate and run all recipes\":\n  when not defined(windows):\n    # depend on existing `.nim` files in repo on windows then..\n    exec \"ntangle recipes.org\"\n  exec \"nim c -r recipes/allRecipes.nim\"\n\ntask recipesJson, \"Generate and run all recipes with JSON output\":\n  when not defined(windows):\n    exec \"ntangle recipes.org\"\n  exec \"nim c -r recipes/recipeFiles.nim\" # to generate the `_json.nim` files\n  exec \"nim c -r recipes/allRecipesJson.nim\"\n\ntask generateJson, \"Generate the JSON results for all recipes\":\n  exec \"nim c -r recipes/runRecipes.nim --json\"\n\ntask recipesPlots, \"Generate the PNGs from all recipes\":\n  exec \"\"\"for f in media/recipes/r*.pdf; do inkscape $f --export-png=\"${f/.pdf/.png}\"; done\"\"\"\n",
"https://raw.githubusercontent.com/treeform/chrono/master/chrono.nimble": "# Package\nversion       = \"0.2.0\"\nauthor        = \"Andre von Houck\"\ndescription   = \"Calendars, Timestamps and Timezones utilities.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\nskipDirs = @[\"tests\", \"tools\"]\n\ntask generate, \"Generate timezone bins from raw data\":\n  exec \"nim c -r tools/generate all\"\n\ntask docs, \"Generate docs\":\n  exec \"nim doc -o:docs/index.html src/chrono.nim\"\n",
"https://raw.githubusercontent.com/jangko/freetype/master/freetype.nimble": "[Package]\nname          = \"freetype\"\nversion       = \"0.1.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"FreeType2 library wrapper\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.16.0\"",
"https://github.com/yglukhov/plists": "# Package\nversion       = \"0.2.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Generate and parse Mac OS X .plist files\"\nlicense       = \"MIT\"\n\nrequires \"darwin\"\n",
"https://raw.githubusercontent.com/philip-wernersbach/nim-picohttpparser/master/picohttpparser.nimble": "[Package]\n\nversion       = \"0.10.0\"\nauthor        = \"Philip Wernersbach\"\ndescription   = \"Bindings for picohttpparser.\"\nlicense       = \"MIT\"\n",
"https://raw.githubusercontent.com/nimious/gles/master/gles.nimble": "[Package]\nname: \"gles\"\nversion: \"0.1\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for OpenGL ES, the embedded 3D graphics library\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://github.com/kaushalmodi/nim-svdpi": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Kaushal Modi\"\ndescription   = \"Small wrapper for SystemVerilog DPI-C header svdpi.h\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"nimterop >= 0.5.2\"\n",
"https://raw.githubusercontent.com/PMunch/nancy/master/nancy.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"PMunch\"\ndescription   = \"Easiest way to print tables in your terminal with full ANSI support and custom style\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipFiles     = @[\"example.png\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"ansiparse >= 0.2.0\"\n",
"https://raw.githubusercontent.com/jyapayne/nim-glew/master/glew.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"Autogenerated glew bindings for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\", \"https://github.com/jyapayne/nimterop#head\", \"https://github.com/jyapayne/nim-glfw#head\"\n",
"https://github.com/jangko/freetype": "[Package]\nname          = \"freetype\"\nversion       = \"0.1.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"FreeType2 library wrapper\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.16.0\"",
"https://raw.githubusercontent.com/brentp/genoiser/master/genoiser.nimble": "# Package\n\nversion       = \"0.2.7\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"write functions, get summaries of genomic data\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"hts >= 0.2.3\", \"docopt >= 0.6.8\", \"kexpr\"\nsrcDir = \"src\"\n\nbin = @[\"genoiser\"]\ninstallExt = @[\"nim\"]\n\n\nskipDirs = @[\"tests\"]\n\nimport ospaths,strutils\n\ntask test, \"run the tests\":\n  exec \"nim c --lineDir:on --debuginfo -r --threads:on tests/all\"\n\n#before test:\n#  exec \"c2nim src/hts/private/hts_concat.h\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"genoiser\")\n  #exec \"nim doc2 --verbosity:0 --hints:off -o:docs/index.html  src/hts.nim\"\n  for file in listfiles(\"src/genoiser\"):\n    if file.endswith(\"value.nim\"): continue\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n\n",
"https://github.com/pragmagic/redux.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Pragmagic, Inc.\"\ndescription   = \"Predictable state container.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17\"\n",
"https://raw.githubusercontent.com/xmonader/nim-terminaltables/master/terminaltables.nimble": "# Package\nversion       = \"0.1.1\"\nauthor        = \"xmonader\"\ndescription   = \"terminal tables\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\ntask genDocs, \"Create code documentation for terminaltables\":\n    exec \"nim doc --threads:on --project src/terminaltables.nim && rm -rf docs/api; mkdir -p docs && mv src/htmldocs docs/api \"\n\n\ntask dmdm, \"dmdm\":\n    echo paramCount()\n    echo paramStr(2)\n    exec \"echo in dmdm\"",
"https://github.com/jiro4989/monit": "# Package\n\nversion       = \"1.2.2\"\nauthor        = \"jiro4989\"\ndescription   = \"A simple task runner. Run tasks and watch file changes with custom paths.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"monit\"]\nbinDir        = \"bin\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"yaml#d173f2a7f6279bb8351d42a5e3a1e853f8623778\"\nrequires \"cligen == 1.2.2\"\n\nimport strformat, os\n\ntask checkFormat, \"Checking that codes were formatted\":\n  var errCount = 0\n  for f in listFiles(\"src\"):\n    let tmpFile = f & \".tmp\"\n    exec &\"nimpretty --output:{tmpFile} {f}\"\n    if readFile(f) != readFile(tmpFile):\n      inc errCount\n    rmFile tmpFile\n  exec &\"exit {errCount}\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble check\"\n  if buildOS == \"linux\":\n    exec \"nimble checkFormat\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble build -d:release -Y\"\n  exec \"./bin/monit help\"\n  exec \"./bin/monit --version\"\n",
"https://github.com/achesak/extmath.nim": "[Package]\nname = \"extmath\"\nversion = \"1.2.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Nimrod math library\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://github.com/boydgreenfield/nimrod-bloom": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Boyd Greenfield\"\ndescription   = \"Efficient Bloom filter implementation for Nimrod using MurmurHash3.\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/miere43/nim-registry": "# package\nversion     = \"0.2.1\"\nauthor      = \"Vladislav <miere> Vorobiev\"\ndescription = \"Deal with Windows Registry from Nim\"\nlicense     = \"MIT\"\n\n# deps \nrequires      \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/MasonMcGill/tuples/master/tuples.nimble": "[Package]\nname          = \"tuples\"\nversion       = \"0.1.0\"\nauthor        = \"Mason McGill\"\ndescription   = \"Tuple manipulation utilities\"\nlicense       = \"MIT\"\nsrcDir        = \"source\"\n\n[Deps]\nRequires: \"nimrod >= 0.10.1\"\n",
"https://github.com/ThomasTJdev/nim_onedrive": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"Get information on files and folders in OneDrive.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"packedjson >= 0.1.0\"",
"https://api.github.com/repos/MasonMcGill/optionals/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"e7ce4f9ea83ec86c9633597e2eab2fefea113eb7\",\"size\":44,\"url\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/optionals/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/e7ce4f9ea83ec86c9633597e2eab2fefea113eb7\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/optionals/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/e7ce4f9ea83ec86c9633597e2eab2fefea113eb7\",\"html\":\"https://github.com/MasonMcGill/optionals/blob/master/.gitignore\"}},{\"name\":\"license.txt\",\"path\":\"license.txt\",\"sha\":\"3f6096c69b723343b7bfd25753a1a2906b69da0e\",\"size\":1056,\"url\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/license.txt?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/optionals/blob/master/license.txt\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/3f6096c69b723343b7bfd25753a1a2906b69da0e\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/optionals/master/license.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/license.txt?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/3f6096c69b723343b7bfd25753a1a2906b69da0e\",\"html\":\"https://github.com/MasonMcGill/optionals/blob/master/license.txt\"}},{\"name\":\"optionals.nimble\",\"path\":\"optionals.nimble\",\"sha\":\"ec2bada09409096cff56fe5430abc838884d002b\",\"size\":196,\"url\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/optionals.nimble?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/optionals/blob/master/optionals.nimble\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/ec2bada09409096cff56fe5430abc838884d002b\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/optionals/master/optionals.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/optionals.nimble?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/ec2bada09409096cff56fe5430abc838884d002b\",\"html\":\"https://github.com/MasonMcGill/optionals/blob/master/optionals.nimble\"}},{\"name\":\"project\",\"path\":\"project\",\"sha\":\"72a7fe2b03da383819edcf3f366376f7a0e3b2c1\",\"size\":3067,\"url\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/project?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/optionals/blob/master/project\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/72a7fe2b03da383819edcf3f366376f7a0e3b2c1\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/optionals/master/project\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/project?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/72a7fe2b03da383819edcf3f366376f7a0e3b2c1\",\"html\":\"https://github.com/MasonMcGill/optionals/blob/master/project\"}},{\"name\":\"readme.md\",\"path\":\"readme.md\",\"sha\":\"4d22a2e0c9dff7e5537b638438f2eb791470a6a8\",\"size\":414,\"url\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/readme.md?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/optionals/blob/master/readme.md\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/4d22a2e0c9dff7e5537b638438f2eb791470a6a8\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/optionals/master/readme.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/readme.md?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/optionals/git/blobs/4d22a2e0c9dff7e5537b638438f2eb791470a6a8\",\"html\":\"https://github.com/MasonMcGill/optionals/blob/master/readme.md\"}},{\"name\":\"source\",\"path\":\"source\",\"sha\":\"f8a4d01da8002ea45d1ca6ee60a843467dca05ca\",\"size\":0,\"url\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/source?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/optionals/tree/master/source\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/optionals/git/trees/f8a4d01da8002ea45d1ca6ee60a843467dca05ca\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/source?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/optionals/git/trees/f8a4d01da8002ea45d1ca6ee60a843467dca05ca\",\"html\":\"https://github.com/MasonMcGill/optionals/tree/master/source\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"fa462e6020fd9994545415819de866cdcce2a07a\",\"size\":0,\"url\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/tests?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/optionals/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/optionals/git/trees/fa462e6020fd9994545415819de866cdcce2a07a\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/optionals/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/optionals/git/trees/fa462e6020fd9994545415819de866cdcce2a07a\",\"html\":\"https://github.com/MasonMcGill/optionals/tree/master/tests\"}}]",
"https://github.com/mashingan/anonimongo": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"Rahmatullah\"\ndescription   = \"Anonimongo - Another pure Nim Mongo driver\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n#installDirs   = @[\"cinclude\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"nimSHA2 >= 0.1.1\", \"scram >= 0.1.9\",\n         \"sha1 >= 1.1\", \"dnsclient\", \"supersnappy\", \"zippy\"\n\ntask bson, \"Unit test Bson\":\n  exec \"nim c -r ./tests/test_bson_test.nim\"\n",
"https://github.com/gokr/sprymicro": "# Package\nversion       = \"0.0.2\"\nauthor        = \"Göran Krampe\"\ndescription   = \"Small demo Spry interpreters\"\nlicense       = \"MIT\"\nbin           = @[\"sprymicro\", \"sprymin\"]\n\n# This forces no installation except binaries\nskipExt       = @[\"nim\"]\ninstallDirs   = @[]\n\n# Deps\nrequires \"spryvm\"\n\ntask test, \"Run the tests\":\n  withDir \"tests\":\n    exec \"nim c -r all\"\n",
"https://github.com/paul-nameless/nim-fswatch": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Paul Nameless\"\ndescription   = \"Nim binding to libfswatch\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://raw.githubusercontent.com/treeform/steamworks/master/steamworks.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"treeform\"\ndescription   = \"Steamworks wrapper for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n",
"https://raw.githubusercontent.com/yglukhov/nim-jwt/master/jwt.nimble": "# Package\nversion       = \"0.2\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"JSON Web Tokens for Nim\"\nlicense       = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.19.0\"\nrequires \"bearssl#68c6d27304245c948526487b37e10951acf7dbc8\"\nrequires \"https://github.com/yglukhov/bearssl_pkey_decoder\"\n",
"https://raw.githubusercontent.com/zielmicha/nim-dbus/master/dbus.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"dbus bindings for Nim\"\nlicense       = \"MIT\"\n\n# Dependecies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/xflywind/nimish": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"C macro for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimish\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/def-/rsvg": "[Package]\nname: \"rsvg\"\nversion: \"0.1\"\nauthor: \"Dennis Felsing\"\ndescription: \"Wrapper for librsvg, a Scalable Vector Graphics (SVG) rendering library\"\nlicense: \"MIT\"\n\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://github.com/nepeckman/nerve-rpc": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"nepeckman\"\ndescription   = \"An RPC framework\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.6\"\nrequires \"ws\"\n\ntask itests, \"Runs intergration tests\":\n  exec \"nimble js tests/client.nim\"\n  exec \"nimble c -r tests/server.nim\"\n",
"https://raw.githubusercontent.com/PMunch/nim-pcap/master/pcap.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Tiny pure Nim library to read PCAP files\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires      \"nim >= 0.17.1\"\n\n",
"https://github.com/oswjk/nimlevenshtein": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Oskari Timperi\"\ndescription   = \"A wrapper for algorithms from python-Levenshtein package.\"\nlicense       = \"GPL-2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/Clonkk/timelog/master/timelog.nimble": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"rcaillaud\"\ndescription   = \"Simple nimble package to log monotic timings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/xflywind/docx": "# Package\n\nversion       = \"0.1.8\"\nauthor        = \"flywind\"\ndescription   = \"A simple docx reader.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"zip >= 0.2.1\"\n\n\n# tests\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/alltests.nim\"\n",
"https://raw.githubusercontent.com/xflywind/httpx/master/httpx.nimble": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Zeshen Xing\"\ndescription   = \"A super-fast epoll-backed and parallel HTTP server.\"\nlicense       = \"Apache 2.0\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\n\nrequires \"nim >= 1.2.6\"\nrequires \"ioselectors >= 0.1.6\"\n\n\ntask helloworld, \"Compiles and executes the hello world server.\":\n  exec \"nim c -d:release -r tests/helloworld\"\n\ntask dispatcher, \"Compiles and executes the dispatcher test server.\":\n  exec \"nim c -d:release -r tests/dispatcher\"\n\ntask tests, \"Runs the test suite.\":\n  exec \"testament all\"\n",
"https://github.com/lihf8515/wxpay": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Li Haifeng\"\ndescription   = \"WeChat payment SDK for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmac >= 0.2.0\"\n",
"https://raw.githubusercontent.com/ba0f3/sim.nim/master/sim.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"Parse config by defining an object\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://github.com/achesak/nim-rss": "# Package\n\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim RSS parser\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.18\"\n",
"https://github.com/ire4ever1190/mike": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"Jake Leahy\"\ndescription   = \"A very simple micro web framework\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"httpx == 0.1.0\"\n#[\n    Could be made to be an optional dependency that the user needs to install themselves\n    But for now I will have it has a requirement\n]#\nrequires \"regex == 0.16.2\" \n\ntask r, \"runs the example\":\n    exec(\"nim c -d:debug -r example\")\n\ntask genDoc, \"Generates the doc\":\n    rmDir(\"docs\")\n    exec(\"nimble doc2 --git.url:https://github.com/ire4ever1190/mike --git.commit:master --index:on --outdir:docs -d:docs --project src/mike.nim; exit 0\")\n    exec(\"nim buildIndex -o:docs/theindex.html docs\")\n    exec(\"nim rst2html -o:docs/index.html readme.rst\")\n    # Adds a fix for dark theme on the index\n    var index = readFile(\"docs/index.html\")\n    index &= \"\"\"\n        <script>\n        const currentTheme = localStorage.getItem('theme') ? localStorage.getItem('theme') : null;\n        if (currentTheme) {\n            document.documentElement.setAttribute('data-theme', currentTheme);\n        }\n        </script>\n        \"\"\"\n    writeFile(\"docs/index.html\", index)\n\ntask workspace, \"Internal use, loads up all the files\":\n    exec(\"micro src/mike.nim src/mike/*.nim\")\n\ntask benchmark, \"Runs the benchmarks\":\n    cd(\"benchmarks\")\n    exec(\"nim c -r benchmark\")\n",
"https://raw.githubusercontent.com/qqtop/nimcx/master/nimcx.nimble": "[Package]\n\nname          = \"nimcx\"\nversion       = \"1.0.8\"\nauthor        = \"qqTop\"\ndescription   = \"Color and utilities library for a happy linux terminal.\"\nlicense       = \"MIT\"\n\n[Deps]\n\nRequires : \"nim >= 1.2.6\"\n\n",
"https://github.com/achesak/nim-shorturl": "[Package]\nname = \"shorturl\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for generating URL identifiers\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/jackhftang/vaultclient.nim": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Jack Tang\"\ndescription   = \"Hashicorp Vault HTTP Client\"\nlicense       = \"MIT\"\nbackend       = \"c\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"vaultclient.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    # print current version\n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\nproc renamePackage(fname, tname: string) =\n  let nimbleFile = tname & \".nimble\"\n  mvFile(\"src/\" & fname & \".nim\", \"src/\" & tname & \".nim\")\n  mvFile(fname & \".nimble\", nimbleFile)\n  let t1 = readFile(nimbleFile)\n  let t2 = t1.replace(\"vaultclient\", tname)\n  writeFile(nimbleFile, t2)\n\ntask rename, \"rename package\":\n  let pname = paramStr( paramCount() )\n  if pname == \"rename\":\n    echo \"no package name provided\"\n    quit 1\n  else:\n    withDir thisDir():\n      renamePackage(\"vaultclient\", pname)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html --project src/vaultclient.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://raw.githubusercontent.com/rmt/alut/master/alut.nimble": "# Package\n\nversion       = \"1.1.0.2\"\nauthor        = \"Robert M. Thomson\"\ndescription   = \"OpenAL Utility Toolkit (ALUT)\"\nlicense       = \"LGPL-2.1\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"openal >= 0.1.0\"\n",
"https://raw.githubusercontent.com/johnnovak/nim-osdialog/master/osdialog.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"John Novak <john@johnnovak.net>\"\ndescription   = \"Nim wrapper for the osdialog library\"\nlicense       = \"WTFPL\"\n\nskipDirs = @[\"examples\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n\ntask examples, \"Compiles the examples\":\n  exec \"nim c examples/test.nim\"\n",
"https://github.com/haxscramper/htsparse": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"haxscramper\"\ndescription   = \"Nim wrappers for tree-sitter parser grammars\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmisc >= 0.9.0\"\nrequires \"hparse\"\n\ntask docgen, \"Generate documentation\":\n  exec(\"hmisc-putils docgen\")\n\ntask dockerdocgen, \"Generate documentation in docker container\":\n  exec(\"hmisc-putils dockerdocgen -lcligen -lhmisc -lhasts -lhnimast -lhdrawing -lhpprint -lhparse\")\n\ntask dockertest, \"Run tests in docker container\":\n  exec(\"\"\"\nhmisc-putils dockertest --projectDir:$(pwd) \\\n  -lcligen -lhmisc -lhasts -lhnimast -lhdrawing -lhpprint -lhparse \\\n  --preTestCmds='wget https://github.com/tree-sitter/tree-sitter/archive/0.17.3.tar.gz' \\\n  --preTestCmds='tar -xvf 0.17.3.tar.gz' \\\n  --preTestCmds='cd tree-sitter-0.17.3' \\\n  --preTestCmds='sudo make install PREFIX=/usr'\n\"\"\")\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-libravatar/master/libravatar.nimble": "version       = \"0.5.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Libravatar library for Nim, Gravatar alternative. Libravatar is an open source free federated avatar api & service.\"\nlicense       = \"PPL\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.4\"\n",
"https://raw.githubusercontent.com/yglukhov/nimsl/master/nimsl.nimble": "# Package\nversion = \"0.3.2\"\nauthor = \"Yuriy Glukhov\"\ndescription = \"Shaders in Nim\"\nlicense = \"MIT\"\n\n# Dependencies\nrequires \"variant\"\n\n# Tests\nconst allTests = [\"test\", \"nimsl/private/var_decls\"]\n\ntask test, \"Run tests\":\n    exec \"nimble jsTests\"\n    exec \"nimble cTests\"\n\ntask jsTests, \"\":\n    for t in allTests:\n        exec(\"nim js -r -d:nodejs \" & t)\n\ntask cTests, \"\":\n    for t in allTests:\n        exec(\"nim c -r \" & t)\n",
"https://raw.githubusercontent.com/diegogub/jdec/master/jdec.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Diego Guraieb\"\ndescription   = \"easy json helpers to marshal and unmarshal json\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/OpenSystemsLab/rethinkdb.nim": "version       = \"0.2.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"RethinkDB driver for Nim\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\", \"bench\"]\n\nrequires \"nim >= 1.0.4\", \"struct >= 0.2.1\", \"scram >= 0.1.1\"\n",
"https://github.com/miere43/autome": "packageName           = \"autome\"\nversion               = \"0.1.2\"\nauthor                = \"Vladislav Vorobiev\"\ndescription           = \"Write GUI automation scripts with Nim\"\nlicense               = \"MIT\"\nskipFiles             = @[\"autome.html\"]\n\nrequires \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/coocheenin/easymail/master/easymail.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Konstantin Kuchinin\"\ndescription   = \"wrapper for the sendmail command\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask test, \"Runs the EasyMail test...\":\n  exec \"nim c -r tests/t\"",
"https://raw.githubusercontent.com/Yardanico/nim-adb/master/adb.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yardanico\"\ndescription   = \"ADB protocol implementation in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/ruivieira/matplotnim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Rui Vieira\"\ndescription   = \"Nim wrapper for matplotlib\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\nrequires \"tempfile\"\n",
"https://raw.githubusercontent.com/guzba/nimsimd/master/nimsimd.nimble": "version     = \"1.0.0\"\nauthor      = \"Ryan Oldenburg\"\ndescription = \"Pleasant Nim bindings for SIMD instruction sets.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.0\"\n",
"https://api.github.com/repos/fenekku/moustachu/contents": "[{\"name\":\".circleci\",\"path\":\".circleci\",\"sha\":\"3bd1d28cef38fc3844852f704ca924eb43d224f2\",\"size\":0,\"url\":\"https://api.github.com/repos/fenekku/moustachu/contents/.circleci?ref=master\",\"html_url\":\"https://github.com/fenekku/moustachu/tree/master/.circleci\",\"git_url\":\"https://api.github.com/repos/fenekku/moustachu/git/trees/3bd1d28cef38fc3844852f704ca924eb43d224f2\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fenekku/moustachu/contents/.circleci?ref=master\",\"git\":\"https://api.github.com/repos/fenekku/moustachu/git/trees/3bd1d28cef38fc3844852f704ca924eb43d224f2\",\"html\":\"https://github.com/fenekku/moustachu/tree/master/.circleci\"}},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"dc3437a64cf457658d74aa0b1b8bbc8ae44c542f\",\"size\":81,\"url\":\"https://api.github.com/repos/fenekku/moustachu/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/fenekku/moustachu/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/dc3437a64cf457658d74aa0b1b8bbc8ae44c542f\",\"download_url\":\"https://raw.githubusercontent.com/fenekku/moustachu/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fenekku/moustachu/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/dc3437a64cf457658d74aa0b1b8bbc8ae44c542f\",\"html\":\"https://github.com/fenekku/moustachu/blob/master/.gitignore\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"f35192396c22953a044e3a889c763527b9d58586\",\"size\":2906,\"url\":\"https://api.github.com/repos/fenekku/moustachu/contents/README.md?ref=master\",\"html_url\":\"https://github.com/fenekku/moustachu/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/f35192396c22953a044e3a889c763527b9d58586\",\"download_url\":\"https://raw.githubusercontent.com/fenekku/moustachu/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fenekku/moustachu/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/f35192396c22953a044e3a889c763527b9d58586\",\"html\":\"https://github.com/fenekku/moustachu/blob/master/README.md\"}},{\"name\":\"moustachu.nimble\",\"path\":\"moustachu.nimble\",\"sha\":\"51fd66134dc3a3d917be06aa60d81f5326c3a6a4\",\"size\":451,\"url\":\"https://api.github.com/repos/fenekku/moustachu/contents/moustachu.nimble?ref=master\",\"html_url\":\"https://github.com/fenekku/moustachu/blob/master/moustachu.nimble\",\"git_url\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/51fd66134dc3a3d917be06aa60d81f5326c3a6a4\",\"download_url\":\"https://raw.githubusercontent.com/fenekku/moustachu/master/moustachu.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fenekku/moustachu/contents/moustachu.nimble?ref=master\",\"git\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/51fd66134dc3a3d917be06aa60d81f5326c3a6a4\",\"html\":\"https://github.com/fenekku/moustachu/blob/master/moustachu.nimble\"}},{\"name\":\"runBenchmarks.nim\",\"path\":\"runBenchmarks.nim\",\"sha\":\"2593f8ed16549f89e4408bc70c78c1db271a335f\",\"size\":1267,\"url\":\"https://api.github.com/repos/fenekku/moustachu/contents/runBenchmarks.nim?ref=master\",\"html_url\":\"https://github.com/fenekku/moustachu/blob/master/runBenchmarks.nim\",\"git_url\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/2593f8ed16549f89e4408bc70c78c1db271a335f\",\"download_url\":\"https://raw.githubusercontent.com/fenekku/moustachu/master/runBenchmarks.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fenekku/moustachu/contents/runBenchmarks.nim?ref=master\",\"git\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/2593f8ed16549f89e4408bc70c78c1db271a335f\",\"html\":\"https://github.com/fenekku/moustachu/blob/master/runBenchmarks.nim\"}},{\"name\":\"runTests.nim\",\"path\":\"runTests.nim\",\"sha\":\"4fa0e7024e58ac8f83cd5a1934b59fe900112641\",\"size\":1043,\"url\":\"https://api.github.com/repos/fenekku/moustachu/contents/runTests.nim?ref=master\",\"html_url\":\"https://github.com/fenekku/moustachu/blob/master/runTests.nim\",\"git_url\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/4fa0e7024e58ac8f83cd5a1934b59fe900112641\",\"download_url\":\"https://raw.githubusercontent.com/fenekku/moustachu/master/runTests.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fenekku/moustachu/contents/runTests.nim?ref=master\",\"git\":\"https://api.github.com/repos/fenekku/moustachu/git/blobs/4fa0e7024e58ac8f83cd5a1934b59fe900112641\",\"html\":\"https://github.com/fenekku/moustachu/blob/master/runTests.nim\"}},{\"name\":\"specs\",\"path\":\"specs\",\"sha\":\"95fddfa3498ebc97d01ecc827f0afec19252b3b1\",\"size\":0,\"url\":\"https://api.github.com/repos/fenekku/moustachu/contents/specs?ref=master\",\"html_url\":\"https://github.com/fenekku/moustachu/tree/master/specs\",\"git_url\":\"https://api.github.com/repos/fenekku/moustachu/git/trees/95fddfa3498ebc97d01ecc827f0afec19252b3b1\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fenekku/moustachu/contents/specs?ref=master\",\"git\":\"https://api.github.com/repos/fenekku/moustachu/git/trees/95fddfa3498ebc97d01ecc827f0afec19252b3b1\",\"html\":\"https://github.com/fenekku/moustachu/tree/master/specs\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"7a49a43340e4a693534fca14f36a340ebefa6c61\",\"size\":0,\"url\":\"https://api.github.com/repos/fenekku/moustachu/contents/src?ref=master\",\"html_url\":\"https://github.com/fenekku/moustachu/tree/master/src\",\"git_url\":\"https://api.github.com/repos/fenekku/moustachu/git/trees/7a49a43340e4a693534fca14f36a340ebefa6c61\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fenekku/moustachu/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/fenekku/moustachu/git/trees/7a49a43340e4a693534fca14f36a340ebefa6c61\",\"html\":\"https://github.com/fenekku/moustachu/tree/master/src\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"9a044aba98cb012d1e997ea537e9ee0809632c0e\",\"size\":0,\"url\":\"https://api.github.com/repos/fenekku/moustachu/contents/tests?ref=master\",\"html_url\":\"https://github.com/fenekku/moustachu/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/fenekku/moustachu/git/trees/9a044aba98cb012d1e997ea537e9ee0809632c0e\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fenekku/moustachu/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/fenekku/moustachu/git/trees/9a044aba98cb012d1e997ea537e9ee0809632c0e\",\"html\":\"https://github.com/fenekku/moustachu/tree/master/tests\"}}]",
"https://raw.githubusercontent.com/j-a-s-d/webrod/master/webrod.nimble": "version     = \"0.3.0\"\nauthor      = \"Javier Santo Domingo\"\ndescription = \"webrod\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.0.6\"\nrequires \"xam >= 0.1.0\"\n\n",
"https://github.com/jamesalbert/nimates": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"James Albert\"\ndescription   = \"a client library for the Postmates API written in Nim\"\nlicense       = \"Apache License 2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\ntask example, \"running example\":\n  exec \"cd examples && nim c -r basic.nim\"\n\ntask docs, \"generating docs\":\n  exec \"nim doc -o:docs/nimates.html src/nimates.nim\"\n",
"https://raw.githubusercontent.com/status-im/nim-bearssl/master/bearssl.nimble": "# Package\nversion       = \"0.1.5\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"BearSSL wrapper\"\nlicense       = \"MIT or Apache License 2.0\"\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  exec \"nim -v\"\n  test \"-d:debug\", \"tests/test1\"\n  test \"-d:release\", \"tests/test1\"\n  test \"--gc:arc -d:release\", \"tests/test1\"\n",
"https://raw.githubusercontent.com/jiro4989/eastasianwidth/master/eastasianwidth.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"eastasianwidth is library for EastAsianWidth.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask docs, \"Generate document\":\n  exec \"nimble doc src/eastasianwidth.nim -o:docs/eastasianwidth.html\"\n\ntask examples, \"Run example codes\":\n  exec \"nim c -r examples/table.nim\"\n\ntask ci, \"Run CI tasks\":\n  exec \"nimble test\"\n  exec \"nimble docs\"\n  exec \"nimble examples\"\n",
"https://raw.githubusercontent.com/jxy/sitmo/master/sitmo.nimble": "version     = \"0.0.2\"\nauthor      = \"Xiao-Yong Jin\"\ndescription = \"Sitmo parallel random number generator in Nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\ntask test, \"Runs the test suite\":\n  --define: release\n  --path: \"src\"\n  --run\n  setCommand \"c\", \"test/t.nim\"\n\ntask docgen, \"Regenerate the documentation\":\n  exec \"nim doc2 --out:doc/sitmo.html src/sitmo.nim\"\n",
"https://raw.githubusercontent.com/capocasa/naw/master/naw.nimble": "version     = \"0.1.0\"\nauthor      = \"Carlo Capocasa\"\ndescription = \"A glue wrapper to do awk-style text processing with Nim\"\nlicense     = \"MIT\"\nbin           = @[\"naw\"]\ninstallExt    = @[\"nim\"]\n\nrequires \"nim >= 1.2.0\"\n\n",
"https://raw.githubusercontent.com/fowlmouth/nake/master//nake.nimble": "version = \"1.9.4\"\nauthor = \"fowl\"\ndescription = \"make-like for Nim. Describe your builds as tasks!\"\nlicense = \"MIT\"\n\ninstallFiles = @[\n    \"LICENSE.rst\",\n    \"README.rst\",\n    \"nake.nim\",\n    \"nakefile.nim\",\n    \"nakelib.nim\"\n    ]\n\nbin = @[\"nake\"]\n\n# Deps\nrequires \"nim >= 0.10.2\"\n",
"https://github.com/rnentjes/nim-ludens": "[Package]\nname: \"ludens\"\nversion: \"0.1\"\nauthor: \"Rien Nentjes\"\ndescription: \"Simple game engine\"\nlicense: \"MIT\"\nsrcDir: \"lib\"\n\n[Deps]\nrequires: \"nimrod >= 0.9.6\"\n",
"https://github.com/guzba/zippy": "version       = \"0.5.3\"\nauthor        = \"Ryan Oldenburg\"\ndescription   = \"Pure Nim implementation of deflate, zlib, gzip and zip.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.0\"\n",
"https://api.github.com/repos/def-/nim-brainfuck/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"7c8c74508f6b5acb0b5af9d5f1800fa9f3d2866e\",\"size\":27,\"url\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/def-/nim-brainfuck/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/7c8c74508f6b5acb0b5af9d5f1800fa9f3d2866e\",\"download_url\":\"https://raw.githubusercontent.com/def-/nim-brainfuck/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/7c8c74508f6b5acb0b5af9d5f1800fa9f3d2866e\",\"html\":\"https://github.com/def-/nim-brainfuck/blob/master/.gitignore\"}},{\"name\":\"brainfuck.nimble\",\"path\":\"brainfuck.nimble\",\"sha\":\"df7f252cff2f1623240b74c318c3cb7eaaeb9dad\",\"size\":266,\"url\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/brainfuck.nimble?ref=master\",\"html_url\":\"https://github.com/def-/nim-brainfuck/blob/master/brainfuck.nimble\",\"git_url\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/df7f252cff2f1623240b74c318c3cb7eaaeb9dad\",\"download_url\":\"https://raw.githubusercontent.com/def-/nim-brainfuck/master/brainfuck.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/brainfuck.nimble?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/df7f252cff2f1623240b74c318c3cb7eaaeb9dad\",\"html\":\"https://github.com/def-/nim-brainfuck/blob/master/brainfuck.nimble\"}},{\"name\":\"circle.yml\",\"path\":\"circle.yml\",\"sha\":\"418f1df18db056848dc5ce232f7f96dc8aecafb6\",\"size\":813,\"url\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/circle.yml?ref=master\",\"html_url\":\"https://github.com/def-/nim-brainfuck/blob/master/circle.yml\",\"git_url\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/418f1df18db056848dc5ce232f7f96dc8aecafb6\",\"download_url\":\"https://raw.githubusercontent.com/def-/nim-brainfuck/master/circle.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/circle.yml?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/418f1df18db056848dc5ce232f7f96dc8aecafb6\",\"html\":\"https://github.com/def-/nim-brainfuck/blob/master/circle.yml\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"d6e7eb8e99fb5bd4d605d7b997cfcbc835eef030\",\"size\":0,\"url\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/examples?ref=master\",\"html_url\":\"https://github.com/def-/nim-brainfuck/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/def-/nim-brainfuck/git/trees/d6e7eb8e99fb5bd4d605d7b997cfcbc835eef030\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-brainfuck/git/trees/d6e7eb8e99fb5bd4d605d7b997cfcbc835eef030\",\"html\":\"https://github.com/def-/nim-brainfuck/tree/master/examples\"}},{\"name\":\"license.txt\",\"path\":\"license.txt\",\"sha\":\"8d63f40d99db65ba1e5eac70118507a6d1213385\",\"size\":1058,\"url\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/license.txt?ref=master\",\"html_url\":\"https://github.com/def-/nim-brainfuck/blob/master/license.txt\",\"git_url\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/8d63f40d99db65ba1e5eac70118507a6d1213385\",\"download_url\":\"https://raw.githubusercontent.com/def-/nim-brainfuck/master/license.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/license.txt?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/8d63f40d99db65ba1e5eac70118507a6d1213385\",\"html\":\"https://github.com/def-/nim-brainfuck/blob/master/license.txt\"}},{\"name\":\"readme.md\",\"path\":\"readme.md\",\"sha\":\"0dbfe6ea7454cad7729ebcc0a530889d9ae3e19b\",\"size\":391,\"url\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/readme.md?ref=master\",\"html_url\":\"https://github.com/def-/nim-brainfuck/blob/master/readme.md\",\"git_url\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/0dbfe6ea7454cad7729ebcc0a530889d9ae3e19b\",\"download_url\":\"https://raw.githubusercontent.com/def-/nim-brainfuck/master/readme.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/readme.md?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-brainfuck/git/blobs/0dbfe6ea7454cad7729ebcc0a530889d9ae3e19b\",\"html\":\"https://github.com/def-/nim-brainfuck/blob/master/readme.md\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"5233137fffe4778fbd0297e6e40b93721b2b59ca\",\"size\":0,\"url\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/src?ref=master\",\"html_url\":\"https://github.com/def-/nim-brainfuck/tree/master/src\",\"git_url\":\"https://api.github.com/repos/def-/nim-brainfuck/git/trees/5233137fffe4778fbd0297e6e40b93721b2b59ca\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-brainfuck/git/trees/5233137fffe4778fbd0297e6e40b93721b2b59ca\",\"html\":\"https://github.com/def-/nim-brainfuck/tree/master/src\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"20a056b254105109455ef3c789c58d5d18ec6e84\",\"size\":0,\"url\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/tests?ref=master\",\"html_url\":\"https://github.com/def-/nim-brainfuck/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/def-/nim-brainfuck/git/trees/20a056b254105109455ef3c789c58d5d18ec6e84\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-brainfuck/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-brainfuck/git/trees/20a056b254105109455ef3c789c58d5d18ec6e84\",\"html\":\"https://github.com/def-/nim-brainfuck/tree/master/tests\"}}]",
"https://raw.githubusercontent.com/apense/nimfuzz/master/nimfuzz.nimble": "[Package]\nname          = \"nimfuzz\"\nversion       = \"1.3.0\"\nauthor        = \"Jonathan Edwards\"\ndescription   = \"Simple and compact Nim fuzzing library\"\nlicense       = \"Apache License 2.0\"\nbin = \"nimfuzz\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/nim-lang/nim-zmq": "# Package\n\nversion       = \"0.3.4\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"ZeroMQ wrapper\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/ducdetronquito/phoon": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Guillaume Paulet\"\ndescription   = \"A web framework inspired by ExpressJS 🐇⚡\"\nlicense       = \"Public Domain\"\n\nsrcDir = \"src\"\nskipDirs = @[\"benchmark\", \"tests\"]\n\nrequires \"nim >= 1.0.2\"\n\ntask integration, \"Runs the integration test suite.\":\n  exec \"nim c -r tests/integration/test_simple_server.nim\"\n",
"https://raw.githubusercontent.com/MarcAzar/BitVector/master/BitVector.nimble": "# Package\n\nversion       = \"0.4.10\"\nauthor        = \"Marc Azar\"\ndescription   = \"Bit Vector with base SomeOrdinal and little endian format. Supports `seq` based operations.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://raw.githubusercontent.com/disruptek/golden/master/golden.nimble": "version = \"3.0.15\"\nauthor = \"disruptek\"\ndescription = \"a benchmark tool\"\nlicense = \"MIT\"\nrequires \"nim >= 1.0.4\"\n\nrequires \"foreach >= 1.0.2\"\nrequires \"bump >= 1.8.15\"\nrequires \"msgpack4nim 0.2.9\"\nrequires \"terminaltables#82ee5890c13e381de0f11c8ba6fe484d7c0c2f19\"\nrequires \"https://github.com/disruptek/gittyup >= 2.4.4 & < 3.0.0\"\nrequires \"nimterop >= 0.6.2 & < 1.0.0\"\n\n# we need this one for csize reasons\nrequires \"cligen >= 0.9.40\"\n\nbin = @[\"golden\"]\nsrcDir = \"src\"\n\nproc execCmd(cmd: string) =\n  echo \"execCmd:\" & cmd\n  exec cmd\n\nproc execTest(test: string) =\n  execCmd \"nim c           -f -r \" & test\n  execCmd \"nim c   -d:release -r \" & test\n  execCmd \"nim c   -d:danger  -r \" & test\n  execCmd \"nim cpp            -r \" & test\n  execCmd \"nim cpp -d:danger  -r \" & test\n  when NimMajor >= 1 and NimMinor >= 1:\n    execCmd \"nim c --useVersion:1.0 -d:danger -r \" & test\n    execCmd \"nim c   --gc:arc -r \" & test\n    execCmd \"nim cpp --gc:arc -r \" & test\n\ntask test, \"run tests for travis\":\n  execTest(\"tests/tstats.nim\")\n  execTest(\"tests/tspec.nim\")\n  execTest(\"tests/tdb.nim\")\n  execTest(\"tests/tinvoke.nim\")\n",
"https://raw.githubusercontent.com/status-im/nim-confutils/master/confutils.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"confutils\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Simplified handling of command line options and config files\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.0.0\",\n         \"stew\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r --threads:off -d:release tests/test_all\"\n  exec \"nim c -r --threads:on -d:release tests/test_all\"\n",
"https://raw.githubusercontent.com/PMunch/nimcr/master/nimcr.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Simple program that allows you to use the shebang #!nimcr in your Nim files. It will automatically compile the file to a hidden executable in the same directory as the nim file as long as the file doesn\\'t already exist and is younger than (ie. created after the last modification of) the script file. If it is younger it will simply run the executable saving you from compiling the script each time it is run. The output of the compiler is also ignored if the compilation is succesfull and only the output of the program is used. If the compilation fails the output will be written to stderr and the return code will match that of the compiler.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n\n# Examples\n\nskipDirs = @[\"examples\"]\n\n# Binary package\n\nbin = @[\"nimcr\"]\nskipExt = @[\"nim\"]\n",
"https://github.com/Michedev/sequtils2": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"Michele De Vita\"\ndescription   = \"Additional methods for sequences that are not present in sequtils\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\nskipDirs = @[\"tests\"]\n",
"https://raw.githubusercontent.com/hlaaftana/sliceutils/master/sliceutils.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"hlaaftana\"\ndescription   = \"utils for Slice/HSlice\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/aidansteele/sph": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Aidan Steele\"\ndescription   = \"Nim wrapper for sphlib\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.1\"\n\n",
"https://raw.githubusercontent.com/muxueqz/skybook/master/skybook.nimble": "# Package\n\nversion       = \"1.0.3\"\nauthor        = \"muxueqz\"\ndescription   = \"Light weight bookmark manager(delicious alternative)\"\nlicense       = \"GPL-2.0\"\nsrcDir        = \"src\"\nbin           = @[\"skybook\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"jester >= 0.4.1\"\n",
"https://raw.githubusercontent.com/treeform/flatty/master/flatty.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"treeform\"\ndescription   = \"Flatty - tools and serializer for plain flat binary files.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/PMunch/nim-pcap": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Tiny pure Nim library to read PCAP files\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires      \"nim >= 0.17.1\"\n\n",
"https://raw.githubusercontent.com/treeform/print/master/print.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"treeform\"\ndescription   = \"Print is a set of pretty print macros, useful for print-debugging.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/jackhftang/threadproxy.nim": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Jack Tang\"\ndescription   = \"Simplify Nim Inter-Thread Communication\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"threadproxy.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html src/threadproxy.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://github.com/thebigbaron/pine": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"BigBaron\"\ndescription   = \"Nim Static Blog & Site Generator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"pine\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"markdown >= 0.8.0\"\nrequires \"rainbow >= 0.2.2\"",
"https://github.com/juancarlospaco/nim-webp": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"Juan Carlos\"\ndescription   = \"WebP Tools wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n\nimport distros\nforeignDep \"libwebp\"\n",
"https://github.com/CORDEA/backoff": "# Package\n\nversion     = \"0.1\"\nauthor      = \"Yoshihiro Tanaka\"\ndescription = \"Implementation of exponential backoff for nim.\"\nlicense     = \"Apache License 2.0\"\nsrcDir      = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/Akito13/nim-fletcher/master/fletcher.nimble": "version     = \"0.3.1\"\nauthor      = \"Akito\"\ndescription = \"Implementation of the Fletcher checksum algorithm.\"\nlicense     = \"GPLv3+\"\n\nrequires \"nim >= 0.20.0\"\nskipDirs    = @[\"utils\"]\nskipFiles   = @[\"README.md\"]\n\ntask manualtest, \"Runs the manual test.\":\n  exec \"nim cc -r tests/manualtest.nim\"\ntask configure, \"Creates nim.cfg for optimized builds.\":\n  exec \"nim utils/makenimcfg.nims\"\ntask clean, \"Removes nim.cfg.\":\n  exec \"nim utils/clean.nims\"",
"https://raw.githubusercontent.com/Nycto/AStarNim/master/astar.nimble": "# Package\n\nversion       = \"0.6.0\"\nauthor        = \"Nycto\"\ndescription   = \"Basic A-Star path finding\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\nrequires \"binaryheap >= 0.1.0\"\n\n",
"https://github.com/markspanbroek/nim-arduino": "version = \"0.2.0\"\nauthor = \"nim-arduino authors\"\ndescription = \"Arduino bindings for Nim\"\nlicense = \"MIT\"\n\nrequires \"nim >= 1.4.2 & < 2.0.0\"",
"https://github.com/liquid600pgm/aglet": "# Package\n\nversion       = \"0.4.4\"\nauthor        = \"liquid600pgm\"\ndescription   = \"A safe, high-level, optimized OpenGL wrapper\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"https://github.com/liquid600pgm/nim-glm >= 1.1.1\"\nrequires \"https://github.com/nimgl/glfw >= 3.3.4\"\n\n\n# Tasks\n\nfrom os import walkDirRec, splitFile\n\ntask buildDocs, \"rebuilds documentation to the docs/ folder for GitHub Pages\":\n  echo \"-- creating doc directory\"\n  rmDir \"docs\"\n  mkDir \"docs\"\n\n  echo \"-- building docs for aglet.nim\"\n  selfExec \"doc \" &\n    \"--project --index:on -o:docs/ \" &\n    \"--git.url:https://github.com/liquid600pgm/aglet \" &\n    \"--git.commit:\" & version & \" \" &\n    \"src/aglet.nim\"\n\n  echo \"-- creating index.html\"\n  cpFile \"docs/aglet.html\", \"docs/index.html\"\n\n  echo \"-- removing leftover .idx files\"\n  for name in walkDirRec \"docs\":\n    let (_, _, ext) = name.splitFile\n    if ext == \".idx\":\n      echo \" : \", name\n      rmFile name\n\n  echo \"-- done!\"\n",
"https://raw.githubusercontent.com/pragmagic/uuids/master//uuids.nimble": "[Package]\nname: \"uuids\"\nversion: \"0.1.11\"\nauthor: \"Xored Software, Inc.\"\ndescription: \"UUID library\"\nlicense: \"MIT\"\n\n[Deps]\nrequires: \"isaac >= 0.1.3\"\n",
"https://github.com/bluenote10/nim-ovr": "[Package]\nname          = \"libovr\"\nversion       = \"0.1.0\"\nauthor        = \"Fabian Keller\"\ndescription   = \"Nim bindings for libOVR (Oculus Rift)\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"",
"https://github.com/nim-lang/tcl": "[Package]\nname: \"tcl\"\nversion: \"1.0\"\nauthor: \"Andreas Rumpf\"\ndescription: \"Wrapper for the TCL programming language\"\nlicense: \"MIT\"\n\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://github.com/xmonader/nim-terminaltables": "# Package\nversion       = \"0.1.1\"\nauthor        = \"xmonader\"\ndescription   = \"terminal tables\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\ntask genDocs, \"Create code documentation for terminaltables\":\n    exec \"nim doc --threads:on --project src/terminaltables.nim && rm -rf docs/api; mkdir -p docs && mv src/htmldocs docs/api \"\n\n\ntask dmdm, \"dmdm\":\n    echo paramCount()\n    echo paramStr(2)\n    exec \"echo in dmdm\"",
"https://raw.githubusercontent.com/yglukhov/nim-only-uuid/master/nuuid.nimble": "[Package]\r\nname          = \"nuuid\"\r\nversion       = \"0.1.0\"\r\nauthor        = \"Willy Heineman\"\r\ndescription   = \"A Nim source only UUID generator\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://raw.githubusercontent.com/joryschossau/bitset/master/bitset.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jory Schossau\"\ndescription   = \"A pure nim version of C++'s std::bitset\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.5.1\"\n\nimport oswalkdir, os, strutils\n\nproc runTests(nimFlags = \"\") =\n\n  for f in oswalkdir.walkDir(\"tests\"):\n    # Run all nim modules starting with \"t\"\n    let sf = f.path.splitFile()\n    if sf.ext == \".nim\" and sf.name.startsWith(\"t\"):\n      exec \"nim c \" & \" -r \" & nimFlags & \" \" & f.path\n\ntask test, \"run tests\":\n  runTests()\n",
"https://github.com/barcharcraz/nimlibpng": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Charles Barto\"\ndescription   = \"Wrapper around the libpng library for png graphics\"\nlicense       = \"MIT\"\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/hlaaftana/marggers/master/marggers.nimble": "version       = \"0.1.0\"\nauthor        = \"hlaaftana\"\ndescription   = \"markdown dialect\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/vegansk/nrpl/master/nrpl.nimble": "[Package]\r\nname          = \"nrpl\"\r\nversion       = \"0.1.4\"\r\nauthor        = \"Willy Heineman\"\r\ndescription   = \"A Nim REPL\"\r\nlicense       = \"MIT\"\r\n\r\nbin           = \"nrpl\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://raw.githubusercontent.com/Vindaar/ginger/master/ginger.nimble": "# Package\n\nversion       = \"0.2.9\"\nauthor        = \"Vindaar\"\ndescription   = \"A Grid (R) like package in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"chroma >= 0.1.0\"\nrequires \"https://github.com/Vindaar/seqmath >= 0.1.7\"\nrequires \"cairo >= 1.1.1\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/test1.nim\"\n",
"https://raw.githubusercontent.com/OrgTangle/ntangle/master/ntangle.nimble": "# Package\n\nversion       = \"0.6.6\"\nauthor        = \"Kaushal Modi\"\ndescription   = \"Command-line utility for Tangling of Org mode documents\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"ntangle\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.6\", \"cligen >= 0.9.31\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/otp.nim/master/otp.nimble": "[Package]\nname          = \"OTP\"\nversion       = \"0.1.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"One Time Password library for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\nRequires: \"hmac\"\nRequires: \"base32\"\n",
"https://github.com/jangko/nimAGG": "[Package]\nname          = \"nimAGG\"\nversion       = \"0.1.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"nimAGG is a Nim port of Anti Grain Geometry(AGG)\"\nlicense       = \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.16.0\"\nrequires: \"sdl2_nim#head\"\nrequires: \"nimBMP >= 0.1.0\"\nrequires: \"freetype >= 0.1.0\"\nrequires: \"polyBool >= 0.1.0\"\n",
"https://github.com/squattingmonk/nasher.nim": "# Package\n\nversion       = \"0.14.2\"\nauthor        = \"Michael A. Sinclair\"\ndescription   = \"A build tool for Neverwinter Nights projects\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nasher\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"neverwinter >= 1.4.1\"\nrequires \"glob >= 0.10.0\"\nrequires \"nwnt >= 1.3.0\"\n",
"https://raw.githubusercontent.com/hlaaftana/applicates/master/applicates.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"hlaaftana\"\ndescription   = \"instantiated \\\"pointers\\\" to cached AST\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\nimport os\n\ntask docs, \"build docs\":\n  const\n    gitUrl = \"https://github.com/hlaaftana/applicates\"\n    gitCommit = \"master\"\n    gitDevel = \"master\" \n  for f in walkDirRec(\"src\"):\n    exec \"nim doc --git.url:\" & gitUrl &\n      \" --git.commit:\" & gitCommit &\n      \" --git.devel:\" & gitDevel &\n      \" --outdir:docs \" & f\n\ntask tests, \"runs tests with all define variations\":\n  echo \"testing normally\"\n  exec \"nimble test\"\n  echo \"testing with macro cache\"\n  exec \"nimble test -d:applicatesUseMacroCache\"\n  echo \"testing with table cache\"\n  exec \"nimble test -d:applicatesCacheUseTable\"\n",
"https://raw.githubusercontent.com/achesak/nim-spwd/master/spwd.nimble": "[Package]\nname = \"spwd\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with the UNIX shadow password file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/nitely/nim-segmentation/master/segmentation.nimble": "# Package\n\nversion = \"0.1.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Unicode text segmentation tr29\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipDirs = @[\"tests\", \"gen\"]\n\nrequires \"nim >= 0.19.0\"\nrequires \"unicodedb >= 0.8.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/segmentation.nim\"\n  exec \"nim c -r tests/tests.nim\"\n\n  # Test runnable examples\n  #exec \"nim doc -o:./docs/ugh/ugh.html ./src/segmentation.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc -o:./docs/index.html ./src/segmentation.nim\"\n",
"https://raw.githubusercontent.com/bung87/tim_sort/master/tim_sort.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"bung87\"\ndescription   = \"A new awesome nimble package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.1.0\"\n",
"https://raw.githubusercontent.com/awr1/cpuwhat/master/cpuwhat.nimble": "# Package\nversion     = \"0.1.1\"\nauthor      = \"A. W. Rohan\"\ndescription = \"Nim utilities for advanced CPU operations: CPU identification, bindings to assorted intrinsics\"\nlicense     = \"ISC\"\nsrcDir      = \"source\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\nrequires \"nimterop >= 0.4.4\"\n",
"https://github.com/hlaaftana/marggers": "version       = \"0.1.0\"\nauthor        = \"hlaaftana\"\ndescription   = \"markdown dialect\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/paranim/pvim/master/pvim.nimble": "# Package\n\nversion       = \"0.18.2\"\nauthor        = \"oakes\"\ndescription   = \"A parasitic editor\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\ninstallExt    = @[\n  when defined(windows):\n    \"dll\"\n  elif defined(macosx):\n    \"dylib\"\n  elif defined(linux):\n    \"so\"\n]\nbin           = @[\"pvim\"]\n\ntask dev, \"Run dev version\":\n  exec \"nimble run pvim\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"paravim >= 0.18.2\"\n",
"https://raw.githubusercontent.com/treeform/mddoc/master/mddoc.nimble": "version       = \"0.1.0\"\nauthor        = \"treeform\"\ndescription   = \"Generate Nim API docs in markdown for GitHub's README.md files.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbin = @[\"mddoc\"]\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/fragcolor-xyz/fragments/master/fragments.nimble": "# Package\nversion     = \"0.1.39\"\nauthor      = \"Fragcolor Inc.\"\ndescription = \"Our very personal collection of utilities\"\nlicense     = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.19.2\"\n",
"https://github.com/fallingduck/asyncpythonfile-nim": "[Package]\nname          = \"asyncpythonfile\"\nversion       = \"0.1.1\"\nauthor        = \"Jack VanDrunen\"\ndescription   = \"High level, asynchronous file API mimicking Python's file interface.\"\nlicense       = \"ISC\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://github.com/nimgl/nimgl": "# Package\n\nversion     = \"1.1.6\"\nauthor      = \"Leonardo Mariscal\"\ndescription = \"Nim Game Library\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nskipDirs    = @[\".github\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Tasks\n\nimport\n  strutils\n\nconst\n  docDir = \"docs\"\n\nproc nimExt(file: string): bool =\n  file[file.len - 4 ..< file.len] == \".nim\"\n\nproc genDocs(pathr: string, output: string) =\n  let path = pathr.replace(r\"\\\", \"/\")\n  var src = path[path.rfind(\"/\") + 1 .. path.len - 5]\n  echo \"\\n[info] generating \" & src & \".nim\"\n  if src == \"nimgl\":\n    src = \"index\"\n  exec(\"nim doc -d:vulkan -o:\" & output & \"/\" & src & \".html\" & \" \" & path)\n\nproc walkRecursive(dir: string) =\n  for f in listFiles(dir):\n    if f.nimExt: genDocs(f, docDir)\n  for od in listDirs(dir):\n    walkRecursive(od)\n\ntask test, \"Run files under examples dir\":\n  exec(\"nimble install -y glm\")\n  for file in listFiles(\"examples\"):\n    if file[6] == 't' and file.nimExt:\n      echo \"\\n[info] testing \" & file[6..<file.len]\n      exec(\"nim c -d:opengl_debug \" & file)\n\ntask docs, \"Generate documentation for all of the library\":\n  walkRecursive(srcDir)\n",
"https://raw.githubusercontent.com/brentp/nim-plotly/master/plotly.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"plotting library for nim\"\nlicense       = \"MIT\"\n\n\nrequires \"nim >= 0.18.0\", \"chroma\", \"jsbind\", \"webview\", \"ws\"\n\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\"]\n\nimport os, strutils\n\ntask test, \"run the tests\":\n  exec \"nim c -r tests/plotly/test_api.nim\"\n  exec \"nim c --lineDir:on --debuginfo -r examples/all\"\n  exec \"nim c --lineDir:on --debuginfo --threads:on -r examples/fig12_save_figure.nim\"\n\ntask travisTest, \"run the tests on travis\":\n  exec \"nim c -r tests/plotly/test_api.nim\"\n  # define the `travis` flag to use our custom `xdg-open` based proc to open\n  # firefox, which is non-blocking\n  exec \"nim c --lineDir:on -d:travis --debuginfo -r examples/all\"\n  exec \"nim c --lineDir:on -d:travis -d:DEBUG --debuginfo --threads:on -r examples/fig12_save_figure.nim\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"plotly\")\n  #exec \"nim doc2 --verbosity:0 --hints:off -o:docs/index.html  src/hts.nim\"\n  for file in listfiles(\"src/\"):\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n  for file in listfiles(\"src/plotly/\"):\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs/plotly\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-bencode/master/bencode.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"bencode library\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://github.com/hiteshjasani/nim-eternity": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Hitesh Jasani\"\ndescription   = \"A library to humanize elapsed times\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/johnnovak/nim-binstreams": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"John Novak <john@johnnovak.net>\"\ndescription   = \"Endianness aware stream I/O for Nim\"\nlicense       = \"WTFPL\"\n\ninstallDirs   = @[\"deps\"]\ninstallFiles  = @[\"binstreams.nim\", \"nim.cfg\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n\n# Tasks\n\ntask tests, \"Run all tests\":\n  exec \"nim c -r tests/tests\"\n\ntask docgen, \"Generate HTML documentation\":\n  exec \"nim doc -o:doc/binstreams.html binstreams\"\n",
"https://github.com/disruptek/sigv4": "version = \"1.0.13\"\nauthor = \"disruptek\"\ndescription = \"Amazon Web Services Signature Version 4\"\nlicense = \"MIT\"\n\nwhen getEnv(\"GITHUB_ACTIONS\", \"false\") != \"true\":\n  when defined(sigv4UseNimCrypto):\n    requires \"https://github.com/cheatfate/nimcrypto >= 0.5.4 & < 1.0.0\"\n  else:\n    requires \"https://github.com/jangko/nimSHA2 < 1.0.0\"\nelse:\n  # just require everything for CI purposes\n  requires \"https://github.com/cheatfate/nimcrypto >= 0.5.4 & < 1.0.0\"\n  requires \"https://github.com/jangko/nimSHA2 < 1.0.0\"\n\nwhen not defined(release):\n  requires \"https://github.com/disruptek/balls >= 2.0.0 & < 3.0.0\"\n\ntask test, \"run unit testes\":\n  when defined(windows):\n    exec \"balls.cmd\"\n  else:\n    exec \"balls\"\n    exec \"balls --define:sigv4UseNimCrypto\"\n",
"https://github.com/FedericoCeratto/nim-tor": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Federico Ceratto and KittyTechno\"\ndescription   = \"Tor helper library\"\nlicense       = \"MPL-2.0\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/icyphox/nanoid.nim/master/nanoid.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Anirudh\"\ndescription   = \"The Nim implementation of NanoID\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\", \"random >= 0.5.5\"\n\n",
"https://raw.githubusercontent.com/QuinnFreedman/nimgraphviz/master/nimgraphviz.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Quinn Freedman\"\ndescription   = \"Nim bindings for the GraphViz tool and the DOT graph language\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/drjdn/nim_dual/master/dual.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jason Nielsen\"\ndescription   = \"Implementation of dual numbers\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\n# Tests\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r dual/dual\"\n",
"https://github.com/angluca/mui": "# Package\n\nversion       = \"2.0.1\"\nauthor        = \"Angluca\"\ndescription   = \"A tiny immediate-mode UI library\"\nlicense       = \"MIT\"\n\ninstallDirs = @[\"src\",\"demo\"]\ninstallFiles = @[\"mui.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\n",
"https://github.com/ThomasTJdev/nim_sqlbuilder": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"SQL builder\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.1\"\n",
"https://raw.githubusercontent.com/williamd1k0/chrono/master/chronopipe.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"William Tumeo\"\ndescription   = \"Show start/end datetime and duration of a command-line process using pipe.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"chrono\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.0\"\n",
"https://github.com/haxscramper/hdrawing": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"haxscramper\"\ndescription   = \"Simple shape drawing\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmisc >= 0.9.15\"\n",
"https://github.com/yglukhov/nim-only-uuid": "[Package]\r\nname          = \"nuuid\"\r\nversion       = \"0.1.0\"\r\nauthor        = \"Willy Heineman\"\r\ndescription   = \"A Nim source only UUID generator\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://raw.githubusercontent.com/dizzyliam/inumon/master/inumon.nimble": "# Package\nversion     = \"0.3.2\"\nauthor      = \"Liam Scaife\"\ndescription = \"A high-level image I/O library for Nim \"\nlicense     = \"MPL 2.0\"\n\n# Deps\nrequires \"nim >= 1.0.0\",\n    \"nimterop >= 0.5.0\",\n    \"arraymancer >= 0.5.0\",\n    \"nigui >= 0.2.0\"\n",
"https://raw.githubusercontent.com/Narazaka/shiori_charset_convert-nim/master/shiori_charset_convert.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Narazaka\"\ndescription   = \"The SHIORI Message charset convert utility\"\nlicense       = \"MIT\"\n\nskipDirs = @[]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://github.com/stefantalpalaru/golib-nim": "[Package]\nname: \"golib\"\nversion: \"0.0.1\"\nauthor: \"Ștefan Talpalaru <stefantalpalaru@yahoo.com>\"\ndescription: \"Bindings for golib - a library that (ab)uses gccgo to bring Go's channels and goroutines to the rest of the world\"\nlicense: \"BSD\"\nsrcDir: \"src\"\n\n[Deps]\nRequires: \"nim > 0.19.0\"\n\n",
"https://raw.githubusercontent.com/calebwin/pipelines/master/pipelines.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"calebwin\"\ndescription   = \"A tiny framework & language for crafting massively parallel data pipelines\"\nlicense       = \"MIT\"\nbin           = @[\"pipelines/pipelines\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"python >= 0.0.0\"\n",
"https://raw.githubusercontent.com/aisk/simpleflake.nim/master/simpleflake.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"An Long\"\ndescription   = \"Simpleflake for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\n",
"https://github.com/nortero-code/denim-ui": "version       = \"0.1.0\"\nauthor        = \"Kristian Fjeld Hasselknippe\"\ndescription   = \"The Denim UI library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"itertools\"\nrequires \"macroutils\"\nrequires \"rx_nim\"\n",
"https://github.com/icyphox/nicy": "# Package\n\nversion       = \"2.5.1\"\nauthor        = \"Anirudh\"\ndescription   = \"A nice and icy ZSH prompt in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nicy\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/andreaferretti/linear-algebra/master/linalg.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"linalg\"\nversion       = \"0.6.6\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Linear Algebra for Nim\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\", \"bench\"]\nskipFiles     = @[\"linalg.html\"]\n\nrequires \"nim >= 0.13.1\", \"nimblas >= 0.1.3\"\n\n--forceBuild\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu) or detectOs(Debian):\n    foreignDep \"libblas-dev\"\n    foreignDep \"libopenblas-dev\"\n    foreignDep \"liblapack-dev\"\n  else:\n    foreignDep \"libblas\"\n    foreignDep \"liblapack\"\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\nproc configForBenchmarks() =\n  --define: release\n  --path: \".\"\n  --run\n\nproc configForCuda() =\n  switch(\"cincludes\", \"/usr/local/cuda/targets/x86_64-linux/include\")\n  switch(\"clibdir\", \"/usr/local/cuda/targets/x86_64-linux/lib\")\n  --define: cublas\n\ntask test, \"run standard tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testopenblas, \"run standard tests on openblas\":\n  configForTests()\n  --define: openblas\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testmkl, \"run standard tests on mkl\":\n  configForTests()\n  --dynlibOverride:mkl_intel_lp64\n  --passL:\"/home/papillon/.intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  --define: mkl\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testcuda, \"run tests for the cuda implementation\":\n  configForTests()\n  configForCuda()\n  setCommand \"c\", \"tests/cublas.nim\"\n\ntask bench, \"run standard benchmarks\":\n  configForBenchmarks()\n  setCommand \"c\", \"bench/matrix_matrix_mult.nim\"\n\ntask benchcuda, \"run benchmarks for the cuda implementation\":\n  configForBenchmarks()\n  configForCuda()\n  setCommand \"c\", \"bench/cuda/matrix_vector_mult.nim\"\n\ntask gendoc, \"generate documentation\":\n  --define: cublas\n  --docSeeSrcUrl: https://github.com/andreaferretti/linear-algebra/blob/master\n  setCommand \"doc2\", \"linalg.nim\"\n",
"https://raw.githubusercontent.com/me7/srv/master/srv.nimble": "import\n  os\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nimport config\n\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = \"MIT\"\nbin           = @[\"srv\"]\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\nconst compile = \"nim c -d:release\"\nconst linux_x64 = \"--cpu:amd64 --os:linux -o:srv\"\nconst windows_x64 = \"--cpu:amd64 --os:windows -o:srv.exe\"\nconst macosx_x64 = \"-o:srv\"\nconst program = \"srv\"\nconst program_file = \"src/srv.nim\"\nconst zip = \"zip -X\"\n\nproc shell(command, args: string, dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"srv\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build srv for Windows (x64)\":\n  shell compile, windows_x64, program_file\n\ntask linux_x64_build, \"Build srv for Linux (x64)\":\n  shell compile, linux_x64,  program_file\n  \ntask macosx_x64_build, \"Build srv for Mac OS X (x64)\":\n  shell compile, macosx_x64, program_file\n\ntask release, \"Release srv\":\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, filename_for(\"windows\", \"x64\"), program & \".exe\"\n  shell \"rm\", program & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, filename_for(\"linux\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, filename_for(\"macosx\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n ALL DONE!\"\n\n",
"https://raw.githubusercontent.com/treeform/googleapi/master/googleapi.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"treeform\"\ndescription   = \"GoogleAPI - Growing collection of google APIs for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"jwt >= 0.2.0\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/struct.nim/master/struct.nimble": "[Package]\nname          = \"struct\"\nversion       = \"0.2.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"Python-like 'struct' for Nim\"\nlicense       = \"MIT\"\n\nskipFiles     = \"test.nim\"\n\n[Deps]\nRequires: \"nim >= 0.20.2\"\n",
"https://github.com/nortero-code/denim-ui-canvas": "version       = \"0.1.0\"\nauthor        = \"Kristian Fjeld Hasselknippe\"\ndescription   = \"HTML Canvas backend for the denim ui engine\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"denim_ui\"\n",
"https://raw.githubusercontent.com/enthus1ast/nimMime/master/mime.nimble": "# Package\nversion       = \"0.0.3\"\nauthor        = \"enthus1ast\"\ndescription   = \"mime generator (email with attachments)\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"src\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"",
"https://raw.githubusercontent.com/D-Nice/nbaser/master/nbaser.nimble": "\n# Package\nversion       = \"1.0.1\"\nauthor        = \"D-Nice\"\ndescription   = \"Encoder/decoder for any base alphabet up to 256 with leading zero compression\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\n# Nimscript Tasks\nimport sugar, sequtils, strutils\n\nfunc srcPaths: seq[string] =\n  const dirs =\n    @[\n      \"src/\"\n    ]\n  for dir in dirs:\n    result.add(dir.listFiles.filter(x => x[dir.len .. x.high].endsWith(\".nim\")))\n\nfunc testPaths: seq[string] =\n  const dir = \"tests/\"\n  return dir.listFiles.filter(x => x[dir.len .. x.high].startsWith('t'))\n\n## docs\ntask docs, \"Deploy doc html + search index to public/ directory\":\n  let\n    deployDir = projectDir() & \"/public/\"\n    docOutBaseName = \"index\"\n    deployHtmlFile = deployDir & docOutBaseName & \".html\"\n    gitUrl = \"https://github.com/D-Nice/nbaser\"\n    genDocCmd = \"nim doc --out:$1 --index:on --git.url:$2 $3\" % [deployHtmlFile, gitUrl, srcPaths()[0]]\n    genTheIndexCmd = \"nim buildIndex -o:$1/theindex.html $1\" % [deployDir]\n    deployJsFile = deployDir & \"dochack.js\"\n    docHackJsSource = \"https://nim-lang.github.io/Nim/dochack.js\" # devel docs dochack.js\n  mkDir(deployDir)\n  exec(genDocCmd)\n  exec(genTheIndexCmd)\n  if not fileExists(deployJsFile):\n    withDir deployDir:\n      exec(\"curl -LO \" & docHackJsSource)\n\n## checks\nconst checkCmd = \"nim c -cf -w:on --hints:on -o:/dev/null --styleCheck:\"\ntask check_src, \"Compile src with all checks on\":\n  for src in srcPaths():\n    exec checkCmd & \"error \" & src\ntask check_tests, \"Compile tests with all checks on\":\n  for test in testPaths():\n    exec checkCmd & \"hint \" & test\ntask check_all, \"Compile check everything and run tests\":\n  exec \"nimble check_src; nimble check_tests; nimble test -c\"\n\n## benching\ntask benchmark, \"Runs built-in benchmark\":\n  exec \"nim c -f --verbosity:0 --hints:off -d:danger --gc:markAndSweep -o:/tmp/nim/nbaser/bench -r tests/benchmark.nim\"\n\n## fuzzing\ntask fuzz_decoder, \"Runs afl on decoder\":\n  exec \"nim c -f -o:/tmp/nim/nbaser/decoder tests/fuzzer/decoder.nim && afl-fuzz -T \\\"NBaser Decoder fuzzing\\\" -i tests/fuzzer/in-decoder -o tests/fuzzer/out-decoder /tmp/nim/nbaser/decoder\"\ntask fuzz_encoder, \"Runs afl on encoder\":\n  exec \"nim c -f -o:/tmp/nim/nbaser/encoder tests/fuzzer/encoder.nim && afl-fuzz -T \\\"NBaser Encoder fuzzing\\\" -i tests/fuzzer/in-encoder -o tests/fuzzer/out-encoder /tmp/nim/nbaser/encoder\"\n",
"https://raw.githubusercontent.com/oskca/webview/master/webview.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"oskca\"\ndescription   = \"Nim bindings for zserge\\'s webview\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\ntask test, \"a simple test case\":\n    exec \"nim c -r tests/bindEx.nim\"\n\ntask docs, \"generate doc\":\n    exec \"nim doc2 -o:docs/webview.html webview.nim\"\n\ntask sync, \"update webview.h\":\n    exec \"wget -O webview/webview.h https://raw.githubusercontent.com/zserge/webview/master/webview.h\"\n    exec \"wget -O webview/webview.go https://raw.githubusercontent.com/zserge/webview/master/webview.go\"\n    exec \"wget -O webview/README.md https://raw.githubusercontent.com/zserge/webview/master/README.md\"\n\ntask clean, \"clean tmp files\":\n    exec \"rm -rf nimcache\"\n    exec \"rm -rf tests/nimcache\"\n",
"https://github.com/status-im/nim-chronos": "packageName   = \"chronos\"\nversion       = \"2.5.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Chronos\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\"]\n\n### Dependencies\n\nrequires \"nim > 1.2.0\",\n         \"stew\",\n         \"bearssl\"\n\ntask test, \"Run all tests\":\n  var commands = [\n    \"nim c -r -d:useSysAssert -d:useGcAssert tests/\",\n    \"nim c -r -d:chronosStackTrace tests/\",\n    \"nim c -r -d:release tests/\",\n    \"nim c -r -d:release -d:chronosFutureTracking tests/\"\n  ]\n  for testname in [\"testall\"]:\n    for cmd in commands:\n      let curcmd = cmd & testname\n      echo \"\\n\" & curcmd\n      exec curcmd\n",
"https://github.com/ThomasTJdev/nim_wiringPiNim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Wrapper for the C library wiringPi for controlling a Raspberry Pi\\'s GPIO\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n",
"https://raw.githubusercontent.com/cowboy-coders/nim-openssl-evp/master/openssl_evp.nimble": "[Package]\nname          = \"openssl_evp\"\nversion       = \"0.1.2\"\nauthor        = \"Will Szumski\"\ndescription   = \"Wrapper for OpenSSL's EVP interface\"\nlicense       = \"OpenSSL License and SSLeay License\"\nsrcDir        = \"src\"\nInstallExt    = \"nim\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.4\"\n",
"https://github.com/inv2004/nim-decimal": "packageName   = \"decimal\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A correctly-rounded arbitrary precision decimal floating point arithmetic library\"\nlicense       = \"(MIT or Apache License 2.0) and Simplified BSD\"\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\n\n### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  # TODO, don't forget to change defaultLang to `cpp` if the project requires C++\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  --nimcache: \"nimcache\"\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://github.com/vegansk/nimfp": "# Package\nversion       = \"0.4.5\"\nauthor        = \"Anatoly Galiulin <galiulin.anatoly@gmail.com>\"\ndescription   = \"Nim functional programming library\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.19.0\", \"nimboost >= 0.5.5\", \"classy >= 0.0.3\"\n",
"https://github.com/matkuki/python3": "[Package]\nname: \"python3\"\nversion: \"1.4\"\nauthor: \"Matic Kukovec\"\ndescription: \"Wrapper to interface with Python 3 interpreter (static / dynamic)\"\nlicense: \"MIT\"\nsrcDir = \"src\"\n\n[Deps]\nrequires: \"nim >= 1.0.0\"\n\n",
"https://github.com/Narazaka/shiori_charset_convert-nim": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Narazaka\"\ndescription   = \"The SHIORI Message charset convert utility\"\nlicense       = \"MIT\"\n\nskipDirs = @[]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://github.com/philip-wernersbach/nim-qt5_qtsql.git": "[Package]\nname          = \"qt5_qtsql\"\nversion       = \"1.1.1\"\nauthor        = \"Philip Wernersbach <philip.wernersbach@gmail.com>\"\ndescription   = \"Binding for Qt 5's Qt SQL library. Provides a single API for multiple database engines.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.3\"\n",
"https://raw.githubusercontent.com/bung87/finder/master/finder.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"bung87\"\ndescription   = \"fs memory zip finder implement in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"zip\"\n",
"https://github.com/euantorano/migrate.nim": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Euan T\"\ndescription   = \"A database migration tool written in Nim.\"\nlicense       = \"BSD3\"\n\nbin = @[\"migrate\"]\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\", \"docopt >= 0.6.2\"\n",
"https://github.com/jiro4989/wave": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"wave is a tiny WAV sound module\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/def-/nim-nanomsg": "# Package\n\nversion     = \"0.2\"\nauthor      = \"Dennis Felsing\"\ndescription = \"Wrapper for nanomsg, a socket library that provides several common communication patterns. It aims to make the networking layer fast, scalable, and easy to use.\"\nlicense     = \"MIT\"\n\nsrcDir      = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/treeform/flippy/master/flippy.nimble": "# Package\n\nversion       = \"0.4.7\"\nauthor        = \"treeform\"\ndescription   = \"Flippy is a simple 2d image and drawing library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"vmath >= 0.3.2\"\nrequires \"chroma >= 0.1.5\"\nrequires \"nimPNG >= 0.2.6\"\nrequires \"supersnappy >= 1.0.0\"\nrequires \"bumpy >= 0.2.1\"\n",
"https://github.com/status-im/nim-json-rpc": "packageName   = \"json_rpc\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum remote procedure calls\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\n### Dependencies\nrequires \"nim >= 0.17.3\",\n         \"nimcrypto\",\n         \"stint\",\n         \"chronos\",\n         \"httputils\",\n         \"chronicles\",\n         \"https://github.com/status-im/news#status\",\n         \"chronicles\",\n         \"json_serialization\"\n\nproc getLang(): string =\n  # Compilation language is controlled by TEST_LANG\n  result = \"c\"\n  if existsEnv\"TEST_LANG\":\n    result = getEnv\"TEST_LANG\"\n\nproc buildBinary(name: string, srcDir = \"./\", params = \"\", cmdParams = \"\", lang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" --out:./build/\" & name & \" \" & params & \" \" & srcDir & name & \".nim\" & \" \" & cmdParams\n\ntask test, \"run tests\":\n  buildBinary \"all\", \"tests/\", \"-r -f --hints:off --debuginfo --path:'.' --threads:on -d:chronicles_log_level=ERROR\", getLang()\n",
"https://raw.githubusercontent.com/achesak/nim-fnmatch/master/fnmatch.nimble": "[Package]\nname = \"fnmatch\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \" Nim module for filename matching with UNIX shell patterns\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/kobi2187/vmvc": "# Package\n\nversion       = \"0.0.2\"\nauthor        = \"Kobi Lurie\"\ndescription   = \"a skeleton/structure for a variation on the mvc pattern, similar to dci. For command line and gui programs. it's a middle ground between rapid application development and handling software complexity.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs = @[\"tests\"]\n# web = \"https://github.com/kobi2187/vmvc\"\n# url = \"https://github.com/kobi2187/vmvc\"\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\nrequires \"uuids >= 0.1.10\", \"regex >= 0.10.0\"\n\n# Tasks\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/test_parsing_utils.nim\"",
"https://github.com/nim-lang/libsvm_legacy": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Libsvm wrapper rescued from the stdlib.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/nitely/nim-normalize/master/normalize.nimble": "# Package\n\nversion = \"0.8.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Unicode normalization forms (tr15)\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"unicodedb >= 0.7\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/normalize\"\n  exec \"nim c -r tests/tests\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/normalize.nim\"\n",
"https://raw.githubusercontent.com/SolitudeSF/discord_rpc/master/discord_rpc.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Discord RPC client\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"uuids\", \"packedjson\"\n",
"https://raw.githubusercontent.com/xyz32/boneIO/master/boneIO.nimble": "[Package]\nname          = \"boneIO\"\nversion       = \"0.6.1\"\nauthor        = \"Radu Oana\"\ndescription   = \"Beagle bone black GPIO implementation\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.17.0\"\n",
"https://github.com/Clonkk/timelog": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"rcaillaud\"\ndescription   = \"Simple nimble package to log monotic timings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/treeform/miniz": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"treeform\"\ndescription   = \"Wrapper for Miniz lib.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0\"\n",
"https://raw.githubusercontent.com/nim-lang/oldwinapi/master/oldwinapi.nimble": "[Package]\r\nname          = \"oldwinapi\"\r\nversion       = \"2.1.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Old Win API library for Nim\"\r\nlicense       = \"LGPL\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://raw.githubusercontent.com/icyphox/nicy/master/nicy.nimble": "# Package\n\nversion       = \"2.5.1\"\nauthor        = \"Anirudh\"\ndescription   = \"A nice and icy ZSH prompt in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nicy\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/Amrykid/nim-locale/master/locale.nimble": "#Package\n\nversion = \"0.1\"\nauthor = \"Amrykid\"\ndescription = \"A simple library for localizing Nimrod applications.\"\nlicense = \"MIT\"\n\nskipFiles = @[\"locale.xml\", \"LocaleData.cfg\"]\n\n#Dep\n\nrequires \"nimrod >= 0.9.4\"\n",
"https://raw.githubusercontent.com/roose/nim-wox/master/wox.nimble": "# Package\n\nversion       = \"1.2.1\"\nauthor        = \"roose\"\ndescription   = \"Helper library for writing Wox plugins in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"unicodeplus >= 0.8.0\"\n\ntask tests, \"Run Wox.nim tester\":\n  exec \"nim c -r tests/woxtests\"",
"https://github.com/juancarlospaco/nim-random-font-color": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"juancarlospaco\"\ndescription   = \"Random curated Fonts and pastel Colors for your UI/UX design, design for non-designers.\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/nim-lang/osinfo/master/osinfo.nimble": "# Package\nversion       = \"0.3.2\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Modules providing information about the OS.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/metasyn/nim-cexc-splunk": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Alexander Johnson\"\ndescription   = \"A simple chunked external protocol interface for Splunk custom search commands.\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"",
"https://github.com/achesak/nim-pythonpathlib.git": "[Package]\nname = \"pythonpathlib\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Module for working with paths that is as similar as possible to Python's pathlib\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/ba0f3/fsm.nim/master/fsm.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"A simple finite-state machine for @nim-lang\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n\n",
"https://raw.githubusercontent.com/Halsys/SDF.nim/master/SDF.nimble": "\n# Package\n\npackageName = \"SDF\"\nversion     = \"0.1.0\"\nauthor      = \"Cory Null(Noll) Crimmins - Golden\"\ndescription = \"Sweep-and-update Euclidean distance transform functions\"\nlicense     = \"MIT\"\nskipDirs    = @[\"example\"]\n\n# Dependencies\n\nrequires \"nim >= 0.14.2\"\n",
"https://github.com/narimiran/itertools": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"narimiran\"\ndescription   = \"Itertools for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/owlinux1000/nish": "version = \"1.0.0\"\nauthor = \"owlinux1000\"\ndescription = \"A Toy Shell Application\"\nlicense = \"MIT\"\nbin = @[\"nish\"]\nskipExt = @[\"nim\"]\n",
"https://github.com/theduke/nim-playground": "[Package]\nname          = \"playground\"\nversion       = \"0.1.0\"\nauthor        = \"Christoph Herzog\"\ndescription   = \"Website and server for easily playing with nim code.\"\nlicense       = \"MIT\"\n\nbin           = \"playground\"\n\n[Deps]\nRequires: \"nim >= 0.12.0, jester >= 0.1\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-smnar/master/smnar.nimble": "version     = \"0.1.1\"\nauthor      = \"Juan Carlos\"\ndescription = \"Servicio Meteorologico Nacional Argentina API Client\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nskipDirs    = @[\"docs\", \"gui\"]\n\nrequires \"nim >= 1.2.0\"\nrequires \"zip >= 0.2.1\"\n",
"https://raw.githubusercontent.com/status-im/nim-toml-serialization/master/toml_serialization.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"toml_serialization\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Flexible TOML serialization [not] relying on run-time type information\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\", \"assets\"]\n\nrequires \"nim >= 1.1.2\",\n         \"serialization\",\n         \"stew\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  when defined(macosx):\n    # cpp backend on macosx have mysterious\n    # bug\n    if lang == \"cpp\":\n      lang = \"c\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --outdir:build -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  exec \"nim -v\"\n  test \"--threads:off -d:release\", \"tests/test_all\"\n  test \"--threads:on -d:release\", \"tests/test_all\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-firejail/master/firejail.nimble": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Firejail wrapper for Nim, Isolate your Production App before its too late!\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\nimport distros\nforeignDep \"firejail\"\n",
"https://raw.githubusercontent.com/ethosa/akane/master/akane.nimble": "[Package]\r\nname = \"akane\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.1.7\"\r\ndescription = \"The Nim asynchronous web framework.\"\r\nlicense = \"MIT\"\r\nsrcDir = \"akane\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://github.com/planety/cached": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"flywind\"\ndescription   = \"A cache library.\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/jrfondren/getr-nim/master/getr.nimble": "version       = \"0.1.1\"\nauthor        = \"Julian Fondren\"\ndescription   = \"Benchmarking wrapper around getrusage()\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"getr\"]\n\nrequires \"nim >= 0.19.4\"\n\ntask markdown, \"Generate MANPAGE.md from mdoc\":\n  exec \"mandoc -T markdown < getr.mdoc > MANPAGE.md\"\n",
"https://github.com/nim-lang/opengl": "# Package\n\nversion = \"1.2.6\"\nauthor = \"Andreas Rumpf\"\ndescription = \"an OpenGL wrapper\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nwhen defined(windows):\n  requires \"nim >= 0.11.0\"\nelse:\n  requires \"nim >= 0.11.0\", \"x11 >= 1.1\"\n",
"https://github.com/mkanenobu/nim-gimei": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Mitsuru Kanenobu\"\ndescription   = \"random Japanese name and address generator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"test\", \"data\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n\n# Tasks\ntask update_asset, \"update asset file\":\n  ## for develop\n  requires \"yaml >= 0.12.0\"\n  try:\n    exec \"nim c -r tasks/update_asset.nim\"\n  finally:\n    rmFile \"update_asset\"\n\ntask document, \"update document\":\n  rmDir \"htmldoc\"\n  mkDir \"htmldoc\"\n\n  try:\n    exec \"\"\"\n    for file in `find src | grep nim`; do\n      nim doc --outdir:htmldocs $file\n    done\n    \"\"\"\n  except:\n    rmDir \"htmldoc\"\n\ntask check_style, \"check coding style\":\n  let suppressUnusedHints = \"--hint[CC]:off --hint[Processing]:off --hint[Conf]:off\"\n  proc checkStyle(fileName: string) =\n    try:\n      exec(\"nim c --compileOnly:on \" & suppressUnusedHints & \" --styleCheck:error \" & fileName)\n    except:\n      # Supress error message\n      discard\n  checkStyle(\"src/gimei.nim\")\n",
"https://github.com/pragmagic/uuids/": "[Package]\nname: \"uuids\"\nversion: \"0.1.11\"\nauthor: \"Xored Software, Inc.\"\ndescription: \"UUID library\"\nlicense: \"MIT\"\n\n[Deps]\nrequires: \"isaac >= 0.1.3\"\n",
"https://github.com/oskca/nim-wstp": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"oskca\"\ndescription   = \"Nim bindings for WSTP\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"c2nim\"\n\nlet MMA_HOME=\"/usr/local/Wolfram/Mathematica/11.3\"\n\nimport strutils\n\nconst\n  t1 = \"\"\"typedef struct MLYieldData{\n union {long l; double d; void * p;} private_data[8];\n} * MLYieldDataPointer;\n\"\"\"\n  r1 = \"\"\"struct MLYieldData{\n union {long l; double d; void * p;} private_data[8];\n};\ntypedef struct MLYieldData * MLYieldDataPointer;\n  \"\"\"\n\n  t2 = \"\"\"typedef WSYielderProcPtr MLYielderUPP, MLDeviceYielderUPP;\"\"\"\n  r2 = \"\"\"typedef WSYielderProcPtr MLYielderUPP; typedef WSYielderProcPtr MLDeviceYielderUPP;\"\"\"\n\n  t3 = \"\"\"typedef WSHandlerProcPtr MLHandlerUPP, MLDeviceHandlerUPP;\"\"\"\n  r3 = \"\"\"typedef WSHandlerProcPtr MLHandlerUPP; typedef MLHandlerUPP MLDeviceHandlerUPP;\"\"\"\n\n  hdrPrefix = \"\"\"\n{.passC:\"-I\" & MMA_HOME & \"/SystemFiles/Links/WSTP/DeveloperKit/Linux-x86-64/CompilerAdditions\".}\n{.passL: MMA_HOME & \"/SystemFiles/Links/WSTP/DeveloperKit/Linux-x86-64/CompilerAdditions/libWSTP64i4.a\".}\nconst\n  wstphdr = \"wstp.h\"\n\"\"\"\n\nproc replace(fn: string) =\n  var s = staticRead(fn)\n  s = s.replace(t1, r1)\n  s = s.replace(t2, r2)\n  s = s.replace(t3, r3)\n  writeFile(fn, s)\n\nproc appendPrefix(fn: string) =\n  var s = staticRead(fn)\n  s = s.replace(\"__\", \"_\")\n  s = hdrPrefix & s\n  writeFile(fn, s)\n\ntask gen, \"Generate wstp.nim\":\n  exec \"gcc -E headers/wstp.h > wstpE.h\"\n  replace \"wstpE.h\"\n  exec \"c2nim --prefix:_ --suffix:_ --o:src/wstp.nim --header:wstphdr wstpE.h\"\n  exec \"rm -rf wstpE.h\"\n  appendPrefix \"src/wstp.nim\"\n",
"https://raw.githubusercontent.com/Nycto/QuadtreeNim/master/quadtree.nimble": "# Package\n#\nversion       = \"0.3.1\"\nauthor        = \"Nycto\"\ndescription   = \"A Quadtree Implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[]\n\n# Deps\nrequires \"nim >= 0.13.0\"\n\n",
"https://raw.githubusercontent.com/muxueqz/remarker_light/master/remarker_light.nimble": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"muxueqz\"\ndescription   = \"remarker_light is a command line tool for building a remark-based slideshow page very easily.\"\nlicense       = \"GPL-2.0\"\nsrcDir        = \"src\"\nbin           = @[\"remarker_light\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18\"\nrequires \"jester\"\nrequires \"docopt\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-css-html-minify/master/css_html_minify.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"HTML & CSS & JS Minify Lib & App based on Regexes & parallel MultiReplaces\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/adam-mcdaniel/calendar": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Adam McDaniel\"\ndescription   = \"A tiny calendar program\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"cal\"]\n\n# Dependencies\nrequires \"nim >= 1.2.4\"\n",
"https://github.com/IDF31/geminim": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"IDF\"\ndescription   = \"A simple gemini server written in nim\"\nlicense       = \"BSD2\"\nsrcDir        = \"src\"\nbin           = @[\"geminim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/drjdn/nim_dual": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jason Nielsen\"\ndescription   = \"Implementation of dual numbers\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\n# Tests\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r dual/dual\"\n",
"https://raw.githubusercontent.com/petermora/nimLazy/master//lazy.nimble": "[Package]\nname          = \"lazy\"\nversion       = \"0.1.0\"\nauthor        = \"Peter Mora\"\ndescription   = \"Iterator library for Nim\"\nlicense       = \"MIT\"\nInstallFiles  = \"lazy.nim\"\ninstallDirs   = \"doc\"\n",
"https://github.com/mark-summerfield/diff": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"Mark Summerfield\"\ndescription   = \"Library for finding the differences between two sequences\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/super-massive-black-holes/AstroNimy": "[Package]\nname          = \"AstroNimy\"\nversion       = \"0.1.0\"\nauthor        = \"Supermassive Blackholes\"\ndescription   = \"astronomical library for Nim programming language\"\nlicense       = \"MIT\"\n",
"https://raw.githubusercontent.com/jxy/primme/master/primme.nimble": "version     = \"2.1.0\"\nauthor      = \"Xiao-Yong Jin\"\ndescription = \"Nim interface for PRIMME: PReconditioned Iterative MultiMethod Eigensolver\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 0.19.9\"\n\ntask test, \"Runs the test suite\":\n  withDir \"test\":\n    exec \"nim c -r -d:release t\"\n\nbefore test:\n  echo \"#\"\n  echo \"#     Modify `test/config.nims' for compiler and link flags for PRIMME\"\n  echo \"#     Test for singular values may fail because of the runtime dynamic method\"\n  echo \"#\"\n\nafter install:\n  echo \"#\"\n  echo \"#     To compile and link against PRIMME, define `primmeDir' and `lapackLib' properly.\"\n  echo \"#     For example:\"\n  echo \"#        nim c -d:primmeDir='/path/to/primme' \\\\\"\n  echo \"#              -d:lapackLib='-L/path/to/lapack/lib -llapack -lblas' \\\\\"\n  echo \"#              -d:release \\\\\"\n  echo \"#              YourApp\"\n  echo \"#     Check the beginning of the file `primme.nim' for details.\"\n  echo \"#\"\n",
"https://github.com/onionhammer/sha1": "[Package]\nname = \"sha1\"\nversion = \"1.1\"\nauthor = \"Erik O'Leary\"\ndescription = \"SHA-1 produces a 160-bit (20-byte) hash value from arbitrary input\"\nlicense = \"BSD\"\n",
"https://github.com/Araq/sphinx": "[Package]\r\nname          = \"sphinx\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Sphinx wrapper for Nim\"\r\nlicense       = \"LGPL\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://raw.githubusercontent.com/nim-lang/Nim/master/compiler.nimble": "\nversion = system.NimVersion\nauthor = \"Andreas Rumpf\"\ndescription = \"Compiler package providing the compiler sources as a library.\"\nlicense = \"MIT\"\n\ninstallDirs = @[\"compiler\", \"nimsuggest\"]\n\nrequires \"nim >= 0.14.0\"\n",
"https://github.com/nimscale/dpdk": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Kean Sum Ooi\"\ndescription   = \"Nim bindings to DPDK\"\nlicense       = \"Apache\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\nskipDirs = @[\"logs\", \"dpdk-stable-16.07.2\"]\n\nskipFiles = @[\"dpdk-16.07.2.tar.xz\", \"instC_DPDK.sh\", \"uninstC_DPDK.sh\"]\n\n# rteErrorWrapper/librte_error_wrapper.a installed by instC_DPDK.sh\nskipExt = @[\"a\"]\n\n#  pre uninstall hook to install dpdk 16.07.2\nbefore install:\n  exec \"./instC_DPDK.sh\"\n  \n# post uninstall hook uninstall dpdk 16.07.2\nafter uninstall:\n  exec \"./uninstC_DPDK.sh\"\n\ntask info, \"Installs C DPDK library\":\n  echo \"This installs the Nim bindings (wrapper Nim include files) to the C DPDK library.\\n\"\n  echo \"The C DPDK 16.07.2 library is also installed along with the Nim bindings\"\n  echo \"Tested to work using nim 0.16.0\"\n  echo \"Any bugs found, please email me: keansum <at> gmail <dot> com\"\n \n\n",
"https://raw.githubusercontent.com/jrfondren/nim-oshostname/master/oshostname.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Julian Fondren\"\ndescription   = \"Get the current hostname with gethostname(2)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/jiro4989/gyaric": "# Package\n\nversion       = \"1.0.2\"\nauthor        = \"jiro4989\"\ndescription   = \"gyaric is a module to encode/decode text to unreadable gyaru's text.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"gyaric/cli/gyaric\"]\nbinDir        = \"bin\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\ntask docs, \"Generate API documents\":\n  exec \"nimble doc --index:on --project --out:docs --hints:off src/gyaric.nim\"\n",
"https://github.com/krux02/nimAntTweakBar": "# Package\n\nversion       = \"1.0.2\"\nauthor        = \"Arne Döring\"\ndescription   = \"nim wrapper around the AntTweakBar c library\"\nlicense       = \"MIT\"\ninstallFiles  = @[\n  \"AntTweakBar.nim\",\n  \"cAntTweakBar/include/AntTweakBar.h\",\n  \"cAntTweakBar/src/TwEventGLFW.c\",\n  \"cAntTweakBar/src/TwEventGLUT.c\",\n  \"cAntTweakBar/src/TwEventSDL12.c\",\n  \"cAntTweakBar/src/TwEventSDL13.c\",\n  \"cAntTweakBar/src/TwEventSDL20.c\",\n  \"cAntTweakBar/src/TwEventSDL.c\",\n  \"cAntTweakBar/src/TwEventWin.c\",\n  \"cAntTweakBar/src/TwEventX11.c\",\n  \"cAntTweakBar/src/AntPerfTimer.h\",\n  \"cAntTweakBar/src/d3d10vs2003.h\",\n  \"cAntTweakBar/src/LoadOGLCore.h\",\n  \"cAntTweakBar/src/LoadOGL.h\",\n  \"cAntTweakBar/src/MiniGLFW.h\",\n  \"cAntTweakBar/src/MiniGLUT.h\",\n  \"cAntTweakBar/src/MiniSDL12.h\",\n  \"cAntTweakBar/src/MiniSDL13.h\",\n  \"cAntTweakBar/src/MiniSDL20.h\",\n  \"cAntTweakBar/src/MiniSFML16.h\",\n  \"cAntTweakBar/src/resource.h\",\n  \"cAntTweakBar/src/TwBar.h\",\n  \"cAntTweakBar/src/TwColors.h\",\n  \"cAntTweakBar/src/TwDirect3D10.h\",\n  \"cAntTweakBar/src/TwDirect3D11.h\",\n  \"cAntTweakBar/src/TwDirect3D9.h\",\n  \"cAntTweakBar/src/TwFonts.h\",\n  \"cAntTweakBar/src/TwGraph.h\",\n  \"cAntTweakBar/src/TwMgr.h\",\n  \"cAntTweakBar/src/TwOpenGLCore.h\",\n  \"cAntTweakBar/src/TwOpenGL.h\",\n  \"cAntTweakBar/src/TwPrecomp.h\",\n  \"cAntTweakBar/src/LoadOGLCore.cpp\",\n  \"cAntTweakBar/src/LoadOGL.cpp\",\n  \"cAntTweakBar/src/TwBar.cpp\",\n  \"cAntTweakBar/src/TwColors.cpp\",\n  \"cAntTweakBar/src/TwDirect3D10.cpp\",\n  \"cAntTweakBar/src/TwDirect3D11.cpp\",\n  \"cAntTweakBar/src/TwDirect3D9.cpp\",\n  \"cAntTweakBar/src/TwEventSFML.cpp\",\n  \"cAntTweakBar/src/TwFonts.cpp\",\n  \"cAntTweakBar/src/TwMgr.cpp\",\n  \"cAntTweakBar/src/TwOpenGLCore.cpp\",\n  \"cAntTweakBar/src/TwOpenGL.cpp\",\n  \"cAntTweakBar/src/TwPrecomp.cpp\",\n  \"cAntTweakBar/src/res/cur00000.cur\",\n  \"cAntTweakBar/src/res/cur00001.cur\",\n  \"cAntTweakBar/src/res/cur00002.cur\",\n  \"cAntTweakBar/src/res/cur00003.cur\",\n  \"cAntTweakBar/src/res/cur00004.cur\",\n  \"cAntTweakBar/src/res/cur00005.cur\",\n  \"cAntTweakBar/src/res/cur00006.cur\",\n  \"cAntTweakBar/src/res/cur00007.cur\",\n  \"cAntTweakBar/src/res/cur00008.cur\",\n  \"cAntTweakBar/src/res/cur00009.cur\",\n  \"cAntTweakBar/src/res/cur00010.cur\",\n  \"cAntTweakBar/src/res/cur00011.cur\",\n  \"cAntTweakBar/src/res/cur00012.cur\",\n  \"cAntTweakBar/src/res/cur00013.cur\",\n  \"cAntTweakBar/src/res/curs00.pbm\",\n  \"cAntTweakBar/src/res/curs01.pbm\",\n  \"cAntTweakBar/src/res/curs02.pbm\",\n  \"cAntTweakBar/src/res/curs03.pbm\",\n  \"cAntTweakBar/src/res/curs04.pbm\",\n  \"cAntTweakBar/src/res/curs05.pbm\",\n  \"cAntTweakBar/src/res/curs06.pbm\",\n  \"cAntTweakBar/src/res/curs07.pbm\",\n  \"cAntTweakBar/src/res/curs08.pbm\",\n  \"cAntTweakBar/src/res/curs09.pbm\",\n  \"cAntTweakBar/src/res/curs10.pbm\",\n  \"cAntTweakBar/src/res/curs11.pbm\",\n  \"cAntTweakBar/src/res/curs12.pbm\",\n  \"cAntTweakBar/src/res/curs13.pbm\",\n  \"cAntTweakBar/src/res/FontChars.txt\",\n  \"cAntTweakBar/src/res/FontFixed1.pgm\",\n  \"cAntTweakBar/src/res/FontLargeAA.pgm\",\n  \"cAntTweakBar/src/res/FontNormalAA.pgm\",\n  \"cAntTweakBar/src/res/FontNormal.pgm\",\n  \"cAntTweakBar/src/res/FontSmall.pgm\",\n  \"cAntTweakBar/src/res/mask00.pbm\",\n  \"cAntTweakBar/src/res/mask01.pbm\",\n  \"cAntTweakBar/src/res/mask02.pbm\",\n  \"cAntTweakBar/src/res/mask03.pbm\",\n  \"cAntTweakBar/src/res/mask04.pbm\",\n  \"cAntTweakBar/src/res/mask05.pbm\",\n  \"cAntTweakBar/src/res/mask06.pbm\",\n  \"cAntTweakBar/src/res/mask07.pbm\",\n  \"cAntTweakBar/src/res/mask08.pbm\",\n  \"cAntTweakBar/src/res/mask09.pbm\",\n  \"cAntTweakBar/src/res/mask10.pbm\",\n  \"cAntTweakBar/src/res/mask11.pbm\",\n  \"cAntTweakBar/src/res/mask12.pbm\",\n  \"cAntTweakBar/src/res/mask13.pbm\",\n  \"cAntTweakBar/src/res/RuFont.txt\",\n  \"cAntTweakBar/src/res/TwXCursors.h\"\n]\n# Dependencies\n\nrequires \"nim >= 0.12.0\"\n",
"https://github.com/linksplatform/RegularExpressions.Transformer": "[Package]\r\nname = \"retranslator\"\r\nauthor = \"Ethosa, Konard\"\r\nversion = \"0.0.4\"\r\ndescription = \"Transformer\"\r\nlicense = \"LGPLv3\"\r\nsrcDir = \"nim/src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\nRequires: \"nre\"\r\n",
"https://raw.githubusercontent.com/Araq/packedjson/master/packedjson.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Araq\"\ndescription   = \"packedjson is an alternative Nim implementation for JSON. The JSON is essentially kept as a single string in order to save memory over a more traditional tree representation.\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"bench\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://raw.githubusercontent.com/SolitudeSF/colorcol/master/colorcol.nimble": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Kakoune plugin for color preview\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"colorcol\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/chocobo333/mcmurry": "# Package\n\nversion       = \"0.3.5\"\nauthor        = \"chocobo333\"\ndescription   = \"A module for generating lexer/parser.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tmp\"]\n# installExt    = @[\"nim\"]\n# bin           = @[\"mcmurry\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"asciitype\"\n\n# For compiling\nrequires \"ast_pattern_matching\"\nrequires \"regex\"\n# requires \"timeit\"\n",
"https://github.com/m13253/nim-kissfft": "[Package]\nname          = \"kissfft\"\nversion       = \"0.0.1\"\nauthor        = \"StarBrilliant\"\ndescription   = \"Nim binding for KissFFT Fast Fourier Transform library\"\nlicense       = \"BSD\"\n",
"https://raw.githubusercontent.com/genotrance/nimfastText/master/nimfastText.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"genotrance\"\ndescription   = \"fastText wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.5.0\", \"nim >= 0.19.0\"\n\nimport strutils\n\nvar\n  name = \"nimfastText\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif not defined(MacOSX):\n  let gccver = staticExec(\"gcc --version\").split(\"\\n\")[0].split(\" \")[^1]\n  if gccver < \"5.0.0\":\n    raise newException(Exception, \"Install failed, package not supported on gcc < 5.x\")\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim cpp -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_wiringPiNim/master/wiringPiNim.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Wrapper for the C library wiringPi for controlling a Raspberry Pi\\'s GPIO\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n",
"https://github.com/Ephiiz/simple_vector": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Ephiiz\"\ndescription   = \"Simple vector library for nim-lang.\"\nlicense       = \"GNU Lesser General Public License v2.1\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://raw.githubusercontent.com/treeform/mpeg/master/mpeg.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"treeform\"\ndescription   = \"Wrapper for pl_mpeg single header mpeg library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipDirs = @[\"examples\"]\n\n# Dependencies\nrequires \"nim >= 0.20.0\"\n\n",
"https://github.com/status-im/nim-byteutils": "packageName   = \"byteutils\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A library to handle raw bytes and hex representations\"\nlicense       = \"MIT or Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\n\n### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  # TODO, don't forget to change defaultLang to `cpp` if the project requires C++\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache:nimcache\n  --threads:on\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://raw.githubusercontent.com/ethosa/yukiko/master/yukiko.nimble": "[Package]\r\nname = \"yukiko\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.40\"\r\ndescription = \"The Nim GUI asynchronous framework based on SDL2.\"\r\nlicense = \"MIT\"\r\nsrcDir = \"yukiko\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\nRequires: \"sdl2\"\r\n",
"https://github.com/Yardanico/telenim": "version       = \"0.2.0\"\nauthor        = \"Danil Yarantsev\"\ndescription   = \"A high-level async TDLib wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.0\"",
"https://raw.githubusercontent.com/rxi/cmixer_sdl2-nim/master/cmixer_sdl2.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rxi\"\ndescription   = \"Lightweight audio mixer for SDL2\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"cmixer\"\nrequires \"sdl2\"\n",
"https://raw.githubusercontent.com/Foldover/nim-p5/master/nimp5.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jacob Romano\"\ndescription   = \"Nim bindings for p5.js\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"",
"https://raw.githubusercontent.com/treeform/chroma/master/chroma.nimble": "# Package\nversion = \"0.2.1\"\nauthor = \"Andre von Houck\"\ndescription = \"Everything you want to do with colors\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/exelotl/nim-sunvox": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"exelotl\"\ndescription   = \"Nim bindings for SunVox modular synthesizer\"\nlicense       = \"0BSD\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/juancarlospaco/nim-css-html-minify": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"HTML & CSS & JS Minify Lib & App based on Regexes & parallel MultiReplaces\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://raw.githubusercontent.com/lihf8515/wxpay/master/wxpay.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Li Haifeng\"\ndescription   = \"WeChat payment SDK for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmac >= 0.2.0\"\n",
"https://raw.githubusercontent.com/xflywind/cal/master/cal.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"flywind\"\ndescription   = \"A simple interactive calculator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"cal\"]\n\n\n\n# Dependencies\n\n\n",
"https://github.com/apense/nimrat": "[Package]\nname          = \"nimrat\"\nversion       = \"0.1.0\"\nauthor        = \"Jonathan Edwards\"\ndescription   = \"Rational arithmetic module for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/h3rald/fae": "import\n  strutils\n\nfrom os import parentDir, `/`\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/faepkg/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/faepkg/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import faepkg/config\n\n# Package\n\nversion       = appVersion\nauthor        = appAuthor\ndescription   = appDescription\nlicense       = appLicense\nbin           = @[appName]\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"c\", \"h\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"nifty\"\n\nbefore install:\n  exec \"nimble install nifty\"\n  exec \"nifty install\"\n\n# Build\n\nconst\n  parallel = \"\" #\"--parallelBuild:1 --verbosity:3\"\n  compile = \"nim c -d:release --opt:size\" & \" \" & parallel\n  linux_x64 = \"--cpu:amd64 --os:linux --passL:-static\"\n  windows_x64 = \"--cpu:amd64 --os:windows\"\n  macosx_x64 = \"\"\n  app = \"src/fae\"\n  app_file = \"src/fae.nim\"\n  zip = \"zip -X -j\"\n\nproc shell(command, args = \"\", dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return appName & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build \" & appName & \" for Windows (x64)\":\n  shell compile, windows_x64, app_file\n\ntask linux_x64_build, \"Build \" & appName & \" for Linux (x64)\":\n  shell compile, linux_x64,  app_file\n\ntask macosx_x64_build, \"Build \" & appName & \" for Mac OS X (x64)\":\n  shell compile, macosx_x64, app_file\n\ntask release, \"Release \" & appName:\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, \"$1 $2\" % [filename_for(\"windows\", \"x64\"), app & \".exe\"]\n  shell \"rm\", app & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, \"$1 $2\" % [filename_for(\"linux\", \"x64\"), app]\n  shell \"rm\", app \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, \"$1 $2\" % [filename_for(\"macosx\", \"x64\"), app]\n  shell \"rm\", app\n  echo \"\\n\\n\\n ALL DONE!\"\n",
"https://raw.githubusercontent.com/leeooox/nimvisa/master/nimvisa.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"leeooox\"\ndescription   = \"nimvisa is C wrapper for NI-VISA instrument control library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"docs\"]\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/t8m8/currying": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"t8m8\"\ndescription   = \"Currying Library for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-libgcrypt/master/libgcrypt.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Libgcrypt wrapper\"\nlicense       = \"LGPL-2.1\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.6\"\n",
"https://github.com/PMunch/nancy": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"PMunch\"\ndescription   = \"Easiest way to print tables in your terminal with full ANSI support and custom style\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipFiles     = @[\"example.png\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"ansiparse >= 0.2.0\"\n",
"https://raw.githubusercontent.com/achesak/nim-gravatar/master/gravatar.nimble": "[Package]\nname = \"gravatar\"\nversion = \"0.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Gravatar API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://github.com/molnarmark/colorize": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Mark Molnar\"\ndescription   = \"Simple lightweight package to colorize your terminal output\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://github.com/ethosa/badgemaker": "[Package]\r\nname = \"badgemaker\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.9\"\r\ndescription = \"The Nim badgemaker tool.\"\r\nlicense = \"AGPLv3\"\r\nsrcDir = \"badgemaker\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/adelq/ulid/master/ulid.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Adel Qalieh\"\ndescription   = \"Universally Unique Lexicographically Sortable Identifier\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\", \"random >= 0.5.6\"\n\n# Tasks\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/test.nim\"\n\ntask perf, \"Runs the benchmark\":\n  exec \"nim c -r -d:release tests/bench.nim\"\n",
"https://github.com/paranim/paranim": "# Package\n\nversion       = \"0.10.0\"\nauthor        = \"oakes\"\ndescription   = \"A game library for nim\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"nimgl >= 1.1.1\"\nrequires \"glm >= 1.1.1\"\n",
"https://raw.githubusercontent.com/numforge/loopfusion/master/loopfusion.nimble": "packageName   = \"loopfusion\"\nversion       = \"0.0.1\"\nauthor        = \"Mamy André-Ratsimbazafy (Numforge SARL)\"\ndescription   = \"Loop efficiently over a variadic number of containers\"\nlicense       = \"MIT or Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\n\nskipDirs = @[\"experimental\", \"build\", \"tests\"]\n\n# ### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache: \"nimcache\"\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-datetime2human/master/datetime2human.nimble": "version     = \"0.2.5\"\nauthor      = \"juancarlospaco\"\ndescription = \"Human friendly DateTime string representations, seconds to millenniums.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.2.4\"\n",
"https://github.com/OpenSystemsLab/otp.nim": "[Package]\nname          = \"OTP\"\nversion       = \"0.1.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"One Time Password library for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\nRequires: \"hmac\"\nRequires: \"base32\"\n",
"https://raw.githubusercontent.com/boydgreenfield/nimrod-bloom/master/bloom.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Boyd Greenfield\"\ndescription   = \"Efficient Bloom filter implementation for Nimrod using MurmurHash3.\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/Parashurama/nim-i18n": "[Package]\nname          : \"i18n\"\nversion       : \"0.1.1\"\nauthor        : \"Parashurama\"\ndescription   : \"Bring a gettext-like internationalisation module to Nim\"\nlicense       : \"MIT\"\n\nInstallDirs : \"private\"\nInstallFiles : \"i18n.nim\"\n\n[Deps]\nrequires: \"nim >= 0.12\"\n",
"https://raw.githubusercontent.com/genotrance/nimdeps/master/nimdeps.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"genotrance\"\ndescription   = \"Nim library to bundle dependency files into executable\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\ntask docs, \"Generate docs\":\n  exec \"nim doc -o:build --project --index:on nimdeps.nim\"\n  if \"--publish\" in commandLineParams:\n    exec \"cd build && ghp-import --no-jekyll -fp .\"\n",
"https://raw.githubusercontent.com/markspanbroek/sss.nim/master/sss.nimble": "# Package\n\nversion     = \"0.2.2\"\nauthor      = \"Mark Spanbroek\"\ndescription = \"Shamir secret sharing\"\nlicense     = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0 & < 2.0.0\"\nrequires \"nimterop >= 0.5.9 & < 0.6.0\"\n",
"https://github.com/ThomasTJdev/nim_nimble_gui": "# Package\nversion       = \"0.2.2\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Nimble with GUI\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimblegui\"]\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\nrequires \"webgui >= 0.1.0\"\n",
"https://raw.githubusercontent.com/NimCompression/nimsnappyc/master/nimsnappyc.nimble": "packageName   = \"nimsnappyc\"\nversion       = \"0.0.4\"\nauthor        = \"NimCompression's members and conributors\"\ndescription   = \"Snappy-C lib wrapper for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires      \"nim >= 0.18.0\"\n",
"https://github.com/samdmarshall/libplist.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"wrapper around libplist https://github.com/libimobiledevice/libplist\"\nlicense       = \"MIT\"\n\nsrcDir = \"src/\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://github.com/shaunc/cucumber_nim": "# Package\n\nversion       = \"0.0.11\"\nauthor        = \"Shaun Cutts\"\ndescription   = \"Implements Cucumber BDD system in nim.\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.15.0\"\nrequires \"nre >= 1.0.0\"\nrequires \"commandeer >= 0.10.5\"\nrequires \"tempfile >= 0.1.4\"\n\ntask test, \"test cucumber_nim features\":\n  exec \"nim c -r --verbosity:0 ./tests/run\"\n",
"https://raw.githubusercontent.com/bluenote10/oop_utils/master/oop_utils.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Fabian Keller\"\ndescription   = \"Macro for building OOP class hierarchies based on closure methods.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.19.9\"\n\nimport ospaths\nimport oswalkdir\n\nimport algorithm\nimport sequtils\nimport sugar\nimport strutils\nimport strformat\n\ntype\n  Mode = enum\n    ModeC, ModeJS\n\n  File = string\n\nproc getFiles(baseDir: File): seq[File] =\n  result = newSeq[File]()\n  for file in oswalkdir.walkDirRec(baseDir):\n    let (_, name, ext) = file.splitFile()\n    if ext == \".nim\" and (name.contains(\"test\") or name.contains(\"error\")):\n      result.add(file)\n  result.sort((a, b) => cmp(a, b))\n\n\nproc deleteRunnable(file: File, mode: Mode) =\n  let binFileName =\n    if mode == ModeC:\n      file.changeFileExt(ExeExt)\n    else:\n      file.changeFileExt(\"js\")\n  rmFile(binFileName)\n\nproc relativeTo(path: File, base: File): File =\n  let baseSuffixed = base & \"/\"\n  if path.len > baseSuffixed.len:\n    path[baseSuffixed.len..^1]\n  else:\n    path\n\nlet colRed = \"\\e[1;31m\"\nlet colGreen = \"\\e[1;32m\"\nlet colYellow = \"\\e[1;33m\"\nlet colBlue = \"\\e[1;34m\"\nlet colWhite = \"\\e[1;37m\"\nlet colReset = \"\\e[00m\"\n\nhint(\"QuitCalled\", false)\n\nproc printPassed() =\n  echo &\"   {colGreen}[passed]{colReset}\"\n\nproc printFailed(output: string, suffix = \"\") =\n  echo &\"   {colRed}[failed] {suffix}{colReset}\"\n  echo &\"{colRed}------------------------------------------------{colReset}\"\n  echo output\n  echo &\"{colRed}------------------------------------------------{colReset}\"\n\ntask test, \"Runs the test suite\":\n  ## Executes all tests.\n  let baseDir = system.getCurrentDir() / \"tests\"\n  var files = getFiles(baseDir)\n\n  if files.len < 1:\n    echo &\"{colRed}Warning{colReset}: No tests found!\"\n    quit(\"\", 1)\n\n  let mode = ModeC\n  let compiler = if mode == ModeC: \"c\" else: \"js\"\n\n  var numPassed = 0\n  var numFailed = 0\n\n  for file in files:\n    let (_, name, _) = file.splitFile()\n    let expectedError = name.contains(\"error\")\n\n    let relativePath = file.relativeTo(baseDir)\n    echo &\" * {colYellow}{relativePath}{colReset}\"\n    let ret = gorgeEx &\"nim -r -d:release --colors:on {compiler} {file}\"\n    deleteRunnable(file, mode)\n\n    if not expectedError:\n      if ret.exitCode == 0:\n        printPassed()\n        numPassed += 1\n      else:\n        numFailed += 1\n        printFailed(ret.output)\n    else:\n      if ret.exitCode == 0:\n        printFailed(ret.output, \"test expected to fail, but passed\")\n        numFailed += 1\n      else:\n        var expectedMessage: string\n        var i = 0\n        for line in staticRead(file).splitLines():\n          if i == 1:\n            expectedMessage = line.strip()\n          inc i\n        if ret.output.contains(expectedMessage):\n          numPassed += 1\n          printPassed()\n        else:\n          numFailed += 1\n          printFailed(ret.output, &\"missing error message '{expectedMessage}'\")\n\n  if numFailed == 0:\n    echo &\"\\n{colGreen}Success{colReset}: All {numPassed} tests passed.\"\n  else:\n    echo &\"\\n{colRed}Failed{colReset}: {numFailed} out of {numFailed+numPassed} tests failed.\"\n    quit(\"\", 1)\n\n",
"https://raw.githubusercontent.com/ba0f3/libssh2.nim/master/libssh2.nimble": "[Package]\nname          = \"libssh2\"\nversion       = \"0.1.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"Nim wraper for libssh2\"\nlicense       = \"MIT\"\n\nskipDirs      = \"examples\"\n\n[Deps]\nRequires: \"nim >= 1.0.6\"\n",
"https://github.com/nitely/nim-regex": "# Package\n\nversion = \"0.19.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Linear time regex matching\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipDirs = @[\"tests\", \"bench\", \"docs\"]\n\nrequires \"nim >= 0.19.6\"\nrequires \"unicodedb >= 0.7.2\"\n\ntask test, \"Test\":\n  exec \"nim c -r -o:bin/regex src/regex.nim\"\n  exec \"nim c -r -o:bin/litopt src/regex/litopt.nim\"\n  exec \"nim c -r tests/tests.nim\"\n  exec \"nim c -r -d:forceRegexAtRuntime tests/tests.nim\"\n  exec \"nim c -r -d:forceRegexAtRuntime -d:noRegexOpt tests/tests.nim\"\n  exec \"nim c -r -d:noRegexOpt tests/tests.nim\"\n  when (NimMajor, NimMinor, NimPatch) >= (0, 20, 2):\n    exec \"nim c -d:runTestAtCT tests/tests.nim\"\n  # js target should work in older versions, but\n  # the docker image for CI has it since Nim 1.0.4,\n  # so I'll only test it there\n  when (NimMajor, NimMinor, NimPatch) >= (1, 0, 4) and\n      (NimMajor, NimMinor) != (1, 4):  # issue #88\n    exec \"nim js -r src/regex.nim\"\n    exec \"nim js -r tests/tests.nim\"\n    exec \"nim js -r -d:forceRegexAtRuntime tests/tests.nim\"\n\n  # Test runnable examples\n  when (NimMajor, NimMinor) >= (1, 1):\n    exec \"nim doc -o:./docs/ugh/ugh.html ./src/regex.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/regex.nim\"\n",
"https://raw.githubusercontent.com/genotrance/nimssl/master/nimssl.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance et al.\"\ndescription   = \"OpenSSL wrapper for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.6\"\nrequires \"nimterop >= 0.3.5\"\n",
"https://raw.githubusercontent.com/achesak/nim-qrcode/master/qrcode.nimble": "[Package]\nname = \"qrcode\"\nversion = \"0.3\"\nauthor = \"Adam Chesak\"\ndescription = \"module for creating and reading QR codes using http://goqr.me/\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/status-im/nim-json-serialization/master/json_serialization.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"json_serialization\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Flexible JSON serialization not relying on run-time type information\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.17.0\",\n         \"serialization\",\n         \"stew\"\n\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"--threads:off\", \"tests/test_all\"\n  test \"--threads:on\", \"tests/test_all\"\n",
"https://raw.githubusercontent.com/Narazaka/shioridll-nim/master/shioridll.nimble": "# Package\n\nversion       = \"3.0.0\"\nauthor        = \"Narazaka\"\ndescription   = \"The SHIORI DLL interface\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"example\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://github.com/fowlmouth/allegro5": "[Package]\nname:\"allegro5\"\nversion:\"1.1\"\nauthor:\"fowl\"\ndescription:\"Wrapper for Allegro version 5.\"\nlicense:\"MIT\"\nsrcDir:\"src\"\n[Deps]\nrequires:\"nimrod >= 0.10.3\"\n\n",
"https://github.com/status-im/nim-eth-common": "packageName   = \"eth_common\"\nversion       = \"1.0.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum Common library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim > 0.18.0\",\n         \"rlp\",\n         \"eth_trie\",\n         \"nimcrypto\",\n         \"ranges\",\n         \"stint\",\n         \"byteutils\"\n\ntask test, \"run tests\":\n  cd \"tests\"\n  exec \"nim c -r test\"",
"https://github.com/achesak/nim-geonames": "[Package]\nname = \"geonames\"\nversion = \"0.1\"\nauthor = \"Adam Chesak\"\ndescription = \"GeoNames API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://github.com/emekoi/suffer": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"emekoi\"\ndescription   = \"a nim library for drawing 2d shapes, text, and images to 32bit software pixel buffers\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"docs\", \"example\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.2\"\n\n# Build Tasks\n\ntask docs, \"generate documentation and place it in the docs folder\":\n  mkDir \"docs\"\n  for file in listFiles(srcDir):\n    if file[^4..<file.len] == \".nim\":\n      exec \"nimble doc2 -o:docs/\" & file[4..^5] & \".html \" & file\n\ntask example, \"runs the (bad) included example\":\n  withDir \"example\":\n    exec \"mkdir -p bin\"\n    exec \"nim c -r example.nim\"\n",
"https://raw.githubusercontent.com/jackhftang/threadproxy.nim/master/threadproxy.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Jack Tang\"\ndescription   = \"Simplify Nim Inter-Thread Communication\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"threadproxy.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html src/threadproxy.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://raw.githubusercontent.com/jackvandrunen/findtests/master/findtests.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jacob VanDrunen\"\ndescription   = \"A helper module for writing unit tests with nake or similar build system.\"\nlicense       = \"ISC\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/icyphox/fab/master/fab.nimble": "# Package\n\nversion       = \"0.4.3\"\nauthor        = \"Anirudh\"\ndescription   = \"Print fabulously in your terminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/juancarlospaco/nim-internimgua": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Internationalization at Compile Time for Nim. Macro to translate unmodified code from 1 INI file. NimScript compatible.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"example\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/Michedev/DecisionTreeNim/master/DecisionTree.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Michele De Vita\"\ndescription   = \"Decision tree and Random forest CART implementation for nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"sequtils2 >= 1.1.0\"\n",
"https://raw.githubusercontent.com/status-im/nim-evmc/master/evmc.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"evmc\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for the The Ethereum EVMC library\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"stew\"\n\nproc test(name: string, lang: string = \"cpp\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test_debug, \"Run all tests - test implementation\":\n  test \"test_host_vm\"\n\ntask test_release, \"Run all tests - prod implementation\":\n  switch(\"define\", \"release\")\n  test \"test_host_vm\"\n\ntask test, \"Run all tests - test and production implementation\":\n  exec \"nimble test_debug\"\n  exec \"nimble test_release\"\n",
"https://api.github.com/repos/barcharcraz/nimalpm/contents": "[{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"d7f105139782ab695d86613e343916f7372f4ac0\",\"size\":18026,\"url\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/barcharcraz/nimalpm/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/blobs/d7f105139782ab695d86613e343916f7372f4ac0\",\"download_url\":\"https://raw.githubusercontent.com/barcharcraz/nimalpm/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/blobs/d7f105139782ab695d86613e343916f7372f4ac0\",\"html\":\"https://github.com/barcharcraz/nimalpm/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"abdcebabb3d8c45874f6a321a85fa0543af77733\",\"size\":51,\"url\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/README.md?ref=master\",\"html_url\":\"https://github.com/barcharcraz/nimalpm/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/blobs/abdcebabb3d8c45874f6a321a85fa0543af77733\",\"download_url\":\"https://raw.githubusercontent.com/barcharcraz/nimalpm/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/blobs/abdcebabb3d8c45874f6a321a85fa0543af77733\",\"html\":\"https://github.com/barcharcraz/nimalpm/blob/master/README.md\"}},{\"name\":\"calpm.nim\",\"path\":\"calpm.nim\",\"sha\":\"d3fb138699775bb99276c15b17a09c5deab8b639\",\"size\":53956,\"url\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/calpm.nim?ref=master\",\"html_url\":\"https://github.com/barcharcraz/nimalpm/blob/master/calpm.nim\",\"git_url\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/blobs/d3fb138699775bb99276c15b17a09c5deab8b639\",\"download_url\":\"https://raw.githubusercontent.com/barcharcraz/nimalpm/master/calpm.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/calpm.nim?ref=master\",\"git\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/blobs/d3fb138699775bb99276c15b17a09c5deab8b639\",\"html\":\"https://github.com/barcharcraz/nimalpm/blob/master/calpm.nim\"}},{\"name\":\"nimalpm.babel\",\"path\":\"nimalpm.babel\",\"sha\":\"202c14900d109a3d2d486adc1df0e1f0cf414ef4\",\"size\":189,\"url\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/nimalpm.babel?ref=master\",\"html_url\":\"https://github.com/barcharcraz/nimalpm/blob/master/nimalpm.babel\",\"git_url\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/blobs/202c14900d109a3d2d486adc1df0e1f0cf414ef4\",\"download_url\":\"https://raw.githubusercontent.com/barcharcraz/nimalpm/master/nimalpm.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/nimalpm.babel?ref=master\",\"git\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/blobs/202c14900d109a3d2d486adc1df0e1f0cf414ef4\",\"html\":\"https://github.com/barcharcraz/nimalpm/blob/master/nimalpm.babel\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"7bf37aa5931bfd6398122dfa84c251983fbf88ba\",\"size\":0,\"url\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/tests?ref=master\",\"html_url\":\"https://github.com/barcharcraz/nimalpm/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/trees/7bf37aa5931bfd6398122dfa84c251983fbf88ba\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/barcharcraz/nimalpm/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/barcharcraz/nimalpm/git/trees/7bf37aa5931bfd6398122dfa84c251983fbf88ba\",\"html\":\"https://github.com/barcharcraz/nimalpm/tree/master/tests\"}}]",
"https://github.com/sillibird/luhncheck": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"sillibird\"\ndescription   = \"Implementation of Luhn algorithm in nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/QuinnFreedman/nimgraphviz": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Quinn Freedman\"\ndescription   = \"Nim bindings for the GraphViz tool and the DOT graph language\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/hlaaftana/defines": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"hlaaftana\"\ndescription   = \"syntax sugar for local definitions\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nimport os\n\ntask docs, \"build docs\":\n  const\n    gitUrl = \"https://github.com/hlaaftana/defines\"\n    gitCommit = \"master\"\n    gitDevel = \"master\" \n  for f in walkDirRec(\"src\"):\n    exec \"nim doc --git.url:\" & gitUrl &\n      \" --git.commit:\" & gitCommit &\n      \" --git.devel:\" & gitDevel &\n      \" --outdir:docs \" & f\n",
"https://raw.githubusercontent.com/dfdeshom/nimrdkafka/master/nimrdkafka.nimble": "# Package\nversion       = \"0.1.3\"\nauthor        = \"Didier Deshommes\"\ndescription   = \"Low-level Nim wrapper for librdkafka\"\nlicense       = \"MIT\"\nskipFiles     = @[\"example.nim\"]\n\n# Deps\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/RaimundHuebel/nimpathname": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Raimund Hübel\"\ndescription   = \"Library to support work with pathnames in Windows and Posix-based systems. Inspired by Rubies pathname.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://github.com/mratsim/Arraymancer": "### Package\nversion       = \"0.6.2\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"A n-dimensional tensor (ndarray) library\"\nlicense       = \"Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 1.0.0\",\n  \"nimblas >= 0.2.2\",\n  \"nimlapack >= 0.1.1\",\n  \"nimcuda >= 0.1.4\",\n  \"nimcl >= 0.1.3\",\n  \"clblast\",\n  \"stb_image\",\n  \"zip\",\n  \"untar\"\n\n## Install files\nsrcDir = \"src\"\n\n########################################################\n# External libs configuration\n\n### BLAS support\n## OSX\n# switch(\"define\",\"openblas\")\n# switch(\"clibdir\", \"/usr/local/opt/openblas/lib\")\n# switch(\"cincludes\", \"/usr/local/opt/openblas/include\")\n\n## Archlinux\n# Contrary to Debian-based distro, blas.dll doesn't supply the cblas interface\n# so \"-d:blas=cblas\" must be passed\n\n### BLIS support\n# switch(\"define\",\"blis\")\n\n### MKL support\n# Check the mkl switches in the test file for single-threaded and openp version\n\ntemplate mkl_threadedSwitches(switches: var string) =\n  switches.add \" --stackTrace:off\"\n  switches.add \" --d:blas=mkl_intel_lp64\"\n  switches.add \" --d:lapack=mkl_intel_lp64\"\n  switches.add \" --clibdir:/opt/intel/mkl/lib/intel64\"\n  switches.add \" --passl:/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  switches.add \" --passl:-lmkl_core\"\n  switches.add \" --passl:-lmkl_gnu_thread\"\n  switches.add \" --passl:-lgomp\"\n  switches.add \" --dynlibOverride:mkl_intel_lp64\"\n\ntemplate mkl_singleSwitches(switches: var string) =\n  switches.add \" --d:blas=mkl_intel_lp64\"\n  switches.add \" --d:lapack=mkl_intel_lp64\"\n  switches.add \" --clibdir:/opt/intel/mkl/lib/intel64\"\n  switches.add \" --passl:/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  switches.add \" --passl:-lmkl_core\"\n  switches.add \" --passl:-lmkl_sequential\"\n  switches.add \" --dynlibOverride:mkl_intel_lp64\"\n\n# ### Cuda configuration\n## Pass -d:cuda to build arraymancer with cuda support\n## Use the cuda switches below\n## Replace /opt/cuda by your own path\n## TODO: auto detection or at least check in common directories\n## Note: It is import to gate compiler flags like -march=native  behind Xcompiler \"-Xcompiler -march=native\"\n\n# NVCC config\ntemplate cudaSwitches(switches: var string) =\n  switches.add \" --cincludes:/opt/cuda/include\"\n  switches.add \" --cc:clang\" # We trick Nim about nvcc being clang, pending https://github.com/nim-lang/Nim/issues/6372\n  switches.add \" --clang.exe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.linkerexe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.cpp.exe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.cpp.linkerexe:/opt/cuda/bin/nvcc\"\n  # Due to the __ldg intrinsics in kernels\n  # we only support compute capabilities 3.5+\n  # See here: http://docs.nvidia.com/cuda/pascal-compatibility-guide/index.html\n  # And wikipedia for GPU capabilities: https://en.wikipedia.org/wiki/CUDA\n\n  # Note: the switches below might conflict with nim.cfg\n  # switches.add \" --gcc.options.always:\\\"-arch=sm_61 --x cu\\\"\" # Interpret .c files as .cu\n  # switches.add \" --gcc.cpp.options.always:\\\"-arch=sm_61 --x cu -Xcompiler -fpermissive\\\"\" # Interpret .c files as .cu, gate fpermissive behind Xcompiler\n  switches.add \" -d:cudnn\"\n\ntemplate cuda_mkl_openmp(switches: var string) =\n  switches.mkl_threadedSwitches()\n  switches.add \" --cincludes:/opt/cuda/include\"\n  switches.add \" --cc:clang\" # We trick Nim about nvcc being clang, pending https://github.com/nim-lang/Nim/issues/6372\n  switches.add \" --clang.exe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.linkerexe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.cpp.exe:/opt/cuda/bin/nvcc\"\n  switches.add \" --clang.cpp.linkerexe:/opt/cuda/bin/nvcc\"\n\n  # Note: the switches below might conflict with nim.cfg\n  # switches.add \" --gcc.options.always:\\\"-arch=sm_61 --x cu -Xcompiler -fopenmp -Xcompiler -march=native\\\"\"\n  # switches.add \" --gcc.cpp.options.always:\\\"-arch=sm_61 --x cu -Xcompiler -fopenmp -Xcompiler -march=native\\\"\"\n\n# Clang config - make sure Clang supports your CUDA SDK version\n# https://gist.github.com/ax3l/9489132\n# https://llvm.org/docs/CompileCudaWithLLVM.html\n# | clang++ | supported CUDA release | supported SMs |\n# | ------- | ---------------------- | ------------- |\n# | 3.9-5.0 | 7.0-8.0                | 2.0-(5.0)6.0  |\n# | 6.0     | [7.0-9.0](https://github.com/llvm-mirror/clang/blob/release_60/include/clang/Basic/Cuda.h) | [(2.0)3.0-7.0](https://github.com/llvm-mirror/clang/blob/release_60/lib/Basic/Targets/NVPTX.cpp#L163-L188) |\n# | 7.0     | [7.0-9.2](https://github.com/llvm-mirror/clang/blob/release_70/include/clang/Basic/Cuda.h) | [(2.0)3.0-7.2](https://github.com/llvm-mirror/clang/blob/release_70/lib/Basic/Targets/NVPTX.cpp#L196-L223) |\n# | 8.0     | [7.0-10.0](https://github.com/llvm-mirror/clang/blob/release_80/include/clang/Basic/Cuda.h) | [(2.0)3.0-7.5](https://github.com/llvm-mirror/clang/blob/release_70/lib/Basic/Targets/NVPTX.cpp#L199-L228) |\n# | trunk   | [7.0-10.1](https://github.com/llvm-mirror/clang/blob/master/include/clang/Basic/Cuda.h) | [(2.0)3.0-7.5](https://github.com/llvm-mirror/clang/blob/master/lib/Basic/Targets/NVPTX.cpp#L200-L229) |\n#\n# template cudaSwitches(switches: var string) =\n#   switches.add \" --cincludes:/opt/cuda/include\"\n#   switches.add \" --clibdir:/opt/cuda/lib\"\n#   switches.add \" --cc:clang\"\n#   switches.add \" --clang.cpp.options.always:\\\"--cuda-path=/opt/cuda -lcudart_static -x cuda --cuda-gpu-arch=sm_61 --cuda-gpu-arch=sm_75\\\"\"\n#   switches.add \" -d:cudnn\"\n\n# template cuda_mkl_openmp(switches: var string) =\n#   switches.mkl_threadedSwitches()\n#   switches.add \" --cincludes:/opt/cuda/include\"\n#   switches.add \" --clibdir:/opt/cuda/lib\"\n#   switches.add \" --cc:clang\"\n#   switches.add \" --clang.cpp.options.always:\\\"--cuda-path=/opt/cuda -lcudart_static -x cuda --cuda-gpu-arch=sm_61 --cuda-gpu-arch=sm_75 -fopenmp -march=native\\\"\"\n#   switches.add \" -d:cudnn\"\n\n########################################################\n# Optimization\n\n# Multithreading\n# use the -d:openmp switch\n# which passC: -fopenmp to the compiler\n\n# Native processor optimization\n# use the -d:native\n# which passC: -march=native to the compiler\n\n\n##########################################################################\n## Testing tasks\n\nproc test(name, switches = \"\", split = false, lang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not split:\n    exec \"nim \" & lang & \" -o:build/\" & name & switches & \" -r tests/\" & name & \".nim\"\n  else:\n    exec \"nim \" & lang & \" -o:build/\" & name & switches & \" -r tests/_split_tests/\" & name & \".nim\"\n\ntask all_tests, \"Run all tests - Intel MKL + Cuda + OpenCL + OpenMP\":\n  var switches = \" -d:cuda -d:opencl -d:openmp\"\n  switches.cuda_mkl_openmp()\n  test \"full_test_suite\", switches, split=false, lang=\"cpp\"\n\n# Split tests are unnecessary after 1.0.0 (no more 3GB+ memory used when compiling)\n#\n# task test, \"Run all tests - Default BLAS & Lapack\":\n#   test \"tests_tensor_part01\", \"\", split = true\n#   test \"tests_tensor_part02\", \"\", split = true\n#   test \"tests_tensor_part03\", \"\", split = true\n#   test \"tests_tensor_part04\", \"\", split = true\n#   test \"tests_tensor_part05\", \"\", split = true\n#   test \"tests_cpu_remainder\", \"\", split = true\n#\n# task test_no_lapack, \"Run all tests - Default BLAS without lapack\":\n#   let switch = \" -d:no_lapack\"\n#   test \"tests_tensor_part01\", switch, split = true\n#   test \"tests_tensor_part02\", switch, split = true\n#   test \"tests_tensor_part03\", switch, split = true\n#   test \"tests_tensor_part04\", switch, split = true\n#   test \"tests_tensor_part05\", switch, split = true\n#   test \"tests_cpu_remainder\", switch, split = true\n\ntask test, \"Run all tests - Default BLAS & Lapack\":\n  test \"tests_cpu\", \"\", split = false\n\ntask test_arc, \"Run all tests under ARC - Default BLAS & Lapack\":\n  test \"tests_cpu\", \"--gc:arc\", split = false\n\ntask test_orc, \"Run all tests under ORC - Default BLAS & Lapack\":\n  test \"tests_cpu\", \"--gc:orc\", split = false\n\ntask test_no_lapack, \"Run all tests - Default BLAS without lapack\":\n  let switch = \" -d:no_lapack\"\n  test \"tests_cpu\", switch, split = false\n\ntask test_no_lapack_arc, \"Run all tests - Default BLAS without lapack under ARC\":\n  let switch = \" -d:no_lapack --gc:arc\"\n  test \"tests_cpu\", switch, split = false\n\ntask test_cpp, \"Run all tests - Cpp codegen\":\n  test \"tests_cpu\", \"\", split = false, \"cpp\"\n\ntask test_cuda, \"Run all tests - Cuda backend with CUBLAS and CuDNN\":\n  var switches = \" -d:cuda -d:cudnn\"\n  switches.add \" -d:blas=cblas\" # Archlinux, comment out on Debian/Ubuntu\n  switches.cudaSwitches()\n  test \"tests_cuda\", switches, split = false, \"cpp\"\n\ntask test_opencl, \"Run all OpenCL backend tests\":\n  var switches = \" -d:opencl\"\n  switches.add \" -d:blas=cblas\" # Archlinux, comment out on Debian/Ubuntu\n  test \"tests_opencl\", switches, split = false, \"cpp\"\n\n# task test_deprecated, \"Run all tests on deprecated procs\":\n#  test \"tests_cpu_deprecated\"\n\ntask test_openblas, \"Run all tests - OpenBLAS\":\n  var switches = \" -d:blas=openblas -d:lapack=openblas\"\n  when defined(macosx):\n    ## Should work but somehow Nim doesn't find libopenblas.dylib on MacOS\n    switches.add \" --clibdir:/usr/local/opt/openblas/lib\"\n    switches.add \" --cincludes:/usr/local/opt/openblas/include\"\n  test \"tests_cpu\", switches\n\ntask test_blis, \"Run all tests - BLIS\":\n  test \"tests_cpu\", \" -d:blis\"\n\ntask test_native, \"Run all tests - march=native\":\n  test \"tests_cpu\", \" -d:native\"\n\ntask test_openmp, \"Run all tests - OpenMP\":\n  var switches = \" -d:openmp\"\n  switches.add \" --stackTrace:off\" # stacktraces interfere with OpenMP\n  when defined(macosx): # Default compiler on Mac is clang without OpenMP and gcc is an alias to clang.\n                        # Use Homebrew GCC instead for OpenMP support. GCC (v8), must be properly linked via `brew link gcc`\n    switches.add \" --cc:gcc\"\n    switches.add \" --gcc.exe:/usr/local/bin/gcc-8\"\n    switches.add \" --gcc.linkerexe:/usr/local/bin/gcc-8\"\n  test \"tests_cpu\", switches\n\ntask test_mkl, \"Run all tests - Intel MKL - single threaded\":\n  var switches: string\n  switches.mkl_singleSwitches()\n  test \"tests_cpu\", switches\n\ntask test_mkl_omp, \"Run all tests - Intel MKL + OpenMP\":\n  var switches = \" -d:openmp\"\n  switches.mkl_threadedSwitches()\n  test \"tests_cpu\", switches\n\ntask test_release, \"Run all tests - Release mode\":\n  test \"tests_cpu\", \" -d:release\"\n\ntask test_arc_release, \"Run all tests under ARC - Release mode\":\n  test \"tests_cpu\", \" -d:release --gc:arc\"\n\ntask test_orc_release, \"Run all tests under ORC - Release mode\":\n  test \"tests_cpu\", \" -d:release --gc:orc\"\n\ntemplate canImport(x: untyped): untyped =\n  compiles:\n    import x\n\nwhen canImport(docs / docs):\n  # can define the `gen_docs` task (docs already imported now)\n  # this is to hack around weird nimble + nimscript behavior.\n  # when overwriting an install nimble will try to parse the generated\n  # nimscript file and for some reason then it won't be able to import\n  # the module (even if it's put into `src/`).\n  task gen_docs, \"Generate Arraymancer documentation\":\n    # generate nimdoc.cfg file so we can generate the correct header for the\n    # index.html page without having to mess with the HTML manually.\n    genNimdocCfg(\"src/arraymancer/\")\n    # build the actual docs and the index\n    buildDocs(\n      \"src/arraymancer/\", \"docs/build\",\n      defaultFlags = \"--hints:off --warnings:off\"\n    )\n    # Copy our stylesheets\n    cpFile(\"docs/docutils.css\", \"docs/build/docutils.css\")\n    cpFile(\"docs/nav.css\", \"docs/build/nav.css\")\n    # Process the rst\n    for filePath in listFiles(\"docs/\"):\n      if filePath[^4..^1] == \".rst\":\n        let modName = filePath[5..^5]\n        exec r\"nim rst2html -o:docs/build/\" & modName & \".html \" & filePath\n",
"https://github.com/markspanbroek/simpleot.nim": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"Mark Spanbroek\"\ndescription   = \"Simple OT wrapper\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0 & < 2.0.0\"\nrequires \"nimterop >= 0.5.8 & < 0.6.0\"\n",
"https://github.com/c-blake/hldiff": "# Package\nversion     = \"0.4\"\nauthor      = \"Charles Blake\"\ndescription = \"A port of Python difflib to compute & (re)highlight diff output intraline\"\nlicense     = \"MIT/ISC\"\ninstallExt  = @[ \"nim\" ]\nbin         = @[ \"hldiff\", \"hldiffpkg/edits\" ]\n\n# Dependencies\nrequires \"nim >= 0.20.2\", \"cligen >= 1.2.0\"\n",
"https://raw.githubusercontent.com/kaushalmodi/bignum/master/bignum.nimble": "# Package\nversion     = \"1.0.4\"\nauthor      = \"Federico Omoto\"\ndescription = \"Wrapper around the GMP bindings for the Nim language.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 0.20.0\", \"gmp >= 0.2.4\"\n",
"https://github.com/OpenSystemsLab/tempfile.nim": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"Huy Doan\"\ndescription   = \"Temporary files and folders\"\nlicense       = \"MIT\"\n\nbin = @[\"tempfile_seeder\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/vegansk/nimshell/master/nimshell.nimble": "# Package\nversion       = \"0.0.3\"\nauthor        = \"Anatoly Galiulin\"\ndescription   = \"Library for shell scripting in nim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.17.2\"\n",
"https://github.com/faulander/nimQBittorrent": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Faulander\"\ndescription   = \"A wrapper for the QBittorrent WebAPI\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/benob/gemini": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Benoit Favre\"\ndescription   = \"Building blocks for making async Gemini servers\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/Yardanico/nim-osureplay/master/osureplay.nimble": "# Package\nversion     = \"0.0.3\"\nauthor      = \"Daniil Yarancev\"\ndescription = \"Osu replay parser library and command-line utility.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nbin = @[\"osureader\"]\nrequires \"nim >= 0.16.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/tester\"",
"https://github.com/jabbalaci/UrlShortener": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Laszlo Szathmary (Jabba Laci)\"\ndescription   = \"A URL shortener cli app. using bit.ly\"\nlicense       = \"MIT\"\nbin           = @[\"urlshortener\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/FedericoCeratto/nim-libnotify.git": "# Package\nversion       = \"0.0.2\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Minimalistic libnotify wrapper.\"\nlicense       = \"LGPLv3\"\nskipFiles     = @[\"test_libnotify.nim\"]\n\n# Dependencies\nrequires \"nim >= 0.12\", \"gtk2 >= 1.3\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-mmgeoip/master/mmgeoip.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"MaxMind GeoIP library\"\nlicense       = \"LGPLv2.1\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\ntask test, \"basic test\":\n  exec \"nim c -p:. -d:nimDebugDlOpen -d:release -r tests/basic_test.nim\"\n",
"https://raw.githubusercontent.com/zendbit/nim.zfcore/master/zfcore.nimble": "# Package\nversion     = \"1.1.3\"\nauthor      = \"Amru Rosyada\"\ndescription = \"High performance asynchttpserver and web framework for nim lang.\"\nlicense     = \"BSD\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 1.4.0\"\nrequires \"zfblast >= 0.2.0\"\nrequires \"uri3 >= 0.1.4\"\nrequires \"stdext >= 0.0.8\"\n",
"https://github.com/gmshiba/replim": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"mtshiba\"\ndescription   = \"most quick REPL of nim\"\nlicense       = \"MIT\"\nbinDir        = \"bin\"\nsrcDir        = \"src\"\nbin           = @[\"replim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/quelklef/nim-sugerror/master/sugerror.nimble": "# Package\nversion       = \"1.0.0\"\nauthor        = \"Eli Maynard\"\ndescription   = \"Terse and composable error handling.\"\nlicense       = \"MIT\"\n\n",
"https://github.com/hectormonacci/tsv2json": "# Package\n\nversion       = \"0.1.8\"\nauthor        = \"Héctor M. Monacci\"\ndescription   = \"Turn TSV file or stream into JSON file or stream\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"tsv2json\"]\nskipExt       = @[\"nim\"] \n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/manguluka/duktape-nim/master/duktape.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Manguluka Kakia\"\npackageName   = \"duktape\"\ndescription   = \"wrapper for the Duktape embeddable Javascript engine\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nimgen >= 0.1.4\"\n\nskipDirs = @[\"tests\",\"src\"]\ninstallDirs = @[\"duktape\"]\n\n# Dependencies\nimport distros\n\nvar cmd = \"\"\nif detectOs(Windows):\n    cmd = \"cmd /c \"\n\ntask setup, \"Download and generate\":\n    # exec cmd & \"/bin/cp -r duktape-2.2.1/src/* nim_duktape/src && nimgen nim_duktape.cfg\"\n    exec cmd & \"nimgen duktape.cfg\"\n\nbefore install:\n    setupTask()\n\ntask test, \"Test duktape\":\n    exec \"nim c -r tests/basic_eval.nim\"\n    exec \"nim c -r tests/bind_proc.nim\"",
"https://raw.githubusercontent.com/pseudo-random/geometryutils/master/geometryutils.nimble": "version = \"1.2.0\"\nauthor = \"pseudo-random <josh.leh.2018@gmail.com>\"\nlicense = \"MIT\"\ndescription = \"A collection of geometry utilities for nim\"\nsrc_dir = \"src\"\n\nrequires \"nim >= 1.2.4\"\nrequires \"sdl2 >= 2.0.3\"\nrequires \"opengl >= 1.2.6\"\n",
"https://github.com/nimious/io-spacenav.git": "[Package]\nname: \"spacenav\"\nversion: \"1.0\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for libspnav, the free 3Dconnexion device driver\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://raw.githubusercontent.com/MarcAzar/BipBuffer/master/bipbuffer.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Marc Azar\"\ndescription   = \"Bi-partite buffer implementation in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://raw.githubusercontent.com/planety/cookiejar/master/cookiejar.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"flywind\"\ndescription   = \"HTTP Cookies for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n\ntask tests, \"Run all tests\":\n  exec \"testament r test.nim\"\n",
"https://raw.githubusercontent.com/achesak/nim-hashids/master/hashids.nimble": "[Package]\nname = \"hashids\"\nversion = \"1.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim implementation of Hashids\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"\n",
"https://github.com/ba0f3/ssh2.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"SSH, SCP and SFTP client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\", \"libssh2 >= 0.1.4\"\n",
"https://api.github.com/repos/fowlmouth/physfs/contents": "[{\"name\":\"physfs.babel\",\"path\":\"physfs.babel\",\"sha\":\"422bfcad8e6544dba4aec07d54503f13484a0216\",\"size\":188,\"url\":\"https://api.github.com/repos/fowlmouth/physfs/contents/physfs.babel?ref=master\",\"html_url\":\"https://github.com/fowlmouth/physfs/blob/master/physfs.babel\",\"git_url\":\"https://api.github.com/repos/fowlmouth/physfs/git/blobs/422bfcad8e6544dba4aec07d54503f13484a0216\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/physfs/master/physfs.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/physfs/contents/physfs.babel?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/physfs/git/blobs/422bfcad8e6544dba4aec07d54503f13484a0216\",\"html\":\"https://github.com/fowlmouth/physfs/blob/master/physfs.babel\"}},{\"name\":\"physfs.nim\",\"path\":\"physfs.nim\",\"sha\":\"57ad795e49721035bbe68e1d46473cf50c8c9df3\",\"size\":93172,\"url\":\"https://api.github.com/repos/fowlmouth/physfs/contents/physfs.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/physfs/blob/master/physfs.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/physfs/git/blobs/57ad795e49721035bbe68e1d46473cf50c8c9df3\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/physfs/master/physfs.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/physfs/contents/physfs.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/physfs/git/blobs/57ad795e49721035bbe68e1d46473cf50c8c9df3\",\"html\":\"https://github.com/fowlmouth/physfs/blob/master/physfs.nim\"}}]",
"https://github.com/zer0-star/nim-curry": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zer0-star\"\ndescription   = \"Provides a macro to curry function\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://github.com/lee-b/nimrun": "# Package\n\nversion = \"0.1.0\"\nauthor = \"Lee Braiden <leebraid@gmail.com>\"\ndescription = \"Runs nim code as scripts, regardless of file extension\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\nbinDir = \"bin\"\n\nbin = @[\"nimrun\"]\n\nskipExt = @[\"nim\"]\n\nrequires \"tempfile\"",
"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents": "[{\"name\":\"chipmunk.nim\",\"path\":\"chipmunk.nim\",\"sha\":\"ee7535d0a16552ee6569956e2ab2ec77a5e4a207\",\"size\":69999,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/chipmunk.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-chipmunk/blob/master/chipmunk.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/blobs/ee7535d0a16552ee6569956e2ab2ec77a5e4a207\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-chipmunk/master/chipmunk.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/chipmunk.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/blobs/ee7535d0a16552ee6569956e2ab2ec77a5e4a207\",\"html\":\"https://github.com/fowlmouth/nimrod-chipmunk/blob/master/chipmunk.nim\"}},{\"name\":\"chipmunk.nimble\",\"path\":\"chipmunk.nimble\",\"sha\":\"542fc50c8181d42567d5c353f3d0a7bbad01d3a2\",\"size\":146,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/chipmunk.nimble?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-chipmunk/blob/master/chipmunk.nimble\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/blobs/542fc50c8181d42567d5c353f3d0a7bbad01d3a2\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-chipmunk/master/chipmunk.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/chipmunk.nimble?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/blobs/542fc50c8181d42567d5c353f3d0a7bbad01d3a2\",\"html\":\"https://github.com/fowlmouth/nimrod-chipmunk/blob/master/chipmunk.nimble\"}},{\"name\":\"debugdraw.nim\",\"path\":\"debugdraw.nim\",\"sha\":\"e6be0233ad5137c8064492d699657d9054358365\",\"size\":2794,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/debugdraw.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-chipmunk/blob/master/debugdraw.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/blobs/e6be0233ad5137c8064492d699657d9054358365\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-chipmunk/master/debugdraw.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/debugdraw.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/blobs/e6be0233ad5137c8064492d699657d9054358365\",\"html\":\"https://github.com/fowlmouth/nimrod-chipmunk/blob/master/debugdraw.nim\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"df7c8fc8fa1109597928b1ea4ddeb9ecf3e0c167\",\"size\":0,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/examples?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-chipmunk/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/trees/df7c8fc8fa1109597928b1ea4ddeb9ecf3e0c167\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/trees/df7c8fc8fa1109597928b1ea4ddeb9ecf3e0c167\",\"html\":\"https://github.com/fowlmouth/nimrod-chipmunk/tree/master/examples\"}},{\"name\":\"readme.md\",\"path\":\"readme.md\",\"sha\":\"f55158c75dfb5d1af0da5b2decd4e82be87aadcd\",\"size\":1374,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/readme.md?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-chipmunk/blob/master/readme.md\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/blobs/f55158c75dfb5d1af0da5b2decd4e82be87aadcd\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-chipmunk/master/readme.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/contents/readme.md?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-chipmunk/git/blobs/f55158c75dfb5d1af0da5b2decd4e82be87aadcd\",\"html\":\"https://github.com/fowlmouth/nimrod-chipmunk/blob/master/readme.md\"}}]",
"https://github.com/LemonBoy/jstin": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"LemonBoy\"\ndescription   = \"JS {de,}serialization as it says on the tin\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://github.com/khchen/hashlib": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Ward\"\ndescription   = \"Hash Library for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"nimcrypto >= 0.4.11\"\n\n# Tests\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/api_test\"\n\ntask md5_bench, \"Runs the md5 benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/md5_bench\"\n\ntask sha1_bench, \"Runs the sha1 benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/sha1_bench\"\n\ntask sha2_bench, \"Runs the sha2 benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/sha2_bench\"\n\ntask sha3_bench, \"Runs the sha3 benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/sha3_bench\"\n\ntask all_bench, \"Runs the all benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/all_bench\"\n\n# Clean\n\ntask clean, \"Delete all the executable files\":\n  exec \"cmd /c IF EXIST tests\\\\*.exe del tests\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\*.exe del examples\\\\*.exe\"\n",
"https://github.com/cjxgm/jsonob": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Giumo Clanjor (哆啦比猫/兰威举)\"\ndescription   = \"JSON / Object mapper\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.2\"\n\n",
"https://github.com/KeepCoolWithCoolidge/nimclutter": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Andrew Burns\"\ndescription   = \"Nim bindings for Clutter toolkit.\"\nlicense       = \"LGPLv2.1\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"oldgtk3\"\n",
"https://github.com/disruptek/gcplat": "version = \"3.0.1\"\nauthor = \"disruptek\"\ndescription = \"Google Cloud Platform (GCP) APIs\"\nlicense = \"MIT\"\nrequires \"nim >= 0.20.0\"\nrequires \"https://github.com/yglukhov/nim-jwt.git#de8fcd3b6646807c9b27708d793b1dd9245f530a\"\nrequires \"https://github.com/disruptek/rest.git >= 1.0.0\"\nrequires \"https://github.com/disruptek/openapi.git >= 3.1.3\"\nrequires \"npeg >= 0.22.2\"\n\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/barcharcraz/libgit2-nim/master/libgit2.nimble": "# Package\n\nversion       = \"0.26.0\"\nauthor        = \"Charles Barto\"\ndescription   = \"Libgit2 low level wrapper\"\nlicense       = \"MIT\"\nsrcDir = \"src\"\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\n",
"https://raw.githubusercontent.com/rosado/reframe.nim/master/reframe.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Roland Sadowski\"\ndescription   = \"Tools for working with re-frame ClojureScript projects\"\nlicense       = \"EPL-2.0\"\nsrcDir        = \"src\"\nskipDirs      = @[\"test-data\"]\nbin           = @[\"reframe\", \"clojure_keyword_index\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\nrequires \"edn 0.2.1\"\n",
"https://raw.githubusercontent.com/Ethosa/nodesnim/master/nodesnim.nimble": "[Package]\r\nname = \"nodesnim\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.4\"\r\ndescription = \"The Nim GUI/2D framework based on OpenGL and SDL2.\"\r\nlicense = \"MIT\"\r\nsrcDir = \"src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/xmonader/nim-servy/master/servy.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"a down to earth webframework in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"servy\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"terminaltables\"\nrequires \"ws\"\n",
"https://raw.githubusercontent.com/xflywind/websocketx/master/websocketx.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"flywind\"\ndescription   = \"Websocket for httpx.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"ws >= 0.4.3\"\nrequires \"httpx >= 0.1.8\"\n",
"https://github.com/Araq/libffi": "# Package\nversion       = \"1.0.5\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"libffi wrapper for Nim.\"\nlicense       = \"MIT\"\n\nwhen defined(windows):\n  installExt     = @[\"nim\", \"c\", \"h\", \"s\"]\n\n# Dependencies\nrequires \"nim >= 0.10.0\"\n",
"https://github.com/jiro4989/gameoflife": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"gameoflife is library for Game of Life.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"gameoflife\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\ntask docs, \"Generate document\":\n  exec \"nimble doc src/gameoflife.nim -o:docs/gameoflife.html\"\n\ntask examples, \"Build examples (not execute)\":\n  for d in [\"blinker\", \"glider\", \"read_file\"]:\n    withDir \"examples/\" & d:\n      exec \"nim c main.nim\"\n      exec \"echo ---------\"\n\ntask ci, \"Run CI tasks\":\n  exec \"nimble test\"\n  exec \"nimble docs\"\n  exec \"nimble examples\"\n  exec \"nimble buildjs\"\n\ntask buildjs, \"Build JS library\":\n  exec \"nimble js -o:docs/js/gameoflife_js.js js/gameoflife_js.nim\"\n",
"https://github.com/Akito13/nim-fletcher": "version     = \"0.3.1\"\nauthor      = \"Akito\"\ndescription = \"Implementation of the Fletcher checksum algorithm.\"\nlicense     = \"GPLv3+\"\n\nrequires \"nim >= 0.20.0\"\nskipDirs    = @[\"utils\"]\nskipFiles   = @[\"README.md\"]\n\ntask manualtest, \"Runs the manual test.\":\n  exec \"nim cc -r tests/manualtest.nim\"\ntask configure, \"Creates nim.cfg for optimized builds.\":\n  exec \"nim utils/makenimcfg.nims\"\ntask clean, \"Removes nim.cfg.\":\n  exec \"nim utils/clean.nims\"",
"https://github.com/binhonglee/wings": "# Package\n\nversion      = \"0.0.6\"\nauthor       = \"BinHong Lee\"\ndescription  = \"A simple cross language struct and enum file generator.\"\nlicense      = \"MIT\"\nskipDirs     = @[\"examples\"]\nbin          = @[\"wings\", \"staticlang\"]\nsrcDir       = \"src/main\"\ninstallExt   = @[\"nim\"]\n\n# While it should still work for any nim version over 1.0.0, its only actively\n# tested against 1.4.0 due to some changes in 1.4.0 causing some inconsistency\n# in the generated code (breaking CI).\nrequires \"nim >= 1.4.0\"\nrequires \"stones#devel\"\n\ntask genFile, \"Generate file(s)\":\n  exec \"nimble build\"\n  var start = false\n  var temp: string = \"\"\n  for i in countup(0, paramCount(), 1):\n    if start:\n      temp &= \" \" & paramStr(i)\n    elif paramStr(i) == \"genFile\":\n      start = true\n  exec \"./wings\" & temp\n",
"https://raw.githubusercontent.com/status-im/nim-eth/master/eth.nimble": "version       = \"1.0.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum Common library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"nimcrypto\",\n         \"stint\",\n         \"secp256k1\",\n         \"rocksdb\",\n         \"chronos\",\n         \"chronicles\",\n         \"stew\",\n         \"nat_traversal\",\n         \"metrics\",\n         \"sqlite3_abi\",\n         \"confutils\",\n         \"testutils\"\n\nproc runTest(path: string, release: bool = true) =\n  echo \"\\nRunning: \", path\n  let releaseMode = if release: \"-d:release\" else: \"\"\n  exec \"nim c -r \" & releaseMode &\n    \" -d:chronicles_log_level=ERROR --verbosity:0 --hints:off \" & path\n  rmFile path\n\nproc runKeyfileTests() =\n  runTest(\"tests/keyfile/all_tests\")\n\ntask test_keyfile, \"run keyfile tests\":\n  runKeyfileTests()\n\nproc runKeysTests() =\n  runTest(\"tests/keys/all_tests\")\n\ntask test_keys, \"run keys tests\":\n  runKeysTests()\n\nproc runP2pTests() =\n  for filename in [\n      \"les/test_flow_control\",\n      \"test_auth\",\n      \"test_crypt\",\n      \"test_discovery\",\n      \"test_ecies\",\n      \"test_enode\",\n      \"test_rlpx_thunk\",\n      \"test_shh\",\n      \"test_shh_config\",\n      \"test_shh_connect\",\n      \"test_protocol_handlers\",\n      \"test_enr\",\n      \"test_hkdf\",\n      \"test_lru\",\n      \"test_ip_vote\",\n      \"test_discoveryv5\",\n      \"test_discoveryv5_encoding\",\n      \"test_routing_table\"\n    ]:\n    runTest(\"tests/p2p/\" & filename)\n\ntask test_p2p, \"run p2p tests\":\n  runP2pTests()\n\nproc runRlpTests() =\n  # workaround for github action CI\n  # mysterious crash on windows-2019 64bit mode\n  # cannot reproduce locally on windows-2019\n  # running in virtualbox\n  let releaseMode = if existsEnv\"PLATFORM\":\n                      getEnv\"PLATFORM\" != \"windows-amd64\"\n                    else: true\n\n  runTest(\"tests/rlp/all_tests\", releaseMode)\n\ntask test_rlp, \"run rlp tests\":\n  runRlpTests()\n\nproc runTrieTests() =\n  runTest(\"tests/trie/all_tests\")\n\ntask test_trie, \"run trie tests\":\n  runTrieTests()\n\nproc runDbTests() =\n  runTest(\"tests/db/all_tests\")\n\ntask test_db, \"run db tests\":\n  runDbTests()\n\ntask test, \"run tests\":\n  for filename in [\n      \"test_bloom\",\n    ]:\n    runTest(\"tests/\" & filename)\n\n  runKeyfileTests()\n  runKeysTests()\n  runP2pTests()\n  runRlpTests()\n  runTrieTests()\n  runDbTests()\n\nproc runDiscv5Tests() =\n  for filename in [\n      \"test_enr\",\n      \"test_hkdf\",\n      \"test_lru\",\n      \"test_ip_vote\",\n      \"test_discoveryv5\",\n      \"test_discoveryv5_encoding\",\n      \"test_routing_table\"\n    ]:\n    runTest(\"tests/p2p/\" & filename)\n\ntask test_discv5, \"run tests of discovery v5 and its dependencies\":\n  runKeysTests()\n  runRlpTests()\n  runDiscv5Tests()\n",
"https://raw.githubusercontent.com/daehee/ago/master/ago.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Daehee\"\ndescription   = \"Time ago in words in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n",
"https://raw.githubusercontent.com/dvolk/gnuplot.nim/master/gnuplot.nimble": "mode = ScriptMode.Verbose\n\n# Package\npackageName = \"gnuplot\"\nversion = \"0.6\"\nauthor = \"dvolk\"\ndescription = \"Interface to Gnuplot\"\nlicense = \"MIT\"\nskipDirs = @[\"examples\"]\n\n# Deps\nrequires \"nim >= 0.9.2\"\n\nwhen defined(nimdistros):\n  import distros\n  foreignDep \"gnuplot\"\n",
"https://github.com/theAkito/nim-couchdb": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Akito <the@akito.ooo>\"\ndescription   = \"Easily and comfortably access your CouchDB.\"\nlicense       = \"GPL-3.0-or-later\"\nskipDirs      = @[\"tasks\"]\nskipFiles     = @[\"README.md\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n\n\n# Tasks\n\ntask intro, \"Initialize project. Run only once at first pull.\":\n  exec \"git submodule add https://github.com/theAkito/nim-tools.git tasks || true\"\n  exec \"git submodule update --init --recursive\"\n  exec \"git submodule update --recursive --remote\"\n  exec \"nimble configure\"\ntask configure, \"Configure project. Run whenever you continue contributing to this project.\":\n  exec \"git fetch --all\"\n  exec \"nimble check\"\n  exec \"nimble --silent refresh\"\n  exec \"nimble install --accept --depsOnly\"\n  exec \"git status\"\ntask fbuild, \"Build project.\":\n  exec \"\"\"nim c \\\n            --define:danger \\\n            --opt:speed \\\n            --out:couchdb \\\n            couchdb\n       \"\"\"\ntask dbuild, \"Debug Build project.\":\n  exec \"\"\"nim c \\\n            --define:mode_debug \\\n            --debuginfo:on \\\n            --out:couchdb \\\n            couchdb\n       \"\"\"\ntask makecfg, \"Create nim.cfg for optimized builds.\":\n  exec \"nim tasks/cfg_optimized.nims\"\ntask clean, \"Removes nim.cfg.\":\n  exec \"nim tasks/cfg_clean.nims\"\n",
"https://raw.githubusercontent.com/al-bimani/eventemitter/master/eventemitter.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"al-bimani\"\ndescription   = \"event emitter for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"cpp\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/jackhftang/vaultclient.nim/master/vaultclient.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Jack Tang\"\ndescription   = \"Hashicorp Vault HTTP Client\"\nlicense       = \"MIT\"\nbackend       = \"c\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"vaultclient.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    # print current version\n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\nproc renamePackage(fname, tname: string) =\n  let nimbleFile = tname & \".nimble\"\n  mvFile(\"src/\" & fname & \".nim\", \"src/\" & tname & \".nim\")\n  mvFile(fname & \".nimble\", nimbleFile)\n  let t1 = readFile(nimbleFile)\n  let t2 = t1.replace(\"vaultclient\", tname)\n  writeFile(nimbleFile, t2)\n\ntask rename, \"rename package\":\n  let pname = paramStr( paramCount() )\n  if pname == \"rename\":\n    echo \"no package name provided\"\n    quit 1\n  else:\n    withDir thisDir():\n      renamePackage(\"vaultclient\", pname)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html --project src/vaultclient.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://github.com/dom96/nimbox": "# vim: ft=nim\nimport strutils\n\nversion     = \"0.1.0\"\nauthor      = \"Samadi van Koten\"\ndescription = \"A Rustbox-inspired termbox wrapper\"\nlicense     = \"MIT\"\nskipDirs    = @[\"examples\"]\nskipFiles   = @[\"nimbox/.keep\"]\n\nrequires \"nim >= 0.14.3\"\n\ntask wrap, \"Create low-level termbox wrapper\":\n  when defined(windows):\n    echo \"\\x1B[33mNimbox doesn't work on Windows, sorry!\\x1B[0m\"\n    quit 1\n  elif not defined(linux):\n    echo \"\\x1B[31mNimbox has not been tested on \" & hostOS & \". Proceed with caution!\\x1B[0m\"\n\n  # Fix integer types\n  var buf = \"\"\"#ifdef C2NIM\n  #mangle uint8_t uint8\n  #mangle uint16_t uint16\n  #mangle uint32_t uint32\n  #mangle int8_t int8\n  #mangle int16_t int16\n  #mangle int32_t int32\n  #endif\n  \"\"\"\n\n  var skip = false\n\n  var termbox = readFile(\"/usr/include/termbox.h\")\n  for line in termbox.splitLines():\n    if skip:\n      if line.startsWith(\"#endif\"):\n        skip = false\n    elif line.startsWith(\"#if __GNUC__\"):\n      skip = true\n    else:\n      if line.startsWith(\"SO_IMPORT \"):\n        buf &= line.substr(10)\n      else:\n        buf &= line\n      buf &= \"\\n\"\n\n  writeFile(\"/tmp/termbox.h\", buf)\n\n  exec \"c2nim --header --skipcomments --ref --nep1 /tmp/termbox.h -o:nimbox/termbox.nim\"\n\n  var nimbuf = \"{.passl: \\\"-Wl,-Bstatic -ltermbox -Wl,-Bdynamic\\\", emit: \\\"typedef struct tb_event tb_event;\\\".}\\n\"\n  nimbuf &= readFile(\"nimbox/termbox.nim\")\n  writeFile(\"nimbox/termbox.nim\", nimbuf)\n\n",
"https://github.com/zer0-star/matsuri": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"zer0-star\"\ndescription   = \"Useful Variant Type and Powerful Pattern Matching for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/niv/neverwinter.nim/master/neverwinter.nimble": "import sequtils, os, strutils\n\nversion       = \"1.4.2\"\nauthor        = \"Bernhard Stöckner <n@e-ix.net>\"\ndescription   = \"Neverwinter Nights 1: Enhanced Edition data accessor library and utilities\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 1.0.8\"\n\ninstallDirs = @[\"neverwinter\"]\n\nbinDir = \"bin/\"\nbin = listFiles(thisDir()).\n  mapIt(it.splitFile).\n  filterIt(it.name.startsWith(\"nwn_\") and it.ext == \".nim\").\n  mapIt(it.name)\n\ntask clean, \"Remove compiled binaries and temporary data\":\n  for b in bin:\n    rmFile(binDir / b)\n    rmFile(binDir / b & \".exe\")\n  rmdir(nimcacheDir())\n",
"https://github.com/kixixixixi/camelize": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"kixixixixi\"\ndescription   = \"Convert json node to camelcase\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/leonardoce/nim-clickhouse": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Leonardo Cecchi <leonardo.cecchi@gmail.com>\"\ndescription   = \"ClickHouse Nim interface\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-usigar/master/usigar.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Juan Carlos\"\ndescription   = \"USIG Argentina Government MultiSync API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/sealmove/bitstreams": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"Interface for reading per bits\"\nlicense       = \"MIT\"",
"https://api.github.com/repos/twist-vector/nhsl/contents": "[{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"b24e4b976d43d29f8e68f355423ce4c261d271d1\",\"size\":1307,\"url\":\"https://api.github.com/repos/twist-vector/nhsl/contents/README.md?ref=master\",\"html_url\":\"https://github.com/twist-vector/nhsl/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/twist-vector/nhsl/git/blobs/b24e4b976d43d29f8e68f355423ce4c261d271d1\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nhsl/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nhsl/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nhsl/git/blobs/b24e4b976d43d29f8e68f355423ce4c261d271d1\",\"html\":\"https://github.com/twist-vector/nhsl/blob/master/README.md\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"48a14e22bd87c74de31478c6be760e7bda0e531a\",\"size\":0,\"url\":\"https://api.github.com/repos/twist-vector/nhsl/contents/examples?ref=master\",\"html_url\":\"https://github.com/twist-vector/nhsl/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/twist-vector/nhsl/git/trees/48a14e22bd87c74de31478c6be760e7bda0e531a\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nhsl/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nhsl/git/trees/48a14e22bd87c74de31478c6be760e7bda0e531a\",\"html\":\"https://github.com/twist-vector/nhsl/tree/master/examples\"}},{\"name\":\"hessian.nim\",\"path\":\"hessian.nim\",\"sha\":\"a96f4c95a70530ed2f0b92c9e71fd3e5fd5492d4\",\"size\":1219,\"url\":\"https://api.github.com/repos/twist-vector/nhsl/contents/hessian.nim?ref=master\",\"html_url\":\"https://github.com/twist-vector/nhsl/blob/master/hessian.nim\",\"git_url\":\"https://api.github.com/repos/twist-vector/nhsl/git/blobs/a96f4c95a70530ed2f0b92c9e71fd3e5fd5492d4\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nhsl/master/hessian.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nhsl/contents/hessian.nim?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nhsl/git/blobs/a96f4c95a70530ed2f0b92c9e71fd3e5fd5492d4\",\"html\":\"https://github.com/twist-vector/nhsl/blob/master/hessian.nim\"}},{\"name\":\"nhsl.nimble\",\"path\":\"nhsl.nimble\",\"sha\":\"5f7550b6cfc545e46f6fa625508aa7f1c626c60c\",\"size\":252,\"url\":\"https://api.github.com/repos/twist-vector/nhsl/contents/nhsl.nimble?ref=master\",\"html_url\":\"https://github.com/twist-vector/nhsl/blob/master/nhsl.nimble\",\"git_url\":\"https://api.github.com/repos/twist-vector/nhsl/git/blobs/5f7550b6cfc545e46f6fa625508aa7f1c626c60c\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nhsl/master/nhsl.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nhsl/contents/nhsl.nimble?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nhsl/git/blobs/5f7550b6cfc545e46f6fa625508aa7f1c626c60c\",\"html\":\"https://github.com/twist-vector/nhsl/blob/master/nhsl.nimble\"}},{\"name\":\"private\",\"path\":\"private\",\"sha\":\"c4c06ec1051538fcabb824831cf060f26b4a5ee2\",\"size\":0,\"url\":\"https://api.github.com/repos/twist-vector/nhsl/contents/private?ref=master\",\"html_url\":\"https://github.com/twist-vector/nhsl/tree/master/private\",\"git_url\":\"https://api.github.com/repos/twist-vector/nhsl/git/trees/c4c06ec1051538fcabb824831cf060f26b4a5ee2\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nhsl/contents/private?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nhsl/git/trees/c4c06ec1051538fcabb824831cf060f26b4a5ee2\",\"html\":\"https://github.com/twist-vector/nhsl/tree/master/private\"}},{\"name\":\"test\",\"path\":\"test\",\"sha\":\"74411821dee4c9fe882a0da0318ddb259ca192d9\",\"size\":0,\"url\":\"https://api.github.com/repos/twist-vector/nhsl/contents/test?ref=master\",\"html_url\":\"https://github.com/twist-vector/nhsl/tree/master/test\",\"git_url\":\"https://api.github.com/repos/twist-vector/nhsl/git/trees/74411821dee4c9fe882a0da0318ddb259ca192d9\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nhsl/contents/test?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nhsl/git/trees/74411821dee4c9fe882a0da0318ddb259ca192d9\",\"html\":\"https://github.com/twist-vector/nhsl/tree/master/test\"}}]",
"https://raw.githubusercontent.com/docopt/docopt.nim/master/docopt.nimble": "version = \"0.6.8\"\nauthor = \"Oleh Prypin\"\ndescription = \"Command line option parser that will make you smile\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\nrequires \"nim >= 0.15.0\"\nrequires \"regex >= 0.11.1\"\n\ntask test, \"Test\":\n  exec \"nimble c --verbosity:0 -r -y test/test\"\n  for f in listFiles(\"examples\"):\n    if f[^4..^1] == \".nim\": exec \"nim compile --verbosity:0 --hints:off \" & f\n",
"https://raw.githubusercontent.com/theAkito/nim-validateip/master/validateip.nimble": "# Package\n\nversion     = \"0.1.2\"\nauthor      = \"Akito <the@akito.ooo>\"\ndescription = \"Nim module for checking if a provided string is actually a correct IP address. Supports detection of Class A to D of IPv4 addresses. IPv6 support planned.\"\nlicense     = \"GPL-3.0-or-later\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"",
"https://raw.githubusercontent.com/bung87/daemon/master/daemonim.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"zhoupeng\"\ndescription   = \"daemonizer for Unix, Linux and OS X\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/NimParsers/parsetoml/master/parsetoml.nimble": "# Packages\n\nversion       = \"0.5.0\"\nauthor        = \"Maurizio Tomasi <ziotom78 .at. gmail.com>\"\ndescription   = \"Toml parser library for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"decoder\"]\n\n# Deps\n\nrequires \"nim >= 0.18.0\"\n\nfrom os import `/`, expandTilde\n\ntask run_toml_test, \"Validates parsetoml using toml-test\":\n  exec(\"nim c -d:release decoder/decoder.nim\")\n  # Needs \"go\" executable to be present in PATH.\n  # For Travis, set \"language:\" to \"go\".\n  let\n    goPath = getEnv(\"GOPATH\")\n    tomlTestRepo = \"github.com/BurntSushi/toml-test\"\n  doAssert goPath != \"\"\n  exec(\"go get -u -v \" & tomlTestRepo)\n  exec((goPath / \"bin\" / \"toml-test\") & \" \" & \"decoder/decoder\")\n\ntask run_new_toml_test, \"Validates parsetoml using toml-test from sgarciac\":\n  exec(\"nim c -d:release -d:newtestsuite decoder/decoder.nim\")\n  # Needs \"go\" executable to be present in PATH.\n  # For Travis, set \"language:\" to \"go\".\n  let\n    goPath = getEnv(\"GOPATH\")\n    tomlTestRepo = \"github.com/sgarciac/toml-test\"\n  doAssert goPath != \"\"\n  exec(\"go get -u -v \" & tomlTestRepo)\n  exec(\"cp -r \" & (goPath / \"src\" / \"github.com\" / \"sgarciac\" / \"toml-test\") &\n    \" \" & (goPath / \"src\" / \"github.com\" / \"BurntSushi\" / \"toml-test\"))\n  exec((goPath / \"bin\" / \"toml-test\") & \" \" & \"decoder/decoder\")\n",
"https://raw.githubusercontent.com/rustomax/ndf/master/ndf.nimble": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"Max Skybin\"\ndescription   = \"Duplicate files finder\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"ndf\"]\n\n# Dependencies\nrequires \"nim >= 1.4.2\", \"docopt >= 0.6.5, murmurhash >= 0.4.0\"",
"https://github.com/andreaferretti/spills": "mode = ScriptMode.Verbose\n\nversion       = \"0.1.3\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Disk-backed sequences\"\nlicense       = \"Apache2\"\nskipFiles      = @[\"test.nim\"]\n\nrequires \"nim >= 0.13.0\"\n\ntask tests, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"test.nim\"\n\ntask test, \"run tests\":\n  setCommand \"tests\"\n\ntask gendoc, \"generate documentation\":\n  --docSeeSrcUrl: https://github.com/andreaferretti/spills/blob/master\n  --project\n  setCommand \"doc2\", \"spills\"",
"https://raw.githubusercontent.com/KayraG/nio/master/nio.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"nio\"\ndescription   = \"A new server library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"cpp\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/vegansk/dbschema/master/dbschema.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Anatoly Galiulin\"\ndescription   = \"Database scheme migration library for Nim language\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"nimboost >= 0.5.3\", \"nimfp >= 0.4.2\"\n",
"https://raw.githubusercontent.com/disruptek/meow/master/meow.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance\"\ndescription   = \"meowhash wrapper for Nim\"\nlicense       = \"MIT\"\n\nbin = @[\"meow\"]\ninstallFiles = @[\"meow.nim\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.6.8\"\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\":\n    buildDocs(@[\"meow.nim\"], \"build/htmldocs\")\nelse:\n  task docs, \"Do nothing\": discard\n",
"https://github.com/NimParsers/parsetoml.git": "# Packages\n\nversion       = \"0.5.0\"\nauthor        = \"Maurizio Tomasi <ziotom78 .at. gmail.com>\"\ndescription   = \"Toml parser library for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"decoder\"]\n\n# Deps\n\nrequires \"nim >= 0.18.0\"\n\nfrom os import `/`, expandTilde\n\ntask run_toml_test, \"Validates parsetoml using toml-test\":\n  exec(\"nim c -d:release decoder/decoder.nim\")\n  # Needs \"go\" executable to be present in PATH.\n  # For Travis, set \"language:\" to \"go\".\n  let\n    goPath = getEnv(\"GOPATH\")\n    tomlTestRepo = \"github.com/BurntSushi/toml-test\"\n  doAssert goPath != \"\"\n  exec(\"go get -u -v \" & tomlTestRepo)\n  exec((goPath / \"bin\" / \"toml-test\") & \" \" & \"decoder/decoder\")\n\ntask run_new_toml_test, \"Validates parsetoml using toml-test from sgarciac\":\n  exec(\"nim c -d:release -d:newtestsuite decoder/decoder.nim\")\n  # Needs \"go\" executable to be present in PATH.\n  # For Travis, set \"language:\" to \"go\".\n  let\n    goPath = getEnv(\"GOPATH\")\n    tomlTestRepo = \"github.com/sgarciac/toml-test\"\n  doAssert goPath != \"\"\n  exec(\"go get -u -v \" & tomlTestRepo)\n  exec(\"cp -r \" & (goPath / \"src\" / \"github.com\" / \"sgarciac\" / \"toml-test\") &\n    \" \" & (goPath / \"src\" / \"github.com\" / \"BurntSushi\" / \"toml-test\"))\n  exec((goPath / \"bin\" / \"toml-test\") & \" \" & \"decoder/decoder\")\n",
"https://github.com/achesak/nim-subviewer": "[Package]\nname = \"subviewer\"\nversion = \"1.1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for parsing SubViewer subtitle files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://raw.githubusercontent.com/rockcavera/nim-dnsprotocol/master/dnsprotocol.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rockcavera\"\ndescription   = \"Domain Name System (DNS) protocol for Nim programming language\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"stew\"\n",
"https://github.com/nim-lang/c2nim": "version       = \"0.9.14\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"c2nim is a tool to translate Ansi C code to Nim.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"doc\"]\n\nskipExt = @[\"nim\"]\n\nbin = @[\"c2nim\"]\n\nrequires \"nim >= 0.19.0\"\n\nimport strutils\n\ntask test, \"runs c2nim tests\":\n  exec \"nimble build\"\n  exec \"nim c --run testsuite/tester.nim\"\n\ntask docs, \"build c2nim's docs\":\n  exec \"nim rst2html --putenv:c2nimversion=$1 doc/c2nim.rst\" % version\n",
"https://raw.githubusercontent.com/planetis-m/manu/master/manu.nimble": "# mode = ScriptMode.Verbose\n\npackageName   = \"manu\"\nversion       = \"2.2.1\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"Nim Matrix library\"\nlicense       = \"MIT\"\nskipDirs = @[\"tests\", \"docs\", \"examples\", \"experiments\"]\n\nrequires \"nim >= 1.5.0\"\n\nswitch \"forceBuild\"\n\nproc configForTests() =\n   switch \"hints\", \"off\"\n   switch \"linedir\", \"on\"\n   switch \"stacktrace\", \"on\"\n   switch \"linetrace\", \"on\"\n   switch \"debuginfo\"\n   switch \"path\", \".\"\n   switch \"gc\", \"arc\"\n   switch \"run\"\n\ntask test, \"run tests\":\n   configForTests()\n   setCommand \"c\", \"tests/testMatrix.nim\"\n\ntask doc, \"generate documentation\":\n   switch \"project\"\n   #switch \"index\"\n   switch \"out\", \"docs/\"\n   switch \"git.url\", \"https://github.com/planetis-m/manu\"\n   #switch \"docSeeSrcUrl\", \"https://github.com/planetis-m/manu/tree/master\"\n   setCommand \"doc\", \"manu.nim\"\n\nafter doc:\n   switch \"out\", \"docs/index.html\"\n   setCommand \"buildIndex\", \"docs/\"\n",
"https://github.com/flyx/NimYAML": "# Package\n\nversion       = \"0.14.0\"\nauthor        = \"Felix Krause\"\ndescription   = \"YAML 1.2 implementation for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"bench\", \"doc\", \"server\", \"test\", \"tools\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/nitely/nim-regex/master/regex.nimble": "# Package\n\nversion = \"0.19.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Linear time regex matching\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipDirs = @[\"tests\", \"bench\", \"docs\"]\n\nrequires \"nim >= 0.19.6\"\nrequires \"unicodedb >= 0.7.2\"\n\ntask test, \"Test\":\n  exec \"nim c -r -o:bin/regex src/regex.nim\"\n  exec \"nim c -r -o:bin/litopt src/regex/litopt.nim\"\n  exec \"nim c -r tests/tests.nim\"\n  exec \"nim c -r -d:forceRegexAtRuntime tests/tests.nim\"\n  exec \"nim c -r -d:forceRegexAtRuntime -d:noRegexOpt tests/tests.nim\"\n  exec \"nim c -r -d:noRegexOpt tests/tests.nim\"\n  when (NimMajor, NimMinor, NimPatch) >= (0, 20, 2):\n    exec \"nim c -d:runTestAtCT tests/tests.nim\"\n  # js target should work in older versions, but\n  # the docker image for CI has it since Nim 1.0.4,\n  # so I'll only test it there\n  when (NimMajor, NimMinor, NimPatch) >= (1, 0, 4) and\n      (NimMajor, NimMinor) != (1, 4):  # issue #88\n    exec \"nim js -r src/regex.nim\"\n    exec \"nim js -r tests/tests.nim\"\n    exec \"nim js -r -d:forceRegexAtRuntime tests/tests.nim\"\n\n  # Test runnable examples\n  when (NimMajor, NimMinor) >= (1, 1):\n    exec \"nim doc -o:./docs/ugh/ugh.html ./src/regex.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/regex.nim\"\n",
"https://raw.githubusercontent.com/Adeohluwa/validator/master/validator.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Adeoluwa Adejumo\"\ndescription   = \"This library provides several functions to validate real world data types\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/jhbadger/nimbioseq": "# Package\n\nversion       = \"0.3.20181126\"\nauthor        = \"Jonathan Badger\"\ndescription   = \"Nim Library for sequence (protein/nucleotide) bioinformatics\"\nlicense       = \"BSD-3\"\nsrcDir        = \"src\"\nskipFiles     = @[\"checkFastq.nim\", \"extractFastx.nim\", \"kmerCount.nim\",\n                  \"seqSummary.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"zip >= 0.2.1\"\n",
"https://raw.githubusercontent.com/irskep/rexpaint_nim/master/rexpaint.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Steve Landey (irskep)\"\ndescription   = \"REXPaint .xp parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"zip >= 0.2.1\"\n",
"https://github.com/treeform/quickjwt": "# Package\nversion       = \"0.2.1\"\nauthor        = \"Andre von Houck\"\ndescription   = \"JSON Web Tokens for Nim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.1.1\"\n\n",
"https://raw.githubusercontent.com/genotrance/nimterop/master/nimterop.nimble": "# Package\n\nversion = \"0.6.13\"\nauthor      = \"genotrance\"\ndescription = \"C/C++ interop for Nim\"\nlicense     = \"MIT\"\n\nbin = @[\"nimterop/toast\", \"nimterop/loaf\"]\ninstallDirs = @[\"nimterop\"]\n\n# Dependencies\nrequires \"nim >= 0.20.2\", \"regex >= 0.15.0\", \"cligen >= 1.0.0\"\n\nimport nimterop/docs\nimport os\n\nproc execCmd(cmd: string) =\n  exec \"tests/timeit \" & cmd\n\nproc execTest(test: string, flags = \"\", runDocs = true) =\n  execCmd \"nim c --hints:off -f -d:checkAbi \" & flags & \" -r \" & test\n  let\n    # -d:checkAbi broken in cpp mode until post 1.2.0\n    cppAbi = when (NimMajor, NimMinor) >= (1, 3): \"-d:checkAbi \" else: \"\"\n  execCmd \"nim cpp --hints:off \" & cppAbi & flags & \" -r \" & test\n\n  if runDocs:\n    let docPath = \"build/html_\" & test.extractFileName.changeFileExt(\"\") & \"_docs\"\n    rmDir docPath\n    mkDir docPath\n    buildDocs(@[test], docPath, nimArgs = \"--hints:off \" & flags)\n\ntask buildTimeit, \"build timer\":\n  exec \"nim c --hints:off -d:danger tests/timeit\"\n\ntask buildLoaf, \"build loaf\":\n  execCmd(\"nim c --hints:off -d:danger nimterop/loaf.nim\")\n\ntask buildToast, \"build toast\":\n  execCmd(\"nim c --hints:off -d:danger nimterop/toast.nim\")\n\ntask bt, \"build toast\":\n  buildToastTask()\n\ntask btd, \"build toast\":\n  execCmd(\"nim c -g nimterop/toast.nim\")\n\ntask docs, \"Generate docs\":\n  buildDocs(@[\"nimterop/all.nim\"], \"build/htmldocs\")\n\ntask minitest, \"Test for Nim CI\":\n  exec \"nim c -f -d:danger nimterop/loaf.nim\"\n  exec \"nim c -f -d:danger nimterop/toast\"\n  exec \"nim c -f -d:checkAbi -r tests/tast2.nim\"\n  exec \"nim c -f -d:checkAbi -d:zlibJBB -d:zlibSetVer=1.2.11 -r tests/zlib.nim\"\n\ntask basic, \"Basic tests\":\n  execTest \"tests/tast2.nim\"\n  execTest \"tests/tast2.nim\", \"-d:NOHEADER\"\n  execTest \"tests/tast2.nim\", \"-d:NOHEADER -d:WRAPPED\"\n\n  execTest \"tests/tnimterop_c.nim\"\n  execTest \"tests/tnimterop_c.nim\", \"-d:FLAGS=\\\"-H\\\"\"\n\n  execCmd \"nim cpp --hints:off -f -r tests/tnimterop_cpp.nim\"\n  execCmd \"./nimterop/toast tests/toast.cfg tests/include/toast.h\"\n\ntask wrapper, \"Wrapper tests\":\n  execTest \"tests/tpcre.nim\"\n\n  when defined(Linux):\n    execTest \"tests/rsa.nim\"\n    execTest \"tests/rsa.nim\", \"-d:FLAGS=\\\"-H\\\"\"\n\n  # Platform specific tests\n  when defined(Windows):\n    execTest \"tests/tmath.nim\"\n    execTest \"tests/tmath.nim\",  \"-d:FLAGS=\\\"-H\\\"\"\n  if defined(OSX) or defined(Windows) or not existsEnv(\"TRAVIS\"):\n    execTest \"tests/tsoloud.nim\"\n    execTest \"tests/tsoloud.nim\",  \"-d:FLAGS=\\\"-H\\\"\"\n\ntask getheader, \"getHeader tests\":\n  withDir(\"tests\"):\n    exec \"nim e getheader.nims\"\n\ntask package, \"Wrapper package tests\":\n  if not existsEnv(\"APPVEYOR\"):\n    withDir(\"tests\"):\n      exec \"nim e wrappers.nims\"\n\ntask test, \"Test\":\n  rmFile(\"tests/timeit.txt\")\n\n  buildTimeitTask()\n  buildLoafTask()\n  buildToastTask()\n\n  basicTask()\n\n  wrapperTask()\n\n  getheaderTask()\n\n  packageTask()\n\n  docsTask()\n\n  echo readFile(\"tests/timeit.txt\")\n",
"https://raw.githubusercontent.com/guevara-chan/conio/master/conio.nimble": "# Package\r\n\r\nversion       = \"0.1.0\"\r\nauthor        = \"Guevara-chan\"\r\ndescription   = \".NET-inspired lightweight terminal library\"\r\nlicense       = \"MIT\"\r\nsrcDir        = \"src\"\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.18.0\"",
"https://raw.githubusercontent.com/stefantalpalaru/golib-nim/master/golib.nimble": "[Package]\nname: \"golib\"\nversion: \"0.0.1\"\nauthor: \"Ștefan Talpalaru <stefantalpalaru@yahoo.com>\"\ndescription: \"Bindings for golib - a library that (ab)uses gccgo to bring Go's channels and goroutines to the rest of the world\"\nlicense: \"BSD\"\nsrcDir: \"src\"\n\n[Deps]\nRequires: \"nim > 0.19.0\"\n\n",
"https://github.com/flaviut/optional_t": "[Package]\nname        = \"optional_t\"\nversion     = \"1.2.0\"\nauthor      = \"Flaviu Tamas\"\ndescription = \"A simple Option[T] library\"\nlicense     = \"MIT\"\nsrcdir      = \"src\"\n\n[Deps]\nRequires: \"nimrod >= 0.10.1\"\n",
"https://raw.githubusercontent.com/krux02/nimAntTweakBar/master/AntTweakBar.nimble": "# Package\n\nversion       = \"1.0.2\"\nauthor        = \"Arne Döring\"\ndescription   = \"nim wrapper around the AntTweakBar c library\"\nlicense       = \"MIT\"\ninstallFiles  = @[\n  \"AntTweakBar.nim\",\n  \"cAntTweakBar/include/AntTweakBar.h\",\n  \"cAntTweakBar/src/TwEventGLFW.c\",\n  \"cAntTweakBar/src/TwEventGLUT.c\",\n  \"cAntTweakBar/src/TwEventSDL12.c\",\n  \"cAntTweakBar/src/TwEventSDL13.c\",\n  \"cAntTweakBar/src/TwEventSDL20.c\",\n  \"cAntTweakBar/src/TwEventSDL.c\",\n  \"cAntTweakBar/src/TwEventWin.c\",\n  \"cAntTweakBar/src/TwEventX11.c\",\n  \"cAntTweakBar/src/AntPerfTimer.h\",\n  \"cAntTweakBar/src/d3d10vs2003.h\",\n  \"cAntTweakBar/src/LoadOGLCore.h\",\n  \"cAntTweakBar/src/LoadOGL.h\",\n  \"cAntTweakBar/src/MiniGLFW.h\",\n  \"cAntTweakBar/src/MiniGLUT.h\",\n  \"cAntTweakBar/src/MiniSDL12.h\",\n  \"cAntTweakBar/src/MiniSDL13.h\",\n  \"cAntTweakBar/src/MiniSDL20.h\",\n  \"cAntTweakBar/src/MiniSFML16.h\",\n  \"cAntTweakBar/src/resource.h\",\n  \"cAntTweakBar/src/TwBar.h\",\n  \"cAntTweakBar/src/TwColors.h\",\n  \"cAntTweakBar/src/TwDirect3D10.h\",\n  \"cAntTweakBar/src/TwDirect3D11.h\",\n  \"cAntTweakBar/src/TwDirect3D9.h\",\n  \"cAntTweakBar/src/TwFonts.h\",\n  \"cAntTweakBar/src/TwGraph.h\",\n  \"cAntTweakBar/src/TwMgr.h\",\n  \"cAntTweakBar/src/TwOpenGLCore.h\",\n  \"cAntTweakBar/src/TwOpenGL.h\",\n  \"cAntTweakBar/src/TwPrecomp.h\",\n  \"cAntTweakBar/src/LoadOGLCore.cpp\",\n  \"cAntTweakBar/src/LoadOGL.cpp\",\n  \"cAntTweakBar/src/TwBar.cpp\",\n  \"cAntTweakBar/src/TwColors.cpp\",\n  \"cAntTweakBar/src/TwDirect3D10.cpp\",\n  \"cAntTweakBar/src/TwDirect3D11.cpp\",\n  \"cAntTweakBar/src/TwDirect3D9.cpp\",\n  \"cAntTweakBar/src/TwEventSFML.cpp\",\n  \"cAntTweakBar/src/TwFonts.cpp\",\n  \"cAntTweakBar/src/TwMgr.cpp\",\n  \"cAntTweakBar/src/TwOpenGLCore.cpp\",\n  \"cAntTweakBar/src/TwOpenGL.cpp\",\n  \"cAntTweakBar/src/TwPrecomp.cpp\",\n  \"cAntTweakBar/src/res/cur00000.cur\",\n  \"cAntTweakBar/src/res/cur00001.cur\",\n  \"cAntTweakBar/src/res/cur00002.cur\",\n  \"cAntTweakBar/src/res/cur00003.cur\",\n  \"cAntTweakBar/src/res/cur00004.cur\",\n  \"cAntTweakBar/src/res/cur00005.cur\",\n  \"cAntTweakBar/src/res/cur00006.cur\",\n  \"cAntTweakBar/src/res/cur00007.cur\",\n  \"cAntTweakBar/src/res/cur00008.cur\",\n  \"cAntTweakBar/src/res/cur00009.cur\",\n  \"cAntTweakBar/src/res/cur00010.cur\",\n  \"cAntTweakBar/src/res/cur00011.cur\",\n  \"cAntTweakBar/src/res/cur00012.cur\",\n  \"cAntTweakBar/src/res/cur00013.cur\",\n  \"cAntTweakBar/src/res/curs00.pbm\",\n  \"cAntTweakBar/src/res/curs01.pbm\",\n  \"cAntTweakBar/src/res/curs02.pbm\",\n  \"cAntTweakBar/src/res/curs03.pbm\",\n  \"cAntTweakBar/src/res/curs04.pbm\",\n  \"cAntTweakBar/src/res/curs05.pbm\",\n  \"cAntTweakBar/src/res/curs06.pbm\",\n  \"cAntTweakBar/src/res/curs07.pbm\",\n  \"cAntTweakBar/src/res/curs08.pbm\",\n  \"cAntTweakBar/src/res/curs09.pbm\",\n  \"cAntTweakBar/src/res/curs10.pbm\",\n  \"cAntTweakBar/src/res/curs11.pbm\",\n  \"cAntTweakBar/src/res/curs12.pbm\",\n  \"cAntTweakBar/src/res/curs13.pbm\",\n  \"cAntTweakBar/src/res/FontChars.txt\",\n  \"cAntTweakBar/src/res/FontFixed1.pgm\",\n  \"cAntTweakBar/src/res/FontLargeAA.pgm\",\n  \"cAntTweakBar/src/res/FontNormalAA.pgm\",\n  \"cAntTweakBar/src/res/FontNormal.pgm\",\n  \"cAntTweakBar/src/res/FontSmall.pgm\",\n  \"cAntTweakBar/src/res/mask00.pbm\",\n  \"cAntTweakBar/src/res/mask01.pbm\",\n  \"cAntTweakBar/src/res/mask02.pbm\",\n  \"cAntTweakBar/src/res/mask03.pbm\",\n  \"cAntTweakBar/src/res/mask04.pbm\",\n  \"cAntTweakBar/src/res/mask05.pbm\",\n  \"cAntTweakBar/src/res/mask06.pbm\",\n  \"cAntTweakBar/src/res/mask07.pbm\",\n  \"cAntTweakBar/src/res/mask08.pbm\",\n  \"cAntTweakBar/src/res/mask09.pbm\",\n  \"cAntTweakBar/src/res/mask10.pbm\",\n  \"cAntTweakBar/src/res/mask11.pbm\",\n  \"cAntTweakBar/src/res/mask12.pbm\",\n  \"cAntTweakBar/src/res/mask13.pbm\",\n  \"cAntTweakBar/src/res/RuFont.txt\",\n  \"cAntTweakBar/src/res/TwXCursors.h\"\n]\n# Dependencies\n\nrequires \"nim >= 0.12.0\"\n",
"https://github.com/jboy/nim-pymod": "[Package]\nname          = \"pymod\"\nversion       = \"0.1.0\"\nauthor        = \"SnapDisco Pty Ltd, Australia.\"\ndescription   = \"Auto-generate a Python module that wraps a Nim module.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim > 0.12.0\"\n",
"https://github.com/GULPF/systimes": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"An alternative DateTime implementation for Nim\"\nlicense       = \"MIT\"\n\nskipFiles = @[\"tests.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\ntask docs, \"Generate docs\":\n    exec \"nim doc -o:docs/systimes.html systimes.nim\"",
"https://github.com/abbeymart/mctranslog": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Abi Akindele [abbeymart]\"\ndescription   = \"mctranslog - Transaction Log Package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipFiles     = @[\"project.md\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"mcresponse >= 0.1.0\"\nrequires \"mcdb >= 0.1.3\"\n",
"https://raw.githubusercontent.com/haxscramper/nimtraits/master/nimtraits.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"haxscramper\"\ndescription   = \"Trait system for nim\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"hmisc\", \"hpprint\", \"hnimast\"\n",
"https://raw.githubusercontent.com/Double-oxygeN/z3nim/master/z3nim.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Double-oxygeN\"\ndescription   = \"Z3 binding for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n\n\n# Tasks\n\ntask docgen, \"Generate documentation\":\n  exec \"nim doc --outDir:docs --git.url:https://github.com/Double-oxygeN/z3nim --git.commit:master src/z3nim\"\n  exec \"find docs -name '*.html' -exec sed \\\"s/-webkit-filter: \\\\([^;][^;]*\\\\)/-webkit-filter: \\\\1;\\\\n  filter: \\\\1/\\\" -i '{}' \\\\;\"\n",
"https://github.com/nitely/nim-normalize": "# Package\n\nversion = \"0.8.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Unicode normalization forms (tr15)\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"unicodedb >= 0.7\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/normalize\"\n  exec \"nim c -r tests/tests\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/normalize.nim\"\n",
"https://github.com/rafmst/miter": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Rafael Morais\"\ndescription   = \"Ratio calculator on your terminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"miter\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/olliNiinivaara/GuildenStern/master/guildenstern.nimble": "version       = \"1.0.0\"\nauthor        = \"Olli\"\ndescription   = \"Modular multithreading Linux HTTP server\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipDirs = @[\".github\", \"bench\", \"e2e-tests\"]\n\nrequires \"nim >= 1.4.2\"\n\ntask test, \"run all tests\":\n  cd(\"tests\")\n  exec \"nim c -r --threads:on --d:threadsafe test_ctxheader.nim\"\n  exec \"nim c --d:release --threads:on --d:threadsafe test_wrk.nim\"\n  exec \"./test_wrk &\"\n  cd(\"../bench/\")\n  let outStr = gorge(getCurrentDir() & \"/wrkbin -t8 -c8 -d10s --latency http://127.0.0.1:5050\")\n  exec \"curl http://127.0.0.1:5050/shutdown\"\n  echo outStr\n  if outStr.contains(\"Socket errors\") and not outStr.contains(\"read 0, write 0, timeout 0\"): quit(-1)\n",
"https://github.com/treeform/typography": "version       = \"0.7.4\"\nauthor        = \"treeform\"\ndescription   = \"Fonts, Typesetting and Rasterization for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.0\"\nrequires \"pixie >= 0.0.20\"\nrequires \"vmath >= 0.4.0\"\nrequires \"chroma >= 0.1.2\"\nrequires \"print >= 0.1.0\"\nrequires \"bumpy >= 1.0.0\"\nrequires \"flatty >= 0.1.3\"\n\ntask docs, \"Generate API documents\":\n  exec \"nimble doc --index:on --project --out:docs --hints:off src/typography.nim\"\n",
"https://github.com/ruivieira/nim-mentat": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Rui Vieira\"\ndescription   = \"Machine learning library for Nim\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\nrequires \"science\"",
"https://raw.githubusercontent.com/arnetheduck/nim-result/master/result.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Jacek Sieka\"\ndescription   = \"Friendly, exception-free value-or-error returns, similar to Option[T]\"\nlicense       = \"MIT\"\nskipDirs      = @[\"benchmarks\"]\ninstallFiles  = @[\"result.nim\", \"results.nim\"]\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r result\"\n",
"https://raw.githubusercontent.com/iourinski/porter/master/porter.nimble": "[Package]\n\nversion       = \"0.1.0\"\nauthor        = \"dmitri.iourinski\"\ndescription   = \"nim implementation of Porter\\'s stemmer, with a possibility to add new languagess\"\nlicense       = \"MIT\"\nbin           = \"porter\"\n[Dependencies]\nRequires: \"mutableseqs >= 0.1.0\"\nRequires: \"nim >= 0.15.2\"\n\n",
"https://github.com/treeform/ws": "# Package\n\nversion       = \"0.4.3\"\nauthor        = \"Andre von Houck\"\ndescription   = \"Simple WebSocket library for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim > 1.0.0\"\n",
"https://raw.githubusercontent.com/PMunch/jsonschema/master/jsonschema.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Schema verification of JSON data\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"ast_pattern_matching\"\n",
"https://raw.githubusercontent.com/andreaferretti/rosencrantz/master/rosencrantz.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"rosencrantz\"\nversion       = \"0.4.3\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Web server DSL\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\", \"htmldocs\"]\nskipFiles     = @[\"test.sh\"]\n\nrequires \"nim >= 0.19.0\"\n\n--forceBuild\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n\n\ntask server, \"compile server\":\n  configForTests()\n  switch(\"out\", \"tests/rosencrantz\")\n  setCommand \"c\", \"tests/server.nim\"\n\ntask client, \"run client\":\n  configForTests()\n  --run\n  setCommand \"c\", \"tests/client.nim\"\n\ntask gendoc, \"generate documentation\":\n  --docSeeSrcUrl: https://github.com/andreaferretti/rosencrantz/blob/master\n  --project\n  setCommand \"doc\", \"rosencrantz\"\n\ntask todo, \"run todo example\":\n  --path: \".\"\n  --run\n  setCommand \"c\", \"tests/todo.nim\"\n\ntask tests, \"run tests\":\n  exec \"./test.sh\"\n\ntask test, \"run tests\":\n  setCommand \"tests\"",
"https://raw.githubusercontent.com/subsetpark/ad/master/ad.nimble": "# Package\nversion       = \"0.7.3\"\nauthor        = \"Z. D. Smith\"\ndescription   = \"A simple RPN calculator\"\nlicense       = \"MIT\"\nbin           = @[\"ad\"]\nskipExt       = @[\"nim\"]\n\n# Deps\nrequires \"nim >= 1.2.0\"\nrequires \"bignum >= 0.2.5\"\n",
"https://raw.githubusercontent.com/sillibird/luhncheck/master/luhncheck.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"sillibird\"\ndescription   = \"Implementation of Luhn algorithm in nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/status-im/nim-testutils": "mode = ScriptMode.Verbose\n\npackageName   = \"testutils\"\nversion       = \"0.3.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A unittest framework\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\nbin           = @[\"ntu\"]\n#srcDir        = \"testutils\"\n\nrequires \"nim >= 1.0.2\"\n\nproc execCmd(cmd: string) =\n  echo \"execCmd: \" & cmd\n  exec cmd\n\nproc execTest(test: string) =\n  let\n    test = \"ntu test \" & test\n  when true:\n    execCmd \"nim c           -f -r \" & test\n    execCmd \"nim c   -d:release -r \" & test\n    execCmd \"nim c   -d:danger  -r \" & test\n    execCmd \"nim cpp            -r \" & test\n    execCmd \"nim cpp -d:danger  -r \" & test\n    #when NimMajor >= 1 and NimMinor >= 1 and not defined(macosx):\n    when false:\n      # we disable gc:arc test here because Nim cgen\n      # generate something not acceptable for clang\n      # and failed on windows 64 bit too\n      execCmd \"nim c   --gc:arc --exceptions:goto -r \" & test\n      execCmd \"nim cpp --gc:arc --exceptions:goto -r \" & test\n  else:\n    execCmd \"nim c           -f -r \" & test\n\ntask test, \"run tests for travis\":\n  execTest(\"tests\")\n",
"https://github.com/enthus1ast/nimMulticast": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"enthus1ast\"\ndescription   = \"join and leave multicast groups / broadcast\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\nskipDirs = @[\"tests\"]\n",
"https://github.com/PMunch/gtkgenui": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Genui is a DSL macro for creating graphical user interfaces. This version is for the Gtk toolkit.\"\nlicense       = \"MIT\"\nsrcDir        = \"gtkgenui\"\n\n# Dependencies\n\nrequires      \"nim >= 0.19.0\"\nrequires      \"gtk2 >= 1.0\"\n\n# Skip examples from nimble installation\n\nskipFiles     = @[\"example.nim\"]\n\n",
"https://github.com/xflywind/httpx": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Zeshen Xing\"\ndescription   = \"A super-fast epoll-backed and parallel HTTP server.\"\nlicense       = \"Apache 2.0\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\n\nrequires \"nim >= 1.2.6\"\nrequires \"ioselectors >= 0.1.6\"\n\n\ntask helloworld, \"Compiles and executes the hello world server.\":\n  exec \"nim c -d:release -r tests/helloworld\"\n\ntask dispatcher, \"Compiles and executes the dispatcher test server.\":\n  exec \"nim c -d:release -r tests/dispatcher\"\n\ntask tests, \"Runs the test suite.\":\n  exec \"testament all\"\n",
"https://raw.githubusercontent.com/ire4ever1190/dimscordCommandHandler/master/dimscmd.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Jake Leahy\"\ndescription   = \"A command handler for the dimscord discord library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"dimscord >= 1.2.4\"\n\ntask ex, \"Runs the example\":\n    exec \"nim r -d:ssl example\"\n\ntask docs, \"Generates the documentation\":\n    exec \"nimble doc --project --index:on --git.url:https://github.com/ire4ever1190/dimscmd --outdir:docs/ src/dimscmd.nim\"\n",
"https://github.com/juancarlospaco/nim-nominatim": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"juancarlospaco\"\ndescription   = \"OpenStreetMap Nominatim API Lib and CLI Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/andreaferretti/nimcuda/master/nimcuda.nimble": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Nim binding for CUDA\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"headers\", \"include\", \"c2nim\", \"examples\", \"htmldocs\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\nimport os, strutils\n\nproc patch(libName: string): string =\n  when defined(windows):\n    let libpath = getEnv(\"CUDA_PATH\") / \"include\" / libName\n  else:\n    let libpath = \"/usr/local/cuda/include\" / libName\n\n  let\n    simpleLibPath = \"include\" / libName\n    patchPath = \"c2nim\" / libName\n    outPath = \"headers\" / libName\n    libContent =\n      if fileExists(simpleLibPath): readFile(simpleLibPath)\n      else: readFile(libPath) #.replace(\"#if defined(__cplusplus)\", \"#ifdef __cplusplus\")\n    patchContent = readFile(patchPath)\n  writeFile(outPath, patchContent & libContent)\n  return outPath\n\nproc process(libName: string) =\n  let\n    headerName = libName.addFileExt(\"h\")\n    outPath = \"nimcuda\" / libName.addFileExt(\"nim\")\n    headerPath = patch(headerName)\n  exec(\"c2nim \" & headerPath & \" -o:\" & outPath)\n\nproc compile(libName: string) =\n  let libPath = \"nimcuda\" / libName.addFileExt(\"nim\")\n  exec(\"nim c -c \" & libPath)\n\nlet libs = [\n  \"library_types\",\n  \"vector_types\",\n  # \"driver_types\", # do not decomment - the nim file is manually adjusted\n  \"surface_types\",\n  \"texture_types\",\n  \"cuda_runtime_api\",\n  # \"cuda_occupancy\", # do not decomment - the nim file is manually adjusted\n  \"cuComplex\",\n  \"cublas_api\",\n  \"cublas_v2\",\n  \"cudnn\",\n  \"cufft\",\n  \"curand\",\n  \"cusolver_common\",\n  \"cusolverDn\",\n  \"cusolverRf\",\n  \"cusolverSp\",\n  \"cusparse\",\n  \"nvblas\",\n  \"nvgraph\"\n]\n\nproc processAll() =\n  exec(\"mkdir -p nimcuda\")\n  exec(\"mkdir -p headers\")\n  for lib in libs:\n    process(lib)\n  exec(\"rm headers/*\")\n\nproc compileAll() =\n  compile(\"nimcuda\")\n  for lib in libs:\n    compile(lib)\n\ntask headers, \"generate bindings from headers\":\n  processAll()\n\ntask check, \"check that generated bindings do compile\":\n  compileAll()\n\ntask docs, \"generate documentation\":\n  exec(\"nim doc2 --project nimcuda/nimcuda.nim\")\n\nproc exampleConfig() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  when defined(windows):\n    switch(\"cincludes\", getenv(\"CUDA_PATH\") / \"include\")\n    switch(\"clibdir\", getenv(\"CUDA_PATH\") / \"lib/x64\")\n  else:\n    --cincludes: \"/usr/local/cuda/include\"\n    --clibdir: \"/usr/local/cuda/lib64\"\n  --path: \".\"\n  --run\n\ntask pagerank, \"run pagerank example\":\n  exampleConfig()\n  setCommand \"c\", \"examples/pagerank.nim\"\n\ntask fft, \"run fft example\":\n  exampleConfig()\n  setCommand \"c\", \"examples/fft.nim\"\n\ntask sparse, \"run sparse example\":\n  exampleConfig()\n  setCommand \"c\", \"examples/sparse.nim\"\n\ntask random, \"run random example\":\n  exampleConfig()\n  setCommand \"c\", \"examples/random.nim\"\n",
"https://raw.githubusercontent.com/edubart/arraymancer-vision/master/arraymancer_vision.nimble": "### Package\nversion       = \"0.0.3\"\nauthor        = \"Eduardo Barthel\"\ndescription   = \"Image transformation and visualization utilities for arraymancer\"\nlicense       = \"Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 0.17.2\", \"arraymancer >= 0.2.0\", \"stb_image >= 1.6\"\n\n## Install files\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/genotrance/nimpcre/master/nimpcre.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"genotrance\"\ndescription   = \"PCRE wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.5.4\"\n\nvar\n  name = \"nimpcre\"\n\ntask test, \"Run tests\":\n  exec \"nim c -f -r tests/t\" & name & \".nim\"\n",
"https://github.com/flyx/emerald": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"Felix Krause\"\ndescription   = \"macro-based HTML templating engine\"\nlicense       = \"WTFPL\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\n# No longer needed - nimble install will suffice\n\n# task \"build\", \"build emerald library\":\n#   exec \"nim c --noMain -c src/emerald\"\n#   setCommand \"nop\"\n\n# No longer needed - simply prefix test entrypoint \n# file in ./tests dir with 't'\n\n# task \"test\", \"run emerald test suite\":\n#   exec \"nim c -d:debug -r test/tests.nim\"\n#   setCommand \"nop\"\n\n# this is needed because nim doesn't run clang with -m32 when compiling a\n# 32bit binary. Therefore, we need to generate C code and compile it\n# manually.\n\ntask test32, \"run emerald test suite in 32bit mode\":\n  echo \"NOTE: If you get include errors, edit emerald.nimble to point to your Nim location\"\n  exec \"nim c -d:debug --cpu:i386 --compileOnly --nimcache:tests/.nimcache --genScript tests/ttests.nim\"\n  setCommand \"nop\"\n  withDir \"tests\":\n    # Customize the value of -I to point to your Nim installation\n    exec \"sed -i '' 's,clang,clang -m32 -I/Users/zachcarter/.choosenim/toolchains/nim-#devel/lib,' .nimcache/compile_ttests.sh\"\n    withDir \".nimcache\":\n      exec \"sh compile_ttests.sh\"\n      exec \"./ttests\"\n\n# Can't get this task to work - keep running into:\ndiscard \"\"\"\nlayout.nim(12, 32) template/generic instantiation from here\n/Users/zachcarter/projects/litz/zacharycarter/emerald.git/src/emerald/html.nim(660, 36) Warning: use {.base.} for base methods; baseless methods are deprecated [UseBase]\nSIGSEGV: Illegal storage access. (Attempt to read from nil?)\nstack trace: (most recent call last)\nUsers/zachcarter/.choosenim/toolchains/nim-#devel/lib/system/nimscript.nim(237) documentationTask\nUsers/zachcarter/.choosenim/toolchains/nim-#devel/lib/system/nimscript.nim(237, 7) Error: unhandled exception: FAILED: nim c -r generate.nim\n\"\"\"\ntask documentation, \"build documentation site\":\n  withDir \"doc\":\n    exec \"nim c -r generate.nim\"\n    setCommand \"nop\"\n",
"https://github.com/treeform/steamworks": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"treeform\"\ndescription   = \"Steamworks wrapper for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n",
"https://raw.githubusercontent.com/fragcolor-xyz/nimtorch/master/torch.nimble": "# Package\n\nversion     = \"0.2.3\"\nauthor      = \"Giovanni Petrantoni\"\ndescription = \"A nim flavor of pytorch\"\nlicense     = \"MIT\"\nskipDirs    = @[\"docker\", \"media\", \"conda\", \"bin\", \"scripts\"]\nskipFiles   = @[\".gitlab-ci.yml\", \".travis.yml\"]\n\n# Deps\n\nrequires \"nim >= 0.19.2\"\nrequires \"fragments >= 0.1.27\"\n\ntask test, \"Run cpu tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test torch\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test torch\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -r -o:test tests/test_xor.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release -r -o:test tests/test_xor.nim\"\"\"\n\ntask test_wasm, \"Run wasm tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js torch && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js torch/nn/modules.nim && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js torch/nn/init.nim && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js torch/nn/functional.nim && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js tests/test_autograd.nim && node test.js\"\"\"\n  exec \"\"\"nim torch -d:release -d:wasm -o:test.js tests/test_xor.nim && node test.js\"\"\"\n\ntask test_cuda, \"Run cuda gpu tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda torch\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda torch\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp -r -o:test -d:cuda tests/test_xor.nim\"\"\"\n  exec \"\"\"nim cpp -d:release -r -o:test -d:cuda tests/test_xor.nim\"\"\"\n\ntask test_clang, \"Run clang tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test torch\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test torch\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC --cc:clang -r -o:test tests/test_xor.nim\"\"\"\n  exec \"\"\"nim cpp --define:useRealtimeGC -d:release --cc:clang -r -o:test tests/test_xor.nim\"\"\"\n\ntask test_static, \"Run clang tests\":\n  exec \"\"\"nim torch -d:staticlibs -r -o:test torch\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test torch\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test torch/nn/init.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -r -o:test tests/test_xor.nim\"\"\"\n  exec \"\"\"nim torch -d:staticlibs -d:release -r -o:test tests/test_xor.nim\"\"\"\n\ntask test_clang_cuda, \"Run clang cuda gpu tests\":\n  exec \"\"\"nim cpp -r -o:test torch/generator.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda torch\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda torch\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda torch/nn/modules.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda torch/nn/init.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda torch/nn/functional.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda tests/test_autograd.nim\"\"\"\n  exec \"\"\"nim cpp --cc:clang -r -o:test -d:cuda tests/test_xor.nim\"\"\"\n  exec \"\"\"nim cpp -d:release --cc:clang -r -o:test -d:cuda tests/test_xor.nim\"\"\"",
"https://github.com/achesak/nim-biscuits": "[Package]\nname = \"biscuits\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"better cookie handling\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://raw.githubusercontent.com/nim-lang/mongo/master/mongo.nimble": "[Package]\nname: \"mongo\"\nversion: \"0.3\"\nauthor: \"Erik Johansson Andersson\"\ndescription: \"A MongoDB wrapper\"\nlicense: \"MIT\"\nsrcDir: \"lib\"\n\n[Deps]\nrequires: \"nim >= 0.10.2\"\n",
"https://github.com/status-im/nim-evmc": "mode = ScriptMode.Verbose\n\npackageName   = \"evmc\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for the The Ethereum EVMC library\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"stew\"\n\nproc test(name: string, lang: string = \"cpp\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test_debug, \"Run all tests - test implementation\":\n  test \"test_host_vm\"\n\ntask test_release, \"Run all tests - prod implementation\":\n  switch(\"define\", \"release\")\n  test \"test_host_vm\"\n\ntask test, \"Run all tests - test and production implementation\":\n  exec \"nimble test_debug\"\n  exec \"nimble test_release\"\n",
"https://api.github.com/repos/Araq/awesome_rmdir/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"f263cb7ce9b42d15e998769f2a0a2da2b569fa4d\",\"size\":116,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/f263cb7ce9b42d15e998769f2a0a2da2b569fa4d\",\"download_url\":\"https://raw.githubusercontent.com/Araq/awesome_rmdir/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/f263cb7ce9b42d15e998769f2a0a2da2b569fa4d\",\"html\":\"https://github.com/Araq/awesome_rmdir/blob/master/.gitignore\"}},{\"name\":\"LICENSE.rst\",\"path\":\"LICENSE.rst\",\"sha\":\"e1a51559358bb6f9a474a05ebeca997d66049c2c\",\"size\":1161,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/LICENSE.rst?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/blob/master/LICENSE.rst\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/e1a51559358bb6f9a474a05ebeca997d66049c2c\",\"download_url\":\"https://raw.githubusercontent.com/Araq/awesome_rmdir/master/LICENSE.rst\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/LICENSE.rst?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/e1a51559358bb6f9a474a05ebeca997d66049c2c\",\"html\":\"https://github.com/Araq/awesome_rmdir/blob/master/LICENSE.rst\"}},{\"name\":\"README.rst\",\"path\":\"README.rst\",\"sha\":\"0daec5322163108a42300833f7056422d8a6c11a\",\"size\":3228,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/README.rst?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/blob/master/README.rst\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/0daec5322163108a42300833f7056422d8a6c11a\",\"download_url\":\"https://raw.githubusercontent.com/Araq/awesome_rmdir/master/README.rst\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/README.rst?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/0daec5322163108a42300833f7056422d8a6c11a\",\"html\":\"https://github.com/Araq/awesome_rmdir/blob/master/README.rst\"}},{\"name\":\"awesome_rmdir.babel\",\"path\":\"awesome_rmdir.babel\",\"sha\":\"367bd46faa9dc39a3f90be82432e7d8488d070f1\",\"size\":411,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/awesome_rmdir.babel?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/blob/master/awesome_rmdir.babel\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/367bd46faa9dc39a3f90be82432e7d8488d070f1\",\"download_url\":\"https://raw.githubusercontent.com/Araq/awesome_rmdir/master/awesome_rmdir.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/awesome_rmdir.babel?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/367bd46faa9dc39a3f90be82432e7d8488d070f1\",\"html\":\"https://github.com/Araq/awesome_rmdir/blob/master/awesome_rmdir.babel\"}},{\"name\":\"awesome_rmdir.nim\",\"path\":\"awesome_rmdir.nim\",\"sha\":\"569971b08edc755cf2041ca17267b638abb158a0\",\"size\":3758,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/awesome_rmdir.nim?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/blob/master/awesome_rmdir.nim\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/569971b08edc755cf2041ca17267b638abb158a0\",\"download_url\":\"https://raw.githubusercontent.com/Araq/awesome_rmdir/master/awesome_rmdir.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/awesome_rmdir.nim?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/569971b08edc755cf2041ca17267b638abb158a0\",\"html\":\"https://github.com/Araq/awesome_rmdir/blob/master/awesome_rmdir.nim\"}},{\"name\":\"docindex.rst\",\"path\":\"docindex.rst\",\"sha\":\"f9222379fd1051d39e523ce6df08ff64aa65ec34\",\"size\":480,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/docindex.rst?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/blob/master/docindex.rst\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/f9222379fd1051d39e523ce6df08ff64aa65ec34\",\"download_url\":\"https://raw.githubusercontent.com/Araq/awesome_rmdir/master/docindex.rst\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/docindex.rst?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/f9222379fd1051d39e523ce6df08ff64aa65ec34\",\"html\":\"https://github.com/Araq/awesome_rmdir/blob/master/docindex.rst\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"0fd9b3840ccb85451675a515dec78fd22ab82e01\",\"size\":0,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/docs?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/trees/0fd9b3840ccb85451675a515dec78fd22ab82e01\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/trees/0fd9b3840ccb85451675a515dec78fd22ab82e01\",\"html\":\"https://github.com/Araq/awesome_rmdir/tree/master/docs\"}},{\"name\":\"nakefile.nim\",\"path\":\"nakefile.nim\",\"sha\":\"f2918e75ed0bfdbcc935d722438cc1fb59262a65\",\"size\":3279,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/nakefile.nim?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/blob/master/nakefile.nim\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/f2918e75ed0bfdbcc935d722438cc1fb59262a65\",\"download_url\":\"https://raw.githubusercontent.com/Araq/awesome_rmdir/master/nakefile.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/nakefile.nim?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/f2918e75ed0bfdbcc935d722438cc1fb59262a65\",\"html\":\"https://github.com/Araq/awesome_rmdir/blob/master/nakefile.nim\"}},{\"name\":\"nakefile.nimrod.cfg\",\"path\":\"nakefile.nimrod.cfg\",\"sha\":\"6ded47e09aa1d1b76025970c680cfb67870accb2\",\"size\":16,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/nakefile.nimrod.cfg?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/blob/master/nakefile.nimrod.cfg\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/6ded47e09aa1d1b76025970c680cfb67870accb2\",\"download_url\":\"https://raw.githubusercontent.com/Araq/awesome_rmdir/master/nakefile.nimrod.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/nakefile.nimrod.cfg?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/6ded47e09aa1d1b76025970c680cfb67870accb2\",\"html\":\"https://github.com/Araq/awesome_rmdir/blob/master/nakefile.nimrod.cfg\"}},{\"name\":\"release_steps.md\",\"path\":\"release_steps.md\",\"sha\":\"a1638fd0492da6df898da4d55c25abfa24473ec9\",\"size\":538,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/release_steps.md?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/blob/master/release_steps.md\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/a1638fd0492da6df898da4d55c25abfa24473ec9\",\"download_url\":\"https://raw.githubusercontent.com/Araq/awesome_rmdir/master/release_steps.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/release_steps.md?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/blobs/a1638fd0492da6df898da4d55c25abfa24473ec9\",\"html\":\"https://github.com/Araq/awesome_rmdir/blob/master/release_steps.md\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"c3a4ba0ea9e203733c56c3a41c55768f5b8458c8\",\"size\":0,\"url\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/tests?ref=master\",\"html_url\":\"https://github.com/Araq/awesome_rmdir/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/trees/c3a4ba0ea9e203733c56c3a41c55768f5b8458c8\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/awesome_rmdir/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/Araq/awesome_rmdir/git/trees/c3a4ba0ea9e203733c56c3a41c55768f5b8458c8\",\"html\":\"https://github.com/Araq/awesome_rmdir/tree/master/tests\"}}]",
"https://github.com/JohnAD/jesterwithplugins/": "# Package\n\nversion       = \"0.5.2\" # also change this at src/jesterwithplugins.nim line 4\nauthor        = \"Dominik Picheta\"\ndescription   = \"A sinatra-like web framework (with plugins).\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipFiles = @[\"todo.markdown\"]\nskipDirs = @[\"tests\"]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\nwhen not defined(windows):\n  requires \"httpbeast >= 0.2.2\"\n# For tests\nrequires \"https://github.com/timotheecour/asynctools#pr_fix_compilation\"\n\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r tests/tester\"",
"https://raw.githubusercontent.com/jasonk000/nimbpf/master/nimbpf.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jason Koch\"\ndescription   = \"libbpf for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"nimterop\"\n",
"https://github.com/juancarlospaco/fision": "requires \"nim >= 1.4.0\",\n  \"argparse\",\n  \"arraymancer\", \"nim c tests/tests_cpu.nim\",\n  \"awk\",\n  \"bigints\", url = \"https://github.com/araq/nim-bigints\",\n  \"binaryheap\", \"nim c -r binaryheap.nim\",\n  \"bipbuffer\",\n  \"bncurve\",\n  \"brainfuck\", \"nim c -d:release -r tests/compile.nim\",\n  \"bump\", \"nim c --gc:arc -r tests/tbump.nim\", \"https://github.com/disruptek/bump\",\n  \"c2nim\", \"nim c testsuite/tester.nim\",\n  \"cascade\",\n  \"cello\",\n  \"chroma\",\n  \"chronicles\", \"nim c -o:chr -r chronicles.nim\",\n  \"cligen\", \"nim c --path:. -r cligen.nim\",\n  \"combparser\", \"nimble test --gc:orc\",\n  \"compactdict\",\n  \"comprehension\", \"nimble test\", \"https://github.com/alehander42/comprehension\",\n  \"criterion\",\n  \"dashing\", \"nim c tests/functional.nim\",\n  \"delaunay\",\n  \"docopt\",\n  \"easygl\", \"nim c -o:egl -r src/easygl.nim\", \"https://github.com/jackmott/easygl\",\n  \"elvis\",\n  \"fidget\",\n  \"fragments\", \"nim c -r fragments/dsl.nim\",\n  \"gara\",\n  \"ggplotnim\", \"nim c -d:nocairo -r tests/tests.nim\",\n  \"glob\",\n  \"gnuplot\", \"nim c gnuplot.nim\",\n  \"hts\", \"nim c -o:htss src/hts.nim\",\n  \"illwill\", \"nimble examples\",\n  \"inim\",\n  \"itertools\", \"nim doc src/itertools.nim\",\n  \"iterutils\",\n  \"jstin\",\n  \"karax\", \"nim c -r tests/tester.nim\",\n  \"kdtree\", \"nimble test\", \"https://github.com/jblindsay/kdtree\",\n  \"loopfusion\",\n  \"macroutils\",\n  \"markdown\",\n  \"memo\",\n  \"msgpack4nim\", \"nim c -r tests/test_spec.nim\",\n  \"nake\", \"nim c nakefile.nim\",\n  \"neo\", \"nim c -d:blas=openblas tests/all.nim\",\n  \"nicy\", \"nim c -r src/nicy.nim\",\n  \"nigui\", \"nim c -o:niguii -r src/nigui.nim\",\n  \"nimcrypto\", \"nim c -r tests/testall.nim\",\n  \"nimdata\", \"nim c -o:nimdataa src/nimdata.nim\",\n  \"nimes\", \"nim c src/nimes.nim\",\n  \"nimfp\", \"nim c -o:nfp -r src/fp.nim\",\n  \"nimgame2\", \"nim c nimgame2/nimgame.nim\",\n  \"nimgen\", \"nim c -o:nimgenn -r src/nimgen/runcfg.nim\",\n  \"nimlsp\",\n  \"nimly\", \"nim c -r tests/test_readme_example.nim\",\n  \"nimpy\", \"nim c -r tests/nimfrompy.nim\",\n  \"nimquery\",\n  \"nimsl\",\n  \"nimsvg\",\n  \"nimterop\", \"nimble minitest\",\n  \"nimwc\", \"nim c nimwc.nim\",\n  \"norm\", \"nim c -r tests/tsqliterows.nim\",\n  \"npeg\", \"nimble testarc\",\n  \"numericalnim\", \"nim c -r tests/test_integrate.nim\",\n  \"optionsutils\",\n  \"ormin\", \"nim c -o:orminn ormin.nim\",\n  \"parsetoml\",\n  \"patty\",\n  \"plotly\", \"nim c examples/all.nim\",\n  \"pnm\",\n  \"polypbren\",\n  \"prologue\", \"nimble tcompile\",\n  \"protobuf\", \"nim c -o:protobuff -r src/protobuf.nim\",\n  \"pylib\",\n  \"rbtree\",\n  \"react\", \"nimble example\",\n  \"regex\", \"nim c src/regex\",\n  \"result\", \"nim c -r result.nim\",\n  \"rollinghash\", \"nim c -r tests/test_cyclichash.nim\",\n  \"rosencrantz\", \"nim c -o:rsncntz -r rosencrantz.nim\",\n  \"sdl1\", \"nim c -r src/sdl.nim\",\n  \"sdl2_nim\", \"nim c -r sdl2/sdl.nim\",\n  \"sigv4\", \"nim c --gc:arc -r sigv4.nim\", \"https://github.com/dis,\n  \"snip\", \"nimble test\", \"https://github.com/genotrance/snip\",\n  \"stint\", \"nim c -o:stintt -r stint.nim\",\n  \"strslice\",\n  \"strunicode\", \"nim c -r src/strunicode.nim\",\n  \"synthesis\",\n  \"telebot\", \"nim c -o:tbot -r src/telebot.nim\",\n  \"tempdir\",\n  \"templates\",\n  \"tensordsl\", \"nim c -r tests/tests.nim\", \"https://krux02@bitbucket.org/krux02/tensordslnim.git\",\n  \"terminaltables\", \"nim c src/terminaltables.nim\",\n  \"termstyle\", \"nim c -r termstyle.nim\",\n  \"timeit\",\n  \"timezones\",\n  \"tiny_sqlite\",\n  \"unicodedb\", \"nim c -d:release -r tests/tests.nim\",\n  \"unicodeplus\", \"nim c -d:release -r tests/tests.nim\",\n  \"unpack\",\n  \"websocket\", \"nim c websocket.nim\",\n  \"ws\",\n  \"yaml\", \"nim build\",\n  \"zero_functional\", \"nim c -r -d:nimworkaround14447 test.nim\"\n#END 2020-11-01T00:11:16\n\nversion     = \"2020.11.01\"\nauthor      = \"Juan Carlos\"\ndescription = \"important_packages with 0 dependencies and all unittests passing\"\nlicense     = \"MIT\"\n",
"https://github.com/johnnovak/nim-glfw": "#[ Package ]#\n\nversion     = \"3.3.2.1\"\nauthor      = \"Erik Johansson Andersson\"\ndescription = \"GLFW 3 wrapper for Nim\"\nlicense     = \"MIT\"\n\nskipDirs = @[\"examples\"]\n\nrequires \"nim >= 1.4.2\"\n\ntask examples, \"Compiles the examples with dynamic linking\":\n  exec \"nim c examples/boing\"\n  exec \"nim c examples/events\"\n  exec \"nim c examples/gears\"\n  exec \"nim c examples/minimal\"\n  exec \"nim c examples/splitview\"\n  exec \"nim c examples/triangle\"\n  exec \"nim c examples/wave\"\n\ntask examplesStatic, \"Compiles the examples with static linking\":\n  exec \"nim c -d:glfwStaticLib examples/boing\"\n  exec \"nim c -d:glfwStaticLib examples/events\"\n  exec \"nim c -d:glfwStaticLib examples/gears\"\n  exec \"nim c -d:glfwStaticLib examples/minimal\"\n  exec \"nim c -d:glfwStaticLib examples/splitview\"\n  exec \"nim c -d:glfwStaticLib examples/triangle\"\n  exec \"nim c -d:glfwStaticLib examples/wave\"\n",
"https://github.com/yglukhov/jsbind": "# Package\nversion       = \"0.1.1\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Bind to JavaScript and Emscripten environments\"\nlicense       = \"MIT\"\n\nrequires \"https://github.com/yglukhov/wasmrt\"\n\ntask tests, \"Run tests\":\n    exec \"nim c -d:emscripten tests/test.nim\"\n    exec \"node test.js\"\n",
"https://github.com/mjfh/nim-jhash.git": "# Package\n\ndescription = \"Jenkins Hasher producing 32 bit digests\"\nversion = \"0.1.2\"\n\nauthor = \"Jordan Hrycaj\"\nlicense = \"UNLICENCE\"\n\nrequires \"nim >= 1.4.2\"\nsrcDir = \"src\"\n\n# Tasks\n\ntask test, \"Run some test\":\n  # set noisy and tracer flags to 1 for more info\n  exec \"nim c -r --hints:off -d:verbose:0 -d:noisy:0 -d:tracer:0 tests/jhash_test.nim\"\n\ntask clean, \"Clean up\":\n  exec \"rm -f tests/jhash_test\"\n\n# End\n",
"https://github.com/jiro4989/eachdo": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"jiro4989\"\ndescription   = \"eachdo executes commands with each multidimensional values\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"eachdo\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"argparse >= 0.10.1\"\n",
"https://raw.githubusercontent.com/rafmst/miter/master/miter.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Rafael Morais\"\ndescription   = \"Ratio calculator on your terminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"miter\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/apense/shimsham/master/shimsham.nimble": "[Package]\nname        = \"ShimSham\"\nversion     = \"0.3.4\"\nauthor      = \"Jonathan Edwards\"\ndescription = \"Hash/Digest library with various functions\"\nlicense     = \"MIT unless otherwise specified\"\n\n[Deps]\nRequires: \"nim >= 0.11.0\"\n",
"https://raw.githubusercontent.com/skunkiferous/moduleinit/master/moduleinit.nimble": "# Package\r\n\r\nversion       = \"0.4.0\"\r\nauthor        = \"Sebastien Diot\"\r\ndescription   = \"Nim module/thread initialisation ordering library\"\r\nlicense       = \"MIT\"\r\n\r\nsrcDir        = \"src\"\r\n\r\n#bin = @[\"moduleinit\"]\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.18.0\"\r\n\r\n# Tasks\r\n\r\nimport ospaths\r\nimport strutils\r\ntask tests, \"Runs tests\":\r\n  withdir \"tests\":\r\n    for file in listfiles(\".\"):\r\n      let sf = splitfile(file)\r\n      if (sf.ext == \".nim\") and sf.name.startsWith(\"test\"):\r\n        echo(\"Testing \" & file)\r\n        exec \"nim c -r --threads:on --verbosity:0 --hints:off \" & file\r\n",
"https://github.com/dom96/texttospeech": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A client for the Google Cloud Text to Speech API.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/nim-lang/sdl2": "# Package\nversion = \"2.0.3\"\nauthor = \"fowl\"\ndescription = \"Wrapper for SDL 2.x\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.12.0\"\n\n",
"https://github.com/loloicci/nimly": "# Package\n\nversion       = \"0.7.0\"\nauthor        = \"loloicci\"\ndescription   = \"Lexer Generator and Parser Generator as a library in Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"patty >= 0.3.3\"\n",
"https://github.com/bunkford/wZeeGrid": "# Package\n\nversion       = \"1.0.2\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"wZeeGird Plugin for wNim.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"docs\"]\n\n# Dependencies\n\nrequires: \"nim >= 1.0.0\"\nrequires: \"wNim >= 0.11.4\"\n",
"https://raw.githubusercontent.com/makingspace/nim_consul/master/consul.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Zach Smith\"\ndescription   = \"A simple interface to a running Consul agent.\"\nlicense       = \"BSD2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/xxtea/xxtea-nim": "[Package]\nname          = \"xxtea\"\nversion       = \"1.0.2\"\nauthor        = \"Ma Bingyao\"\ndescription   = \"XXTEA for encryption algorithm library Nim.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-steam/master/steam.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Steam API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/Ethosa/saya_nim/master/saya.nimble": "[Package]\r\nname = \"saya\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.5\"\r\ndescription = \"Nim framework for VK\"\r\nlicense = \"LGPLv3\"\r\nsrcDir = \"src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.19.0\"\r\n",
"https://github.com/blamestross/nimrod-vectors": "[Package]\nname          = \"vectors\"\nversion       = \"0.1.0\"\nauthor        = \"Brendan Benshoof\"\ndescription   = \"Simple multidimensional vector math\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.4\"",
"https://github.com/jangko/snappy": "packageName   = \"snappy\"\nversion       = \"0.1.0\"\nauthor        = \"Andri Lim\"\ndescription   = \"Nim implementation of snappy compression algorithm\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires: \"nim >= 0.19.0\"\n\ntask test, \"Run all tests\":\n  exec \"nim c --passL:\\\"-lsnappy -L./tests -lstdc++\\\" -r tests/test\"\n  exec \"nim c --passL:\\\"-lsnappy -L./tests -lstdc++\\\" -d:release -r tests/test\"\n  exec \"nim c --passL:\\\"-lsnappy -L./tests -lstdc++\\\" --threads:on -d:release -r tests/test\"\n",
"https://api.github.com/repos/idlewan/jade-nim/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"addf1450d129f21493d5ec0666f7227d6594858a\",\"size\":35,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/addf1450d129f21493d5ec0666f7227d6594858a\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/jade-nim/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/addf1450d129f21493d5ec0666f7227d6594858a\",\"html\":\"https://github.com/idlewan/jade-nim/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"d20d04be1238de61f1983a5069b27401c8ec57a8\",\"size\":1078,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/d20d04be1238de61f1983a5069b27401c8ec57a8\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/jade-nim/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/d20d04be1238de61f1983a5069b27401c8ec57a8\",\"html\":\"https://github.com/idlewan/jade-nim/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"60aa21e368700d2b71dce13ca74723e2718b6247\",\"size\":1597,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/README.md?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/60aa21e368700d2b71dce13ca74723e2718b6247\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/jade-nim/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/60aa21e368700d2b71dce13ca74723e2718b6247\",\"html\":\"https://github.com/idlewan/jade-nim/blob/master/README.md\"}},{\"name\":\"bin\",\"path\":\"bin\",\"sha\":\"54963518a75b0ea36db9f27ea9dd5e450a6d1fdb\",\"size\":0,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/bin?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/tree/master/bin\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/trees/54963518a75b0ea36db9f27ea9dd5e450a6d1fdb\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/bin?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/trees/54963518a75b0ea36db9f27ea9dd5e450a6d1fdb\",\"html\":\"https://github.com/idlewan/jade-nim/tree/master/bin\"}},{\"name\":\"compiler.js\",\"path\":\"compiler.js\",\"sha\":\"6ff28a61f5ffdd9add8898c6a4fb4d8a2bfd7e13\",\"size\":22646,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/compiler.js?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/blob/master/compiler.js\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/6ff28a61f5ffdd9add8898c6a4fb4d8a2bfd7e13\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/jade-nim/master/compiler.js\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/compiler.js?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/6ff28a61f5ffdd9add8898c6a4fb4d8a2bfd7e13\",\"html\":\"https://github.com/idlewan/jade-nim/blob/master/compiler.js\"}},{\"name\":\"example\",\"path\":\"example\",\"sha\":\"2ee107e68064fa402fa31e07809e78fc5dfd95f2\",\"size\":0,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/example?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/tree/master/example\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/trees/2ee107e68064fa402fa31e07809e78fc5dfd95f2\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/example?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/trees/2ee107e68064fa402fa31e07809e78fc5dfd95f2\",\"html\":\"https://github.com/idlewan/jade-nim/tree/master/example\"}},{\"name\":\"index.js\",\"path\":\"index.js\",\"sha\":\"cd2c54c83da153036b14aa3e9d6e8b58ee3d1f09\",\"size\":1210,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/index.js?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/blob/master/index.js\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/cd2c54c83da153036b14aa3e9d6e8b58ee3d1f09\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/jade-nim/master/index.js\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/index.js?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/cd2c54c83da153036b14aa3e9d6e8b58ee3d1f09\",\"html\":\"https://github.com/idlewan/jade-nim/blob/master/index.js\"}},{\"name\":\"jade-nim.babel\",\"path\":\"jade-nim.babel\",\"sha\":\"2fda7bd786fc1ecfb0921158876a290ff696e33e\",\"size\":201,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/jade-nim.babel?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/blob/master/jade-nim.babel\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/2fda7bd786fc1ecfb0921158876a290ff696e33e\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/jade-nim/master/jade-nim.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/jade-nim.babel?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/2fda7bd786fc1ecfb0921158876a290ff696e33e\",\"html\":\"https://github.com/idlewan/jade-nim/blob/master/jade-nim.babel\"}},{\"name\":\"jade.nim\",\"path\":\"jade.nim\",\"sha\":\"cf5af7929ae015400b9a9e0468e601393eedb9fe\",\"size\":1738,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/jade.nim?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/blob/master/jade.nim\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/cf5af7929ae015400b9a9e0468e601393eedb9fe\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/jade-nim/master/jade.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/jade.nim?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/cf5af7929ae015400b9a9e0468e601393eedb9fe\",\"html\":\"https://github.com/idlewan/jade-nim/blob/master/jade.nim\"}},{\"name\":\"package.json\",\"path\":\"package.json\",\"sha\":\"6906797ad73cdf6437a6453e906b1436ec294a60\",\"size\":540,\"url\":\"https://api.github.com/repos/idlewan/jade-nim/contents/package.json?ref=master\",\"html_url\":\"https://github.com/idlewan/jade-nim/blob/master/package.json\",\"git_url\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/6906797ad73cdf6437a6453e906b1436ec294a60\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/jade-nim/master/package.json\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/jade-nim/contents/package.json?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/jade-nim/git/blobs/6906797ad73cdf6437a6453e906b1436ec294a60\",\"html\":\"https://github.com/idlewan/jade-nim/blob/master/package.json\"}}]",
"https://raw.githubusercontent.com/guibar64/polypbren/master/polypbren.nimble": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"G. Bareigts\"\ndescription   = \"Renormalization of colloidal charges of polydipserse dispersions using the Poisson-Boltzmann equation\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"https://github.com/yglukhov/threadpools\"\n\n# Build\n\nsrcDir = \"src\"\nbin = @[\"polypbren\"]\nbinDir = \"bin\"\n\n# Doc\n\ntask gendoc, \" Generate html documentation.\":\n  mkDir(\"docs/html\")\n  exec \"nim rst2html --index:on --out=docs/html/index.html docs/index.rst\"\n  exec \"nim rst2html --index:on --out:docs/html/usage.html docs/usage.rst\"\n  exec \"nim rst2html --index:on --out:docs/html/example.html docs/example.rst\"\n  exec \"nim --index=on doc2 --out=docs/html/pbsolv.html src/polypbrenpkg/pbsolv.nim\"\n  #exec \"nim --index=on doc2 --out=docs/html/pbren.html src/polypbrenpkg/pbren.nim\"\n  #exec \"nim --index=on doc2 --out=docs/html/distribs.html src/polypbrenpkg/distrib.nim\"\n  #exec \"nim --index=on doc2 --out=docs/html/params.html src/polypbrenpkg/params.nim\"\n  #exec \"nim buildIndex --out=docs/html/theindex.html docs/html\"\n",
"https://raw.githubusercontent.com/markpbaggett/oaitools.nim/master/oaitools.nimble": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"Mark Baggett\"\ndescription   = \"High Level OAI-PMH library for Nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"xmltools >= 0.1.5\"\n\n# Tests\n\ntask test, \"Test\":\n  exec \"nim c -r tests/tests.nim\"\n\n# Documentation\n\ntask docs, \"Docs\":\n  exec \"nim doc --git.url:https://github.com/markpbaggett/oaitools.nim -o:./docs/index.html src/oaitools.nim\"\n",
"https://github.com/brentp/variantkey-nim": "import ospaths\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\n# Package\n\nversion       = \"0.0.2\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"encode variants to uint64\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nsrcDir = \"src\"\ninstallExt = @[\"nim\", \"c\", \"h\"]\n\nskipDirs = @[\"tests\"]\n\nimport ospaths,strutils\n\ntask test, \"run the tests\":\n  exec \"nim c --lineDir:on --debuginfo -r src/variantkey\"\n",
"https://github.com/jangko/nim-noise": "# packageName   = \"noise\"\nversion       = \"0.1.4\"\nauthor        = \"Andri Lim\"\ndescription   = \"noise is a Nim implementation of linenoise\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\n\nrequires: \"nim >= 0.18.1\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"-d:prompt_no_history\", \"examples/test\"\n  test \"-d:prompt_no_kill\", \"examples/test\"\n  test \"-d:prompt_no_completion\", \"examples/test\"\n  test \"-d:prompt_no_word_editing\", \"examples/test\"\n  test \"-d:prompt_no_preload_buffer\", \"examples/test\"\n  test \"-d:prompt_no_incremental_history_search\", \"examples/test\"\n\n  test \"-d:release -d:prompt_no_history\", \"examples/test\"\n  test \"-d:release -d:prompt_no_kill\", \"examples/test\"\n  test \"-d:release -d:prompt_no_completion\", \"examples/test\"\n  test \"-d:release -d:prompt_no_word_editing\", \"examples/test\"\n  test \"-d:release -d:prompt_no_preload_buffer\", \"examples/test\"\n  test \"-d:release -d:prompt_no_incremental_history_search\", \"examples/test\"\n\n  test \"-d:release -d:prompt_no_basic\", \"examples/primitives\"\n  test \"-d:prompt_no_basic\", \"examples/primitives\"\n",
"https://raw.githubusercontent.com/exelotl/natu/master/natu.nimble": "version       = \"0.1.2\"\nauthor        = \"exelotl\"\ndescription   = \"Game Boy Advance development library\"\nlicense       = \"zlib\"\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/Knaque/jeknil/master/jeknil.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Reilly Moore\"\ndescription   = \"A blog post generator for people with priorities.\"\nlicense       = \"CC0-1.0\"\nsrcDir        = \"src\"\nbin           = @[\"jeknil\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"markdown >= 0.8.0\"",
"https://raw.githubusercontent.com/xyb/googlesearch.nim/master/googlesearch.nimble": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"Xie Yanbo\"\ndescription   = \"Nim library for scraping google search results\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"googlesearch\", \"googledistance\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"nimquery >= 1.2.2\"\n",
"https://github.com/jiro4989/filetype": "# Package\n\nversion       = \"0.9.0\"\nauthor        = \"jiro4989\"\ndescription   = \"Small and dependency free Nim package to infer file and MIME type checking the magic numbers signature.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n\ntask docs, \"generate documents\":\n  selfExec \"doc --index:on --project --out:documents src/filetype.nim\"\n",
"https://github.com/barcharcraz/Phosphor": "[Package]\nname = \"Phosphor\"\nversion = \"0.1.0\"\nauthor = \"Charlie Barto\"\ndescription = \"\"\"Phosphor is a library that uses light metaprogramming to make\n                 writing openGL code eaiser\"\"\"\nlicense = \"MIT\"\n\nsrcDir = src\n\n[Deps]\nRequires: \"opengl\"\n",
"https://github.com/bung87/finder": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"bung87\"\ndescription   = \"fs memory zip finder implement in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"zip\"\n",
"https://raw.githubusercontent.com/Hydra820/NimpleHTTPServer/master/NimpleHTTPServer.nimble": "# Package\n\nversion     = \"1.0.0\"\nauthor      = \"Eldar David\"\ndescription = \"SimpleHTTPServer module based on net sockets\"\nlicense     = \"HYDRA\"\n\n# Deps\nrequires \"nim >= 1.0.0\"",
"https://raw.githubusercontent.com/cheatfate/asyncpg/master/asyncpg.nimble": "# Package\nversion     = \"0.1.0\"\nauthor      = \"Eugene Kabanov\"\ndescription = \"Asynchronous PostgreSQL driver for Nim\"\nlicense     = \"MIT\"\n# Skip tests directory\nskipDirs = @[\"tests\"]\n# Deps\nrequires \"nim >= 0.16.0\"\n",
"https://raw.githubusercontent.com/piedar/coalesce/master/coalesce.nimble": "# Package\n\nversion       = \"0.3.2\"\nauthor        = \"Bennjamin Blast\"\ndescription   = \"coalesce to the first value that exists\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n# Tasks\n\ntask test, \"run tests\":\n  exec \"nim c -r coalesce.nim\"\n",
"https://raw.githubusercontent.com/cheatfate/nimcrypto/master/nimcrypto.nimble": "# Package\n\nversion       = \"0.5.4\"\nauthor        = \"Eugene Kabanov\"\ndescription   = \"Nim cryptographic library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"examples\", \"Nim\", \"docs\"]\n\n# Dependencies\n\nrequires \"nim > 0.18.0\"\n\n# Tests\n\ntask test, \"Runs the test suite\":\n  let testCommands = @[\n    \"nim c -f -r tests/\",\n    \"nim c -f -d:danger -r tests/\",\n    \"nim c -f -d:danger --threads:on -r tests/\",\n  ]\n  let exampleFiles = @[\n    \"ecb\", \"cbc\", \"ofb\", \"cfb\", \"ctr\", \"gcm\"\n  ]\n  let exampleCommands = @[\n      \"nim c -f -r --threads:on examples/\",\n  ]\n\n  for cmd in testCommands:\n    echo \"\\n\" & cmd & \"testall\"\n    exec cmd & \"testall\"\n    rmFile(\"tests/testall\".toExe())\n\n  for efile in exampleFiles:\n    for cmd in exampleCommands:\n      echo \"\\n\" & cmd & efile\n      exec cmd & efile\n      rmFile(\"examples/\" & efile.toExe())\n\n  exec(\"nim c -f -r -d:nimcryptoLowercase tests/testapi\")\n  exec(\"nim c -f -r -d:nimcrypto0xPrefix tests/testapi\")\n  exec(\"nim c -f -r -d:nimcrypto0xPrefix -d:nimcryptoLowercase tests/testapi\")\n",
"https://raw.githubusercontent.com/toshikiohnogi/nimga/master/nimga.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Toshiki Ohnogi\"\ndescription   = \"Genetic Algorithm Library for Nim.\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://raw.githubusercontent.com/xflywind/ioselectors/master/ioselectors.nimble": "# Package\n\nversion       = \"0.1.8\"\nauthor        = \"flywind\"\ndescription   = \"Selectors extension.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"wepoll >= 0.1.0\"\n\ntask tests, \"Tests all\":\n  exec \"testament all\"\n",
"https://raw.githubusercontent.com/zendbit/nim.nwatchdog/master/nwatchdog.nimble": "# Package\n\nversion       = \"0.0.6\"\nauthor        = \"Amru Rosyada\"\ndescription   = \"Simple watchdog (watch file changes modified, deleted, created) in nim lang.\"\nlicense       = \"BSD\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/xmonader/nim-loadenv": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"load .env variables\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/h3rald/nifty": "import\n  ospaths\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/niftypkg/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/niftypkg/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import niftypkg/config\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = \"MIT\"\nbin           = @[\"nifty\"]\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n\nconst compile = \"nim c -d:release\"\nconst linux_x64 = \"--cpu:amd64 --os:linux -o:nifty\"\nconst windows_x64 = \"--cpu:amd64 --os:windows -o:nifty.exe\"\nconst macosx_x64 = \"-o:nifty\"\nconst program = \"nifty\"\nconst program_file = \"src/nifty.nim\"\nconst zip = \"zip -X\"\n\nproc shell(command, args: string, dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"nifty\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build nifty for Windows (x64)\":\n  shell compile, windows_x64, program_file\n\ntask linux_x64_build, \"Build nifty for Linux (x64)\":\n  shell compile, linux_x64,  program_file\n  \ntask macosx_x64_build, \"Build nifty for Mac OS X (x64)\":\n  shell compile, macosx_x64, program_file\n\ntask release, \"Release nifty\":\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, filename_for(\"windows\", \"x64\"), program & \".exe\"\n  shell \"rm\", program & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, filename_for(\"linux\", \"x64\"), program \n  shell \"rm\", program  \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, filename_for(\"macosx\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n ALL DONE!\"\n",
"https://raw.githubusercontent.com/fowlmouth/signals.nim/master/signals.nimble": "[Package]\nname:\"signals\"\nversion:\"1.0\"\nauthor:\"fowl\"\ndescription:\"Signals/slots observer pattern for event-driven programming.\"\nlicense:\"MIT\"\nsrcDir:\"src\"\n[Deps]\nrequires: \"nimrod >= 0.10.2\"\n",
"https://raw.githubusercontent.com/dom96/nimbox/master/nimbox.nimble": "# vim: ft=nim\nimport strutils\n\nversion     = \"0.1.0\"\nauthor      = \"Samadi van Koten\"\ndescription = \"A Rustbox-inspired termbox wrapper\"\nlicense     = \"MIT\"\nskipDirs    = @[\"examples\"]\nskipFiles   = @[\"nimbox/.keep\"]\n\nrequires \"nim >= 0.14.3\"\n\ntask wrap, \"Create low-level termbox wrapper\":\n  when defined(windows):\n    echo \"\\x1B[33mNimbox doesn't work on Windows, sorry!\\x1B[0m\"\n    quit 1\n  elif not defined(linux):\n    echo \"\\x1B[31mNimbox has not been tested on \" & hostOS & \". Proceed with caution!\\x1B[0m\"\n\n  # Fix integer types\n  var buf = \"\"\"#ifdef C2NIM\n  #mangle uint8_t uint8\n  #mangle uint16_t uint16\n  #mangle uint32_t uint32\n  #mangle int8_t int8\n  #mangle int16_t int16\n  #mangle int32_t int32\n  #endif\n  \"\"\"\n\n  var skip = false\n\n  var termbox = readFile(\"/usr/include/termbox.h\")\n  for line in termbox.splitLines():\n    if skip:\n      if line.startsWith(\"#endif\"):\n        skip = false\n    elif line.startsWith(\"#if __GNUC__\"):\n      skip = true\n    else:\n      if line.startsWith(\"SO_IMPORT \"):\n        buf &= line.substr(10)\n      else:\n        buf &= line\n      buf &= \"\\n\"\n\n  writeFile(\"/tmp/termbox.h\", buf)\n\n  exec \"c2nim --header --skipcomments --ref --nep1 /tmp/termbox.h -o:nimbox/termbox.nim\"\n\n  var nimbuf = \"{.passl: \\\"-Wl,-Bstatic -ltermbox -Wl,-Bdynamic\\\", emit: \\\"typedef struct tb_event tb_event;\\\".}\\n\"\n  nimbuf &= readFile(\"nimbox/termbox.nim\")\n  writeFile(\"nimbox/termbox.nim\", nimbuf)\n\n",
"https://raw.githubusercontent.com/nim-lang/opengl/master/opengl.nimble": "# Package\n\nversion = \"1.2.6\"\nauthor = \"Andreas Rumpf\"\ndescription = \"an OpenGL wrapper\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nwhen defined(windows):\n  requires \"nim >= 0.11.0\"\nelse:\n  requires \"nim >= 0.11.0\", \"x11 >= 1.1\"\n",
"https://github.com/haxscramper/hpprint": "version       = \"0.2.12\"\nauthor        = \"haxscramper\"\ndescription   = \"Generic configurable pretty-printer\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.4.0\"\nrequires \"shell\", \"with\"\nrequires \"hdrawing >= 0.1.2\", \"hasts >= 0.1.4\", \"hnimast >= 0.3.10\"\nrequires \"hmisc >= 0.9.16\"\n\n\nlet\n  testDir = \"/tmp/docker-hpprint\"\n  localDevel = @[\"hmisc\"]\n",
"https://github.com/D-Nice/argon2_bind": "import\n  strutils\nfrom os import `/`\n\nconst vFile = \"version.txt\"\nwhen (thisDir() / \"src\" / vFile).fileExists:\n  const vPath = thisDir() / \"src\" / vFile\nwhen (thisDir() / vFile).fileExists:\n  const vPath = thisDir() / vFile\n\n# Package\nversion       = vPath.staticRead.splitLines[0]\nauthor        = \"D-Nice\"\ndescription   = \"Bindings for the reference Argon2 C lib\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"c\", \"h\", \"txt\"]\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\nimport\n  sugar,\n  sequtils,\n  strutils\n\nfunc srcPaths: seq[string] =\n  const dirs =\n    @[\n      \"src/\"\n    ]\n  for dir in dirs:\n    result.add(dir.listFiles.filter(x => x[dir.len .. x.high].endsWith(\".nim\")))\n\nfunc testPaths: seq[string] =\n  const dir = \"tests/\"\n  return dir.listFiles.filter(x =>\n    x[dir.len .. x.high].startsWith('t') and\n    x.endsWith(\".nim\")\n  )\n\n# Nimscript Tasks\n\n## docs\ntask docs, \"Deploy doc html + search index to public/ directory\":\n  let\n    deployDir = projectDir() & \"/public\"\n    deployFile = deployDir & \"/index.html\"\n    genDocCmd = \"nim doc --out:$1 --index:on $2\" % [deployFile, srcPaths()[0]]\n    genTheIndexCmd = \"nim buildIndex -o:$1/theindex.html $1\" % [deployDir]\n    deployJsFile = deployDir & \"/dochack.js\"\n    docHackJsSource = \"https://nim-lang.github.io/Nim/dochack.js\" # devel docs dochack.js\n  mkDir deployDir\n  rmFile deployFile\n  exec genDocCmd\n  exec genTheIndexCmd\n  when defined Linux:\n    exec \"ln -sf index.html public/\" & srcPaths()[0][4 .. ^4] & \"html\"\n  if not fileExists deployJsFile:\n    echo deployJsFile\n    withDir deployDir:\n      exec \"curl -LO \" & docHackJsSource\n\n## checks\nconst checkCmd = \"nim c -cf -w:on --hints:off -o:/dev/null --styleCheck:\"\ntask check_src, \"Compile src with all checks on\":\n  for src in srcPaths():\n    exec checkCmd & \"error \" & src\ntask check_tests, \"Compile tests with all checks on\":\n  for test in testPaths():\n    exec checkCmd & \"error \" & test\ntask check_all, \"Compile check everything and run tests\":\n  exec \"nimble check_src && nimble check_tests\"\n\n## fuzzing (for alpine nim image)\ntask fuzz_fast, \"Runs afl on getOutput\":\n  exec \"export AFL_HARDEN=1; nim c --dynlibOverride:libargon2 -L:/usr/lib/libargon2.a -f -o:/tmp/nim/argon2_full/fuzz_fast tests/fuzzer/fast.nim && afl-fuzz -i tests/fuzzer/in-fuzz -o tests/fuzzer/out-fuzz_fast /tmp/nim/argon2_full/fuzz_fast\"\ntask fuzz_fast_more, \"Runs afl on getOutput\":\n  exec \"export AFL_HARDEN=1; nim c --dynlibOverride:libargon2 -L:/usr/lib/libargon2.a -f -o:/tmp/nim/argon2_full/fuzz_fast_more tests/fuzzer/fast_more.nim && afl-fuzz -i tests/fuzzer/in-fuzz -o tests/fuzzer/out-fuzz_fast_more /tmp/nim/argon2_full/fuzz_fast_more\"\ntask fuzz_slow, \"Runs afl on getOutput\":\n  exec \"export AFL_HARDEN=1; nim c --dynlibOverride:libargon2 -L:/usr/lib/libargon2.a -f -o:/tmp/nim/argon2_full/fuzz_slow tests/fuzzer/slow.nim && afl-fuzz -i tests/fuzzer/in-fuzz -o tests/fuzzer/out-fuzz_slow /tmp/nim/argon2_full/fuzz_slow\"\ntask fuzz_slow_more, \"Runs afl on getOutput\":\n  exec \"export AFL_HARDEN=1; nim c --dynlibOverride:libargon2 -L:/usr/lib/libargon2.a -f -o:/tmp/nim/argon2_full/fuzz_slow_more tests/fuzzer/slow_more.nim && afl-fuzz -i tests/fuzzer/in-fuzz -o tests/fuzzer/out-fuzz_slow_more /tmp/nim/argon2_full/fuzz_slow_more\"\n\n## dependency installer\ntask install_deps, \"Installs dependencies for supported systems\":\n  when defined(Linux):\n    const distro = staticExec(\"cat /etc/os-release | grep ^ID_LIKE= || cat /etc/os-release | grep ^ID=\")\n    case distro.split('=', 1)[1]:\n      of \"alpine\":\n        exec \"apk add --no-cache argon2-dev rsync\"\n      of \"debian\":\n        exec \"apt install -y libargon2-dev rsync\"\n      else:\n        echo \"Unknown Linux distro... install libargon2-dev or the appropriate argon2 development files for your distro manually!\"\n  else:\n    echo \"Unsupported OS\"\ntask install_fuzz, \"Installs dependencies including those for fuzzing\":\n  when defined(Linux):\n    const distro = staticExec(\"cat /etc/os-release | grep ^ID_LIKE= || cat /etc/os-release | grep ^ID=\")\n    case distro.split('=', 1)[1]:\n      of \"alpine\":\n        exec \"apk add --no-cache afl\"\n      of \"debian\":\n        exec \"apt install -y afl || echo AFL unavailable: fuzzing tasks unusuable\"\n  exec \"nimble install_deps\"\ntask i, \"Installs dependencies for supported systems\":\n  exec \"nimble install_deps\"\n\ntask update_argon2, \"Pulls the latest argon2 submodule and copies the necessary files for static compilation\":\n  exec \"git submodule update --recursive --remote\"\n  const\n    cmd = \"rsync -a --delete .github/phc-winner-argon2/\"\n    dest = \" src/argon2_bind/argon2/\"\n  exec cmd & \"include\" & dest\n  exec cmd & \"src\"  & dest\n\n",
"https://raw.githubusercontent.com/h3rald/nifty/master/nifty.nimble": "import\n  ospaths\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/niftypkg/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/niftypkg/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import niftypkg/config\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = \"MIT\"\nbin           = @[\"nifty\"]\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n\nconst compile = \"nim c -d:release\"\nconst linux_x64 = \"--cpu:amd64 --os:linux -o:nifty\"\nconst windows_x64 = \"--cpu:amd64 --os:windows -o:nifty.exe\"\nconst macosx_x64 = \"-o:nifty\"\nconst program = \"nifty\"\nconst program_file = \"src/nifty.nim\"\nconst zip = \"zip -X\"\n\nproc shell(command, args: string, dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"nifty\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build nifty for Windows (x64)\":\n  shell compile, windows_x64, program_file\n\ntask linux_x64_build, \"Build nifty for Linux (x64)\":\n  shell compile, linux_x64,  program_file\n  \ntask macosx_x64_build, \"Build nifty for Mac OS X (x64)\":\n  shell compile, macosx_x64, program_file\n\ntask release, \"Release nifty\":\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, filename_for(\"windows\", \"x64\"), program & \".exe\"\n  shell \"rm\", program & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, filename_for(\"linux\", \"x64\"), program \n  shell \"rm\", program  \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, filename_for(\"macosx\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n ALL DONE!\"\n",
"https://raw.githubusercontent.com/euantorano/migrate.nim/master/migrate.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Euan T\"\ndescription   = \"A database migration tool written in Nim.\"\nlicense       = \"BSD3\"\n\nbin = @[\"migrate\"]\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\", \"docopt >= 0.6.2\"\n",
"https://raw.githubusercontent.com/treeform/useragents/master/useragents.nimble": "# Package\n\nversion     = \"0.1.1\"\nauthor      = \"Andre von Houck\"\ndescription = \"Parses users agents in nim.\"\nlicense     = \"MIT\"\n\n# Deps\n\nrequires \"nim >= 0.20.0\"\n\nskipDirs = @[\"tests\", \"build\"]",
"https://github.com/apense/shimsham": "[Package]\nname        = \"ShimSham\"\nversion     = \"0.3.4\"\nauthor      = \"Jonathan Edwards\"\ndescription = \"Hash/Digest library with various functions\"\nlicense     = \"MIT unless otherwise specified\"\n\n[Deps]\nRequires: \"nim >= 0.11.0\"\n",
"https://github.com/rgv151/scram": "version       = \"0.1.14\"\nauthor        = \"Huy Doan\"\ndescription   = \"Salted Challenge Response Authentication Mechanism (SCRAM) \"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.19.4\", \"hmac >= 0.2.0\"\n",
"https://raw.githubusercontent.com/Narazaka/shiori-nim/master/shiori.nimble": "# Package\n\nversion       = \"1.3.0\"\nauthor        = \"Narazaka\"\ndescription   = \"SHIORI Protocol Parser/Builder\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\ntask test, \"test\":\n    exec \"nim c -r -p:. tests/parseRequest\"\n",
"https://github.com/FedericoCeratto/nim-dashing": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Terminal dashboards for Nim\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\nbin       = @[\"dashing\"]\n\ntask functests, \"functional tests\":\n  exec \"nim c tests/functional.nim\"\n  exec \"./tests/functional\"\n",
"https://raw.githubusercontent.com/BigEpsilon/nim-cppstl/master/cppstl.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"nouredine\"\ndescription   = \"Bindings for the C++ Standard Template Library (STL)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\n\ntask test, \"Run tests\":\n    exec \"\"\"nim cpp -r -o:test --passC:-std=c++11 tests/tvector.nim\"\"\"\n    exec \"\"\"nim cpp -r -o:test --passC:-std=c++11 tests/tstring.nim\"\"\"\n\n\ntask rtest, \"Run tests\":\n    exec \"\"\"nim cpp -r -o:test -d:release --passC:-std=c++11 tests/tvector.nim\"\"\"\n    exec \"\"\"nim cpp -r -o:test -d:release --passC:-std=c++11 tests/tstring.nim\"\"\"\n",
"https://github.com/krux02/ast-pattern-matching": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Arne Döring\"\ndescription   = \"a general ast pattern matching library with a focus on correctness and good error messages\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/def-/bigints": "# Package\n\nversion     = \"0.4.4\"\nauthor      = \"Dennis Felsing\"\ndescription = \"Arbitrary-precision integers implemented in pure Nim\"\nlicense     = \"MIT\"\n\nsrcDir      = \"src\"\n\n# Dependencies\n\nrequires \"nim > 0.10\"\n\ntask tests, \"Test bigints\":\n  exec \"nim c -r tests/tester\"\n",
"https://github.com/FedericoCeratto/nim-etcd-client": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"etcd client library\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.0\"\n\ntask functional_tests, \"Run functional tests\":\n  exec \"NIMTEST_NO_COLOR=1 nim c -p=.  -r tests/functional.nim\"\n",
"https://github.com/KittyTechnoProgrammer/torim": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Federico Ceratto and KittyTechno\"\ndescription   = \"Updated version of tor.nim from https://github.com/FedericoCeratto/nim-tor\"\nlicense       = \"MPL-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/Tyler-Yocolano/nimbomb/master/nimbomb.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Tyler Yocolano\"\ndescription   = \"A GiantBomb-wiki wrapper for nim \"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\nskipDirs = @[\"tests\"]",
"https://github.com/status-im/nim-eth-keys": "packageName   = \"eth_keys\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A reimplementation in pure Nim of eth-keys, the common API for Ethereum key operations.\"\nlicense       = \"Apache License 2.0 or MIT\"\n# srcDir        = \"src\"\nskipDirs      = @[\"src\", \"tests\", \"Nim\", \"old_api\"]\n\n### Dependencies\n\nrequires \"nim > 0.18.0\",\n         \"nimcrypto\",\n         \"secp256k1\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache: \"nimcache\"\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Run all tests - C only & libsecp256k1 backend\":\n  test \"tests\"\n\n# task test_cpp, \"Run all tests - C++ only & libsecp256k1 backend\":\n#   test \"all_tests\", \"cpp\"\n\n# task test, \"Run all tests - C and C++ & libsecp256k1 backend\":\n#   exec \"nimble test_c\"\n#   exec \"rm ./nimcache/*\"\n#   exec \"nimble test_cpp\"\n\n# task test_backend_native, \"Run all tests - pure Nim backend\":\n#   switch(\"define\", \"backend_native\")\n#   test \"all_tests\", \"cpp\"\n",
"https://github.com/nim-lang/zip": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Anonymous\"\ndescription   = \"Wrapper for the zip library\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\n\ntask tests, \"Run lib tests\":\n  withDir \"tests\":\n    exec \"nim c -r ziptests\"\n    exec \"nim c -r zlibtests\"\n    exec \"nim c -r gziptests\"\n\nwhen defined(nimdistros) and not defined(useLibzipSrc):\n  import distros\n  if detectOs(MacOSX):\n    foreignDep \"libzip\"\n  else:\n    foreignDep \"libzip\"\n",
"https://github.com/nim-lang/sdl1": "[Package]\r\nname          = \"sdl1\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"SDL 1.2 wrapper for Nim.\"\r\nlicense       = \"LGPL\"\r\n\r\nsrcDir        = \"src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://github.com/vegansk/nimactors": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Anatoly Galiulin <galiulin.anatoly@gmail.com>\"\ndescription   = \"Actors library for Nim\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\", \"nimfp >= 0.3.5\", \"nimboost >= 0.3.4\"\n",
"https://github.com/tervay/the-nim-alliance": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Justin Tervay\"\ndescription   = \"A Nim wrapper for TheBlueAlliance\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/jangko/nimAES": "packageName   = \"nimAES\"\nversion       = \"0.1.2\"\nauthor        = \"Andri Lim\"\ndescription   = \"AES encryption algorithm\"\nlicense       = \"MIT\"\nskipDirs     = @[\"tests\", \"docs\"]\n\nrequires: \"nim >= 1.0.6\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  exec \"nim -v\"\n  test \"-d:release\", \"tests/test\"\n  # exec \"nim c -r --gc:arc -d:release tests/test\"\n\ntask testvcc, \"Run tests\":\n  test \"-d:release\", \"tests/test\"\n",
"https://github.com/Halsys/Nim-Remotery": "# Package\n\nversion = \"0.1.0\"\nauthor = \"Cory Noll Crimmins - Golden\"\ndescription = \"Nim wrapper for (and with) Celtoys's Remotery\"\nlicense = \"Apache V2\"\n\n# Dependencies\"\n\nrequires \"nim >= 0.14.2\"\n",
"https://raw.githubusercontent.com/euantorano/dotenv.nim/master/dotenv.nimble": "# Package\n\nversion       = \"1.1.1\"\nauthor        = \"Euan T\"\ndescription   = \"dotenv implementation for Nim. Loads environment variables from `.env`\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/main.nim\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc --index:on -o:docs/dotenv.html src/dotenv.nim\"\n",
"https://github.com/ruivieira/nim-science": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Rui  Vieira\"\ndescription   = \"science!\"\nlicense       = \"Apache 2.0\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\n",
"https://raw.githubusercontent.com/treeform/urlly/master/urlly.nimble": "version     = \"0.2.0\"\nauthor      = \"Andre von Houck\"\ndescription = \"URI and URL parsing for Nim for C/JS backends. Similar api to browsers's `window.location`.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://github.com/juancarlospaco/nim-openexchangerates": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"OpenExchangeRates API Client for Nim. Works with/without SSL. Partially works with/without Free API Key.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/dom96/jester/master//jester.nimble": "# Package\n\nversion       = \"0.5.0\" # Be sure to update jester.jesterVer too!\nauthor        = \"Dominik Picheta\"\ndescription   = \"A sinatra-like web framework for Nim.\"\nlicense       = \"MIT\"\n\nskipFiles = @[\"todo.markdown\"]\nskipDirs = @[\"tests\"]\n\n# Deps\n\nrequires \"nim >= 1.0.0\"\n\nwhen not defined(windows):\n  requires \"httpbeast >= 0.2.2\"\n\n# For tests\nrequires \"https://github.com/timotheecour/asynctools#pr_fix_compilation\"\n\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r tests/tester\"",
"https://api.github.com/repos/Michedev/DecisionTreeNim/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"edc6aa3e0e1f5c03ad97399c4fbd3506010eb7a3\",\"size\":89,\"url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/Michedev/DecisionTreeNim/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/blobs/edc6aa3e0e1f5c03ad97399c4fbd3506010eb7a3\",\"download_url\":\"https://raw.githubusercontent.com/Michedev/DecisionTreeNim/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/blobs/edc6aa3e0e1f5c03ad97399c4fbd3506010eb7a3\",\"html\":\"https://github.com/Michedev/DecisionTreeNim/blob/master/.gitignore\"}},{\"name\":\"DecisionTree.nimble\",\"path\":\"DecisionTree.nimble\",\"sha\":\"f217f1582f25f3bc2ea7e59cba98bbafdf4735e8\",\"size\":268,\"url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/DecisionTree.nimble?ref=master\",\"html_url\":\"https://github.com/Michedev/DecisionTreeNim/blob/master/DecisionTree.nimble\",\"git_url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/blobs/f217f1582f25f3bc2ea7e59cba98bbafdf4735e8\",\"download_url\":\"https://raw.githubusercontent.com/Michedev/DecisionTreeNim/master/DecisionTree.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/DecisionTree.nimble?ref=master\",\"git\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/blobs/f217f1582f25f3bc2ea7e59cba98bbafdf4735e8\",\"html\":\"https://github.com/Michedev/DecisionTreeNim/blob/master/DecisionTree.nimble\"}},{\"name\":\"Makefile\",\"path\":\"Makefile\",\"sha\":\"52e936a20d62e4f52ca1e0913b9fca6419b57230\",\"size\":269,\"url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/Makefile?ref=master\",\"html_url\":\"https://github.com/Michedev/DecisionTreeNim/blob/master/Makefile\",\"git_url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/blobs/52e936a20d62e4f52ca1e0913b9fca6419b57230\",\"download_url\":\"https://raw.githubusercontent.com/Michedev/DecisionTreeNim/master/Makefile\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/Makefile?ref=master\",\"git\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/blobs/52e936a20d62e4f52ca1e0913b9fca6419b57230\",\"html\":\"https://github.com/Michedev/DecisionTreeNim/blob/master/Makefile\"}},{\"name\":\"benchmark\",\"path\":\"benchmark\",\"sha\":\"d9ccc2400beeb91e7847642b7d79145cdf932962\",\"size\":0,\"url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/benchmark?ref=master\",\"html_url\":\"https://github.com/Michedev/DecisionTreeNim/tree/master/benchmark\",\"git_url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/trees/d9ccc2400beeb91e7847642b7d79145cdf932962\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/benchmark?ref=master\",\"git\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/trees/d9ccc2400beeb91e7847642b7d79145cdf932962\",\"html\":\"https://github.com/Michedev/DecisionTreeNim/tree/master/benchmark\"}},{\"name\":\"readme.MD\",\"path\":\"readme.MD\",\"sha\":\"6fa364b4a248ec1e4534061b90ea02bcdfc2d72c\",\"size\":3412,\"url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/readme.MD?ref=master\",\"html_url\":\"https://github.com/Michedev/DecisionTreeNim/blob/master/readme.MD\",\"git_url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/blobs/6fa364b4a248ec1e4534061b90ea02bcdfc2d72c\",\"download_url\":\"https://raw.githubusercontent.com/Michedev/DecisionTreeNim/master/readme.MD\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/readme.MD?ref=master\",\"git\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/blobs/6fa364b4a248ec1e4534061b90ea02bcdfc2d72c\",\"html\":\"https://github.com/Michedev/DecisionTreeNim/blob/master/readme.MD\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"bac87fdcafd5876b3bf49fedd8a77a9acb196c7a\",\"size\":0,\"url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/src?ref=master\",\"html_url\":\"https://github.com/Michedev/DecisionTreeNim/tree/master/src\",\"git_url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/trees/bac87fdcafd5876b3bf49fedd8a77a9acb196c7a\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/trees/bac87fdcafd5876b3bf49fedd8a77a9acb196c7a\",\"html\":\"https://github.com/Michedev/DecisionTreeNim/tree/master/src\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"6fc69894bf60b8c765862538a4f50f9d52d5c86d\",\"size\":0,\"url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/tests?ref=master\",\"html_url\":\"https://github.com/Michedev/DecisionTreeNim/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/trees/6fc69894bf60b8c765862538a4f50f9d52d5c86d\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/Michedev/DecisionTreeNim/git/trees/6fc69894bf60b8c765862538a4f50f9d52d5c86d\",\"html\":\"https://github.com/Michedev/DecisionTreeNim/tree/master/tests\"}}]",
"https://raw.githubusercontent.com/ducdetronquito/phoon/master/phoon.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Guillaume Paulet\"\ndescription   = \"A web framework inspired by ExpressJS 🐇⚡\"\nlicense       = \"Public Domain\"\n\nsrcDir = \"src\"\nskipDirs = @[\"benchmark\", \"tests\"]\n\nrequires \"nim >= 1.0.2\"\n\ntask integration, \"Runs the integration test suite.\":\n  exec \"nim c -r tests/integration/test_simple_server.nim\"\n",
"https://github.com/boydgreenfield/nimrod-murmur": "[Package]\nname          = \"murmur3\"\nversion       = \"0.2.0\"\nauthor        = \"Nick Boyd Greenfield\"\ndescription   = \"Simple Murmurhash3 wrapper (for strings only at the moment). MurmurHash code is by Austin Appleby and in the public domain.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.16.0\"\n",
"https://github.com/xmonader/witai-nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"wit.ai client\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/kobi2187/vmvc/master/vmvc.nimble": "# Package\n\nversion       = \"0.0.2\"\nauthor        = \"Kobi Lurie\"\ndescription   = \"a skeleton/structure for a variation on the mvc pattern, similar to dci. For command line and gui programs. it's a middle ground between rapid application development and handling software complexity.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs = @[\"tests\"]\n# web = \"https://github.com/kobi2187/vmvc\"\n# url = \"https://github.com/kobi2187/vmvc\"\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\nrequires \"uuids >= 0.1.10\", \"regex >= 0.10.0\"\n\n# Tasks\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/test_parsing_utils.nim\"",
"https://github.com/ReneSac/c_alikes": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"ReneSac\"\ndescription   = \"Operators, commands and functions more c-like, plus a few other utilities\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\"\n\n",
"https://raw.githubusercontent.com/xflywind/fsnotify/master/fsnotify.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"A file system monitor in Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"timerwheel >= 0.1.2\"\nrequires \"xio >= 0.1.0\"\n\ntask tests, \"Run all tests\":\n  exec \"testament all\"\n",
"https://github.com/Druage/sling": "[Package]\nname: \"sling\"\nversion: \"0.1\"\nauthor: \"Lee Lazarecky\"\ndescription: \"A signal and slot implementation for Nim\"\nlicense: \"unlicense\"\n\n[Deps]\nrequires: \"nimrod >= 0.13.0\"\n",
"https://raw.githubusercontent.com/jangko/nimBMP/master/nimBMP.nimble": "packageName   = \"nimBMP\"\nversion       = \"0.1.8\"\nauthor        = \"Andri Lim\"\ndescription   = \"BMP encoder and decoder\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"manual\"]\n\nrequires: \"nim >= 1.0.2\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  test \"-d:debug\", \"tests/test_codec.nim\"\n  test \"-d:debug\", \"tests/test_suite.nim\"\n  test \"-d:debug\", \"tests/test_misc.nim\"\n\n  test \"-d:release\", \"tests/test_codec.nim\"\n  test \"-d:release\", \"tests/test_suite.nim\"\n  test \"-d:release\", \"tests/test_misc.nim\"\n\n  test \"-d:release --gc:arc\", \"tests/test_codec.nim\"\n  test \"-d:release --gc:arc\", \"tests/test_suite.nim\"\n  test \"-d:release --gc:arc\", \"tests/test_misc.nim\"\n\ntask testvcc, \"Run tests with vcc compiler\":\n  test \"--cc:vcc -d:release\", \"tests/test_codec.nim\"\n  test \"--cc:vcc -d:release\", \"tests/test_suite.nim\"\n  test \"--cc:vcc -d:release\", \"tests/test_misc.nim\"\n",
"https://raw.githubusercontent.com/jiro4989/rect/master/rect.nimble": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"jiro4989\"\ndescription   = \"rect is a command to crop/paste rectangle text.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"rect\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\nrequires \"eastasianwidth >= 1.1.0\"\nrequires \"docopt >= 0.6.8\"\n\nimport strformat\n\ntask docs, \"Generate documents\":\n  exec \"nimble doc src/rect.nim -o:docs/rect.html\"\n  for m in [\"classifiedstring\", \"crop\", \"paste\", \"util\"]:\n    exec &\"nimble doc src/rect/{m}.nim -o:docs/{m}.html\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble docs -Y\"\n  exec \"nimble build -d:release -Y\"\n  exec \"./bin/rect -h\"\n  exec \"./bin/rect -v\"\n",
"https://github.com/ba0f3/timecop.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"Time travelling for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"subhook >= 0.1.1\"\n",
"https://raw.githubusercontent.com/akiradeveloper/msgpack-nim/master/msgpack.nimble": "[Package]\nname          = \"msgpack\"\nversion       = \"0.1.0\"\nauthor        = \"Akira Hayakawa\"\ndescription   = \"A MessagePack binding for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/jlp765/mapbits": "[Package]\nname: \"mapbits\"\nversion: \"1.0\"\nauthor: \"James Parkinson\"\ndescription: \"Access binary mapped portions of bytes using int variables\"\nlicense: \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.14.0\"\n",
"https://raw.githubusercontent.com/brentp/variantkey-nim/master/variantkey.nimble": "import ospaths\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\n# Package\n\nversion       = \"0.0.2\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"encode variants to uint64\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nsrcDir = \"src\"\ninstallExt = @[\"nim\", \"c\", \"h\"]\n\nskipDirs = @[\"tests\"]\n\nimport ospaths,strutils\n\ntask test, \"run the tests\":\n  exec \"nim c --lineDir:on --debuginfo -r src/variantkey\"\n",
"https://raw.githubusercontent.com/johnnovak/nim-binstreams/master/binstreams.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"John Novak <john@johnnovak.net>\"\ndescription   = \"Endianness aware stream I/O for Nim\"\nlicense       = \"WTFPL\"\n\ninstallDirs   = @[\"deps\"]\ninstallFiles  = @[\"binstreams.nim\", \"nim.cfg\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n\n# Tasks\n\ntask tests, \"Run all tests\":\n  exec \"nim c -r tests/tests\"\n\ntask docgen, \"Generate HTML documentation\":\n  exec \"nim doc -o:doc/binstreams.html binstreams\"\n",
"https://github.com/exelotl/natu": "version       = \"0.1.2\"\nauthor        = \"exelotl\"\ndescription   = \"Game Boy Advance development library\"\nlicense       = \"zlib\"\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/flenniken/nimlist": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Steve Flenniken\"\ndescription   = \"View the nim package list in your browser.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimlist\"]\n\nrequires \"nim >= 1.0.4\"\n\nproc open_in_browser(filename: string) =\n  ## Open the given file in a browser if the system has an open command.\n  exec \"(hash open 2>/dev/null && open $1) || echo 'open $1'\" % filename\n\ntask m, \"Build and run the nimlist command line application\":\n  exec \"nim c -r -d:ssl --hints:off --out:nimlist src/nimlist\"\n  open_in_browser(\"~/.nimlist/packages.html\")\n",
"https://raw.githubusercontent.com/lmariscal/figures/master/figures.nimble": "# Package\n\nversion     = \"1.2.0\"\nauthor      = \"Leonardo Mariscal\"\ndescription = \"Unicode symbols with Windows CMD fallbacks \"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/tulayang/nimnode": "# Package\nversion = \"0.1.1\"\nauthor = \"Wang Tong\"\ndescription = \"Library for async programming and communication. This Library uses an event-driven, non-blocking I/O model based on libuv. Furthermore, you can use ``Future`` ``async/await`` in the standard library to construct logical workflow to simplify programming tasks.\"\nlicense = \"MIT\"\nskipFiles = @[\"TODO.md\"]\n\n# Dependencies\nrequires \"nim >= 0.17.1\", \"httpkit >= 0.1.0\"",
"https://api.github.com/repos/Akito13/easy-bcrypt/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"0244bf308153c250d67c37324be78298d3560724\",\"size\":13,\"url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/theAkito/easy-bcrypt/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/0244bf308153c250d67c37324be78298d3560724\",\"download_url\":\"https://raw.githubusercontent.com/theAkito/easy-bcrypt/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/0244bf308153c250d67c37324be78298d3560724\",\"html\":\"https://github.com/theAkito/easy-bcrypt/blob/master/.gitignore\"}},{\"name\":\"COPYING\",\"path\":\"COPYING\",\"sha\":\"0e259d42c996742e9e3cba14c677129b2c1b6311\",\"size\":7048,\"url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/COPYING?ref=master\",\"html_url\":\"https://github.com/theAkito/easy-bcrypt/blob/master/COPYING\",\"git_url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/0e259d42c996742e9e3cba14c677129b2c1b6311\",\"download_url\":\"https://raw.githubusercontent.com/theAkito/easy-bcrypt/master/COPYING\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/COPYING?ref=master\",\"git\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/0e259d42c996742e9e3cba14c677129b2c1b6311\",\"html\":\"https://github.com/theAkito/easy-bcrypt/blob/master/COPYING\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"d53cf2d9545ff23d05330e1c2fa6d03243d9c923\",\"size\":503,\"url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/README.md?ref=master\",\"html_url\":\"https://github.com/theAkito/easy-bcrypt/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/d53cf2d9545ff23d05330e1c2fa6d03243d9c923\",\"download_url\":\"https://raw.githubusercontent.com/theAkito/easy-bcrypt/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/d53cf2d9545ff23d05330e1c2fa6d03243d9c923\",\"html\":\"https://github.com/theAkito/easy-bcrypt/blob/master/README.md\"}},{\"name\":\"easy_bcrypt.nim\",\"path\":\"easy_bcrypt.nim\",\"sha\":\"28cee30a3f701ef136f1a23559300a4ff8e22478\",\"size\":3503,\"url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/easy_bcrypt.nim?ref=master\",\"html_url\":\"https://github.com/theAkito/easy-bcrypt/blob/master/easy_bcrypt.nim\",\"git_url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/28cee30a3f701ef136f1a23559300a4ff8e22478\",\"download_url\":\"https://raw.githubusercontent.com/theAkito/easy-bcrypt/master/easy_bcrypt.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/easy_bcrypt.nim?ref=master\",\"git\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/28cee30a3f701ef136f1a23559300a4ff8e22478\",\"html\":\"https://github.com/theAkito/easy-bcrypt/blob/master/easy_bcrypt.nim\"}},{\"name\":\"easy_bcrypt.nimble\",\"path\":\"easy_bcrypt.nimble\",\"sha\":\"e3f23c583dc79daede1f8141c594eb7a16613c65\",\"size\":297,\"url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/easy_bcrypt.nimble?ref=master\",\"html_url\":\"https://github.com/theAkito/easy-bcrypt/blob/master/easy_bcrypt.nimble\",\"git_url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/e3f23c583dc79daede1f8141c594eb7a16613c65\",\"download_url\":\"https://raw.githubusercontent.com/theAkito/easy-bcrypt/master/easy_bcrypt.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/easy_bcrypt.nimble?ref=master\",\"git\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/blobs/e3f23c583dc79daede1f8141c594eb7a16613c65\",\"html\":\"https://github.com/theAkito/easy-bcrypt/blob/master/easy_bcrypt.nimble\"}},{\"name\":\"lib\",\"path\":\"lib\",\"sha\":\"0b2fed39e911cca7b8c0fd73371befba21a3f622\",\"size\":0,\"url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/lib?ref=master\",\"html_url\":\"https://github.com/theAkito/easy-bcrypt/tree/master/lib\",\"git_url\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/trees/0b2fed39e911cca7b8c0fd73371befba21a3f622\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/theAkito/easy-bcrypt/contents/lib?ref=master\",\"git\":\"https://api.github.com/repos/theAkito/easy-bcrypt/git/trees/0b2fed39e911cca7b8c0fd73371befba21a3f622\",\"html\":\"https://github.com/theAkito/easy-bcrypt/tree/master/lib\"}}]",
"https://raw.githubusercontent.com/jangko/nimPNG/master/nimPNG.nimble": "# Package\nversion       = \"0.3.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"PNG encoder and decoder\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"docs\"]\n\n# Deps\nrequires \"nim >= 0.19.0\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --outdir:build -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  exec \"nim -v\"\n  test \"-d:release\", \"tests/all_tests\"\n  test \"--gc:arc -d:release\", \"tests/all_tests\"\n\ntask testvcc, \"Run tests with vcc compiler\":\n  test \"--cc:vcc -d:release\", \"tests/all_tests\"\n",
"https://raw.githubusercontent.com/h3rald/hastyscribe/master/hastyscribe.nimble": "import\n  ospaths\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/hastyscribepkg/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/hastyscribepkg/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import hastyscribepkg/config\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = \"MIT\"\nbin           = @[\"hastyscribe\"]\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"json\", \"a\", \"css\", \"png\", \"svg\", \"woff\", \"c\", \"h\", \"in\"]\n\nrequires \"nim >= 1.4.0\"\n\nbefore install:\n  exec \"nifty install\"\n\n# Tasks\n\nconst\n  compile = \"nim c -d:release\"\n  linux_x64 = \"--cpu:amd64 --os:linux --passL:-static\"\n  windows_x64 = \"--cpu:amd64 --os:windows\"\n  macosx_x64 = \"\"\n  hs = \"src/hastyscribe\"\n  hs_file = \"src/hastyscribe.nim\"\n  zip = \"zip -X\"\n\nproc shell(command, args: string, dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"hastyscribe\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build HastyScribe for Windows (x64)\":\n  shell compile, windows_x64, hs_file\n\ntask linux_x64_build, \"Build HastyScribe for Linux (x64)\":\n  shell compile, linux_x64,  hs_file\n  \ntask macosx_x64_build, \"Build HastyScribe for Mac OS X (x64)\":\n  shell compile, macosx_x64, hs_file\n\ntask release, \"Release HastyScribe\":\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, filename_for(\"windows\", \"x64\"), hs & \".exe\"\n  shell \"rm\", hs & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, filename_for(\"linux\", \"x64\"), hs \n  shell \"rm\", hs \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, filename_for(\"macosx\", \"x64\"), hs \n  shell \"rm\", hs \n  echo \"\\n\\n\\n ALL DONE!\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/base32.nim/master/base32.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Huy Doan\"\ndescription   = \"Base32 library for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\n",
"https://github.com/bung87/amysql": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"bung87\"\ndescription   = \"Async MySQL Connector write in pure Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"\"\"src\"\"\"\nskipFiles     = @[\"index.nim\"]\nskipDirs      = @[\"tests\"]\n\ntask docs,\"a\":\n  exec \"nim doc --project src/index.nim\"\n\ntask ghpage,\"gh page\":\n  cd \"src/htmldocs\" \n  exec \"git init\"\n  exec \"git add .\"\n  exec \"git config user.name \\\"bung87\\\"\"\n  exec \"git config user.email \\\"crc32@qq.com\\\"\"\n  exec \"git commit -m \\\"docs(docs): update gh-pages\\\"\"\n  let url = \"\\\"https://bung87@github.com/bung87/amysql.git\\\"\"\n  exec \"git push --force --quiet \" & url & \" master:gh-pages\"\n\n\n# Dependencies\nrequires \"nim >= 1.3.1\" # await inside template needs\nrequires \"nimcrypto\"\nrequires \"regex\"\nrequires \"https://github.com/bung87/zstd\"\nrequires \"https://github.com/treeform/urlly\"\n# Optional dependencies:\n# https://github.com/bung87/zstd",
"https://raw.githubusercontent.com/dom96/pwned/master/pwned.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A client for the Pwned passwords API.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"pwned\"]\n\nskipExt = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n",
"https://raw.githubusercontent.com/hiteshjasani/nim-eternity/master/eternity.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Hitesh Jasani\"\ndescription   = \"A library to humanize elapsed times\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/Matceporial/nim-timespec_get/master/timespec_get.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Matceporial\"\ndescription   = \"Nanosecond-percision time using timespec_get of C11\"\nlicense       = \"0BSD\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"",
"https://raw.githubusercontent.com/isthisnagee/hsluv-nim/master/hsluv.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"isthisnagee\"\ndescription   = \"A port of HSLuv, a human friendly alternative to HSL.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/jyapayne/switch-build/master/switch_build.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Joey Payne\"\ndescription   = \"Nintendo Switch library libnx for Nim.\"\nlicense       = \"The Unlicense\"\n\nsrcDir = \"src\"\n\nbin = @[\"switch_build\"]\n\n# Deps\nrequires \"nim >= 0.18.1\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/test.nim\"\n",
"https://raw.githubusercontent.com/enimatek-nl/torm/master/torm.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"enimatek\"\ndescription   = \"Tiny object relational mapper for SQLite in Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.1\"\n",
"https://github.com/xyz32/boneIO": "[Package]\nname          = \"boneIO\"\nversion       = \"0.6.1\"\nauthor        = \"Radu Oana\"\ndescription   = \"Beagle bone black GPIO implementation\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.17.0\"\n",
"https://github.com/adelq/ulid": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Adel Qalieh\"\ndescription   = \"Universally Unique Lexicographically Sortable Identifier\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\", \"random >= 0.5.6\"\n\n# Tasks\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/test.nim\"\n\ntask perf, \"Runs the benchmark\":\n  exec \"nim c -r -d:release tests/bench.nim\"\n",
"https://github.com/juancarlospaco/nim-smnar": "version     = \"0.1.1\"\nauthor      = \"Juan Carlos\"\ndescription = \"Servicio Meteorologico Nacional Argentina API Client\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nskipDirs    = @[\"docs\", \"gui\"]\n\nrequires \"nim >= 1.2.0\"\nrequires \"zip >= 0.2.1\"\n",
"https://github.com/Matceporial/nim-timespec_get": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Matceporial\"\ndescription   = \"Nanosecond-percision time using timespec_get of C11\"\nlicense       = \"0BSD\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"",
"https://github.com/ThomasTJdev/nim_qr": "# Package\n\nversion       = \"1.3.0\"\nauthor        = \"Thomas T. Jarløv\"\ndescription   = \"QR-code tools. Generate SVG-files with QR-codes, get QR-code sizes, etc.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires: \"nim >= 1.4.0\"\n\n\nimport os\n\ntask setup, \"Generating C-code\":\n  const ext = when defined(windows): \".dll\" elif defined(macosx): \".dylib\" else: \".so\"\n  const path = when defined(windows): \"C:\\\\Windows\\\\System32\" else: \"/usr/lib\"\n  doAssert dirExists(path), \"Error directory not found: \" & path # Extremely unlikely\n\n  if not fileExists(path / \"qrcodegen\" & ext):\n    exec \"gcc -c -fPIC -o src/qr/qrcodegen.o src/qr/qrcodegen.c\"\n    exec \"gcc -shared -fPIC src/qr/qrcodegen.o -o src/qr/qrcodegen\" & ext\n    # ERROR: /usr/bin/ld: qrcodegen.o: relocation R_X86_64_PC32 against qrcodegen_encodeSegmentsAdvanced cant be used making shared object; recompile with -fPIC\n    try:\n      cpFile \"src/qr/qrcodegen\" & ext, path / \"qrcodegen\" & ext\n    except:\n      echo \"Failed to install dynamic library: \" & path / \"qrcodegen\" & ext\n      echo \"Please copy the file src/qr/qrcodegen\" & ext & \" to \" & path / \"qrcodegen\" & ext\n      when defined(windows):\n        echo \"and reboot the computer before using the qr module.\"\n  else:\n    echo \"Dynamic library already exists: \" & path / \"qrcodegen\" & ext\n\n\nbefore install:\n  setupTask()\n",
"https://github.com/arnetheduck/nim-result": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Jacek Sieka\"\ndescription   = \"Friendly, exception-free value-or-error returns, similar to Option[T]\"\nlicense       = \"MIT\"\nskipDirs      = @[\"benchmarks\"]\ninstallFiles  = @[\"result.nim\", \"results.nim\"]\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r result\"\n",
"https://github.com/paradox460/spurdify": "# Package\n\nversion       = \"0.0.6\"\nauthor        = \"Jeff Sandberg\"\ndescription   = \"Spurdification library and CLI\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"spurdify\"]\nbinDir        = \"bin/\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2, cligen >= 1.0.0 & < 1.1.0\"\n\ntask upx, \"Build minified binary\":\n  let args = \"nimble build -d:release -y\"\n  exec args\n\n  if findExe(\"upx\") != \"\":\n    echo \"Running `upx --best`\"\n    exec \"upx --best bin/spurdify\"\n\n  if findExe(\"sha256sum\") != \"\":\n    echo \"Running `sha256sum`\"\n    exec \"sha256sum bin/spurdify\"\n",
"https://raw.githubusercontent.com/Michedev/sequtils2/master/sequtils2.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"Michele De Vita\"\ndescription   = \"Additional methods for sequences that are not present in sequtils\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\nskipDirs = @[\"tests\"]\n",
"https://raw.githubusercontent.com/achesak/nim-fileinput/master/fileinput.nimble": "[Package]\nname = \"fileinput\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"iterates through files and lines of files, based on Python's fileinput module\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/JohnAD/jesterjson": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"A plugin for Jester that creates a json object and embeds the request object information.\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"jesterwithplugins >= 0.5.0\"\n",
"https://github.com/treeform/flatty": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"treeform\"\ndescription   = \"Flatty - tools and serializer for plain flat binary files.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/oskca/webview": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"oskca\"\ndescription   = \"Nim bindings for zserge\\'s webview\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\ntask test, \"a simple test case\":\n    exec \"nim c -r tests/bindEx.nim\"\n\ntask docs, \"generate doc\":\n    exec \"nim doc2 -o:docs/webview.html webview.nim\"\n\ntask sync, \"update webview.h\":\n    exec \"wget -O webview/webview.h https://raw.githubusercontent.com/zserge/webview/master/webview.h\"\n    exec \"wget -O webview/webview.go https://raw.githubusercontent.com/zserge/webview/master/webview.go\"\n    exec \"wget -O webview/README.md https://raw.githubusercontent.com/zserge/webview/master/README.md\"\n\ntask clean, \"clean tmp files\":\n    exec \"rm -rf nimcache\"\n    exec \"rm -rf tests/nimcache\"\n",
"https://raw.githubusercontent.com/bung87/datetime_parse/master/datetime_parse.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"bung87\"\ndescription   = \"parse datetime from various resources\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"c\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"timezones >= 0.5.1\"\n\ntask dist,\"dist src/datetime_parse.nim \":\n  exec \"nim js --taintMode:off -d:release -d:nodejs --checks:on -o:dist/datetime_parse.js src/datetime_parse\"\n\ntask distjs,\"dist src/datetime_parse.nim \":\n  exec \"nim js --taintMode:off -d:release -d:nodejs --checks:on -o:lib/datetime_parse.js src/datetime_parse\"\n\ntask buildjs,\"build src/datetime_parse.nim \":\n  exec \"nim js --taintMode:off  -d:nodejs --checks:on -o:build/datetime_parse.js src/datetime_parse\"\n\ntask testjs,\"test js\":\n  exec \"nimble buildjs && node tests/test4.js\"\n\ntask tests, \"Runs the test suite\":\n  exec \"nimble test\"\n  exec \"nimble testjs\"",
"https://github.com/Rekihyt/nimviz": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Rekihyt\"\ndescription   = \"A wrapper for the graphviz c api.\"\nlicense       = \"MIT\"\nbinDir        = \"bin\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"",
"https://raw.githubusercontent.com/dom96/sass/master/sass.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A wrapper for the libsass library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu):\n    foreignDep \"libsass-dev\"\n  else:\n    foreignDep \"libsass\"\n\ntask test, \"Runs tester\":\n  exec \"nim c -r tests/tester\"",
"https://github.com/6A/Keystone.nim": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Grégoire Geis\"\ndescription   = \"Bindings to the Keystone Assembler.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.8\"\n",
"https://api.github.com/repos/saratchandra92/nim-geocoding/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"size\":10,\"url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"download_url\":\"https://raw.githubusercontent.com/iamd3vil/nim-geocoding/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"html\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/.gitignore\"}},{\"name\":\"LICENSE.md\",\"path\":\"LICENSE.md\",\"sha\":\"99e3ddeffc1ec6eaaea8a24259a297d2afd44914\",\"size\":1081,\"url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/LICENSE.md?ref=master\",\"html_url\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/LICENSE.md\",\"git_url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/99e3ddeffc1ec6eaaea8a24259a297d2afd44914\",\"download_url\":\"https://raw.githubusercontent.com/iamd3vil/nim-geocoding/master/LICENSE.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/LICENSE.md?ref=master\",\"git\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/99e3ddeffc1ec6eaaea8a24259a297d2afd44914\",\"html\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/LICENSE.md\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"c19c269b010ff189113dd0e8a9e1ba4dca86da3f\",\"size\":1308,\"url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/README.md?ref=master\",\"html_url\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/c19c269b010ff189113dd0e8a9e1ba4dca86da3f\",\"download_url\":\"https://raw.githubusercontent.com/iamd3vil/nim-geocoding/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/c19c269b010ff189113dd0e8a9e1ba4dca86da3f\",\"html\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/README.md\"}},{\"name\":\"documentation.html\",\"path\":\"documentation.html\",\"sha\":\"2e4b536288ef8ef24f0836cdbe5b125a52b5f6bb\",\"size\":39836,\"url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/documentation.html?ref=master\",\"html_url\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/documentation.html\",\"git_url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/2e4b536288ef8ef24f0836cdbe5b125a52b5f6bb\",\"download_url\":\"https://raw.githubusercontent.com/iamd3vil/nim-geocoding/master/documentation.html\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/documentation.html?ref=master\",\"git\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/2e4b536288ef8ef24f0836cdbe5b125a52b5f6bb\",\"html\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/documentation.html\"}},{\"name\":\"geocoding.nim\",\"path\":\"geocoding.nim\",\"sha\":\"6e566f3a419148e9c7d0e75d52dda5d6ed0e055f\",\"size\":3186,\"url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/geocoding.nim?ref=master\",\"html_url\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/geocoding.nim\",\"git_url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/6e566f3a419148e9c7d0e75d52dda5d6ed0e055f\",\"download_url\":\"https://raw.githubusercontent.com/iamd3vil/nim-geocoding/master/geocoding.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/geocoding.nim?ref=master\",\"git\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/6e566f3a419148e9c7d0e75d52dda5d6ed0e055f\",\"html\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/geocoding.nim\"}},{\"name\":\"nim-geocoding.nimble\",\"path\":\"nim-geocoding.nimble\",\"sha\":\"49794a36b075d02f349ae7bf32f2eed9ead3f2f8\",\"size\":224,\"url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/nim-geocoding.nimble?ref=master\",\"html_url\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/nim-geocoding.nimble\",\"git_url\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/49794a36b075d02f349ae7bf32f2eed9ead3f2f8\",\"download_url\":\"https://raw.githubusercontent.com/iamd3vil/nim-geocoding/master/nim-geocoding.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/contents/nim-geocoding.nimble?ref=master\",\"git\":\"https://api.github.com/repos/iamd3vil/nim-geocoding/git/blobs/49794a36b075d02f349ae7bf32f2eed9ead3f2f8\",\"html\":\"https://github.com/iamd3vil/nim-geocoding/blob/master/nim-geocoding.nimble\"}}]",
"https://github.com/nim-lang/niminst": "[Package]\r\nname          = \"niminst\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Tool to generate installers for Nim\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.11.0\"\r\n",
"https://raw.githubusercontent.com/achesak/nim-playlists/master/playlists.nimble": "[Package]\nname = \"playlists\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with M3U, PLS, and XSPF playlist files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/kristianmandrup/react-16.nim/master/react16.nimble": "# Package\n\nversion       = \"0.3.6\"\nauthor        = \"Andrea Ferretti and Kristian Mandrup\"\ndescription   = \"Sample React 16.6 SPA with hooks using Nim\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"example\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask example, \"builds example application\":\n  --define: release\n  switch(\"out\", \"example/app.js\")\n  --path: \".\"\n  setCommand \"js\", \"example/app.nim\"\n",
"https://github.com/yglukhov/coverage": "version = \"0.1.0\"\nauthor = \"Yuriy Glukhov\"\ndescription = \"Code coverage library for Nim\"\nlicense = \"MIT\"\nbin = @[\"nimcoverage\"]\n\ninstallFiles = @[\"coverageTemplate.html\", \"coverage.nim\"]\n\n# Deps\nrequires \"nim >= 0.10.0\"\nrequires \"nake\"\n",
"https://raw.githubusercontent.com/icyphox/crap/master/crap.nimble": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"Anirudh\"\ndescription   = \"`rm` files without fear\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"crap\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/bung87/zopflipng": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"bung87\"\ndescription   = \"zopflipng-like png optimization\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.3.5\"\nrequires \"nimPNG\"\n",
"https://raw.githubusercontent.com/Araq/genieos/master//genieos.nimble": "[Package]\nname          = \"genieos\"\nversion       = \"9.4.3\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Too awesome procs to be included in Nim's os module.\"\"\"\nlicense       = \"MIT\"\n#bin           = \"trash-binary/trash\"\n\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\ndocindex.rst\ndocs/CHANGES.rst\ngenieos.nim\ngenieos_pkg/genieos_macosx.m\nnakefile.nim\ntrash-binary/README.rst\ntrash-binary/trash.nim\ntrash-binary/trash.nimble\ntrash-binary/trash.nim.cfg\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nx11 >= 1.0\n\n\"\"\"\n",
"https://github.com/jiro4989/markx": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"jiro4989\"\ndescription   = \"markx selects execution targets with editor and executes commands.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"markx\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 0.9.47\"\n\nimport os, strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"markx\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/FedericoCeratto/nimi3status": "[Package]\nname          = \"nimi3status\"\nversion       = \"0.2.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"\"\"Lightweight i3 status bar.\"\"\"\nlicense       = \"GPLv3\"\n\nbin           = \"nimi3status\"\n\nInstallFiles = \"\"\"\nLICENSE\nexample.conf.json\nREADME.adoc\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\ncolorsys >= 0.1\nnim >= 0.12.0\n\"\"\"\n",
"https://raw.githubusercontent.com/metasyn/nim-cexc-splunk/master/nim_cexc.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Alexander Johnson\"\ndescription   = \"A simple chunked external protocol interface for Splunk custom search commands.\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"",
"https://raw.githubusercontent.com/ThomasTJdev/nim_xiaomi/master/xiaomi.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev\"\ndescription   = \"Library for working with Xiaomi devices\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"multicast >= 0.1.1\"\nrequires \"nimcrypto >= 0.3.2\"\n",
"https://github.com/nitely/nim-graphemes": "# Package\n\nversion = \"0.9.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Grapheme aware string handling (Unicode tr29)\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\", \"gen\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r tests/tests\"\n  exec \"nim doc --project -o:./docs/ugh ./src/graphemes.nim\"\n\ntask gen_re, \"Gen regex\":\n  exec \"nim c -r gen/gen_re\"\n\ntask gen_tables, \"Gen break tables\":\n  exec \"nim c -r gen/gen_grapheme_break\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/graphemes.nim\"\n",
"https://github.com/NimCompression/nimsnappyc": "packageName   = \"nimsnappyc\"\nversion       = \"0.0.4\"\nauthor        = \"NimCompression's members and conributors\"\ndescription   = \"Snappy-C lib wrapper for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires      \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/planety/gungnir/master/gungnir.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Cryptographic signing for Nim.\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/jxy/chebyshev": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Xiao-Yong Jin\"\ndescription   = \"Chebyshev approximation.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask test, \"Run test\":\n  --define: release\n  --run\n  setCommand \"c\", \"chebyshev.nim\"\n",
"https://github.com/JeffersonLab/ensem": "# Package\nversion       = \"1.4.0\"\nauthor        = \"Robert Edwards\"\ndescription   = \"Support for ensemble file format and arithmetic using jackknife/bootstrap propagation of errors\"\nlicense       = \"BSD3\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\n# Builds\ntask test, \"Run the test suite\":\n  exec \"nim c -r tests/test_ensem\"\n\ntask docgen, \"Regenerate the documentation\":\n  exec \"nim doc2 --out:docs/ensem.html src/ensem.nim\"\n\n\n",
"https://github.com/pragmagic/karax": "# Package\n\nversion       = \"1.2.1\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"Karax is a framework for developing single page applications in Nim.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"ws\"\nrequires \"dotenv\"\nskipDirs = @[\"examples\", \"experiments\", \"tests\"]\n\nbin = @[\"karax/tools/karun\"]\ninstallExt = @[\"nim\"]\n",
"https://raw.githubusercontent.com/gokr/norx/master/norx.nimble": "# Package\nversion       = \"0.4.2\"\nauthor        = \"Göran Krampe\"\ndescription   = \"A wrapper of the ORX 2.5D game engine\"\nlicense       = \"Zlib\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n",
"https://api.github.com/repos/ithkuil/redissessions/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"51911c7bb32bc360d4d651f9846182f1677b0669\",\"size\":17,\"url\":\"https://api.github.com/repos/runvnc/redissessions/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/runvnc/redissessions/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/51911c7bb32bc360d4d651f9846182f1677b0669\",\"download_url\":\"https://raw.githubusercontent.com/runvnc/redissessions/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/runvnc/redissessions/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/51911c7bb32bc360d4d651f9846182f1677b0669\",\"html\":\"https://github.com/runvnc/redissessions/blob/master/.gitignore\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"0bd4968a2de2ae6299eb3175c12414f972be2824\",\"size\":1097,\"url\":\"https://api.github.com/repos/runvnc/redissessions/contents/README.md?ref=master\",\"html_url\":\"https://github.com/runvnc/redissessions/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/0bd4968a2de2ae6299eb3175c12414f972be2824\",\"download_url\":\"https://raw.githubusercontent.com/runvnc/redissessions/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/runvnc/redissessions/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/0bd4968a2de2ae6299eb3175c12414f972be2824\",\"html\":\"https://github.com/runvnc/redissessions/blob/master/README.md\"}},{\"name\":\"redissessions.babel\",\"path\":\"redissessions.babel\",\"sha\":\"56778d32678961eb4f9368d308e09d616c11f305\",\"size\":215,\"url\":\"https://api.github.com/repos/runvnc/redissessions/contents/redissessions.babel?ref=master\",\"html_url\":\"https://github.com/runvnc/redissessions/blob/master/redissessions.babel\",\"git_url\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/56778d32678961eb4f9368d308e09d616c11f305\",\"download_url\":\"https://raw.githubusercontent.com/runvnc/redissessions/master/redissessions.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/runvnc/redissessions/contents/redissessions.babel?ref=master\",\"git\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/56778d32678961eb4f9368d308e09d616c11f305\",\"html\":\"https://github.com/runvnc/redissessions/blob/master/redissessions.babel\"}},{\"name\":\"redissessions.nim\",\"path\":\"redissessions.nim\",\"sha\":\"fc55cfad191a65fca4f0bdea37d2d38ed6e0e77e\",\"size\":3363,\"url\":\"https://api.github.com/repos/runvnc/redissessions/contents/redissessions.nim?ref=master\",\"html_url\":\"https://github.com/runvnc/redissessions/blob/master/redissessions.nim\",\"git_url\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/fc55cfad191a65fca4f0bdea37d2d38ed6e0e77e\",\"download_url\":\"https://raw.githubusercontent.com/runvnc/redissessions/master/redissessions.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/runvnc/redissessions/contents/redissessions.nim?ref=master\",\"git\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/fc55cfad191a65fca4f0bdea37d2d38ed6e0e77e\",\"html\":\"https://github.com/runvnc/redissessions/blob/master/redissessions.nim\"}},{\"name\":\"session\",\"path\":\"session\",\"sha\":\"876e6aa1b17b55b36c28a1e629ab677d6fdc01a7\",\"size\":1085320,\"url\":\"https://api.github.com/repos/runvnc/redissessions/contents/session?ref=master\",\"html_url\":\"https://github.com/runvnc/redissessions/blob/master/session\",\"git_url\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/876e6aa1b17b55b36c28a1e629ab677d6fdc01a7\",\"download_url\":\"https://raw.githubusercontent.com/runvnc/redissessions/master/session\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/runvnc/redissessions/contents/session?ref=master\",\"git\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/876e6aa1b17b55b36c28a1e629ab677d6fdc01a7\",\"html\":\"https://github.com/runvnc/redissessions/blob/master/session\"}},{\"name\":\"testserv.nim\",\"path\":\"testserv.nim\",\"sha\":\"11682e0b10c391d88158b602b05d2d46d3224451\",\"size\":460,\"url\":\"https://api.github.com/repos/runvnc/redissessions/contents/testserv.nim?ref=master\",\"html_url\":\"https://github.com/runvnc/redissessions/blob/master/testserv.nim\",\"git_url\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/11682e0b10c391d88158b602b05d2d46d3224451\",\"download_url\":\"https://raw.githubusercontent.com/runvnc/redissessions/master/testserv.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/runvnc/redissessions/contents/testserv.nim?ref=master\",\"git\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/11682e0b10c391d88158b602b05d2d46d3224451\",\"html\":\"https://github.com/runvnc/redissessions/blob/master/testserv.nim\"}},{\"name\":\"testsession.sh\",\"path\":\"testsession.sh\",\"sha\":\"adb6e4bb8b4aa5a9228b6a487ca879d46564c9bc\",\"size\":1970,\"url\":\"https://api.github.com/repos/runvnc/redissessions/contents/testsession.sh?ref=master\",\"html_url\":\"https://github.com/runvnc/redissessions/blob/master/testsession.sh\",\"git_url\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/adb6e4bb8b4aa5a9228b6a487ca879d46564c9bc\",\"download_url\":\"https://raw.githubusercontent.com/runvnc/redissessions/master/testsession.sh\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/runvnc/redissessions/contents/testsession.sh?ref=master\",\"git\":\"https://api.github.com/repos/runvnc/redissessions/git/blobs/adb6e4bb8b4aa5a9228b6a487ca879d46564c9bc\",\"html\":\"https://github.com/runvnc/redissessions/blob/master/testsession.sh\"}}]",
"https://github.com/mpinese/nimpress": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Mark Pinese <mpinese@ccia.org.au>\"\ndescription   = \"Calculate polygenic scores from VCFs\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimpress\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"docopt >= 0.6.8\"\nrequires \"hts >= 0.2.21\"\nrequires \"lapper >= 0.1.5\"\n\n\n# Tests\n\ntask test, \"Run the test suite\":\n  exec \"nim c -r -d:testing tests/test_set1.nim\"\n  exec \"nim c -r -d:testing tests/test_stats.nim\"\n\ntask testfail, \"Run a deliberately failing test suite, to check CI failure detection\":\n  exec \"nim c -r -d:testing tests/test_fail.nim\"\n",
"https://raw.githubusercontent.com/jiro4989/eachdo/master/eachdo.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"jiro4989\"\ndescription   = \"eachdo executes commands with each multidimensional values\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"eachdo\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"argparse >= 0.10.1\"\n",
"https://raw.githubusercontent.com/xland/nimeverything/master/nimeverything.nimble": "[Package]\nname          = \"nimeverything\"\nversion       = \"0.1.0\"\nauthor        = \"liulun\"\ndescription   = \"everything wrapper (everything:http://www.voidtools.com/)\"\nlicense       = \"MIT\"\n",
"https://raw.githubusercontent.com/johnscillieri/psutil-nim/master/psutil.nimble": "# Package\nversion       = \"0.6.0\"\nauthor        = \"Juan Carlos, John Scillieri, Nim community\"\ndescription   = \"Psutil is a cross-platform library for retrieving information on running processes and system utilization (CPU, memory, disks, network)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/flenniken/nimlist/master/nimlist.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Steve Flenniken\"\ndescription   = \"View the nim package list in your browser.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimlist\"]\n\nrequires \"nim >= 1.0.4\"\n\nproc open_in_browser(filename: string) =\n  ## Open the given file in a browser if the system has an open command.\n  exec \"(hash open 2>/dev/null && open $1) || echo 'open $1'\" % filename\n\ntask m, \"Build and run the nimlist command line application\":\n  exec \"nim c -r -d:ssl --hints:off --out:nimlist src/nimlist\"\n  open_in_browser(\"~/.nimlist/packages.html\")\n",
"https://github.com/joachimschmidt557/nim-lscolors": "# Package\n\nversion       = \"0.3.3\"\nauthor        = \"joachimschmidt557\"\ndescription   = \"A library for colorizing paths according to LS_COLORS\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/MarcAzar/RollingHash/master/RollingHash.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Marc Azar\"\ndescription   = \"A high performance Nim implementation of a Cyclic Polynomial Hash, aka BuzHash, and Rabin-Karp algorithm.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://raw.githubusercontent.com/moigagoo/norm/master/norm.nimble": "# Package\n\nversion       = \"2.2.2\"\nauthor        = \"Constantine Molchanov\"\ndescription   = \"Nim ORM for SQLite and PostgreSQL.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\", \"htmldocs\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"ndb >= 0.19.8\"\n\ntask test, \"Run tests\":\n  exec \"testament all\"\n\ntask docs, \"Generate docs\":\n  rmDir \"htmldocs\"\n  exec \"nimble doc --outdir:htmldocs --project --index:on src/norm\"\n  exec \"nim rst2html -o:htmldocs/index.html README.rst\"\n  exec \"testament html\"\n  mvFile(\"testresults.html\", \"htmldocs/testresults.html\")\n  cpFile(\"CNAME\", \"htmldocs/CNAME\")\n",
"https://raw.githubusercontent.com/nim-lang/python/master/python.nimble": "# Package\nversion = \"1.2\"\nauthor = \"Andreas Rumpf, Matic Kukovec\"\ndescription = \"Wrapper to interface with Python 1/2 interpreter\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.13.0\"\n",
"https://raw.githubusercontent.com/jlp765/db/master/db.nimble": "[Package]\nname          = \"db\"\nversion       = \"1.1.0\"\nauthor        = \"James Parkinson\"\ndescription   = \"Unified database access to Sqlite, MySql, and Postgres\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"\n",
"https://github.com/binhonglee/stones": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"BinHong Lee\"\ndescription   = \"A library of useful functions and tools for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"test\"]\n\nrequires \"nim >= 1.0.0\"\n\ntask docs, \"Build docs\":\n  exec \"./scripts/docs.nims\"\n\ntask test, \"Runs the test suite\":\n  exec \"./scripts/tests.nims\"\n",
"https://github.com/haxscramper/ngspice": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"haxscramper\"\ndescription   = \"Analog electronic circuit simiulator library\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\", \"sorta\", \"hmisc\"\n",
"https://github.com/bung87/buffer": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"bung87\"\ndescription   = \"buffer\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"struct\"",
"https://raw.githubusercontent.com/Skrylar/nim-jack/master/jack.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Skrylar\"\ndescription   = \"Shiny bindings to the JACK Audio Connection Kit.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://github.com/sealmove/testify": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"File-based unit testing system\"\nlicense       = \"MIT\"\nbin           = @[\"testify\"]\n",
"https://raw.githubusercontent.com/ba0f3/dnsclient.nim/master/dnsclient.nimble": "# Package\n\nversion       = \"0.0.3\"\nauthor        = \"Huy Doan\"\ndescription   = \"Simple DNS Client & Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"dnsclient\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/status-im/nim-eth-bloom": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum Bloom Filter\"\nlicense       = \"Apache License 2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18\",\n         \"nimcrypto\",\n         \"stint\"\n\ntask test, \"Run tests\":\n  --run\n  --threads:\"on\"\n  setCommand \"c\", \"tests/test1.nim\"\n",
"https://raw.githubusercontent.com/zielmicha/reactor.nim/master/reactor.nimble": "version       = \"0.6.0\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"Asynchronous networking engine for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"bench\", \"examples\", \"tests\", \"doc\"]\n\nrequires \"nim >= 0.17.0\"\nrequires \"collections >= 0.5.0\"\n",
"https://raw.githubusercontent.com/yglukhov/coverage/master/coverage.nimble": "version = \"0.1.0\"\nauthor = \"Yuriy Glukhov\"\ndescription = \"Code coverage library for Nim\"\nlicense = \"MIT\"\nbin = @[\"nimcoverage\"]\n\ninstallFiles = @[\"coverageTemplate.html\", \"coverage.nim\"]\n\n# Deps\nrequires \"nim >= 0.10.0\"\nrequires \"nake\"\n",
"https://raw.githubusercontent.com/aquilax/sparkline-nim/master/sparkline.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"aquilax\"\ndescription   = \"Sparkline library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/bung87/finalseg/master/finalseg.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zhoupeng\"\ndescription   = \"jieba\\'s finalseg port to nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"regex\"\n\n",
"https://github.com/arturo-lang/arturo": "######################################################\n# Arturo\n# Programming Language + Bytecode VM compiler\n# (c) 2020 Arturo Contributors\n# (c) 2021 Yanis Zafirópulos\n#\n# @file: arturo.nimble\n######################################################\n\n# Package\n\nversion       = static readFile(\"version/version\")\nauthor        = \"Yanis Zafirópulos\"\ndescription   = \"Simple, modern and portable interpreted programming language for efficient scripting\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"arturo\"]\nbinDir        = \"bin\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/binhonglee/wings/master/wings.nimble": "# Package\n\nversion      = \"0.0.6\"\nauthor       = \"BinHong Lee\"\ndescription  = \"A simple cross language struct and enum file generator.\"\nlicense      = \"MIT\"\nskipDirs     = @[\"examples\"]\nbin          = @[\"wings\", \"staticlang\"]\nsrcDir       = \"src/main\"\ninstallExt   = @[\"nim\"]\n\n# While it should still work for any nim version over 1.0.0, its only actively\n# tested against 1.4.0 due to some changes in 1.4.0 causing some inconsistency\n# in the generated code (breaking CI).\nrequires \"nim >= 1.4.0\"\nrequires \"stones#devel\"\n\ntask genFile, \"Generate file(s)\":\n  exec \"nimble build\"\n  var start = false\n  var temp: string = \"\"\n  for i in countup(0, paramCount(), 1):\n    if start:\n      temp &= \" \" & paramStr(i)\n    elif paramStr(i) == \"genFile\":\n      start = true\n  exec \"./wings\" & temp\n",
"https://raw.githubusercontent.com/felipetesc/NimChromePath/master/nimchromepath.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"felipetesc\"\ndescription   = \"Thin lib to find if chrome exists on Windows, Mac, or Linux\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/ba0f3/libnetfilter_queue.nim/master/libnetfilter_queue.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"libnetfilter_queue wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\n",
"https://github.com/YesDrX/bitarray": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yes DrX\"\ndescription   = \"bitarray\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/Foldover/nim-p5": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jacob Romano\"\ndescription   = \"Nim bindings for p5.js\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"",
"https://github.com/ba0f3/libipset.nim": "[Package]\nname          = \"libipset\"\nversion       = \"0.0.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"libipset wrapper for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/inv2004/nim-decimal/master/decimal.nimble": "packageName   = \"decimal\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A correctly-rounded arbitrary precision decimal floating point arithmetic library\"\nlicense       = \"(MIT or Apache License 2.0) and Simplified BSD\"\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\n\n### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  # TODO, don't forget to change defaultLang to `cpp` if the project requires C++\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  --nimcache: \"nimcache\"\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://github.com/jiro4989/nimjson": "# Package\n\nversion       = \"1.2.8\"\nauthor        = \"jiro4989\"\ndescription   = \"nimjson generates nim object definitions from json documents.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimjson\"]\nbinDir        = \"bin\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nimport strformat, os\n\ntask docs, \"Generate documents\":\n  exec \"nimble doc src/nimjson.nim -o:docs/nimjson.html\"\n\ntask examples, \"Run examples\":\n  for dir in [\"readfile\", \"mapping\"]:\n    withDir \"examples/\" & dir:\n      exec \"nim c -d:release main.nim\"\n      exec \"./main\"\n\ntask buildjs, \"Generate JS lib\":\n  mkdir \"docs/js\"\n  exec \"nimble js js/nimjson_js.nim -o:docs/js/nimjson.js\"\n",
"https://github.com/lcrees/libuv": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lcrees\"\ndescription   = \"libuv bindings for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/genotrance/nimgit2/master/nimgit2.nimble": "# Package\n\nversion       = \"0.3.4\"\nauthor        = \"genotrance\"\ndescription   = \"libgit2 wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.6.3\"\n\nvar\n  suffix = \"--path:.. -r tests/tnimgit2.nim\"\n  force = \"\"\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\":\n    buildDocs(@[\"nimgit2.nim\"], \"build/htmldocs\",\n              defines = @[\"git2Conan\", \"git2SetVer=0.28.3\", \"git2Static\"])\nelse:\n  task docs, \"Do nothing\": discard\n\ntask testDyn, \"Dynamic\":\n  exec \"nim c \" & force & \" -d:git2DL -d:git2SetVer=1.0.0 \" & suffix\n\ntask testStatic, \"Static\":\n  exec \"nim c \" & force & \" -d:git2Git -d:git2Static \" & suffix\n\ntask testJBB, \"JBB\":\n  exec \"nim c \" & force & \" -d:git2JBB -d:git2SetVer=0.28.5 \" & suffix\n  exec \"nim c \" & force & \" -d:git2JBB -d:git2SetVer=1.0.1 \" & suffix\n\ntask testConan, \"Conan\":\n  exec \"nim c \" & force & \" -d:git2Conan -d:git2SetVer=0.28.3 \" & suffix\n  # Conan static .lib is not recognized on Windows\n  when not defined(Windows):\n    exec \"nim c \" & force & \" -d:git2Conan -d:git2SetVer=0.28.3 -d:git2Static \" & suffix\n\ntask test, \"Run tests\":\n  force = \"-f\"\n  testDynTask()\n  testStaticTask()\n  testJBBTask()\n  testConanTask()\n  docsTask()\n",
"https://github.com/achesak/nim-robotparser": "[Package]\nname = \"robotparser\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Determine if a useragent can access a particular URL using robots.txt\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://raw.githubusercontent.com/xmonader/nimassets/master/nimassets.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"bundle your assets to a nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimassets\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask assetsBin, \"Build nimassets\":\n    exec \"nimble build --threads:on\"\n\ntask buildTemplates, \"bundle templates in templatesdir\":\n    # exec \"nimble assetsBin\"\n    exec \"nimassets -d=templatesdir -o=assetsfile.nim\"\n\ntask buildTemplatesFast, \"bundle templates in templatesdir fast\":\n    # exec \"nimble assetsBin\"\n    exec \"nimassets -d=templatesdir -o=assetsfilefast.nim -f\"",
"https://raw.githubusercontent.com/snus-kin/flickr-image-bot/master/flickr_image_bot.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"snus-kin\"\ndescription   = \"Twitter bot for fetching flickr images with tags\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"flickr_image_bot\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\nrequires \"https://github.com/snus-kin/twitter.nim\"\n",
"https://github.com/planetis-m/protocoled": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Antonis\"\ndescription   = \"An interface macro for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.9\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-openweathermap/master/openweathermap.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"OpenWeatherMap API Lib for Nim, Free world wide Creative Commons & Open Data Licensed Weather data\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-osutil/master/osutil.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"OS Utils for Nim, simple tiny but useful procs for OS. Turn Display OFF, set Process Name, set Process CPU Usage Limit cap from 5% to 100% on global percentage.\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/nepeckman/nerve-rpc/master/nerve.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"nepeckman\"\ndescription   = \"An RPC framework\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.6\"\nrequires \"ws\"\n\ntask itests, \"Runs intergration tests\":\n  exec \"nimble js tests/client.nim\"\n  exec \"nimble c -r tests/server.nim\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-requirementstxt/master/requirementstxt.nimble": "version     = \"0.1.0\"\nauthor      = \"Juan Carlos\"\ndescription = \"Python requirements.txt parser for Nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/jiro4989/maze": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"jiro4989\"\ndescription   = \"A command and library to generate mazes\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"maze\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n\ntask docs, \"Generate documents\":\n  rmDir \"docs\"\n  exec \"nimble doc --project --index:on -o:docs src/maze.nim\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble check\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble docs -Y\"\n  exec \"nimble build -d:release -Y\"\n  exec \"./bin/maze -h\"\n  exec \"./bin/maze -v\"\n\nimport strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"maze\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = &\"dist/{assets}\"\n  mkDir &\"{dir}/bin\"\n  cpFile &\"bin/{app}\", &\"{dir}/bin/{app}\"\n  cpFile \"LICENSE\", &\"{dir}/LICENSE\"\n  cpFile \"README.adoc\", &\"{dir}/README.adoc\"\n  withDir \"dist\":\n    exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://raw.githubusercontent.com/status-im/nim-faststreams/master/faststreams.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"faststreams\"\nversion       = \"0.2.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Nearly zero-overhead input/output streams for Nim\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"stew\",\n         \"testutils\",\n         \"chronos\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"-d:debug   --threads:on\", \"tests/all_tests\"\n  test \"-d:release --threads:on\", \"tests/all_tests\"\n  test \"-d:danger  --threads:on\", \"tests/all_tests\"\n",
"https://github.com/nimscale/stor": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Khaled Karam\"\ndescription   = \"Super efficient object storage system\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\n",
"https://github.com/lompik/pari.nim": "[Package]\nname          = \"pari\"\nversion       = \"0.1.0\"\nauthor        = \"Lompik\"\ndescription   = \"Pari/Gp C library wrapper for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/genotrance/nimkerberos": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"WinKerberos wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimkerberos\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n\n",
"https://github.com/treeform/digitalocean": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"treeform\"\ndescription   = \"Wrapper for DigitalOcean HTTP API.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/gabbhack/deser/master/deser.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"gabbhack\"\ndescription   = \"De/serialization library for Nim \"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\", \"htmldocs\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.2, https://github.com/gabbhack/anycase-fork >= 0.2.0\"\n\n# Tasks\nimport strformat, strutils, sequtils\n\nproc recursiveListFiles(dir: string, l: var seq[string]) =\n  for i in listDirs(dir):\n    recursiveListFiles(i, l)\n\n  for i in listFiles(dir):\n    if i.endsWith(\".nim\"):\n      l.add(i)\n\nproc recursiveListFiles(dir: string): seq[string] =\n  recursiveListFiles(dir, result)\n\ntask pretty, \"Pretty source code\":\n  for i in concat(recursiveListFiles(srcDir), recursiveListFiles(\"tests\")):\n    echo fmt\"Pretty {i}\"\n    exec fmt\"nimpretty {i} --indent:2\"\n\ntask test, \"Run tests\":\n  exec \"nimble install deser_json -y\"\n  exec \"testament all\"\n\ntask docs, \"Generate docs\":\n  rmDir \"docs\"\n  exec \"nimble doc2 --outdir:docs --project --git.url:https://github.com/gabbhack/deser --git.commit:master --index:on src/deser\"\n  exec \"testament html\"\n  mvFile(\"testresults.html\", \"docs/testresults.html\")\n",
"https://raw.githubusercontent.com/dom96/nim-opencv/master/opencv.nimble": "[Package]\nname          = \"opencv\"\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"OpenCV wrapper\"\nlicense       = \"MIT\"\n\nskipDirs = \"tests\"\n\n[Deps]\nRequires: \"nim >= 0.9.3\"",
"https://github.com/rockcavera/nim-iputils": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"rockcavera\"\ndescription   = \"Utilities for use with IP. It has functions for IPv4, IPv6 and CIDR.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"stew\"\n",
"https://github.com/MnlPhlp/cli_menu": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"MnlPhlp\"\ndescription   = \"A library to create interactive commandline menus without writing boilerplate code.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Tasks\n\nimport os\ntask docs,\"generate docs\":\n  selfExec \"doc2 --project --git.url:https://github.com/MnlPhlp/cli_menu --git.commit:master src/cli_menu.nim\"\n  rmDir(\"docs\")\n  mvDir(\"src/htmldocs\",\"docs\")\n  mvFile(\"docs/cli_menu.html\",\"docs/index.html\")\n\ntask test,\"run Tests\":\n  selfExec\"c -r -d:testing tests/t**.nim\"",
"https://github.com/codehz/xmlio": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"CodeHz\"\ndescription   = \"Nim xml mapper\"\nlicense       = \"LGPL-3.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"vtable >= 0.3.2\"\n",
"https://raw.githubusercontent.com/dom96/httpbeast/master/httpbeast.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A super-fast epoll-backed and parallel HTTP server.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\n# Test dependencies\n# When https://github.com/cheatfate/asynctools/pull/28 is fixed,\n# change this back to normal asynctools\nrequires \"https://github.com/iffy/asynctools#pr_fix_for_latest\"\n\ntask helloworld, \"Compiles and executes the hello world server.\":\n  exec \"nim c -d:release --gc:boehm -r tests/helloworld\"\n\ntask dispatcher, \"Compiles and executes the dispatcher test server.\":\n  exec \"nim c -d:release --gc:boehm -r tests/dispatcher\"\n\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r tests/tester\"\n",
"https://raw.githubusercontent.com/achesak/nim-colorsys/master/colorsys.nimble": "[Package]\nname = \"colorsys\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Convert between RGB, YIQ, HLS, and HSV color systems.\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/s3pt3mb3r/colorizeEcho/master/colorizeEcho.nimble": "# Package\n\nversion       = \"1.0\"\nauthor        = \"s3pt3mb3r\"\ndescription   = \"colorizeEcho is a package which colorize echo message on Windows command prompt.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/Araq/lazy_rest": "[Package]\nname          = \"lazy_rest\"\nversion       = \"0.2.3\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Simple rst (reStructuredText) HTML generation from Nimrod or C with some extras\"\"\"\nlicense       = \"MIT\"\nbin = \"lazy_rest_badger.exe\"\n\ninstallDirs = \"\"\"\n\ndocs\nlazy_rest_pkg\nresources\n\n\"\"\"\n\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\nlazy_rest.nim\nlazy_rest_badger.nim\nlazy_rest_badger.nimrod.cfg\nlazy_rest_c_api.nim\nnakefile.nim\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\nnake >= 1.2\nargument_parser >= 0.2\nhttps://github.com/gradha/badger_bits.git >= 0.2.2\n\"\"\"\n",
"https://github.com/def-/nimes": "# Package\n\nversion       = \"0.1\"\nauthor        = \"Dennis Felsing\"\ndescription   = \"NimES: NES Emulator in Nim\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\nbin           = @[\"nimes\"]\nskipExt       = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.12.0\"\nrequires \"sdl2 >= 1.0\"\n",
"https://github.com/disruptek/github": "version = \"2.0.4\"\nauthor = \"disruptek\"\ndescription = \"github api\"\nlicense = \"MIT\"\nrequires \"npeg < 1.0.0\"\nrequires \"https://github.com/disruptek/rest.git >= 1.0.5 & < 2.0.0\"\n\nsrcDir = \"src\"\n\nproc execCmd(cmd: string) =\n  echo \"execCmd:\" & cmd\n  exec cmd\n\nproc execTest(test: string) =\n  execCmd \"nim c           -f -r \" & test\n  execCmd \"nim c   -d:release -r \" & test\n  execCmd \"nim c   -d:danger  -r \" & test\n  execCmd \"nim cpp            -r \" & test\n  execCmd \"nim cpp -d:danger  -r \" & test\n  when NimMajor >= 1 and NimMinor >= 1:\n    execCmd \"nim c   --gc:arc -r \" & test\n    execCmd \"nim cpp --gc:arc -r \" & test\n\ntask test, \"run tests for travis\":\n  execTest(\"tests/tgithub.nim\")\n",
"https://github.com/tulayang/asyncdocker": "[Package]\nname        = \"asyncdocker\"\nversion     = \"0.3.0\"\nauthor      = \"Wang Tong\"\ndescription = \"Asynchronous docker client written by Nim-lang\"\nlicense     = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13.0\"\n",
"https://raw.githubusercontent.com/rosado/edn.nim/master/edn.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Roland Sadowski\"\ndescription   = \"EDN and Clojure parser\"\nlicense       = \"EPL-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/achesak/nim-itn/master/itn.nimble": "[Package]\nname = \"itn\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for parsing ITN (TomTom intinerary) files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/guzba/supersnappy/master/supersnappy.nimble": "version       = \"2.0.0\"\nauthor        = \"Ryan Oldenburg\"\ndescription   = \"Nim implementation of Google's Snappy compression.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/citycide/fugitive/master/fugitive.nimble": "version       = \"0.11.1\"\nauthor        = \"citycide\"\ndescription   = \"Simple command line tool to make git more intuitive, along with useful GitHub addons.\"\nlicense       = \"MIT\"\nbin           = @[\"fugitive\"]\nskipExt       = @[\"nim\"]\nbinDir        = \"dist\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.0 & < 2.0.0\"\nrequires \"gara >= 0.2.0\"\nrequires \"tempfile >= 0.1.7\"\nrequires \"unpack >= 0.4.0\"\n\nimport ospaths, strformat, strutils\n\ntemplate exe (basename: string): string =\n  if ExeExt == \"\": basename else: basename & \".\" & ExeExt\n\nconst\n  distFiles = @[\"license\", \"readme.md\", \"changelog.md\"]\n  staticArgs = \"--verbosity:0 --hints:off -d:release\"\n  outFile = \"fugitive\".exe\n  build = \"nim c -o:$1 $2 -d:fugitiveVersion=v$3 $4\"\n\nproc getZipName (os, arch: string): string =\n  let ext = if os == \"windows\": \".zip\" else: \".tar.gz\"\n  result = &\"fugitive_v{version}_{os}_{arch}{ext}\"\n\ntask release, \"Build fugitive for the current OS (release)\":\n  mkDir binDir\n\n  exec build % [\n    binDir / outFile,\n    staticArgs,\n    version,\n    srcDir / bin[0]\n  ]\n\nafter release:\n  let\n    zipName = getZipName(buildOS, buildCPU).multiReplace(\n      (\"_amd64\", \"_x64\"),\n      (\"macosx\", \"macos\")\n    )\n    params = join(@[zipName, outFile] & distFiles, \" \")\n\n  rmFile zipName\n\n  for distFile in distFiles:\n    cpFile(distFile, binDir / distFile)\n\n  withDir binDir:\n    if buildOS == \"windows\":\n      exec \"7z a -tzip \" & params\n    else:\n      exec \"tar -czf \" & params\n",
"https://github.com/momeemt/Blackvas": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Momeemt\"\ndescription   = \"declarative UI framework for building Canvas\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"js\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/status-im/nimbus": "mode = ScriptMode.Verbose\n\npackageName   = \"nimbus\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"An Ethereum 2.0 Sharding Client for Resource-Restricted Devices\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\", \"examples\"]\n# we can't have the result of a custom task in the \"bin\" var - https://github.com/nim-lang/nimble/issues/542\n# bin           = @[\"build/nimbus\"]\n\nrequires \"nim >= 1.2.0\",\n  \"bncurve\",\n  \"chronicles\",\n  \"chronos\",\n  \"eth\",\n  \"json_rpc\",\n  \"libbacktrace\",\n  \"nimcrypto\",\n  \"stew\",\n  \"stint\"\n\nproc buildBinary(name: string, srcDir = \"./\", params = \"\", lang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  # allow something like \"nim nimbus --verbosity:0 --hints:off nimbus.nims\"\n  var extra_params = params\n  for i in 2..<paramCount():\n    extra_params &= \" \" & paramStr(i)\n  exec \"nim \" & lang & \" --out:build/\" & name & \" \" & extra_params & \" \" & srcDir & name & \".nim\"\n\nproc test(name: string, lang = \"c\") =\n  buildBinary name, \"tests/\", \"-d:chronicles_log_level=ERROR\"\n  exec \"build/\" & name\n\ntask test, \"Run tests\":\n  test \"all_tests\"\n  test \"test_rpc\"\n  test \"test_rpc_whisper\"\n\ntask nimbus, \"Build Nimbus\":\n  buildBinary \"nimbus\", \"nimbus/\", \"-d:chronicles_log_level=TRACE\"\n",
"https://github.com/liquid600pgm/rapid": "#~~\n# Package\n#~~\n\nversion =\n  \"2020.1\"\nauthor =\n  \"iLiquid\"\ndescription =\n  \"A game engine for rapid development and easy prototyping\"\nlicense =\n  \"MIT\"\nsrcDir =\n  \"src\"\n\n#~~\n# Dependencies\n#~~\n\nrequires \"nim >= 0.20.0\"\nrequires \"aglet >= 0.4.2\"\nrequires \"stbimage >= 2.5\"\n",
"https://raw.githubusercontent.com/jangko/msgpack4nim/master/msgpack4nim.nimble": "# Package\nversion       = \"0.3.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"MessagePack serializer/deserializer implementation in nim\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.18.0\"\n\ninstallFiles = @[\"msgpack4nim.nim\", \"msgpack4collection.nim\", \"msgpack2any.nim\", \"msgpack2json.nim\"]\n\n# Examples and Tests\nskipDirs = @[\"examples\", \"tests\"]\n\ntemplate exec(cmd) =\n  echo cmd\n  system.exec(cmd)\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  when defined(macosx):\n    let specific = if lang == \"cpp\":\n                     \" --passC:\\\"-Wno-c++11-narrowing\\\" \"\n                   else:\n                     \"\"\n  else:\n    const specific = \"\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env & specific &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"-d:debug\", \"examples/test\"\n  test \"-d:msgpack_obj_to_map\", \"tests/test_any\"\n  # because uses `getAppDir()`, see https://github.com/nim-lang/Nim/pull/13382\n  test \"-d:debug --outdir:tests\", \"tests/test_json\"\n  test \"-d:debug\", \"tests/test_codec\"\n  test \"-d:debug\", \"tests/test_spec\"\n  test \"-d:debug\", \"tests/test_suite\"\n\n  test \"-d:release\", \"examples/test\"\n  test \"-d:release -d:msgpack_obj_to_map\", \"tests/test_any\"\n  # ditto\n  test \"-d:release --outdir:tests\", \"tests/test_json\"\n\n  test \"-d:release\", \"tests/test_codec\"\n  test \"-d:release\", \"tests/test_spec\"\n  test \"-d:release\", \"tests/test_suite\"\n",
"https://raw.githubusercontent.com/hectormonacci/tsv2json/master/tsv2json.nimble": "# Package\n\nversion       = \"0.1.8\"\nauthor        = \"Héctor M. Monacci\"\ndescription   = \"Turn TSV file or stream into JSON file or stream\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"tsv2json\"]\nskipExt       = @[\"nim\"] \n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/greenfork/nimraylib_now/master/nimraylib_now.nimble": "# Package\n\nversion = \"0.9.1\"\nauthor = \"Dmitry Matveyev\"\ndescription = \"The Ultimate Raylib gaming library wrapper\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipFiles = @[\"converter.nim\"]\nbackend = \"c\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"regex\"\n\nfrom os import `/`\n\ntask convert, \"run with c2nim\":\n  let\n    converterFile = \"src\"/\"converter.nim\"\n    raylibFile = \"src\"/\"nimraylib_now\"/\"raylib.nim\"\n    rayguiFile = \"src\"/\"nimraylib_now\"/\"raygui.nim\"\n    rlglFile = \"src\"/\"nimraylib_now\"/\"rlgl.nim\"\n    raymathFile = \"src\"/\"nimraylib_now\"/\"raymath.nim\"\n    physacFile = \"src\"/\"nimraylib_now\"/\"physac.nim\"\n  echo \"Running converter\\n\"\n  exec \"nim r \" & converterFile\n  echo \"\\nExecuting nim check\\n\"\n  exec \"nim check \" & raylibFile\n  exec \"nim check \" & rlglFile\n  exec \"nim check \" & raymathFile\n  exec \"nim check \" & rayguiFile\n  exec \"nim check \" & physacFile\n\ntask buildRaygui, \"build raygui as a dynamic library\":\n  let sourceFile = \"raygui\"/\"src\"/\"raygui.h\"\n  exec \"cc -x c -fPIC -c -o raygui.o -DRAYGUI_IMPLEMENTATION -DRAYGUI_SUPPORT_ICONS \" & sourceFile\n  exec \"cc -shared -o libraygui.so -lraylib raygui.o\"\n  rmFile \"raygui.o\"\n\ntask testExamples, \"checks that all examples are correctly compiled\":\n  exec \"testament run texamples\"\n",
"https://github.com/status-im/nim-ttmath": "packageName   = \"ttmath\"\nversion       = \"0.5.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A Nim wrapper for ttmath: big numbers with fixed size\"\nlicense       = \"Apache License 2.0\"\nsrcDir        = \"src\"\n\n### Dependencies\nrequires \"nim >= 0.18.1\"\n\nproc test(name: string, lang = \"cpp\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache: \"nimcache\"\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Run tests\":\n  test \"test1\"\n",
"https://github.com/status-im/nim-nat-traversal": "mode = ScriptMode.Verbose\n\npackageName   = \"nat_traversal\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"miniupnpc and libnatpmp wrapper\"\nlicense       = \"Apache License 2.0 or MIT\"\ninstallDirs   = @[\"vendor\"]\n\n### Dependencies\nrequires \"nim >= 0.19.0\", \"stew\"\n\nproc compileStaticLibraries() =\n  var cc = getEnv(\"CC\", \"\")\n  if cc.len == 0:\n    cc = \"gcc\"\n    putEnv(\"CC\", cc)\n\n  withDir \"vendor/miniupnp/miniupnpc\":\n    when defined(windows):\n      exec(\"mingw32-make -f Makefile.mingw libminiupnpc.a\")\n    else:\n      exec(\"make libminiupnpc.a\")\n  withDir \"vendor/libnatpmp-upstream\":\n    when defined(windows):\n      # We really need to override CC on the Make command line, here, because of:\n      # https://github.com/miniupnp/libnatpmp/blob/4536032ae32268a45c073a4d5e91bbab4534773a/Makefile#L51\n      exec(\"mingw32-make CC=\\\"\" & cc & \"\\\" CFLAGS=\\\"-Wall -Os -DWIN32 -DNATPMP_STATICLIB -DENABLE_STRNATPMPERR -DNATPMP_MAX_RETRIES=4\\\" libnatpmp.a\")\n    else:\n      exec(\"make CFLAGS=\\\"-Wall -Os -DENABLE_STRNATPMPERR -DNATPMP_MAX_RETRIES=4\\\" libnatpmp.a\")\n\ntask buildBundledLibs, \"build bundled libraries\":\n  compileStaticLibraries()\n\nbefore install:\n  compileStaticLibraries()\n\n",
"https://github.com/markspanbroek/sss.nim": "# Package\n\nversion     = \"0.2.2\"\nauthor      = \"Mark Spanbroek\"\ndescription = \"Shamir secret sharing\"\nlicense     = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0 & < 2.0.0\"\nrequires \"nimterop >= 0.5.9 & < 0.6.0\"\n",
"https://raw.githubusercontent.com/h3rald/fae/master/fae.nimble": "import\n  strutils\n\nfrom os import parentDir, `/`\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/faepkg/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/faepkg/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import faepkg/config\n\n# Package\n\nversion       = appVersion\nauthor        = appAuthor\ndescription   = appDescription\nlicense       = appLicense\nbin           = @[appName]\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"c\", \"h\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"nifty\"\n\nbefore install:\n  exec \"nimble install nifty\"\n  exec \"nifty install\"\n\n# Build\n\nconst\n  parallel = \"\" #\"--parallelBuild:1 --verbosity:3\"\n  compile = \"nim c -d:release --opt:size\" & \" \" & parallel\n  linux_x64 = \"--cpu:amd64 --os:linux --passL:-static\"\n  windows_x64 = \"--cpu:amd64 --os:windows\"\n  macosx_x64 = \"\"\n  app = \"src/fae\"\n  app_file = \"src/fae.nim\"\n  zip = \"zip -X -j\"\n\nproc shell(command, args = \"\", dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return appName & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build \" & appName & \" for Windows (x64)\":\n  shell compile, windows_x64, app_file\n\ntask linux_x64_build, \"Build \" & appName & \" for Linux (x64)\":\n  shell compile, linux_x64,  app_file\n\ntask macosx_x64_build, \"Build \" & appName & \" for Mac OS X (x64)\":\n  shell compile, macosx_x64, app_file\n\ntask release, \"Release \" & appName:\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, \"$1 $2\" % [filename_for(\"windows\", \"x64\"), app & \".exe\"]\n  shell \"rm\", app & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, \"$1 $2\" % [filename_for(\"linux\", \"x64\"), app]\n  shell \"rm\", app \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, \"$1 $2\" % [filename_for(\"macosx\", \"x64\"), app]\n  shell \"rm\", app\n  echo \"\\n\\n\\n ALL DONE!\"\n",
"https://raw.githubusercontent.com/flyx/NimYAML/master/yaml.nimble": "# Package\n\nversion       = \"0.14.0\"\nauthor        = \"Felix Krause\"\ndescription   = \"YAML 1.2 implementation for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"bench\", \"doc\", \"server\", \"test\", \"tools\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/juancarlospaco/nim-usagov": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"USA Code.Gov MultiSync API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/andreaferretti/patty/master/patty.nimble": "mode = ScriptMode.Verbose\n\nversion       = \"0.3.4\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Algebraic data types and pattern matching\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"test\", \"test.nim\", \"testhelp.nim\", \".travis.yml\"]\n\nrequires \"nim >= 0.14.0\"\n\n\ntask tests, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"test.nim\"\n\ntask test, \"run tests\":\n  setCommand \"tests\"",
"https://github.com/treeform/pixie": "version     = \"0.0.20\"\nauthor      = \"Andre von Houck and Ryan Oldenburg\"\ndescription = \"Full-featured 2d graphics library for Nim.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.6\"\nrequires \"vmath >= 0.4.0\"\nrequires \"chroma >= 0.2.1\"\nrequires \"zippy >= 0.3.5\"\nrequires \"flatty >= 0.1.3\"\nrequires \"nimsimd >= 1.0.0\"\nrequires \"bumpy >= 1.0.1\"\n",
"https://github.com/onelivesleft/simple_parseopt": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"onelivesleft\"\ndescription   = \"Nim module which provides clean, zero-effort command line parsing.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/bunkford/wZeeGrid/master/wZeeGrid.nimble": "# Package\n\nversion       = \"1.0.2\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"wZeeGird Plugin for wNim.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"docs\"]\n\n# Dependencies\n\nrequires: \"nim >= 1.0.0\"\nrequires: \"wNim >= 0.11.4\"\n",
"https://github.com/status-im/nim-json-serialization": "mode = ScriptMode.Verbose\n\npackageName   = \"json_serialization\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Flexible JSON serialization not relying on run-time type information\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.17.0\",\n         \"serialization\",\n         \"stew\"\n\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"--threads:off\", \"tests/test_all\"\n  test \"--threads:on\", \"tests/test_all\"\n",
"https://github.com/status-im/nim-ngtcp2": "packageName = \"ngtcp2\"\nversion = \"0.32.0\"\nauthor = \"Status Research & Development GmbH\"\ndescription = \"Nim wrapper around the ngtcp2 library\"\nlicense = \"MIT\"\ninstallDirs = @[\"sources\", \"build\"]\ninstallFiles = @[\"ngtcp2.nim\"]\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/zevv/with/master/with.nimble": "version       = \"0.4.0\"\nauthor        = \"zevv\"\ndescription   = \"Simple 'with' macro for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.19.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r \" & \"tests/tests.nim\"\n",
"https://github.com/JohnAD/negamax": "# Package\n\nversion       = \"0.0.3\"\nauthor        = \"John Dupuy\"\ndescription   = \"Negamax AI algorithm for turn based games\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"turn_based_game >= 1.0.0\"\n",
"https://github.com/MarcAzar/BipBuffer": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Marc Azar\"\ndescription   = \"Bi-partite buffer implementation in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://raw.githubusercontent.com/zendbit/nim.uri3/master/uri3.nimble": "# Package\nversion     = \"0.1.4\"\nauthor      = \"Amru Rosyada\"\ndescription = \"This is extension for uri (For handling uri) module and forked from uri2 with some bug fix.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/jiro4989/edens/master/edens.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"jiro4989\"\ndescription   = \"A command to encode / decode text with your dictionary\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"edens\"]\nbinDir        = \"src\" # 辞書の読み込みに失敗するのを回避するため\ninstallFiles  = @[\"dict.json\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"cligen >= 0.9.32\"\n",
"https://github.com/cowboy-coders/nim-libclang.git": "[Package]\nname          = \"libclang\"\nversion       = \"0.1.0\"\nauthor        = \"Will Szumski\"\ndescription   = \"Bindings for libclang\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nInstallExt    = \"nim\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.4\"\n",
"https://github.com/bluenote10/NimSvg": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Fabian Keller\"\ndescription   = \"Nim-based DSL allowing to generate SVG files and GIF animations.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2\"\n\ntask test, \"Runs unit tests\":\n  exec \"nim c -r -d:debugDsl -d:unittest tests/tester.nim\"\n\ntask examples, \"Runs examples\":\n  exec \"nim c -r examples/basic1.nim\"\n  exec \"nim c -r examples/basic2.nim\"\n  exec \"nim c -r examples/text1.nim\"\n  exec \"nim c -r examples/animation1.nim\"\n  exec \"nim c -r examples/spinner1.nim\"\n  exec \"nim c -r examples/spinner2.nim\"\n  exec \"nim c -r examples/spinner3.nim\"\n  exec \"nim c -r examples/dsl_demo.nim\"\n  exec \"nim c -r examples/timeline_ex1.nim\"\n  exec \"nim c -r examples/timeline_ex2.nim\"\n  exec \"nim c -r examples/embed_other_svgs.nim\"\n\ntask docs, \"Generates docs\":\n  exec \"nim doc2 --project --docSeeSrcUrl:https://github.com/bluenote10/NimSvg/blob/master -o:./docs/ src/nimsvg.nim\"",
"https://raw.githubusercontent.com/captainbland/nim-validation/master/validation.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"captainbland\"\ndescription   = \"Field validation for Nim objects\"\nlicense       = \"GPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\ntask docs, \"Docs\":\n  exec \"nim doc2 --project -o ./validation.nim\"",
"https://raw.githubusercontent.com/FedericoCeratto/tsundoku/master/tsundoku.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"OPDS ebook server\"\nlicense       = \"GPLv3\"\nbin           = @[\"tsundoku\"]\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\", \"jester\"\n",
"https://raw.githubusercontent.com/jan0sc/antlr4nim/master/antlr4nim.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"jan0sc\"\ndescription   = \"Nim interface to ANTLR4 listener/visitor via jsffi\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n\n\nimport strformat\nimport os\n\n# Tasks\n\ntask prepare, \"Convert ANTLR4 .js modules to .mjs for use with antlr4nim.\":\n  var n = paramcount()\n  var grammar = paramStr(n)\n\n  var allOK = true\n\n  # Lexer\n  if fileExists(fmt\"{grammar}Lexer.js\"):\n    if fileExists(fmt\"{grammar}Lexer.mjs\"):\n      echo fmt\"ERROR: {grammar}Lexer.mjs is already present.\"\n      allOK = false\n    else:\n      exec fmt\"cp {grammar}Lexer.js {grammar}Lexer.mjs\"\n      echo fmt\"Copied {grammar}Lexer.js to {grammar}Lexer.mjs\"\n  else:\n    echo fmt\"ERROR: {grammar}Lexer.js not found.\"\n    allOK = false\n\n  #Parser\n  if fileExists(fmt\"{grammar}Parser.js\"):\n    if fileExists(fmt\"{grammar}Parser.mjs\"):\n      echo fmt\"ERROR: {grammar}Parser.mjs is already present.\"\n      allOK = false\n    else:\n      exec fmt\"cat {grammar}Parser.js | sed 's/{grammar}Listener.js/{grammar}Listener.mjs/' | sed 's/{grammar}Visitor.js/{grammar}Visitor.mjs/' > {grammar}Parser.mjs\"\n      echo fmt\"Copied {grammar}Parser.js to {grammar}Parser.mjs and updated imports\"\n  else:\n    echo fmt\"ERROR: {grammar}Parser.js not found.\"\n    allOK = false\n\n  # Listener and Visitor\n  var foundOne = false\n  if fileExists(fmt\"{grammar}Listener.js\"):\n    foundOne = true\n    if fileExists(fmt\"{grammar}Listener.mjs\"):\n      echo fmt\"ERROR: {grammar}Listener.mjs is already present.\"\n      allOK = false\n    else:\n      exec fmt\"cp {grammar}Listener.js {grammar}Listener.mjs\"\n      echo fmt\"Copied {grammar}Listener.js to {grammar}Listener.mjs\"\n\n  if fileExists(fmt\"{grammar}Visitor.js\"):\n    foundOne = true\n    if fileExists(fmt\"{grammar}Visitor.mjs\"):\n      echo fmt\"ERROR: {grammar}Visitor.mjs is already present.\"\n      allOK = false\n    else:\n      exec fmt\"cp {grammar}Visitor.js {grammar}Visitor.mjs\"\n      echo fmt\"Copied {grammar}Visitor.js to {grammar}Visitor.mjs\"\n\n  if not foundOne:\n    echo fmt\"ERROR: Neither {grammar}Listener.js nor {grammar}Visitor.js found.\"\n    allOK = false\n\n  # Success?\n  if allOK:\n    echo \"OK: ANTLR4 files are now ready for antlr4nim.\"\n  else:\n    echo \"FAIL: Some ANTLR4 files could not be processed.\"\n",
"https://raw.githubusercontent.com/ba0f3/subhook.nim/master/subhook.nimble": "# Package\n\nversion       = \"0.5.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"subhook wrapper\"\nlicense       = \"BSD2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/haxscramper/hmisc": "# Package\n\nversion       = \"0.9.18\"\nauthor        = \"haxscramper\"\ndescription   = \"Collection of helper utilities\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\npackageName   = \"hmisc\"\nbin           = @[\"hmisc/scripts/hmisc_putils\"]\ninstallExt    = @[\"nim\"]\nbinDir        = \"bin\"\nnamedBin      = {\n  \"hmisc/scripts/hmisc_putils\" : \"hmisc-putils\"\n}.toTable()\n\n\nrequires \"nim >= 1.4.0\", \"cligen\"\n# requires \"https://github.com/haxscramper/fusion.git#matching-fixup\"\n\ntask docgen, \"Generate documentation\":\n  if not fileExists(\"bin/hmisc-putils\"):\n    exec(\"nimble build\")\n\n  exec(\"hmisc-putils docgen\")\n\ntask dockertest, \"Run tests in docker container\":\n  exec(\"hmisc-putils dockertest --projectDir:\" & thisDir())\n\nafter test:\n  exec(\"nim c --hints:off --verbosity:0 src/hmisc/scripts/hmisc_putils.nim\")\n",
"https://github.com/treeform/googleapi": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"treeform\"\ndescription   = \"GoogleAPI - Growing collection of google APIs for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"jwt >= 0.2.0\"\n",
"https://github.com/jiro4989/eastasianwidth": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"eastasianwidth is library for EastAsianWidth.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask docs, \"Generate document\":\n  exec \"nimble doc src/eastasianwidth.nim -o:docs/eastasianwidth.html\"\n\ntask examples, \"Run example codes\":\n  exec \"nim c -r examples/table.nim\"\n\ntask ci, \"Run CI tasks\":\n  exec \"nimble test\"\n  exec \"nimble docs\"\n  exec \"nimble examples\"\n",
"https://github.com/mrshu/nim-notetxt": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"mr.Shu\"\ndescription   = \"A library that implements the note.txt specification for note taking.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.11\"\n\n",
"https://github.com/mikra01/sharedmempool": "# Package\nversion = \"0.1.0\"\nauthor = \"Michael Krauter\"\ndescription = \"sharedmemorypool implementation in Nim\"\nlicense = \"MIT\"\nskipDirs = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 0.19.0\"\n\ntask test, \"running tests\":\n  exec \"nim sharedmempool_tests\"",
"https://github.com/ba0f3/dnsclient.nim": "# Package\n\nversion       = \"0.0.3\"\nauthor        = \"Huy Doan\"\ndescription   = \"Simple DNS Client & Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"dnsclient\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/tulayang/asyncmysql/master/asyncmysql.nimble": "# Package\nversion = \"0.4.3\"\nauthor = \"Wang Tong\"\ndescription = \"Asynchronous MySQL connector written in pure Nim.\"\nlicense = \"MIT\"\nskipFiles = @[\"TODO.md\"]\n\n# Dependencies\nrequires \"nim >= 0.17.0\", \"mysqlparser >= 0.1.0\"",
"https://github.com/ba0f3/rbac.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"Simple Role-based Access Control Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.9\"\n",
"https://raw.githubusercontent.com/bio-nim/nim-edlib/master/edlib.nimble": "version     = \"1.2.6\"\nauthor      = \"Christopher Dunn\"\ndescription = \"Wrapper for edlib (Martin Šošić).\"\nlicense     = \"BSD-3\"\nskipDirs    = @[\"tests\", \"apps\"]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/status-im/nim-rocksdb": "packageName   = \"rocksdb\"\nversion       = \"0.3.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for Facebook's RocksDB, an embeddable, persistent key-value store for fast storage\"\nlicense       = \"Apache License 2.0 or GPLv2\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n### Dependencies\nrequires \"nim >= 1.2.0\",\n         \"stew\",\n         \"tempfile\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache: nimcache\n  switch(\"out\", (\"./build/\" & name))\n  --threads: on\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Run tests\":\n  test \"all\"\n\n",
"https://raw.githubusercontent.com/joachimschmidt557/nim-lscolors/master/lscolors.nimble": "# Package\n\nversion       = \"0.3.3\"\nauthor        = \"joachimschmidt557\"\ndescription   = \"A library for colorizing paths according to LS_COLORS\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/SkyVault/nim-tiled": "# Package\n\nversion       = \"1.2.2\"\nauthor        = \"SkyVault\"\ndescription   = \"Tiled map loader for the Nim programming language\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/euantorano/recaptcha.nim/master/recaptcha.nimble": "# Package\n\nversion       = \"1.0.3\"\nauthor        = \"Euan T\"\ndescription   = \"reCAPTCHA support for Nim, supporting rendering a capctcha and verifying a user\\'s response.\"\nlicense       = \"BSD-3-Clause\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/TakeYourFreedom/Additional-Control-Structures-for-Nim": "version = \"0.2.0\"\nauthor = \"TakeYourFreedom\"\ndescription = \"Additional Control Structures\"\nlicense = \"MIT\"\n",
"https://raw.githubusercontent.com/haxscramper/hnimast/master/hnimast.nimble": "# Package\n\nversion       = \"0.3.16\"\nauthor        = \"haxscramper\"\ndescription   = \"User-friendly wrapper for nim ast\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmisc >= 0.9.16\"\nrequires \"macroutils\"\nrequires \"compiler\"\n\ntask docgen, \"Generate documentation\":\n  exec(\"hmisc-putils docgen\")\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-libsodium/master/libsodium.nimble": "# Package\n\nversion       = \"0.6.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"libsodium wrapper\"\nlicense       = \"MPL-2.0\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\n",
"https://github.com/al-bimani/eventemitter": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"al-bimani\"\ndescription   = \"event emitter for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"cpp\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/FedericoCeratto/nim-circleci": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"CircleCI API client\"\nlicense       = \"LGPLv3\"\n\nbin           = @[\"circleci_client\"]\n\n# Dependencies\n\nrequires \"nim >= 0.14.2\"\n\n",
"https://github.com/icyphox/crap": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"Anirudh\"\ndescription   = \"`rm` files without fear\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"crap\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/Vindaar/shell/master/shell.nimble": "# Package\n\nversion       = \"0.4.3\"\nauthor        = \"Vindaar\"\ndescription   = \"A Nim mini DSL to execute shell commands\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask test, \"executes the tests\":\n  exec \"nim c -d:debugShell -r tests/tShell.nim\"\n  exec \"nim c -r tests/tException.nim\"\n  # execute using NimScript as well\n  exec \"nim e -d:debugShell -r tests/tNimScript.nims\"\n  # and execute PWD test, by running the nims file in another dir,\n  # which itself calls the test\n  when not defined(windows):\n    exec \"cd tests/anotherDir && nim e -r runAnotherTest.nims\"\n\ntask travis, \"executes the tests on travis\":\n  exec \"nim c -d:debugShell -d:travisCI -r tests/tShell.nim\"\n  # execute using NimScript as well\n  exec \"nim e -d:debugShell -d:travisCI -r tests/tNimScript.nims\"\n  when not defined(windows):\n    exec \"cd tests/anotherDir && nim e -d:travisCI -r runAnotherTest.nims\"\n",
"https://raw.githubusercontent.com/disruptek/bump/master/bump.nimble": "version = \"1.8.28\"\nauthor = \"disruptek\"\ndescription = \"a tiny tool to bump nimble versions\"\nlicense = \"MIT\"\n\nrequires \"https://github.com/disruptek/cutelog >= 1.1.2 & < 2.0.0\"\nwhen not defined(release):\n  requires \"https://github.com/disruptek/balls >= 2.0.0 & < 3.0.0\"\n\nbin = @[\"bump\"]\n\nwhen (NimMajor, NimMinor) >= (1, 3):\n  requires \"cligen >= 1.2.2 & < 2.0.0\"\nelse:\n  requires \"cligen >= 0.9.46 & < 2.0.0\"\n\ntask test, \"run tests for ci\":\n  when defined(windows):\n    exec \"balls.cmd\"\n  else:\n    exec findExe\"balls\"\n",
"https://raw.githubusercontent.com/kaitai-io/kaitai_struct_nim_runtime/master/kaitai_struct_nim_runtime.nimble": "# Package\n\nversion       = \"0.9.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"Kaitai Struct runtime library for Nim\"\nlicense       = \"MIT\"\n",
"https://github.com/lompik/libmpdclient.nim": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Lompik\"\ndescription   = \"Bindings to Music Player Daemon client library\"\nlicense       = \"BSD\"\nskipFiles     = @[\"example.nim\", \"libmpdclient.pre\"]\n\n# Deps\nrequires \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/momeemt/nimaterial/master/nimaterial.nimble": "version       = \"0.3.0\"\nauthor        = \"Momeemt\"\ndescription   = \"nimaterial is a CSS output library based on material design.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"Palette >= 0.1.0\"",
"https://github.com/rburmorrison/pych": "# Package\n\nversion       = \"1.0.2\" # update version in main file too!\nauthor        = \"Ryan Burmeister-Morrison\"\ndescription   = \"A tool that watches Python files and re-runs them on change.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"pych\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"http://github.com/jayvanderwall/desim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jay Van Der Wall\"\ndescription   = \"A discrete event simulator modeled on SST\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/jyapayne/subfield/master/subfield.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joey Payne\"\ndescription   = \"A sub-field accessor macro for the Nim programming language.\"\nlicense       = \"MIT\"\n\nbin = @[\"subfield\"]\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\", \"einheit >= 0.1.6\"\n\ntask tests, \"run all tests\":\n  exec \"nim c -r tests/tests.nim\"\n",
"https://github.com/ftsf/nim-webaudio": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Jez Kabanov\"\ndescription   = \"API for Web Audio (JS)\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nskipDirs = @[\"tests\"]\n\ntask test, \"run tests\":\n  exec(\"nim js -o:tests/test.js --path:. tests/test.nim\")\n",
"https://github.com/bung87/stage": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"bung87\"\ndescription   = \"nim tasks apply to git hooks\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin = @[\"stage\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\nrequires \"shell\"\nrequires \"cligen >= 1.3.2\"\n\nlet sh = \"\"\"\n#!/bin/sh\nif stage checkError;then\n    stage fixStyle\nelse\n    exit 1\nfi\n\"\"\"\nif dirExists(\".git\"):\n  writeFile \".git/hooks/pre-commit\",sh\n  exec \"chmod 0755 .git/hooks/pre-commit\"\n  # inclFilePermissions \".git/hooks/pre-commit\",{fpUserExec,fpGroupExec,fpOthersExec}\n",
"https://github.com/jackhftang/lrucache": "# Package\n\nversion       = \"1.1.3\"\nauthor        = \"Jack Tang\"\ndescription   = \"Least recently used (LRU) cache\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"lrucache.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html src/lrucache.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://github.com/status-im/nim-stew": "mode = ScriptMode.Verbose\n\npackageName   = \"stew\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Backports, standard library candidates and small utilities that don't yet deserve their own repository\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"--threads:off\", \"tests/all_tests\"\n  test \"--threads:on -d:nimTypeNames\", \"tests/all_tests\"\n  test \"--threads:on -d:noIntrinsicsBitOpts -d:noIntrinsicsEndians\", \"tests/all_tests\"\n\ntask testvcc, \"Run all tests with vcc compiler\":\n  test \"--cc:vcc --threads:off\", \"tests/all_tests\"\n  test \"--cc:vcc --threads:on -d:nimTypeNames\", \"tests/all_tests\"\n  test \"--cc:vcc --threads:on -d:noIntrinsicsBitOpts -d:noIntrinsicsEndians\", \"tests/all_tests\"\n",
"https://github.com/achesak/nim-gpx": "[Package]\nname = \"gpx\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for parsing GPX (GPS Exchange format) files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/Ahrotahn/argon2": "version     = \"1.0.1\"\nauthor      = \"Ahrotahn\"\ndescription = \"A nim wrapper for Argon2\"\nlicense     = \"MIT\"\n\ninstallDirs = @[\n    \"phc-winner-argon2\"\n]\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/juancarlospaco/xpm": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"X-Pixmap & NetPBM\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.1.1\"\n",
"https://raw.githubusercontent.com/andreaferretti/react.nim/master/react.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Example React single page application\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"example\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask example, \"builds example application\":\n  --define: release\n  switch(\"out\", \"example/app.js\")\n  --path: \".\"\n  setCommand \"js\", \"example/app.nim\"",
"https://raw.githubusercontent.com/vegansk/nimactors/master/nimactors.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Anatoly Galiulin <galiulin.anatoly@gmail.com>\"\ndescription   = \"Actors library for Nim\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\", \"nimfp >= 0.3.5\", \"nimboost >= 0.3.4\"\n",
"https://github.com/theAkito/nim-validateip": "# Package\n\nversion     = \"0.1.2\"\nauthor      = \"Akito <the@akito.ooo>\"\ndescription = \"Nim module for checking if a provided string is actually a correct IP address. Supports detection of Class A to D of IPv4 addresses. IPv6 support planned.\"\nlicense     = \"GPL-3.0-or-later\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"",
"https://api.github.com/repos/dfdeshom/nimsnappy/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"size\":10,\"url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimsnappy/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimsnappy/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"html\":\"https://github.com/dfdeshom/nimsnappy/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"c5e446f2e367b20e160884c9e7ddf0c43d601e51\",\"size\":1484,\"url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimsnappy/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/c5e446f2e367b20e160884c9e7ddf0c43d601e51\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimsnappy/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/c5e446f2e367b20e160884c9e7ddf0c43d601e51\",\"html\":\"https://github.com/dfdeshom/nimsnappy/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"1d8b56dd002a7016207f4b264494c34c63121ed4\",\"size\":395,\"url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/README.md?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimsnappy/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/1d8b56dd002a7016207f4b264494c34c63121ed4\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimsnappy/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/1d8b56dd002a7016207f4b264494c34c63121ed4\",\"html\":\"https://github.com/dfdeshom/nimsnappy/blob/master/README.md\"}},{\"name\":\"nimsnappy.nimble\",\"path\":\"nimsnappy.nimble\",\"sha\":\"ffa06250a11434a158d2f50a02c418efff48979f\",\"size\":200,\"url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/nimsnappy.nimble?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimsnappy/blob/master/nimsnappy.nimble\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/ffa06250a11434a158d2f50a02c418efff48979f\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimsnappy/master/nimsnappy.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/nimsnappy.nimble?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/ffa06250a11434a158d2f50a02c418efff48979f\",\"html\":\"https://github.com/dfdeshom/nimsnappy/blob/master/nimsnappy.nimble\"}},{\"name\":\"snappy.nim\",\"path\":\"snappy.nim\",\"sha\":\"25bec9aa63ea0d6b736f959e84de448cd370f439\",\"size\":5070,\"url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/snappy.nim?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimsnappy/blob/master/snappy.nim\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/25bec9aa63ea0d6b736f959e84de448cd370f439\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimsnappy/master/snappy.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/snappy.nim?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/25bec9aa63ea0d6b736f959e84de448cd370f439\",\"html\":\"https://github.com/dfdeshom/nimsnappy/blob/master/snappy.nim\"}},{\"name\":\"tests.nim\",\"path\":\"tests.nim\",\"sha\":\"ef69e423656204740cce216874d128c0da0e2966\",\"size\":487,\"url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/tests.nim?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimsnappy/blob/master/tests.nim\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/ef69e423656204740cce216874d128c0da0e2966\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimsnappy/master/tests.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimsnappy/contents/tests.nim?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimsnappy/git/blobs/ef69e423656204740cce216874d128c0da0e2966\",\"html\":\"https://github.com/dfdeshom/nimsnappy/blob/master/tests.nim\"}}]",
"https://raw.githubusercontent.com/nortero-code/rx-nim/master/rx_nim.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Kristian Hasselknippe\"\ndescription   = \"An implementation of rx observables in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/benob/gemini/master/gemini.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Benoit Favre\"\ndescription   = \"Building blocks for making async Gemini servers\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/jpoirier/nimrtlsdr": "[Package]\nname          = \"rtlsdr\"\nversion       = \"0.1.0\"\nauthor        = \"Joseph Poirier\"\ndescription   = \"Nim wrapper around librtlsdr.\"\nlicense       = \"BSD\"\n\nsrcDir: \"src\"\n\n[Deps]\nRequires: \"nimrod >= 0.10.2\"\n",
"https://github.com/juancarlospaco/nim-openstreetmap": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"juancarlospaco\"\ndescription   = \"OpenStreetMap API Lib for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/forlan-ua/nim-libsha": "version = \"1.0\"\nauthor = \"Ievgen Svietikov\"\ndescription = \"Sha1 and Sha2 implementations\"\nlicense = \"MIT\"\n\nskipDirs = @[\"tests\"]",
"https://github.com/zevv/nimz3": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Ico Doornekamp\"\ndescription   = \"Nim Z3 theorem prover bindings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/beshrkayali/loki/master/loki.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Beshr Kayali\"\ndescription   = \"A small library for writing cli programs in Nim.\"\nlicense       = \"Zlib\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/OpenSystemsLab/xxhash.nim": "[Package]\nname          = \"xxhash\"\nversion       = \"0.7.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"xxhash wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 1.2.6\"\n",
"https://github.com/subsetpark/untitled-shell-history-application": "# Package\n\nversion       = \"0.3\"\nauthor        = \"Zach Smith\"\ndescription   = \"untitled shell history application\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"docopt\"\n\nbin = @[\"usha\"]\n",
"https://github.com/xflywind/shene": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Zero-cost interface for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\n\ntask tests, \"Run all tests\":\n  exec \"testament cat /\"\n",
"https://raw.githubusercontent.com/ire4ever1190/nim-opentmdb/master/opentdb.nimble": "# Package\n\nversion       = \"1.0.2\"\nauthor        = \"Jake Leahy\"\ndescription   = \"Wrapper around the open trivia db api\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\ntask genDoc, \"Generates the doc\":\n    rmDir(\"docs\")\n    exec(\"nim doc2 --outdir:docs --git.url:https://github.com/ire4ever1190/nim-opentmdb --git.commit:master --index:on --project src/opentdb.nim\")\n    exec(\"nim buildIndex -o:docs/theindex.html docs\")\n    writeFile(\"docs/index.html\", \"\"\"\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta http-equiv=\"Refresh\" content=\"0; url=opentdb.html\" />\n      </head>\n      <body>\n        <p>Click <a href=\"opentdb.html\">this link</a> if this does not redirect you.</p>\n      </body>\n    </html>\n    \"\"\")\n",
"https://github.com/nimious/io-isense.git": "[Package]\nname: \"io-isense\"\nversion: \"0.1\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for the InterSense SDK\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://github.com/jasonprogrammer/gerbil": "# Package\n\nversion     = \"0.1.0\"\nauthor      = \"Jason Jones\"\ndescription = \"Dynamic site generator\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nbin         = @[\"gerbil\"]\ninstallExt = @[\"nim\"]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\nrequires \"argparse 0.10.0\"\nrequires \"cligen 0.9.41\"\nrequires \"jester 0.4.3\"\nrequires \"markdown 0.8.0\"\nrequires \"mustache 0.2.1\"\nrequires \"nimcrypto 0.4.11\"\nrequires \"regex 0.13.0\"\nrequires \"uuids 0.1.10\"\n",
"https://raw.githubusercontent.com/Vindaar/nimhdf5/master/nimhdf5.nimble": "# Package\n\nversion       = \"0.3.13\"\nauthor        = \"Sebastian Schmidt\"\ndescription   = \"Bindings for the HDF5 data format C library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"examples, c_headers\"]\nskipExt       = @[\"nim~\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"https://github.com/vindaar/seqmath >= 0.1.12\"\n# for blosc support install:\n# requires \"nblosc >= 1.15.0\"\n\ntask test, \"Runs all tests\":\n  exec \"nim c -r tests/tbasic.nim\"\n  exec \"nim c -r tests/tdset.nim\"\n  exec \"nim c -r tests/tread1D.nim\"\n  exec \"nim c -r tests/tattributes.nim\"\n  exec \"nim c -r tests/tvlen_array.nim\"\n  exec \"nim c -r tests/tempty_hyperslab.nim\"\n  exec \"nim c -r tests/tresize.nim\"\n  exec \"nim c -r tests/treshape.nim\"\n  exec \"nim c -r tests/tutil.nim\"\n  exec \"nim c -r tests/tnested.nim\"\n  exec \"nim c -r tests/tfilter.nim\"\n  exec \"nim c -r tests/toverwrite.nim\"\n  exec \"nim c -r tests/tconvert.nim\"\n  exec \"nim c -r tests/tdelete.nim\"\n  exec \"nim c -r tests/tresize_by_add.nim\"\n  exec \"nim c -r tests/tStringAttributes.nim\"\n  exec \"nim c -r tests/tCompound.nim\"\n  # regression tests\n  exec \"nim c -r tests/tint64_dset.nim\"\n  exec \"nim c -r tests/t17.nim\"\n  exec \"nim c -r tests/tIntegerTypes.nim\"\n",
"https://raw.githubusercontent.com/keyme/nim_bitvec/master/bitvec.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"Extensible Bit Vector library for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/fox-cat/ms": "# Package\nversion       = \"0.1.0\"\nauthor        = \"fox-cat\"\ndescription   = \"convert different time formats into milliseconds\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.2.4\"\n",
"https://raw.githubusercontent.com/MnlPhlp/pomTimer/master/pomTimer.nimble": "# Package\n\nversion       = \"1.1\"\nauthor        = \"MnlPhlp\"\ndescription   = \"A simple pomodoro timer for the comandline with cli-output and notifications.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"pomTimer\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\",\"progress\",\"notify\"\n",
"https://raw.githubusercontent.com/tontinton/vector/master/vector.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Tony Solomonik\"\ndescription   = \"Simple reallocating vector\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\".github\", \"tests\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/juancarlospaco/nim-dnsprotec": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"DNS /etc/hosts file manager, Block 1 Million malicious domains with 1 command\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"dnsprotec\"]\n\nrequires \"nim >= 1.0.2\"\n",
"https://github.com/status-im/nim-eth-p2p": "mode = ScriptMode.Verbose\n\npackageName   = \"eth_p2p\"\nversion       = \"1.0.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum P2P library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"Nim\"]\n\nrequires \"nim > 0.18.0\",\n         \"rlp >= 1.0.1\",\n         \"nimcrypto\",\n         \"secp256k1 >= 0.1.0\",\n         \"eth_keys\",\n         \"ranges\",\n         \"stint\",\n         \"byteutils\",\n         \"chronicles\",\n         \"asyncdispatch2\",\n         \"eth_common\",\n         \"snappy\",\n         \"package_visible_types\",\n         \"serialization\",\n         \"json_serialization\"\n\nproc runTest(name: string, defs = \"\", lang = \"c\") =\n  exec \"nim \" & lang & \" \" & defs & \" -d:testing --threads:on --experimental:ForLoopMacros -r tests/\" & name\n\ntask test, \"Runs the test suite\":\n  runTest \"all_tests\"\n  runTest \"testenode\"\n  runTest \"tdiscovery\"\n  runTest \"tserver\"\n  runTest \"tserver\", \"-d:useSnappy\"\n  runTest \"tshh_connect\"\n  runTest \"tshh_connect_mocked\"\n",
"https://raw.githubusercontent.com/JeffersonLab/serializetools/master/serializetools.nimble": "# Package\nversion       = \"1.16.2\"\nauthor        = \"Robert Edwards\"\ndescription   = \"Support for serialization of objects\"\nlicense       = \"MIT\"\n#srcDir        = \"serializetools\"\n#installDirs   = @[\"src\", \"tests\", \"docs\"]\nskipDirs = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\n# Builds\ntask test, \"Run the test suite\":\n  exec \"nim c -r tests/test_xml\"\n  exec \"nim c -r tests/test_binary\"\n\ntask docgen, \"Generate the documentation\":\n  exec \"nim doc2 --out:docs/serializexml.html serializetools/serializexml.nim\"\n  exec \"nim doc2 --out:docs/serializebin.html serializetools/serializebin.nim\"\n\n",
"https://github.com/bluenote10/nim-heap": "[Package]\nname          = \"binaryheap\"\nversion       = \"0.1.1\"\nauthor        = \"Fabian Keller\"\ndescription   = \"Simple binary heap implementation\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.0\"",
"https://github.com/manguluka/duktape-nim": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Manguluka Kakia\"\npackageName   = \"duktape\"\ndescription   = \"wrapper for the Duktape embeddable Javascript engine\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nimgen >= 0.1.4\"\n\nskipDirs = @[\"tests\",\"src\"]\ninstallDirs = @[\"duktape\"]\n\n# Dependencies\nimport distros\n\nvar cmd = \"\"\nif detectOs(Windows):\n    cmd = \"cmd /c \"\n\ntask setup, \"Download and generate\":\n    # exec cmd & \"/bin/cp -r duktape-2.2.1/src/* nim_duktape/src && nimgen nim_duktape.cfg\"\n    exec cmd & \"nimgen duktape.cfg\"\n\nbefore install:\n    setupTask()\n\ntask test, \"Test duktape\":\n    exec \"nim c -r tests/basic_eval.nim\"\n    exec \"nim c -r tests/bind_proc.nim\"",
"https://github.com/capocasa/nim-dav1d": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Carlo Capocasa\"\ndescription   = \"Nim wrapper for dav1d, a fast, portable av1 video decoder created by videolan and used by VLC and Netflix\"\nlicense       = \"BSD2\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"https://github.com/capocasa/nimterop#a2af4b6\"\n\nimport distros\nforeignDep \"meson\"\nif detectOs(Windows):\n  foreignDep(\"mingw-w64-x86_64-toolchain\")\n  foreignDep(\"mingw-w64-x86_64-nasm\")\nelse:\n  foreignDep \"nasm\"\n\n",
"https://github.com/juancarlospaco/nim-hackpad": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Hackathon Web Scratchpad for teaching Nim on events using Wifi with limited or no Internet\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"hackpad\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"jester\"\nrequires \"zip\"\n",
"https://github.com/barcharcraz/nim-assimp": "[Package]\nname = \"nim-assimp\"\nversion = \"0.1.1\"\nauthor = \"fowl\"\ndescription = \"Assorted wrappers and reusable libraries.\"\nlicense = \"MIT\"\n\n[Deps]\nRequires = \"nimrod >= 0.9.3\"\n",
"https://github.com/xflywind/wepoll": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Windows epoll wrapper.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/Mnenmenth/libgraphnim/master/libgraph.nimble": "# Package\n\nversion       = \"1.2\"\nauthor        = \"Earl Kennedy\"\ndescription   = \"Converts 2D linear graph coordinates to pixels on screen\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\nskipDirs      = @[\"test\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n#task test, \"Test graph functionality\"\n#    exec \"nim c --d:debug --lineDir:on --debuginfo --run src/test/test.nim\"\n",
"https://github.com/paranim/pvim": "# Package\n\nversion       = \"0.18.2\"\nauthor        = \"oakes\"\ndescription   = \"A parasitic editor\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\ninstallExt    = @[\n  when defined(windows):\n    \"dll\"\n  elif defined(macosx):\n    \"dylib\"\n  elif defined(linux):\n    \"so\"\n]\nbin           = @[\"pvim\"]\n\ntask dev, \"Run dev version\":\n  exec \"nimble run pvim\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"paravim >= 0.18.2\"\n",
"https://raw.githubusercontent.com/PMunch/binaryparse/master/binaryparse.nimble": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Binary parser (and writer) in pure Nim. Generates efficient parsing procedures that handle many commonly seen patterns seen in binary files and does sub-byte field reading.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\n",
"https://github.com/Guevara-chan/Xors3D-for-Nim": "    \r\n# Package\r\n\r\nversion       = \"0.1.0\"\r\nauthor        = \"Guevara-chan\"\r\ndescription   = \"Blitz3D-esque DX9 engine for Nim\"\r\nlicense       = \"MIT\"\r\nsrcDir        = \"Headers\"\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.18.0\"",
"https://raw.githubusercontent.com/ethosa/badgemaker/master/badgemaker.nimble": "[Package]\r\nname = \"badgemaker\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.9\"\r\ndescription = \"The Nim badgemaker tool.\"\r\nlicense = \"AGPLv3\"\r\nsrcDir = \"badgemaker\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/ahcm/fastx_reader/master/fastx_reader.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Andreas Hauser\"\ndescription   = \"FastQ and Fasta readers for NIM\"\nlicense       = \"LGPL-3.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"fastx_reader\"]\nbinDir        = \"bin\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/treeform/digitalocean/master/digitalocean.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"treeform\"\ndescription   = \"Wrapper for DigitalOcean HTTP API.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/Knaque/jeknil": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Reilly Moore\"\ndescription   = \"A blog post generator for people with priorities.\"\nlicense       = \"CC0-1.0\"\nsrcDir        = \"src\"\nbin           = @[\"jeknil\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"markdown >= 0.8.0\"",
"https://github.com/genotrance/nimbigwig": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"libBigWig wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimbigwig\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://github.com/genotrance/nimgit2": "# Package\n\nversion       = \"0.3.4\"\nauthor        = \"genotrance\"\ndescription   = \"libgit2 wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.6.3\"\n\nvar\n  suffix = \"--path:.. -r tests/tnimgit2.nim\"\n  force = \"\"\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\":\n    buildDocs(@[\"nimgit2.nim\"], \"build/htmldocs\",\n              defines = @[\"git2Conan\", \"git2SetVer=0.28.3\", \"git2Static\"])\nelse:\n  task docs, \"Do nothing\": discard\n\ntask testDyn, \"Dynamic\":\n  exec \"nim c \" & force & \" -d:git2DL -d:git2SetVer=1.0.0 \" & suffix\n\ntask testStatic, \"Static\":\n  exec \"nim c \" & force & \" -d:git2Git -d:git2Static \" & suffix\n\ntask testJBB, \"JBB\":\n  exec \"nim c \" & force & \" -d:git2JBB -d:git2SetVer=0.28.5 \" & suffix\n  exec \"nim c \" & force & \" -d:git2JBB -d:git2SetVer=1.0.1 \" & suffix\n\ntask testConan, \"Conan\":\n  exec \"nim c \" & force & \" -d:git2Conan -d:git2SetVer=0.28.3 \" & suffix\n  # Conan static .lib is not recognized on Windows\n  when not defined(Windows):\n    exec \"nim c \" & force & \" -d:git2Conan -d:git2SetVer=0.28.3 -d:git2Static \" & suffix\n\ntask test, \"Run tests\":\n  force = \"-f\"\n  testDynTask()\n  testStaticTask()\n  testJBBTask()\n  testConanTask()\n  docsTask()\n",
"https://github.com/plenarius/layonara_nwn": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"James Greenhalgh\"\ndescription   = \"Various Layonara related functions for NWN Development\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\nbin           = @[\"layonara_nwn\"]\n\n# Dependencies\nrequires \"nim >= 1.2.6\"\nrequires \"neverwinter >= 1.3.1\"\nrequires \"glob >= 0.9.0\"\nrequires \"docopt >= 0.1.0\"\n",
"https://raw.githubusercontent.com/mjendrusch/nimna/master/nimna.nimble": "mode = ScriptMode.Verbose\n\npackageName    = \"nimna\"\nversion        = \"0.1.0\"\nauthor         = \"Michael Jendrusch\"\ndescription    = \"Nucleic acid folding in Nim\"\nlicense        = \"MIT\"\nskipDirs       = @[\"tests\", \"examples\", \"experimental\"]\nskipFiles      = @[\"nimna.html\", \"api.html\"]\n\nrequires \"nim >= 0.17.3\"\n\nproc testConfig() =\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\nproc exampleConfig() =\n  --define: release\n  --path: \".\"\n\nwhen defined(windows):\n  task deps, \"build dependencies\":\n    exec \"powershell.exe \\\"iwr -outf viennaInstaller.exe https://www.tbi.univie.ac.at/RNA/download/win/windows/Install-ViennaRNA-2.4.3_64bit.exe\\\"\"\n    exec \"viennaInstaller.exe\"\nelse:\n  task deps, \"build dependencies\":\n    exec \"mkdir -p deps/lib\"\n    exec \"wget -O ./deps/vrna.tar.gz https://www.tbi.univie.ac.at/RNA/download/sourcecode/2_4_x/ViennaRNA-2.4.3.tar.gz\"\n    exec \"cd ./deps && tar -xzf vrna.tar.gz\"\n    ## Disable link-time optimization, linking takes ages otherwise.\n    ## Disable C11 features.\n    exec \"cd ./deps/ViennaRNA-2.4.3 && ./configure --prefix=$(readlink -f \\\"../\\\") --disable-c11 --disable-lto && make && make install\"\n  task jsDeps, \"build dependencies for the JS backend\":\n    discard\n\nafter install:\n  ## Currently untested.\n  ## Clean the install dir, should it still contain dependencies\n  ## from a previous install.\n  exec \"cd $(nimble path nimna) && rm -rf deps\"\n  exec \"cd $(nimble path nimna) && mkdir -p deps/lib\"\n  exec \"cd $(nimble path nimna) && wget -O ./deps/vrna.tar.gz https://www.tbi.univie.ac.at/RNA/download/sourcecode/2_4_x/ViennaRNA-2.4.3.tar.gz\"\n  exec \"cd $(nimble path nimna) && cd ./deps && tar -xzf vrna.tar.gz\"\n  ## Disable link-time optimization, linking takes ages otherwise.\n  ## Disable C11 features.\n  exec \"cd $(nimble path nimna) && cd ./deps/ViennaRNA-2.4.3 && ./configure --prefix=$(readlink -f \\\"../\\\") --disable-c11 --disable-lto && make && make install\"\n  exec \"echo \\\"\\\" >> ~/.bashrc\"\n  exec \"echo \\\"# nimna dependencies:\\\" >> ~/.bashrc\"\n  exec \"echo \\\"export LIBRARY_PATH=$LIBRARY_PATH:$(nimble path nimna)/deps/lib/\\\" >> ~/.bashrc\"\n  exec \"echo \\\"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(nimble path nimna)/deps/lib/\\\" >> ~/.bashrc\"\n  exec \"echo \\\"alias nimnacleanup=\\\\\\\"cd $(nimble path nimna) && rm -rf deps && cd -\\\\\\\"\\\" >> ~/.bashrc\"\n\nafter deps:\n  when defined(windows):\n    discard\n  else:\n    exec \"echo \\\"\\\" >> ~/.bashrc\"\n    exec \"echo \\\"# nimna dependencies:\\\" >> ~/.bashrc\"\n    exec \"echo \\\"export LIBRARY_PATH=$LIBRARY_PATH:$(nimble path nimna)/deps/lib/\\\" >> ~/.bashrc\"\n    exec \"echo \\\"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(nimble path nimna)/deps/lib/\\\" >> ~/.bashrc\"\n    exec \"echo \\\"alias nimnacleanup=\\\\\\\"cd $(nimble path nimna) && rm -rf deps && cd -\\\\\\\"\\\" >> ~/.bashrc\"\n\ntask docs, \"build nimna docs\":\n  exec \"mkdir -p htmldocs\"\n  exec \"mkdir -p htmldocs/nimna\"\n  exec \"mkdir -p htmldocs/nimna/private\"\n  exec \"mkdir -p htmldocs/nimna/base\"\n  exec \"cd nimna && nim doc2 design.nim\"\n  --project\n  --path:\".\"\n  setCommand \"doc2\", \"nimna.nim\"\nafter docs:\n  exec \"mv nimna/design.html htmldocs/nimna/design.html\"\n\ntask test, \"run nimna tests\":\n  testConfig()\n  setCommand \"c\", \"tests/tall.nim\"\n\ntask examples, \"build nimna example applications\":\n  exampleConfig()\n  setCommand \"c\", \"examples/foldAndPlot.nim\"\n  setCommand \"c\", \"examples/randomSearch.nim\"\n",
"https://github.com/jxy/sitmo": "version     = \"0.0.2\"\nauthor      = \"Xiao-Yong Jin\"\ndescription = \"Sitmo parallel random number generator in Nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\ntask test, \"Runs the test suite\":\n  --define: release\n  --path: \"src\"\n  --run\n  setCommand \"c\", \"test/t.nim\"\n\ntask docgen, \"Regenerate the documentation\":\n  exec \"nim doc2 --out:doc/sitmo.html src/sitmo.nim\"\n",
"https://github.com/guibar64/polypbren": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"G. Bareigts\"\ndescription   = \"Renormalization of colloidal charges of polydipserse dispersions using the Poisson-Boltzmann equation\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"https://github.com/yglukhov/threadpools\"\n\n# Build\n\nsrcDir = \"src\"\nbin = @[\"polypbren\"]\nbinDir = \"bin\"\n\n# Doc\n\ntask gendoc, \" Generate html documentation.\":\n  mkDir(\"docs/html\")\n  exec \"nim rst2html --index:on --out=docs/html/index.html docs/index.rst\"\n  exec \"nim rst2html --index:on --out:docs/html/usage.html docs/usage.rst\"\n  exec \"nim rst2html --index:on --out:docs/html/example.html docs/example.rst\"\n  exec \"nim --index=on doc2 --out=docs/html/pbsolv.html src/polypbrenpkg/pbsolv.nim\"\n  #exec \"nim --index=on doc2 --out=docs/html/pbren.html src/polypbrenpkg/pbren.nim\"\n  #exec \"nim --index=on doc2 --out=docs/html/distribs.html src/polypbrenpkg/distrib.nim\"\n  #exec \"nim --index=on doc2 --out=docs/html/params.html src/polypbrenpkg/params.nim\"\n  #exec \"nim buildIndex --out=docs/html/theindex.html docs/html\"\n",
"https://raw.githubusercontent.com/sillibird/nimhq/master/nimhq.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"SilliBird\"\ndescription   = \"HQ Trivia API wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://github.com/tulayang/httpkit": "# Package\nversion = \"0.1.1\"\nauthor = \"Wang Tong\"\ndescription = \"An efficient HTTP parser written in pure nim. Help you to write HTTP services or clients via TCP, UDP, or even Unix Domain socket, etc.\"\nlicense = \"MIT\"\nskipFiles = @[\"TODO.md\"]\n\n# Dependencies\nrequires \"nim >= 0.17.0\"",
"https://api.github.com/repos/Krognol/discordnim/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"1f244aaa3a370298c4d44af81770059e91a50560\",\"size\":14,\"url\":\"https://api.github.com/repos/Krognol/discordnim/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/Krognol/discordnim/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/1f244aaa3a370298c4d44af81770059e91a50560\",\"download_url\":\"https://raw.githubusercontent.com/Krognol/discordnim/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Krognol/discordnim/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/1f244aaa3a370298c4d44af81770059e91a50560\",\"html\":\"https://github.com/Krognol/discordnim/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"ce560d2a92504cb3016e050fa3efe5b4f467c964\",\"size\":1064,\"url\":\"https://api.github.com/repos/Krognol/discordnim/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/Krognol/discordnim/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/ce560d2a92504cb3016e050fa3efe5b4f467c964\",\"download_url\":\"https://raw.githubusercontent.com/Krognol/discordnim/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Krognol/discordnim/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/ce560d2a92504cb3016e050fa3efe5b4f467c964\",\"html\":\"https://github.com/Krognol/discordnim/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"db86e9cc54878ee0124e5668df85e18e510d29b6\",\"size\":1821,\"url\":\"https://api.github.com/repos/Krognol/discordnim/contents/README.md?ref=master\",\"html_url\":\"https://github.com/Krognol/discordnim/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/db86e9cc54878ee0124e5668df85e18e510d29b6\",\"download_url\":\"https://raw.githubusercontent.com/Krognol/discordnim/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Krognol/discordnim/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/db86e9cc54878ee0124e5668df85e18e510d29b6\",\"html\":\"https://github.com/Krognol/discordnim/blob/master/README.md\"}},{\"name\":\"discord.nimble\",\"path\":\"discord.nimble\",\"sha\":\"98ad7d64b7e4eba0ce248db44ae33e76488c44af\",\"size\":203,\"url\":\"https://api.github.com/repos/Krognol/discordnim/contents/discord.nimble?ref=master\",\"html_url\":\"https://github.com/Krognol/discordnim/blob/master/discord.nimble\",\"git_url\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/98ad7d64b7e4eba0ce248db44ae33e76488c44af\",\"download_url\":\"https://raw.githubusercontent.com/Krognol/discordnim/master/discord.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Krognol/discordnim/contents/discord.nimble?ref=master\",\"git\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/98ad7d64b7e4eba0ce248db44ae33e76488c44af\",\"html\":\"https://github.com/Krognol/discordnim/blob/master/discord.nimble\"}},{\"name\":\"discordnim.nim\",\"path\":\"discordnim.nim\",\"sha\":\"3100935d896b989527e08c4abb1ee15f222a2539\",\"size\":71,\"url\":\"https://api.github.com/repos/Krognol/discordnim/contents/discordnim.nim?ref=master\",\"html_url\":\"https://github.com/Krognol/discordnim/blob/master/discordnim.nim\",\"git_url\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/3100935d896b989527e08c4abb1ee15f222a2539\",\"download_url\":\"https://raw.githubusercontent.com/Krognol/discordnim/master/discordnim.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Krognol/discordnim/contents/discordnim.nim?ref=master\",\"git\":\"https://api.github.com/repos/Krognol/discordnim/git/blobs/3100935d896b989527e08c4abb1ee15f222a2539\",\"html\":\"https://github.com/Krognol/discordnim/blob/master/discordnim.nim\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"b4e3c6fd54c8eaca0163f1b9f1ade05de2c00b63\",\"size\":0,\"url\":\"https://api.github.com/repos/Krognol/discordnim/contents/docs?ref=master\",\"html_url\":\"https://github.com/Krognol/discordnim/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/Krognol/discordnim/git/trees/b4e3c6fd54c8eaca0163f1b9f1ade05de2c00b63\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Krognol/discordnim/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/Krognol/discordnim/git/trees/b4e3c6fd54c8eaca0163f1b9f1ade05de2c00b63\",\"html\":\"https://github.com/Krognol/discordnim/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"c780139f604c5c910d130733798a3fdd1ab67c57\",\"size\":0,\"url\":\"https://api.github.com/repos/Krognol/discordnim/contents/examples?ref=master\",\"html_url\":\"https://github.com/Krognol/discordnim/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/Krognol/discordnim/git/trees/c780139f604c5c910d130733798a3fdd1ab67c57\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Krognol/discordnim/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/Krognol/discordnim/git/trees/c780139f604c5c910d130733798a3fdd1ab67c57\",\"html\":\"https://github.com/Krognol/discordnim/tree/master/examples\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"aa13c805b51a2afef9a2c517922220eaa2b8713b\",\"size\":0,\"url\":\"https://api.github.com/repos/Krognol/discordnim/contents/src?ref=master\",\"html_url\":\"https://github.com/Krognol/discordnim/tree/master/src\",\"git_url\":\"https://api.github.com/repos/Krognol/discordnim/git/trees/aa13c805b51a2afef9a2c517922220eaa2b8713b\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Krognol/discordnim/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/Krognol/discordnim/git/trees/aa13c805b51a2afef9a2c517922220eaa2b8713b\",\"html\":\"https://github.com/Krognol/discordnim/tree/master/src\"}}]",
"https://raw.githubusercontent.com/status-im/nim-bncurve/master/bncurve.nimble": "packageName   = \"bncurve\"\nversion       = \"1.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Barreto-Naehrig pairing-friendly elliptic curve implementation\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\", \"Nim\", \"nim\"]\n\n### Dependencies\n\nrequires \"nim > 0.18.0\",\n         \"nimcrypto\"\n\ntask test, \"Run all tests\":\n  for tprog in @[\n      \"tests/tarith\",\n      \"tests/tfields\",\n      \"tests/tgroups\",\n      \"tests/tpairing\",\n      \"tests/tether\",\n      \"tests/tvectors\",\n    ]:\n    exec \"nim c -f -r -d:release --threads:on \" & tprog\n\n",
"https://raw.githubusercontent.com/oswjk/nimpb_protoc/master/nimpb_protoc.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Oskari Timperi\"\ndescription   = \"Protocol Buffers compiler for nimpb\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask fetch, \"fetch prebuilt protoc binaries\":\n    exec \"nim c -d:ssl -r fetch\"\n",
"https://raw.githubusercontent.com/AdrianV/nimcb/master/nimcb.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Adrian Veith\"\ndescription   = \"Integrate nim projects in the C++Builder build process\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimcb\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/Jeff-Ciesielski/nimr": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"Helper to run nim code like a script\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n# Executable\n\nbin           = @[\"nimr\"]\n\n# Settings\n\nsrcDir        = \"src\"\n\n",
"https://github.com/jangko/nimCEF": "[Package]\nname          = \"nimCEF\"\nversion       = \"0.1.0\"\nauthor        = \"Andri Lim\"\ndescription   = \"CEF3 Chromium Emmbedded Framework wrapper\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13.0\"",
"https://raw.githubusercontent.com/bluenote10/nim-ovr/master/libovr.nimble": "[Package]\nname          = \"libovr\"\nversion       = \"0.1.0\"\nauthor        = \"Fabian Keller\"\ndescription   = \"Nim bindings for libOVR (Oculus Rift)\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"",
"https://github.com/muxueqz/remarker_light": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"muxueqz\"\ndescription   = \"remarker_light is a command line tool for building a remark-based slideshow page very easily.\"\nlicense       = \"GPL-2.0\"\nsrcDir        = \"src\"\nbin           = @[\"remarker_light\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18\"\nrequires \"jester\"\nrequires \"docopt\"\n",
"https://raw.githubusercontent.com/pigmej/fuzzy/master/fuzzy.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jedrzej Nowak\"\ndescription   = \"Pure nim fuzzy search implementation. Supports substrings etc\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.8\"\n",
"https://raw.githubusercontent.com/SolitudeSF/imageman/master/imageman.nimble": "# Package\n\nversion       = \"0.7.6\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Image manipulation library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"stb_image >= 2.2\"\n\ntask examples, \"Run examples\":\n  withDir \"examples\":\n    let srcs = [\"resize.nim\", \"flip.nim\"]\n    for src in srcs:\n      echo \"Run: \" & src & \" example\"\n      exec \"nim c -r --hints:off --verbosity:0 \" & src\n",
"https://raw.githubusercontent.com/Sann0/Nimem/master/nimem.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Meow\"\ndescription   = \"Library for external memory manipulation on a windows process\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"winim >= 3.6.0\"\nrequires \"regex >= 0.19.0\"",
"https://github.com/ReneSac/memviews": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"ReneSac\"\ndescription   = \"Unsafe in-place slicing\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"c_alikes >= 0.2.0\"\n",
"https://raw.githubusercontent.com/Yardanico/nimvkapi/master/vkapi.nimble": "# Package\n\nversion       = \"1.3.1\"\nauthor        = \"TiberiumN (Daniil Yarancev)\"\ndescription   = \"Wrapper for vk.com API\"\nlicense       = \"MIT\"\n\ninstallFiles  = @[\"methods.txt\"]\nskipDirs      = @[\"docs\"]\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask updateApi, \"Update API method names\":\n  exec \"nim c -r utils/getmethods\"\n\ntask makeDocs, \"Update the .html doc file\":\n  exec \"nim doc -o=docs/index.html vkapi\"\n",
"https://github.com/nim-lang/pas2nim": "[Package]\nname          = \"pas2nim\"\nversion       = \"0.9.6\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"pas2nim is a tool to translate Pascal code to Nim.\"\nlicense       = \"MIT\"\n\nbin = \"pas2nim\"\n\n[Deps]\nRequires: \"nim >= 0.9.4\"\n\n",
"https://raw.githubusercontent.com/rgv151/scram/master/scram.nimble": "version       = \"0.1.14\"\nauthor        = \"Huy Doan\"\ndescription   = \"Salted Challenge Response Authentication Mechanism (SCRAM) \"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.19.4\", \"hmac >= 0.2.0\"\n",
"https://raw.githubusercontent.com/jasonrbriggs/proton-nim/master/proton.nimble": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Jason R Briggs\"\ndescription   = \"Proton template engine\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n#bin           = @[\"proton\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/ba0f3/xml.nim/master/xml.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Huy Doan\"\ndescription   = \"Pure Nim XML parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/luminosoda/gradient": "# Package\nversion = \"1.0.0\"\nauthor = \"Andrew Yarche\"\ndescription = \"Color gradients generation\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\nrequires \"chroma >= 0.1.0\"",
"https://github.com/KingDarBoja/Iridium": "# Package\n\n\nversion       = \"0.3.2\"\nauthor        = \"KingDarBoja\"\ndescription   = \"The International Standard for country codes and codes for their subdivisions on Nim (ISO-3166)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/tests\"\n",
"https://raw.githubusercontent.com/nimgl/nimgl/master/nimgl.nimble": "# Package\n\nversion     = \"1.1.6\"\nauthor      = \"Leonardo Mariscal\"\ndescription = \"Nim Game Library\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nskipDirs    = @[\".github\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Tasks\n\nimport\n  strutils\n\nconst\n  docDir = \"docs\"\n\nproc nimExt(file: string): bool =\n  file[file.len - 4 ..< file.len] == \".nim\"\n\nproc genDocs(pathr: string, output: string) =\n  let path = pathr.replace(r\"\\\", \"/\")\n  var src = path[path.rfind(\"/\") + 1 .. path.len - 5]\n  echo \"\\n[info] generating \" & src & \".nim\"\n  if src == \"nimgl\":\n    src = \"index\"\n  exec(\"nim doc -d:vulkan -o:\" & output & \"/\" & src & \".html\" & \" \" & path)\n\nproc walkRecursive(dir: string) =\n  for f in listFiles(dir):\n    if f.nimExt: genDocs(f, docDir)\n  for od in listDirs(dir):\n    walkRecursive(od)\n\ntask test, \"Run files under examples dir\":\n  exec(\"nimble install -y glm\")\n  for file in listFiles(\"examples\"):\n    if file[6] == 't' and file.nimExt:\n      echo \"\\n[info] testing \" & file[6..<file.len]\n      exec(\"nim c -d:opengl_debug \" & file)\n\ntask docs, \"Generate documentation for all of the library\":\n  walkRecursive(srcDir)\n",
"https://raw.githubusercontent.com/treeform/netty/master//netty.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"treeform\"\ndescription   = \"Netty is a reliable UDP connection for games in Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"flatty >= 0.1.0\"\n",
"https://github.com/treeform/staticglfw": "\nversion     = \"4.1.2\"\nauthor      = \"Andre von Houck\"\ndescription = \"Static GLFW 3 wrapper for Nim\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.2\"\nrequires \"opengl >= 1.2.3\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-i3ipc/master/i3ipc.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"i3 IPC client\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://github.com/wltsmrz/nim_zstd": "version = \"0.5.0\"\nauthor = \"wltsmrz\"\ndescription = \"Nim bindings for zstd\"\nlicense = \"MIT\"\nskipDirs = @[\"examples\"]\nskipFiles = @[\"README.md\"]\ninstallDirs = @[\"zstd\"]\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/juancarlospaco/nim-requirementstxt": "version     = \"0.1.0\"\nauthor      = \"Juan Carlos\"\ndescription = \"Python requirements.txt parser for Nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/jasonrbriggs/baker/master/baker.nimble": "# Package\n\nversion       = \"2.0.7\"\nauthor        = \"Jason R Briggs\"\ndescription   = \"Static website generation\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\nbin           = @[\"baker\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"proton >= 0.2.4\"\nrequires \"https://github.com/docopt/docopt.nim#head\"\nrequires \"markdown >= 0.2.0\"\nrequires \"zip >= 0.2.1\"\nrequires \"timezones >= 0.5.0\"\nrequires \"ndb >= 0.19.4\"\n",
"https://raw.githubusercontent.com/Yardanico/spinny/master/spinny.nimble": "version       = \"0.3.1\"\nauthor        = \"Mark Molnar (molnarmark), Danil Yarantsev (Yardanico)\"\ndescription   = \"Terminal Spinners for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"",
"https://raw.githubusercontent.com/tormaroe/beanstalkd.nim/master/beanstalkd.nimble": "[Package]\nname\t\t= \"beanstalkd\"\nversion\t\t= \"0.2.0\"\nauthor\t\t= \"Torbjørn Marø\"\ndescription\t= \"A beanstalkd work queue client library\"\nlicense\t\t= \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://raw.githubusercontent.com/barcharcraz/nim-netpbm/master/netpbm.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Charles Barto\"\ndescription   = \"Wrapper for libnetpbm\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/rustomax/npg/master/npg.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Max Skybin\"\ndescription   = \"Password generator in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"npg\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"passgen >= 0.1.0\"",
"https://github.com/kaitai-io/kaitai_struct_nim_runtime": "# Package\n\nversion       = \"0.9.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"Kaitai Struct runtime library for Nim\"\nlicense       = \"MIT\"\n",
"https://github.com/bung87/minhash": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zhoupeng\"\ndescription   = \"Nim implementation of minhash algoritim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\n",
"https://github.com/status-im/nim-chronicles": "mode = ScriptMode.Verbose\n\npackageName   = \"chronicles\"\nversion       = \"0.10.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A crafty implementation of structured logging for Nim\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\"\nrequires \"testutils\"\nrequires \"json_serialization\"\n\ntask test, \"run CPU tests\":\n  when defined(windows):\n    # exec \"cmd.exe /C ntu.cmd test tests\"\n    echo \"`ntu` doesn't work on Windows\"\n  else:\n    exec \"ntu test tests\"\n",
"https://github.com/ba0f3/sim.nim": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"Parse config by defining an object\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://github.com/vycb/gdbmc.nim": "# Package\n\nversion       = \"0.9.9\"\nauthor        = \"vycb\"\ndescription   = \"This library is a wrapper to C GDBM one\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\nskipFiles = @[\"deduplicate.nim,src\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2\"\n\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -d:INTALLED_GDBM_LIB -d:test -r gdbmc.nim\"\n",
"https://raw.githubusercontent.com/luisacosta828/pgxcrown/master/pgxcrown.nimble": "# Package\n\nversion       = \"0.1.8\"\nauthor        = \"luisacosta828\"\ndescription   = \"Build Postgres extensions in Nim.\"\nsrcDir        = \"src\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.12.0\"",
"https://github.com/liquid600pgm/euwren": "#--\n# Package\n#--\n\nversion       = \"0.13.3\"\nauthor        = \"liquid600pgm\"\ndescription   = \"High-level Wren wrapper\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n#--\n# Dependencies\n#--\n\nrequires \"nim >= 1.0.0\"\nrequires \"nimterop >= 0.3.6\"\n",
"https://raw.githubusercontent.com/Calinou/clr/master/clr.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Hugo Locurcio\"\ndescription   = \"Get information about colors and convert them in the command line\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"clr\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\nrequires \"chroma#1bbe72ead9fe8270a8d038eb92bd4f83b3f0fc87\"\nrequires \"cligen >= 0.9.31\"\n",
"https://github.com/sigmapie8/luhny": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Manav Garg (sigmapie8)\"\ndescription   = \"Luhn\\'s Algorithm implementation in Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://github.com/markpbaggett/oaitools.nim": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"Mark Baggett\"\ndescription   = \"High Level OAI-PMH library for Nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"xmltools >= 0.1.5\"\n\n# Tests\n\ntask test, \"Test\":\n  exec \"nim c -r tests/tests.nim\"\n\n# Documentation\n\ntask docs, \"Docs\":\n  exec \"nim doc --git.url:https://github.com/markpbaggett/oaitools.nim -o:./docs/index.html src/oaitools.nim\"\n",
"https://github.com/CodeDoes/nimspice": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"CodeDoes\"\ndescription   = \"A bunch of macros. sugar if you would\"\nlicense       = \"MIT\"\n\ninstallDirs   = @[\"nimspice\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"",
"https://raw.githubusercontent.com/fenekku/moustachu/master/moustachu.nimble": "# Package\n\nversion     = \"0.14.0\"\nauthor      = \"Guillaume Viger\"\ndescription = \"Mustache templating for Nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\ninstallExt  = @[\"nim\"]\nbin         = @[\"moustachu\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"commandeer >= 0.10.4\"\n\n# Tasks\ntask tests, \"Run the Moustachu tester\":\n  exec \"nim compile --run runTests\"\n\ntask benchmarks, \"Run the Moustachu benchmarks\":\n  exec \"nim compile --run runBenchmarks\"",
"https://github.com/nitely/nim-strunicode": "# Package\n\nversion = \"0.9.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Swift-like unicode string handling\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"normalize >= 0.6.0\"\nrequires \"graphemes >= 0.7.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/strunicode.nim\"\n  # Test runnable examples\n  exec \"nim doc -o:./docs/ugh/ugh.html ./src/strunicode.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs/ ./src/strunicode.nim\"\n",
"https://github.com/enthus1ast/nimWebTemplates": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"enthus1ast\"\ndescription   = \"minimal jinja like experiment\"\nlicense       = \"MIT\"\n\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"https://github.com/enthus1ast/nimCommandParser\"\n\n",
"https://raw.githubusercontent.com/narimiran/sorta/master/sorta.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"narimiran\"\ndescription   = \"Sorted Tables based on B-Trees\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/piedar/coalesce": "# Package\n\nversion       = \"0.3.2\"\nauthor        = \"Bennjamin Blast\"\ndescription   = \"coalesce to the first value that exists\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n# Tasks\n\ntask test, \"run tests\":\n  exec \"nim c -r coalesce.nim\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-testrunner/master/testrunner.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Test runner\"\nlicense       = \"GPLv3\"\nbin           = @[\"testrunner\"]\n\n# Dependencies\n\nwhen defined(Linux):\n  requires \"nim >= 0.16.0\", \"libnotify\", \"fswatch\"\nelse:\n  requires \"nim >= 0.16.0\"\n\n",
"https://raw.githubusercontent.com/doongjohn/vscds/master/vscds.nimble": "# Package\n\nversion       = \"0.3.3\"\nauthor        = \"doongjohn\"\ndescription   = \"<VS Code Data Swapper> Easily manage multiple data folders.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"vscds\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"nimlevenshtein >= 0.1.0\"\n",
"https://github.com/kaushalmodi/p4ztag_to_json": "# Package\n\nversion       = \"0.11.1\"\nauthor        = \"Kaushal Modi\"\ndescription   = \"Convert Helix Version Control / Perforce (p4) -ztag output to JSON\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"p4ztag_to_json\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\", \"regex >= 0.11.0\"\n",
"https://github.com/juancarlospaco/nim-pypi": "version     = CompileDate.replace(\"-\", \".\")\nauthor      = \"Juan Carlos\"\ndescription = \"PLZ Python PIP alternative\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nbin         = @[\"plz\"]\n\nrequires \"nim >= 1.3.5\"\nrequires \"requirementstxt >= 0.0.1\"\nrequires \"libarchibi >= 0.0.1\"\n",
"https://github.com/zevv/with": "version       = \"0.4.0\"\nauthor        = \"zevv\"\ndescription   = \"Simple 'with' macro for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.19.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r \" & \"tests/tests.nim\"\n",
"https://github.com/twist-vector/nim-stopwatch.git": "[Package]\nname          = \"nimstopwatch\"\nversion       = \"0.1.0\"\nauthor        = \"Tom Krauss\"\ndescription   = \"Command line stopwatch written in Nim with split / lap support\"\nlicense       = \"Apache2\"\nbin           = \"stopwatch\"\n\n[Deps]\nRequires: \"nim >= 0.12.0\"\n",
"https://raw.githubusercontent.com/danielecook/til-tool/master/til.nimble": "# Package\n\nversion       = \"0.0.3\"\nauthor        = \"Daniel E. Cook\"\ndescription   = \"til-tool: Today I Learned tool\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"colorize\"\nrequires \"argparse\"\n\nbin = @[\"til\"]\n",
"https://raw.githubusercontent.com/superfunc/maybe/master/maybe.nimble": "# Package\n\nversion = \"2.2\"\nauthor = \"superfunc\"\ndescription = \"A maybe type for nim.\"\nlicense = \"BSD\"\nsrcDir = \"src\"\nskipDirs = @[\"examples\", \"tests\"]\n\n# Deps\n\nrequires \"nim >= 0.9.6\"\n",
"https://raw.githubusercontent.com/nim-lang/basic2d/master/basic2d.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Deprecated module from stdlib.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/ithkuil/bcryptnim/master//bcrypt.nimble": "[Package]\nname          = \"bcrypt\"\nversion       = \"0.2.1\"\nauthor        = \"Jason Livesay\"\ndescription   = \"Wraps the bcrypt (blowfish) library for creating encrypted hashes (useful for passwords)\"\nlicense       = \"BSD\"\ninstallExt    = \"c,h\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.2\"\n",
"http://raw.githubusercontent.com/jayvanderwall/desim/master/desim.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jay Van Der Wall\"\ndescription   = \"A discrete event simulator modeled on SST\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/LemonHX/PPM-Nim/master/PPM.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lemonhx\"\ndescription   = \"lib for ppm image\"\nlicense       = \"LXXSDT-MIT\"\nsrcDir        = \"src\"\nbackend       = \"cpp\"",
"https://github.com/jan0sc/antlr4nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"jan0sc\"\ndescription   = \"Nim interface to ANTLR4 listener/visitor via jsffi\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n\n\nimport strformat\nimport os\n\n# Tasks\n\ntask prepare, \"Convert ANTLR4 .js modules to .mjs for use with antlr4nim.\":\n  var n = paramcount()\n  var grammar = paramStr(n)\n\n  var allOK = true\n\n  # Lexer\n  if fileExists(fmt\"{grammar}Lexer.js\"):\n    if fileExists(fmt\"{grammar}Lexer.mjs\"):\n      echo fmt\"ERROR: {grammar}Lexer.mjs is already present.\"\n      allOK = false\n    else:\n      exec fmt\"cp {grammar}Lexer.js {grammar}Lexer.mjs\"\n      echo fmt\"Copied {grammar}Lexer.js to {grammar}Lexer.mjs\"\n  else:\n    echo fmt\"ERROR: {grammar}Lexer.js not found.\"\n    allOK = false\n\n  #Parser\n  if fileExists(fmt\"{grammar}Parser.js\"):\n    if fileExists(fmt\"{grammar}Parser.mjs\"):\n      echo fmt\"ERROR: {grammar}Parser.mjs is already present.\"\n      allOK = false\n    else:\n      exec fmt\"cat {grammar}Parser.js | sed 's/{grammar}Listener.js/{grammar}Listener.mjs/' | sed 's/{grammar}Visitor.js/{grammar}Visitor.mjs/' > {grammar}Parser.mjs\"\n      echo fmt\"Copied {grammar}Parser.js to {grammar}Parser.mjs and updated imports\"\n  else:\n    echo fmt\"ERROR: {grammar}Parser.js not found.\"\n    allOK = false\n\n  # Listener and Visitor\n  var foundOne = false\n  if fileExists(fmt\"{grammar}Listener.js\"):\n    foundOne = true\n    if fileExists(fmt\"{grammar}Listener.mjs\"):\n      echo fmt\"ERROR: {grammar}Listener.mjs is already present.\"\n      allOK = false\n    else:\n      exec fmt\"cp {grammar}Listener.js {grammar}Listener.mjs\"\n      echo fmt\"Copied {grammar}Listener.js to {grammar}Listener.mjs\"\n\n  if fileExists(fmt\"{grammar}Visitor.js\"):\n    foundOne = true\n    if fileExists(fmt\"{grammar}Visitor.mjs\"):\n      echo fmt\"ERROR: {grammar}Visitor.mjs is already present.\"\n      allOK = false\n    else:\n      exec fmt\"cp {grammar}Visitor.js {grammar}Visitor.mjs\"\n      echo fmt\"Copied {grammar}Visitor.js to {grammar}Visitor.mjs\"\n\n  if not foundOne:\n    echo fmt\"ERROR: Neither {grammar}Listener.js nor {grammar}Visitor.js found.\"\n    allOK = false\n\n  # Success?\n  if allOK:\n    echo \"OK: ANTLR4 files are now ready for antlr4nim.\"\n  else:\n    echo \"FAIL: Some ANTLR4 files could not be processed.\"\n",
"https://raw.githubusercontent.com/samdmarshall/libclang-nim/master/clang.nimble": "# Package\nversion       = \"0.59\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"Wrapper for libclang C headers\"\nlicense       = \"BSD 3-Clause\"\n\nsrcDir        = \"src/\"\n\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/jabbalaci/UrlShortener/master/urlshortener.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Laszlo Szathmary (Jabba Laci)\"\ndescription   = \"A URL shortener cli app. using bit.ly\"\nlicense       = \"MIT\"\nbin           = @[\"urlshortener\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/xzeshen/bio/master/bio.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Bytes utils for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/planety/logue/master/logue.nimble": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"flywind\"\ndescription   = \"Command line tools for Prologue.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"logue\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"cligen >= 1.2.2\"\n",
"https://github.com/Araq/libcurl": "# Package\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf, Dominik Picheta\"\r\ndescription   = \"Nim wrapper for libcurl.\"\r\nlicense       = \"MIT\"\r\n\r\n# Deps\r\nrequires \"nim >= 0.10.0\"\r\n",
"https://raw.githubusercontent.com/dom96/notifications/master/notifications.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"GUI notifications for Mac OS X\\'s Notification Center\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.12.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c tests/alltests\"\n  cpFile \"tests/alltests\", \"alltests\"\n  exec \"chmod +x alltests\"\n  exec \"./alltests\"\n  rmFile \"alltests\"\n",
"https://github.com/status-im/nim-bncurve": "packageName   = \"bncurve\"\nversion       = \"1.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Barreto-Naehrig pairing-friendly elliptic curve implementation\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\", \"Nim\", \"nim\"]\n\n### Dependencies\n\nrequires \"nim > 0.18.0\",\n         \"nimcrypto\"\n\ntask test, \"Run all tests\":\n  for tprog in @[\n      \"tests/tarith\",\n      \"tests/tfields\",\n      \"tests/tgroups\",\n      \"tests/tpairing\",\n      \"tests/tether\",\n      \"tests/tvectors\",\n    ]:\n    exec \"nim c -f -r -d:release --threads:on \" & tprog\n\n",
"https://github.com/stisa/ajax": "# Package\nversion       = \"0.1.1\"\nauthor        = \"stisa\"\ndescription   = \"Wrapper for js ajax\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires: \"nim >= 1.4.0\"\n\nimport ospaths\n\ntask builddocs, \"Build docs folder - examples and documentation\":\n  exec(\"exampler\") # custom utility to generate example pages\n  exec(\"nim doc2 -o:docs/ajax.html src/ajax.nim\")\n  withdir \"examples\":\n    for file in listfiles(\".\"):\n      if splitfile(file).ext == \".nim\":\n        exec \"nim js -o:../docs/examples/\"&file.changefileext(\"js\")&\" \"&file\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-random-font-color/master/random_font_color.nimble": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"juancarlospaco\"\ndescription   = \"Random curated Fonts and pastel Colors for your UI/UX design, design for non-designers.\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/fragcolor-xyz/nimline": "# Package\nversion     = \"0.1.7\"\nauthor      = \"sinkingsugar\"\ndescription = \"Wrapper-less C/C++ interop for Nim\"\nlicense     = \"MIT\"\nskipFiles   = @[\".gitlab-ci.yml\", \".travis.yml\", \"Dockerfile\"]\n\n# Deps\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/juancarlospaco/nim-gatabase": "version       = \"0.9.9\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Compile-Time ORM for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\", \"examples\", \"docs\"]\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/Vindaar/ginger": "# Package\n\nversion       = \"0.2.9\"\nauthor        = \"Vindaar\"\ndescription   = \"A Grid (R) like package in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"chroma >= 0.1.0\"\nrequires \"https://github.com/Vindaar/seqmath >= 0.1.7\"\nrequires \"cairo >= 1.1.1\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/test1.nim\"\n",
"https://raw.githubusercontent.com/numforge/nim-clblast/master/clblast.nimble": "### Package\npackageName   = \"clblast\"\nversion       = \"0.0.1\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"A wrapper for CLBlast, an OpenCL BLAS library\"\nlicense       = \"Apache License 2.0\"\n\n### Source\nsrcDir        = \"src\"\n\n### Dependencies\nrequires \"nim >= 0.17.2\", \"opencl\"\n\ntask autogen, \"Automatically generate up-to-date CLBlast bindings (requires nimgen)\":\n  exec \"nimgen clblast_nimgen.cfg\"\n  if dirExists\"src/generated\":\n    echo \"src/generated directory exists and will replaced by up-to-date bindings\"\n    rmDir \"src/generated\"\n  mvFile \"clblast\", \"src/generated\"\n  echo \"CLBlast bindings generated\"",
"https://github.com/dom96/nim-opencv": "[Package]\nname          = \"opencv\"\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"OpenCV wrapper\"\nlicense       = \"MIT\"\n\nskipDirs = \"tests\"\n\n[Deps]\nRequires: \"nim >= 0.9.3\"",
"https://raw.githubusercontent.com/Halsys/Nim-Remotery/master/Remotery.nimble": "# Package\n\nversion = \"0.1.0\"\nauthor = \"Cory Noll Crimmins - Golden\"\ndescription = \"Nim wrapper for (and with) Celtoys's Remotery\"\nlicense = \"Apache V2\"\n\n# Dependencies\"\n\nrequires \"nim >= 0.14.2\"\n",
"https://raw.githubusercontent.com/zah/nim-package-visible-types/master/package_visible_types.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"package_visible_types\"\nversion       = \"1.0.0\"\nauthor        = \"Zahary Karadjov\"\ndescription   = \"A cure for the lack of package-level visibility in Nim\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.18.0\"\n\n",
"https://github.com/juancarlospaco/nim-xdo": "version       = \"0.7.5\"\nauthor        = \"Juan Carlos, Mircea Ilie Ploscaru\"\ndescription   = \"Nim GUI Automation Linux, simulate user interaction, mouse and keyboard.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nrequires \"nim >= 1.2.4\"\n\nimport distros\n\nbefore install:\n  foreignDep \"xdo\"\n",
"https://github.com/beshrkayali/loki": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Beshr Kayali\"\ndescription   = \"A small library for writing cli programs in Nim.\"\nlicense       = \"Zlib\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://api.github.com/repos/Vladar4/libtcod_nim/contents": "[{\"name\":\"LIBTCOD-CHANGELOG.md\",\"path\":\"LIBTCOD-CHANGELOG.md\",\"sha\":\"327d0c563141a4aed9b85a737ac1b9bdaba9af21\",\"size\":48593,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/LIBTCOD-CHANGELOG.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/blob/master/LIBTCOD-CHANGELOG.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/327d0c563141a4aed9b85a737ac1b9bdaba9af21\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/libtcod_nim/master/LIBTCOD-CHANGELOG.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/LIBTCOD-CHANGELOG.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/327d0c563141a4aed9b85a737ac1b9bdaba9af21\",\"html\":\"https://github.com/Vladar4/libtcod_nim/blob/master/LIBTCOD-CHANGELOG.md\"}},{\"name\":\"LIBTCOD-CREDITS.txt\",\"path\":\"LIBTCOD-CREDITS.txt\",\"sha\":\"6ea352636f21d29c0d4c720e3e86303d9c86f39a\",\"size\":2425,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/LIBTCOD-CREDITS.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/blob/master/LIBTCOD-CREDITS.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/6ea352636f21d29c0d4c720e3e86303d9c86f39a\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/libtcod_nim/master/LIBTCOD-CREDITS.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/LIBTCOD-CREDITS.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/6ea352636f21d29c0d4c720e3e86303d9c86f39a\",\"html\":\"https://github.com/Vladar4/libtcod_nim/blob/master/LIBTCOD-CREDITS.txt\"}},{\"name\":\"LIBTCOD-LICENSE.txt\",\"path\":\"LIBTCOD-LICENSE.txt\",\"sha\":\"f4b0bbcff7b802d4242b54ddb44f1a252517d074\",\"size\":1546,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/LIBTCOD-LICENSE.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/blob/master/LIBTCOD-LICENSE.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/f4b0bbcff7b802d4242b54ddb44f1a252517d074\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/libtcod_nim/master/LIBTCOD-LICENSE.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/LIBTCOD-LICENSE.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/f4b0bbcff7b802d4242b54ddb44f1a252517d074\",\"html\":\"https://github.com/Vladar4/libtcod_nim/blob/master/LIBTCOD-LICENSE.txt\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"e79ac7dae8ee8a4369abced04c35a61a4dccb2b0\",\"size\":889,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/e79ac7dae8ee8a4369abced04c35a61a4dccb2b0\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/libtcod_nim/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/e79ac7dae8ee8a4369abced04c35a61a4dccb2b0\",\"html\":\"https://github.com/Vladar4/libtcod_nim/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"592f3bf84ca48b6b779d8b1ab4b1fb6d4319c015\",\"size\":2308,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/README.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/592f3bf84ca48b6b779d8b1ab4b1fb6d4319c015\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/libtcod_nim/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/592f3bf84ca48b6b779d8b1ab4b1fb6d4319c015\",\"html\":\"https://github.com/Vladar4/libtcod_nim/blob/master/README.md\"}},{\"name\":\"data\",\"path\":\"data\",\"sha\":\"cd3604bc25dd2f0459c46c9e64758e5b83cb2dc5\",\"size\":0,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/data?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/tree/master/data\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/cd3604bc25dd2f0459c46c9e64758e5b83cb2dc5\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/data?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/cd3604bc25dd2f0459c46c9e64758e5b83cb2dc5\",\"html\":\"https://github.com/Vladar4/libtcod_nim/tree/master/data\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"9b3fe24f4b729f061d09969d84122d9fb8f4f47c\",\"size\":0,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/docs?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/9b3fe24f4b729f061d09969d84122d9fb8f4f47c\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/9b3fe24f4b729f061d09969d84122d9fb8f4f47c\",\"html\":\"https://github.com/Vladar4/libtcod_nim/tree/master/docs\"}},{\"name\":\"libtcod.cfg\",\"path\":\"libtcod.cfg\",\"sha\":\"c092064e070bbff8926df82a6e7929b1d933ab67\",\"size\":749,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/libtcod.cfg?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/blob/master/libtcod.cfg\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/c092064e070bbff8926df82a6e7929b1d933ab67\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/libtcod_nim/master/libtcod.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/libtcod.cfg?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/c092064e070bbff8926df82a6e7929b1d933ab67\",\"html\":\"https://github.com/Vladar4/libtcod_nim/blob/master/libtcod.cfg\"}},{\"name\":\"libtcod.nim\",\"path\":\"libtcod.nim\",\"sha\":\"cd4d1a0d5cdf6efe8718f659764591578b97841f\",\"size\":3983,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/libtcod.nim?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/blob/master/libtcod.nim\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/cd4d1a0d5cdf6efe8718f659764591578b97841f\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/libtcod_nim/master/libtcod.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/libtcod.nim?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/cd4d1a0d5cdf6efe8718f659764591578b97841f\",\"html\":\"https://github.com/Vladar4/libtcod_nim/blob/master/libtcod.nim\"}},{\"name\":\"libtcod.nimble\",\"path\":\"libtcod.nimble\",\"sha\":\"75a383996dd8f26e6967df29826e781ad6a6f1fe\",\"size\":214,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/libtcod.nimble?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/blob/master/libtcod.nimble\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/75a383996dd8f26e6967df29826e781ad6a6f1fe\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/libtcod_nim/master/libtcod.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/libtcod.nimble?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/75a383996dd8f26e6967df29826e781ad6a6f1fe\",\"html\":\"https://github.com/Vladar4/libtcod_nim/blob/master/libtcod.nimble\"}},{\"name\":\"libtcod\",\"path\":\"libtcod\",\"sha\":\"85b7f8dcebe39ef48dbd3f9f8037226a94ac23db\",\"size\":0,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/libtcod?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/tree/master/libtcod\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/85b7f8dcebe39ef48dbd3f9f8037226a94ac23db\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/libtcod?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/85b7f8dcebe39ef48dbd3f9f8037226a94ac23db\",\"html\":\"https://github.com/Vladar4/libtcod_nim/tree/master/libtcod\"}},{\"name\":\"samples112\",\"path\":\"samples112\",\"sha\":\"c561d01e80994762ca6de13d0fc547057de24bb5\",\"size\":0,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/samples112?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/tree/master/samples112\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/c561d01e80994762ca6de13d0fc547057de24bb5\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/samples112?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/c561d01e80994762ca6de13d0fc547057de24bb5\",\"html\":\"https://github.com/Vladar4/libtcod_nim/tree/master/samples112\"}},{\"name\":\"samples15\",\"path\":\"samples15\",\"sha\":\"8ae2db35c305c45aae49be5a558962f697cb3ba7\",\"size\":0,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/samples15?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/tree/master/samples15\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/8ae2db35c305c45aae49be5a558962f697cb3ba7\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/samples15?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/8ae2db35c305c45aae49be5a558962f697cb3ba7\",\"html\":\"https://github.com/Vladar4/libtcod_nim/tree/master/samples15\"}},{\"name\":\"samples17\",\"path\":\"samples17\",\"sha\":\"1a5b9795680ebad77707ee98c3439d7a55747cfe\",\"size\":0,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/samples17?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/tree/master/samples17\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/1a5b9795680ebad77707ee98c3439d7a55747cfe\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/samples17?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/trees/1a5b9795680ebad77707ee98c3439d7a55747cfe\",\"html\":\"https://github.com/Vladar4/libtcod_nim/tree/master/samples17\"}},{\"name\":\"terminal.png\",\"path\":\"terminal.png\",\"sha\":\"3cffb5b3c3c815955a348103594d5127aad3263a\",\"size\":3429,\"url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/terminal.png?ref=master\",\"html_url\":\"https://github.com/Vladar4/libtcod_nim/blob/master/terminal.png\",\"git_url\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/3cffb5b3c3c815955a348103594d5127aad3263a\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/libtcod_nim/master/terminal.png\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/libtcod_nim/contents/terminal.png?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/libtcod_nim/git/blobs/3cffb5b3c3c815955a348103594d5127aad3263a\",\"html\":\"https://github.com/Vladar4/libtcod_nim/blob/master/terminal.png\"}}]",
"https://raw.githubusercontent.com/achesak/nim-robotparser/master/robotparser.nimble": "[Package]\nname = \"robotparser\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Determine if a useragent can access a particular URL using robots.txt\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://raw.githubusercontent.com/haxscramper/hparse/master/hparse.nimble": "version       = \"0.2.3\"\nauthor        = \"haxscramper\"\ndescription   = \"Text parsing utilities\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\npackageName   = \"hparse\"\nbin           = @[\"hparse/htreesitter/hts_wrapgen\"]\ninstallExt    = @[\"nim\"]\nbinDir        = \"bin\"\nnamedBin      = {\n  \"hparse/htreesitter/hts_wrapgen\" : \"hts-wrapgen\"\n}.toTable()\n\nrequires \"nim >= 1.2.4\"\nrequires \"regex\"\nrequires \"hmisc >= 0.6.0\", \"hasts\", \"hpprint\"\n\ntask docgen, \"Generate documentation\":\n  exec(\"hmisc-putils docgen\")\n\nbefore test:\n  try:\n    exec(\"sh ./tests/tGrammarGenerator.sh\")\n  except:\n    echo \"\\e[31mGrammar generator run failed\\e[39m\"\n\ntask dockertest, \"Run test in docker container\":\n  exec(\"\"\"\nhmisc-putils \\\n  dockertest \\\n  --projectDir:$(pwd) \\\n  -lcligen \\\n  -lhmisc \\\n  -lhasts \\\n  -lhdrawing \\\n  -lhdrawing \\\n  -lregex \\\n  -lhnimast \\\n  -lhpprint \\\n  -lunicodeplus \\\n  --preTestCmds='export NPM_PACKAGES=$HOME/.npm-packages' \\\n  --preTestCmds='npm config set prefix $NPM_PACKAGES' \\\n  --preTestCmds='npm install tree-sitter-cli -g' \\\n  --preTestCmds='export PATH=\"$PATH:$NPM_PACKAGES/bin\"' \\\n  --preTestCmds='cd /tmp' \\\n  --preTestCmds='wget https://github.com/tree-sitter/tree-sitter/archive/0.17.3.tar.gz' \\\n  --preTestCmds='tar -xvf 0.17.3.tar.gz && cd tree-sitter-0.17.3' \\\n  --preTestCmds='whereis tree-sitter' \\\n  --preTestCmds='sudo make install' \\\n  --preTestCmds='sh'\n\"\"\")\n\n#   --preTestCmds='echo $PATH' \\\n# --preTestCmds='/home/docker-user/.npm-packages/bin/tree-sitter' \\\n# --preTestCmds='tree-sitter --help' \\\n",
"https://github.com/nim-lang/fusion": "# Package\n\nversion       = \"1.0\"\nauthor        = \"Araq\"\ndescription   = \"Extensions for Nim's stdlib\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\ntask docs, \"\":\n  # JavaScript\n  when (NimMajor, NimMinor) >= (1, 5):\n    exec \"nim c -r -d:fusionDocJs src/fusion/docutils \" & srcDir\n  # C\n  exec \"nim c -r src/fusion/docutils \" & srcDir\n",
"https://raw.githubusercontent.com/KaceCottam/basedOn/master/basedOn.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Kace Cottam\"\ndescription   = \"A library for cleanly creating an object or tuple based on another object or tuple\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/ImVexed/quickjs4nim/master/quickjs4nim.nimble": "# Package\nversion     = \"0.0.1\"\nauthor      = \"ImVexed\"\ndescription = \"QuickJS wrapper for Nim\"\nlicense     = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.19.2\"",
"https://raw.githubusercontent.com/JeffersonLab/ensem/master/ensem.nimble": "# Package\nversion       = \"1.4.0\"\nauthor        = \"Robert Edwards\"\ndescription   = \"Support for ensemble file format and arithmetic using jackknife/bootstrap propagation of errors\"\nlicense       = \"BSD3\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\n# Builds\ntask test, \"Run the test suite\":\n  exec \"nim c -r tests/test_ensem\"\n\ntask docgen, \"Regenerate the documentation\":\n  exec \"nim doc2 --out:docs/ensem.html src/ensem.nim\"\n\n\n",
"https://raw.githubusercontent.com/zer0-star/matsuri/master/matsuri.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"zer0-star\"\ndescription   = \"Useful Variant Type and Powerful Pattern Matching for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/nim-lang/expat/master/expat.nimble": "[Package]\r\nname          = \"expat\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Expat wrapper for Nim\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://github.com/CORDEA/spotify": "# Package\n\nversion     = \"0.1.1\"\nauthor      = \"Yoshihiro Tanaka\"\ndescription = \"A Nim wrapper for the Spotify Web API\"\nlicense     = \"Apache License 2.0\"\nsrcDir      = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.18.0\"\nrequires \"oauth\"\n",
"https://github.com/WilliamDraco/NWNT": "# Package\n\nversion          = \"1.3.2\"\nauthor           = \"WilliamDraco\"\ndescription      = \"GFF <-> NWNT Converter (NeverWinter Nights Text)\"\nlicense          = \"MIT\"\nsrcDir           = \"src\"\ninstallExt       = @[\"nim\"]\nnamedBin[\"nwnt\"] = \"nwn_nwnt\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"neverwinter >= 1.4.1\"\nrequires \"docopt >= 0.6.8\"\n",
"https://raw.githubusercontent.com/eXodiquas/Echon/master/Echon.nimble": "# Package\nversion       = \"0.1.7\"\nauthor        = \"Timo 'eXodiquas' Netzer\"\ndescription   = \"A small package to create lindenmayer-systems or l-systems.\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 1.2.2\"\n",
"https://raw.githubusercontent.com/davidgarland/nim-hats/master/hats.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"David Garland\"\ndescription   = \"Various kinds of hashed array trees.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/euantorano/semver.nim": "# Package\n\nversion       = \"1.1.1\"\nauthor        = \"Euan T\"\ndescription   = \"Semantic versioning parser for Nim.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/main.nim\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc2 --project --index:on -o:docs/ src/semver.nim\"\n",
"https://github.com/madprops/lq": "# Package\n\nversion       = \"2.0.0\"\nauthor        = \"madprops\"\ndescription   = \"Directory listing tool\"\nlicense       = \"GPL-2.0\"\nsrcDir        = \"src\"\nbin           = @[\"lq\"]\nskipExt       = @[\"nim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"nap >= 1.5.1\"\nrequires \"parsetoml >= 0.5.0\"\n",
"https://github.com/bitstormGER/ArrayFire-Nim": "version     = \"0.2.1\"\nauthor      = \"bitstorm\"\ndescription = \"Arrayfire wrapper for nim\"\nlicense     = \"BSD\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\nwhen defined(nimdistros):\n    import distros\n    if detectOs(ArchLinux):\n        foreignDep \"arrayfire\"\n\n\ntask tests, \"Run all Arrayfire-Nim tests\":\n    exec \"testament all\"\n",
"https://github.com/ThomasTJdev/nim_nordnet_api": "# Package\nversion       = \"0.0.7\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Scraping API for www.nordnet.dk\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"config\"]\n\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\nrequires \"nmqtt >= 1.0.0\"\nrequires \"q >= 0.0.7\"\n",
"https://github.com/KayraG/nio": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"nio\"\ndescription   = \"A new server library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"cpp\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/Ethosa/nodesnim": "[Package]\r\nname = \"nodesnim\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.4\"\r\ndescription = \"The Nim GUI/2D framework based on OpenGL and SDL2.\"\r\nlicense = \"MIT\"\r\nsrcDir = \"src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/barcharcraz/nim-freeimage/master/freeimage.nimble": "[Package]\nname = \"freeimage\"\nversion = \"0.1\"\nauthor = \"Charlie Barto\"\ndescription = \"\"\"wrapper for the FreeImage library for reading and writing image files\"\"\"\nlicense = \"MIT\"\nInstallFiles = \"\"\"\nFreeImage_License.txt\nfreeimage.nim\n\"\"\"\n",
"https://github.com/lguzzon-NIM/simpleAST": "\n# Package\nversion = \"1.1.6\"\nauthor = \"Luca Guzzon\"\ndescription = \"Simple AST in NIM\"\nlicense = \"MIT\"\n\ninstallDirs = @[\"simpleAST\"]\ninstallFiles = @[\"simpleAST.nim\", \"LICENSE\", \"README.md\"]\n\n# Dependencies\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/ba0f3/sequoia.nim/master/sequoia.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"Sequoia PGP wrapper for Nim\"\nlicense       = \"GPLv3\"\nsrcDir        = \"src\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/dom96/analytics": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Allows statistics to be sent to and recorded in Google Analytics.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\nrequires \"uuids >= 0.1.7\"\nrequires \"osinfo >= 0.3.0\"\n",
"https://github.com/lcrees/gentabs": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lcrees\"\ndescription   = \"Efficient hash table that is a key-value mapping (removed from stdlib)\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://github.com/rustomax/nim-passgen": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Max Skybin\"\ndescription   = \"Password generation library in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.20.2\", \"urand >= 0.1.0\"",
"https://github.com/achesak/nim-fnmatch": "[Package]\nname = \"fnmatch\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \" Nim module for filename matching with UNIX shell patterns\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-gnutls/master/gnutls.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Wrapper for the GnuTLS library\"\nlicense       = \"LGPL-2.1\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://raw.githubusercontent.com/rburmorrison/pych/master/pych.nimble": "# Package\n\nversion       = \"1.0.2\" # update version in main file too!\nauthor        = \"Ryan Burmeister-Morrison\"\ndescription   = \"A tool that watches Python files and re-runs them on change.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"pych\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/dom96/vec/master/vec.nimble": "# Package\n\nversion       = \"1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A very simple vector library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/bung87/minhash/master/minhash.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zhoupeng\"\ndescription   = \"Nim implementation of minhash algoritim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\n",
"https://github.com/guzba/supersnappy": "version       = \"2.0.0\"\nauthor        = \"Ryan Oldenburg\"\ndescription   = \"Nim implementation of Google's Snappy compression.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/jackhftang/taskqueue.nim": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Jack Tang\"\ndescription   = \"High precision and high performance task scheduler\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"timestamp >= 0.2.3\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"taskqueue.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html src/taskqueue.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://github.com/jackhftang/canonicaljson.nim": "# Package\n\nversion       = \"1.1.2\"\nauthor        = \"Jack Tang\"\ndescription   = \"canonicaljson\"\nlicense       = \"MIT\"\nbackend       = \"c\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"canonicaljson.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    # print current version\n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs --project src/canonicaljson.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://github.com/muxueqz/nim_cjson": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"muxueqz\"\ndescription   = \"cjson wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.1.4\"\n\nimport distros\n\nvar cmd = \"\"\nif detectOs(Windows):\n    cmd = \"cmd /c \"\n\ntask setup, \"Download and generate\":\n    exec cmd & \"nimgen nim_cjson.cfg\"\n\nbefore install:\n    setupTask()\n\ntask test, \"Test nim_cjson\":\n    exec \"nim c -r tests/test_cjson.nim\"\n",
"https://raw.githubusercontent.com/CodeDoes/nimspice/master/nimspice.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"CodeDoes\"\ndescription   = \"A bunch of macros. sugar if you would\"\nlicense       = \"MIT\"\n\ninstallDirs   = @[\"nimspice\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"",
"https://raw.githubusercontent.com/rockcavera/nim-ndns/master/ndns.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rockcavera\"\ndescription   = \"A pure Nim Domain Name System (DNS) client\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"dnsprotocol\", \"stew\"\n",
"https://raw.githubusercontent.com/zendbit/nim.stdext/master/stdext.nimble": "# Package\nversion     = \"0.0.8\"\nauthor      = \"Amru Rosyada\"\ndescription = \"Extended library for nim stdlib\"\nlicense     = \"BSD\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n\n",
"https://raw.githubusercontent.com/planetis-m/sparseset/master/sparseset.nimble": "# Package\n\nversion       = \"0.6.0\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"Sparsets for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/zielmicha/collections.nim": "version       = \"0.5.2\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"Various collections and utilities\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"doc\", \"tests\"]\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/faulander/nimQBittorrent/master/nimQBittorrent.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Faulander\"\ndescription   = \"A wrapper for the QBittorrent WebAPI\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/stavenko/nim-glm/master/glm.nimble": "#[ Package ]#\n\nversion       = \"1.1.1\"\nauthor        = \"Arne Döring\"\ndescription   = \"Nim port of the OpenGL Mathematics (GLM) library\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\", \"examples\"]\n\nrequires(\"nim >= 0.17.2\")\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/testrunner.nim\"\n",
"https://raw.githubusercontent.com/undecided/json_builder/master/json_builder.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Matthew Bennett-Lovesey\"\ndescription   = \"Easy and fast generator for valid json in nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\n",
"https://github.com/haxscramper/hparse": "version       = \"0.2.3\"\nauthor        = \"haxscramper\"\ndescription   = \"Text parsing utilities\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\npackageName   = \"hparse\"\nbin           = @[\"hparse/htreesitter/hts_wrapgen\"]\ninstallExt    = @[\"nim\"]\nbinDir        = \"bin\"\nnamedBin      = {\n  \"hparse/htreesitter/hts_wrapgen\" : \"hts-wrapgen\"\n}.toTable()\n\nrequires \"nim >= 1.2.4\"\nrequires \"regex\"\nrequires \"hmisc >= 0.6.0\", \"hasts\", \"hpprint\"\n\ntask docgen, \"Generate documentation\":\n  exec(\"hmisc-putils docgen\")\n\nbefore test:\n  try:\n    exec(\"sh ./tests/tGrammarGenerator.sh\")\n  except:\n    echo \"\\e[31mGrammar generator run failed\\e[39m\"\n\ntask dockertest, \"Run test in docker container\":\n  exec(\"\"\"\nhmisc-putils \\\n  dockertest \\\n  --projectDir:$(pwd) \\\n  -lcligen \\\n  -lhmisc \\\n  -lhasts \\\n  -lhdrawing \\\n  -lhdrawing \\\n  -lregex \\\n  -lhnimast \\\n  -lhpprint \\\n  -lunicodeplus \\\n  --preTestCmds='export NPM_PACKAGES=$HOME/.npm-packages' \\\n  --preTestCmds='npm config set prefix $NPM_PACKAGES' \\\n  --preTestCmds='npm install tree-sitter-cli -g' \\\n  --preTestCmds='export PATH=\"$PATH:$NPM_PACKAGES/bin\"' \\\n  --preTestCmds='cd /tmp' \\\n  --preTestCmds='wget https://github.com/tree-sitter/tree-sitter/archive/0.17.3.tar.gz' \\\n  --preTestCmds='tar -xvf 0.17.3.tar.gz && cd tree-sitter-0.17.3' \\\n  --preTestCmds='whereis tree-sitter' \\\n  --preTestCmds='sudo make install' \\\n  --preTestCmds='sh'\n\"\"\")\n\n#   --preTestCmds='echo $PATH' \\\n# --preTestCmds='/home/docker-user/.npm-packages/bin/tree-sitter' \\\n# --preTestCmds='tree-sitter --help' \\\n",
"https://raw.githubusercontent.com/matthewjcavalier/illwill_unsafe/master/illwill_unsafe.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"John Novak <john@johnnovak.net>, Matt Cavalier<matt@cavalier.dev>\"\ndescription   = \"A fork of John Novak (john@johnnovak.net)'s illwill package that is less safe numbers wise\"\nlicense       = \"WTFPL\"\n\nskipDirs = @[\"doc\", \"examples\", \"img\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\ntask examples, \"Compiles the examples\":\n  exec \"nim c -d:release examples/boxdrawing.nim\"\n  exec \"nim c -d:release examples/drawtest.nim\"\n  exec \"nim c -d:release examples/fullscreen.nim\"\n  exec \"nim c -d:release examples/keycodes.nim\"\n  exec \"nim c -d:release examples/readmeexample.nim\"\n  exec \"nim c -d:release examples/simplekeycodes.nim\"\n\ntask examplesDebug, \"Compiles the examples (debug mode)\":\n  exec \"nim c examples/boxdrawing.nim\"\n  exec \"nim c examples/drawtest.nim\"\n  exec \"nim c examples/fullscreen.nim\"\n  exec \"nim c examples/keycodes.nim\"\n  exec \"nim c examples/readmeexample.nim\"\n  exec \"nim c examples/simplekeycodes.nim\"\n\ntask docgen, \"Generate HTML documentation\":\n  exec \"nim doc -o:doc/illwill.html illwill\"\n\n",
"https://raw.githubusercontent.com/xbello/notify-nim/master/notify.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Xabi Bello\"\ndescription   = \"A wrapper to notification libraries\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"notify\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Linux):\n    foreignDep \"libnotify\"\n",
"https://github.com/KaceCottam/basedOn": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Kace Cottam\"\ndescription   = \"A library for cleanly creating an object or tuple based on another object or tuple\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/pdrb/nim-randpw/master/randpw.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Pedro Buteri Gonring\"\ndescription   = \"Random password and passphrase generator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"randpw\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/yglukhov/nimpy/master/nimpy.nimble": "version     = \"0.1.1\"\nauthor      = \"Yuriy Glukhov\"\ndescription = \"Nim python integration lib\"\nlicense     = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\nimport oswalkdir, os, strutils\n\nproc calcPythonExecutables() : seq[string] =\n  ## Calculates which Python executables to use for testing\n  ## The default is to use \"python2\" and \"python3\"\n  ##\n  ## You can override this by setting the environment\n  ## variable `NIMPY_PY_EXES` to a comma separated list\n  ## of Python executables to invoke. For example, to test\n  ## with Python 2 from the system PATH and multiple versions\n  ## of Python 3, you might invoke something like\n  ##\n  ## `NIMPY_PY_EXES=\"python2:/usr/local/bin/python3.7:/usr/local/bin/python3.8\" nimble test`\n  ##\n  ## These are launched via a shell so they can be scripts\n  ## as well as actual Python executables\n\n  let pyExes = getEnv(\"NIMPY_PY_EXES\", \"python2:python3\")\n  result = pyExes.split(\":\")\n\nproc calcLibPythons() : seq[string] =\n  ## Calculates which libpython modules to use for testing\n  ## The default is to use whichever libpython is found\n  ## by `pythonLibHandleFromExternalLib()` in py_lib.nim\n  ##\n  ## You can override this by setting the environment\n  ## variable `NIMPY_LIBPYTHONS` to a comma separated list\n  ## of libpython modules to load. For example, you might\n  ## invoke something like\n  ##\n  ## `NIMPY_LIBPYTHONS=\"/usr/lib/x86_64-linux-gnu/libpython2.7.so:/usr/lib/x86_64-linux-gnu/libpython3.8.so\" nimble test`\n  ##\n  let libPythons = getEnv(\"NIMPY_LIBPYTHONS\", \"\")\n  result = libPythons.split(\":\")\n\nproc runTests(nimFlags = \"\") =\n  let pluginExtension = when defined(windows): \"pyd\" else: \"so\"\n\n  for f in oswalkdir.walkDir(\"tests\"):\n    # Compile all nim modules, except those starting with \"t\"\n    let sf = f.path.splitFile()\n    if sf.ext == \".nim\" and not sf.name.startsWith(\"t\"):\n      exec \"nim c --passC:-g --threads:on --app:lib \" & nimFlags & \" --out:\" & f.path.changeFileExt(pluginExtension) & \" \" & f.path\n\n  let\n    sourceFile = \"tests/custommodulename\".changeFileExt(pluginExtension)\n    targetFile = \"tests/_mycustommodulename\".changeFileExt(pluginExtension)\n  try:\n    rmFile(targetFile)\n  except:\n    discard\n  mvFile(sourceFile, targetFile)\n\n  let\n    pythonExes = calcPythonExecutables()\n    libPythons = calcLibPythons()\n\n  for f in oswalkdir.walkDir(\"tests\"):\n    # Run all python modules starting with \"t\"\n    let sf = f.path.splitFile()\n    if sf.ext == \".py\" and sf.name.startsWith(\"t\"):\n      for pythonExe in pythonExes:\n        echo \"running: \", pythonExe, \" \", f.path\n        exec pythonExe & \" \" & f.path\n\n  for f in oswalkdir.walkDir(\"tests\"):\n    # Run all nim modules starting with \"t\"\n    let sf = f.path.splitFile()\n    if sf.ext == \".nim\" and sf.name.startsWith(\"t\"):\n      for libPython in libPythons:\n        exec \"nim c -d:nimpyTestLibPython=\" & libPython & \" -r \" & nimFlags & \" \" & f.path\n\ntask test, \"Run tests\":\n  runTests()\n  runTests(\"--gc:orc\")\n\ntask test_orc, \"Run tests with --gc:orc\":\n  runTests(\"--gc:orc\")\n",
"https://raw.githubusercontent.com/enthus1ast/nimWebTemplates/master/nwt.nimble": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"enthus1ast\"\ndescription   = \"minimal jinja like experiment\"\nlicense       = \"MIT\"\n\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"https://github.com/enthus1ast/nimCommandParser\"\n\n",
"https://github.com/brentp/genoiser": "# Package\n\nversion       = \"0.2.7\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"write functions, get summaries of genomic data\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"hts >= 0.2.3\", \"docopt >= 0.6.8\", \"kexpr\"\nsrcDir = \"src\"\n\nbin = @[\"genoiser\"]\ninstallExt = @[\"nim\"]\n\n\nskipDirs = @[\"tests\"]\n\nimport ospaths,strutils\n\ntask test, \"run the tests\":\n  exec \"nim c --lineDir:on --debuginfo -r --threads:on tests/all\"\n\n#before test:\n#  exec \"c2nim src/hts/private/hts_concat.h\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"genoiser\")\n  #exec \"nim doc2 --verbosity:0 --hints:off -o:docs/index.html  src/hts.nim\"\n  for file in listfiles(\"src/genoiser\"):\n    if file.endswith(\"value.nim\"): continue\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n\n",
"https://raw.githubusercontent.com/sealmove/oblivion/master/oblivion.nimble": "version       = \"0.1.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"Shell command manager\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"o\"]\n",
"https://raw.githubusercontent.com/rustomax/nim-passgen/master/passgen.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Max Skybin\"\ndescription   = \"Password generation library in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.20.2\", \"urand >= 0.1.0\"",
"https://raw.githubusercontent.com/zendbit/nim.zfplugs/master/zfplugs.nimble": "# Package\nversion     = \"0.1.4\"\nauthor      = \"Amru Rosyada\"\ndescription = \"This is the plugins for the zfcore framework https://github.com/zendbit/nim.zfcore\"\nlicense     = \"BSD\"\n\n# Deps\nrequires \"nim >= 1.4.0\"\nrequires \"zfcore >= 1.1.2\"\n",
"https://raw.githubusercontent.com/PMunch/drawille-nim/master/drawille.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Allows drawing in the terminal by using UTF Braille characters. Idea from https://github.com/asciimoo/drawille\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\nskipDirs = @[\"examples\"]",
"https://raw.githubusercontent.com/jhbadger/nimbioseq/master/nimbioseq.nimble": "# Package\n\nversion       = \"0.3.20181126\"\nauthor        = \"Jonathan Badger\"\ndescription   = \"Nim Library for sequence (protein/nucleotide) bioinformatics\"\nlicense       = \"BSD-3\"\nsrcDir        = \"src\"\nskipFiles     = @[\"checkFastq.nim\", \"extractFastx.nim\", \"kmerCount.nim\",\n                  \"seqSummary.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"zip >= 0.2.1\"\n",
"https://raw.githubusercontent.com/mjfh/nim-jhash/master/jhash.nimble": "# Package\n\ndescription = \"Jenkins Hasher producing 32 bit digests\"\nversion = \"0.1.2\"\n\nauthor = \"Jordan Hrycaj\"\nlicense = \"UNLICENCE\"\n\nrequires \"nim >= 1.4.2\"\nsrcDir = \"src\"\n\n# Tasks\n\ntask test, \"Run some test\":\n  # set noisy and tracer flags to 1 for more info\n  exec \"nim c -r --hints:off -d:verbose:0 -d:noisy:0 -d:tracer:0 tests/jhash_test.nim\"\n\ntask clean, \"Clean up\":\n  exec \"rm -f tests/jhash_test\"\n\n# End\n",
"https://raw.githubusercontent.com/jabbalaci/NimCliHelper/master/rodcli.nimble": "# Package\n\nversion       = \"0.1.9\"\nauthor        = \"Laszlo Szathmary (Jabba Laci)\"\ndescription   = \"making Nim development easier in the command-line\"\nlicense       = \"MIT\"\nskipExt       = @[\"nim\"]\nbin           = @[\"rodcli\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/dom96/gamelight": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A set of simple modules for writing a JavaScript 2D game.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\nrequires \"sdl2\"\nrequires \"chroma >= 0.1.0\"\nrequires \"typography >= 0.2.4\"\nrequires \"flippy >= 0.4.0\"\n\ntask exampleem, \"Builds examples for emscripten\":\n  exec \"rm -r examples/emscripten\"\n  exec \"nim c -d:emscripten examples/clipping.nim\"\n  exec \"nim c -r examples/rename_all.nim clipping\"",
"https://github.com/zedeus/redpool": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zedeus\"\ndescription   = \"Redis connection pool\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"https://github.com/zedeus/redis#94bcbf1\"\n",
"https://github.com/sergiotapia/filesize": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Sergio Tapia\"\ndescription   = \"A Nim package to convert filesizes into other units, and turns filesizes into human readable strings.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/linksplatform/Data.Triplets/master/triplets.nimble": "[Package]\r\nname = \"triplets\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.8\"\r\ndescription = \"The Nim bindings for linksplatform/Data.Triplets.Kernel.\"\r\nlicense = \"AGPLv3\"\r\nsrcDir = \"nim/src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/kdheepak/github-release/master/github_release.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dheepak Krishnamurthy\"\ndescription   = \"github-release package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"github_release\"]\nskipExt       = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"cligen#head\"\n\nwhen defined(nimdistros):\n    import distros\n    if detectOs(Ubuntu):\n        foreignDep \"libssl-dev\"\n    else:\n        foreignDep \"openssl\"\n\ntask run, \"run\":\n\n    exec(\"nimble build\")\n    exec(\"./bin/github_release --version\")\n\n",
"https://raw.githubusercontent.com/tervay/the-nim-alliance/master/the_nim_alliance.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Justin Tervay\"\ndescription   = \"A Nim wrapper for TheBlueAlliance\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/status-im/nim-keccak-tiny/master/keccak_tiny.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"keccak_tiny\"\nversion       = \"0.2.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for the keccak-tiny C library\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.17.0\",\n         \"ranges\"\n\nproc configForTests() =\n  --hints: off\n  --debuginfo\n  --path: \".\"\n  --run\n\ntask test, \"run CPU tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n\n",
"https://raw.githubusercontent.com/oliversandli/clapfn/master/clapfn.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Oliver Sandli\"\ndescription   = \"A fast and simple command line argument parser inspired by Python's argparse.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/yglukhov/gplay/master/gplay.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Upload APK to Google Play\"\nlicense       = \"MIT\"\n\nbin = @[\"gplay\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"jwt\"\nrequires \"cligen\"\n",
"https://raw.githubusercontent.com/alehander42/gara/master/gara.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Alexander Ivanov\"\ndescription   = \"Macro-based pattern matching library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/SSPkrolik/nimongo": "# Package\ndescription = \"Pure Nim driver for MongoDB with support of synchronous and asynchronous I/O modes\"\nversion     = \"0.3\"\nlicense     = \"MIT\"\nauthor      = \"Rostyslav Dzinko <rostislav.dzinko@gmail.com>\"\n\n# Dependencies\nrequires \"scram >= 0.1.13\"\n\nproc runTest(input: string) =\n  let cmd = \"nim c -r \" & input\n  echo \"running: \" & cmd\n  exec cmd\n\nproc runTestThreaded(input: string) =\n  let cmd = \"nim c --threads:on -r \" & input\n  echo \"running: \" & cmd\n  exec cmd\n\nproc testNoMongod() =\n  runTest \"nimongo/bson.nim\"\n  runTest \"tests/bsontest.nim\"\n  runTestThreaded \"nimongo/bson.nim\"\n  runTestThreaded \"tests/bsontest.nim\"\n\ntask test, \"tests\":\n  testNoMongod()\n  runTest \"tests/nimongotest.nim\"\n  runTestThreaded \"tests/nimongotest.nim\"\n\ntask test_ci, \"tests for CI\":\n  testNoMongod()\n",
"https://github.com/OHermesJunior/rain.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"OHermesJunior\"\ndescription   = \"Rain simulation in your terminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"rain\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/andreaferretti/react.nim": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Example React single page application\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"example\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask example, \"builds example application\":\n  --define: release\n  switch(\"out\", \"example/app.js\")\n  --path: \".\"\n  setCommand \"js\", \"example/app.nim\"",
"https://raw.githubusercontent.com/sealmove/bitstreams/master/bitstreams.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"Interface for reading per bits\"\nlicense       = \"MIT\"",
"https://raw.githubusercontent.com/lmariscal/owo/master/owo.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Leonardo Mariscal\"\ndescription   = \"OwO text convewtew fow Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/haxscramper/hcparse": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"haxscramper\"\ndescription   = \"High-level nim wrapper for C/C++ parsing\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"hnimast\", \"hmisc >= 0.4.0\", \"hpprint\"\nrequires \"nimtraits\"\n# requires \"https://github.com/disruptek/gram\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-tinyfiledialogs/master/tinyfiledialogs.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"TinyFileDialogs for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/megawac/RingBuffer.nim/master/RingBuffer.nimble": "[Package]\nname          = \"RingBuffer\"\nversion       = \"0.1.2\"\nauthor        = \"Graeme Yeates\"\ndescription   = \"Circular buffer implementation\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/levovix0/siwin": "version       = \"0.3.0\"\nauthor        = \"levovix0\"\ndescription   = \"Nim Simple Window Maker\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.6\"\nrequires \"with\"\n\nwhen defined linux:\n  requires \"x11\"\nwhen defined windows:\n  requires \"winim\"\n",
"https://raw.githubusercontent.com/achesak/nim-pythonfile/master/pythonfile.nimble": "[Package]\nname = \"pythonfile\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Wrapper of the file functions to provide an interface as similar as possible to that of Python\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://raw.githubusercontent.com/KeepCoolWithCoolidge/asciigraph/master/asciigraph.nimble": "# Package\n\nversion = \"0.1.0\"\nauthor = \"KeepCoolWithCoolidge\"\ndescription = \"Console ascii line charts in pure nim\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\ntask test, \"run tests\":\n  configForTests()\n  setCommand \"c\", \"tests/test.nim\"\n",
"https://api.github.com/repos/onionhammer/nim-templates/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"3cf5f9b232ef2048746433b0fd3e054e1279467e\",\"size\":224,\"url\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/onionhammer/nim-templates/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/3cf5f9b232ef2048746433b0fd3e054e1279467e\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/nim-templates/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/3cf5f9b232ef2048746433b0fd3e054e1279467e\",\"html\":\"https://github.com/onionhammer/nim-templates/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"d1b11f7e93c19eafa3435494bcdde3e60306f051\",\"size\":1486,\"url\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/onionhammer/nim-templates/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/d1b11f7e93c19eafa3435494bcdde3e60306f051\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/nim-templates/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/d1b11f7e93c19eafa3435494bcdde3e60306f051\",\"html\":\"https://github.com/onionhammer/nim-templates/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"7dfc66b81e448bbf051be8253b355ed5a7f3966e\",\"size\":888,\"url\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/README.md?ref=master\",\"html_url\":\"https://github.com/onionhammer/nim-templates/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/7dfc66b81e448bbf051be8253b355ed5a7f3966e\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/nim-templates/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/7dfc66b81e448bbf051be8253b355ed5a7f3966e\",\"html\":\"https://github.com/onionhammer/nim-templates/blob/master/README.md\"}},{\"name\":\"templates.nim\",\"path\":\"templates.nim\",\"sha\":\"120eff2d4f42af4b4db3a95e814a3c050746938f\",\"size\":11320,\"url\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/templates.nim?ref=master\",\"html_url\":\"https://github.com/onionhammer/nim-templates/blob/master/templates.nim\",\"git_url\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/120eff2d4f42af4b4db3a95e814a3c050746938f\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/nim-templates/master/templates.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/templates.nim?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/120eff2d4f42af4b4db3a95e814a3c050746938f\",\"html\":\"https://github.com/onionhammer/nim-templates/blob/master/templates.nim\"}},{\"name\":\"templates.nimble\",\"path\":\"templates.nimble\",\"sha\":\"6be58ba7b4063fdd01e59b2ebc07f5ff2191150c\",\"size\":334,\"url\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/templates.nimble?ref=master\",\"html_url\":\"https://github.com/onionhammer/nim-templates/blob/master/templates.nimble\",\"git_url\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/6be58ba7b4063fdd01e59b2ebc07f5ff2191150c\",\"download_url\":\"https://raw.githubusercontent.com/onionhammer/nim-templates/master/templates.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/templates.nimble?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/nim-templates/git/blobs/6be58ba7b4063fdd01e59b2ebc07f5ff2191150c\",\"html\":\"https://github.com/onionhammer/nim-templates/blob/master/templates.nimble\"}},{\"name\":\"templates\",\"path\":\"templates\",\"sha\":\"3b4556df40d5a56f6c110f80eb15553de8310969\",\"size\":0,\"url\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/templates?ref=master\",\"html_url\":\"https://github.com/onionhammer/nim-templates/tree/master/templates\",\"git_url\":\"https://api.github.com/repos/onionhammer/nim-templates/git/trees/3b4556df40d5a56f6c110f80eb15553de8310969\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/templates?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/nim-templates/git/trees/3b4556df40d5a56f6c110f80eb15553de8310969\",\"html\":\"https://github.com/onionhammer/nim-templates/tree/master/templates\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"eee140910a0987aafccb2f1fe0a44725a56a4a52\",\"size\":0,\"url\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/tests?ref=master\",\"html_url\":\"https://github.com/onionhammer/nim-templates/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/onionhammer/nim-templates/git/trees/eee140910a0987aafccb2f1fe0a44725a56a4a52\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/onionhammer/nim-templates/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/onionhammer/nim-templates/git/trees/eee140910a0987aafccb2f1fe0a44725a56a4a52\",\"html\":\"https://github.com/onionhammer/nim-templates/tree/master/tests\"}}]",
"https://github.com/petermora/nimLazy/": "[Package]\nname          = \"lazy\"\nversion       = \"0.1.0\"\nauthor        = \"Peter Mora\"\ndescription   = \"Iterator library for Nim\"\nlicense       = \"MIT\"\nInstallFiles  = \"lazy.nim\"\ninstallDirs   = \"doc\"\n",
"https://raw.githubusercontent.com/blakeanedved/nimnoise/master/nimnoise.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"blakeanedved\"\ndescription   = \"A port of libnoise into pure nim, heavily inspired by Libnoise.Unity, but true to the original Libnoise\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Tasks\n\ntask \"test\", \"Run the Nimble tester\":\n  withdir \"tests\":\n    exec \"nim c -r tester\"\n",
"https://github.com/matkuki/Nim-Impulse-Engine": "# Package\nversion = \"1.6.0\"\nauthor = \"Matic Kukovec\"\ndescription = \"Nim port of a simple 2D physics engine\"\nlicense = \"zlib\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\nrequires \"opengl >= 1.2.3\"\nrequires \"x11 >= 1.0\"\nrequires \"nimgl >= 1.0.0\"\n\n# Compile binary\nbin = @[\"impulse_engine\"]\n",
"https://github.com/Halsys/SDF.nim": "\n# Package\n\npackageName = \"SDF\"\nversion     = \"0.1.0\"\nauthor      = \"Cory Null(Noll) Crimmins - Golden\"\ndescription = \"Sweep-and-update Euclidean distance transform functions\"\nlicense     = \"MIT\"\nskipDirs    = @[\"example\"]\n\n# Dependencies\n\nrequires \"nim >= 0.14.2\"\n",
"https://github.com/ba0f3/ngxcmod.nim": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"High level wrapper for build nginx module w/ nginx-c-function\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/inv2004/coinbase-pro-nim": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"inv2004\"\ndescription   = \"Coinbase pro client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"ws\"\nrequires \"decimal\"\nrequires \"uuids\"\n",
"https://github.com/nimious/io-myo.git": "[Package]\nname: \"myo\"\nversion: \"1.0\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for the Thalmic Labs Myo gesture control armband SDK\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.12.0\"\n",
"https://github.com/PMunch/combparser": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"A parser combinator library for easy generation of complex parsers\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://api.github.com/repos/yglukhov/closure_compiler/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"7fa3fbefce98aaa5ce41d14748923d296ffc01fb\",\"size\":27,\"url\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/yglukhov/closure_compiler/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/7fa3fbefce98aaa5ce41d14748923d296ffc01fb\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/closure_compiler/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/7fa3fbefce98aaa5ce41d14748923d296ffc01fb\",\"html\":\"https://github.com/yglukhov/closure_compiler/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"49f711a09f8883d18c12f3528a9a46af02c90c80\",\"size\":1081,\"url\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/yglukhov/closure_compiler/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/49f711a09f8883d18c12f3528a9a46af02c90c80\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/closure_compiler/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/49f711a09f8883d18c12f3528a9a46af02c90c80\",\"html\":\"https://github.com/yglukhov/closure_compiler/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"abc2ad44c88590a15885f3bd259d1b2e3ec3ff7f\",\"size\":1301,\"url\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/README.md?ref=master\",\"html_url\":\"https://github.com/yglukhov/closure_compiler/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/abc2ad44c88590a15885f3bd259d1b2e3ec3ff7f\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/closure_compiler/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/abc2ad44c88590a15885f3bd259d1b2e3ec3ff7f\",\"html\":\"https://github.com/yglukhov/closure_compiler/blob/master/README.md\"}},{\"name\":\"closure_compiler.nim\",\"path\":\"closure_compiler.nim\",\"sha\":\"ed8655671a7104c1fca6680eaea70206ba1dcb0b\",\"size\":7027,\"url\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/closure_compiler.nim?ref=master\",\"html_url\":\"https://github.com/yglukhov/closure_compiler/blob/master/closure_compiler.nim\",\"git_url\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/ed8655671a7104c1fca6680eaea70206ba1dcb0b\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/closure_compiler/master/closure_compiler.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/closure_compiler.nim?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/ed8655671a7104c1fca6680eaea70206ba1dcb0b\",\"html\":\"https://github.com/yglukhov/closure_compiler/blob/master/closure_compiler.nim\"}},{\"name\":\"closure_compiler.nimble\",\"path\":\"closure_compiler.nimble\",\"sha\":\"09689620dc116eaf6dc5d1e34c1a0673cc08d823\",\"size\":186,\"url\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/closure_compiler.nimble?ref=master\",\"html_url\":\"https://github.com/yglukhov/closure_compiler/blob/master/closure_compiler.nimble\",\"git_url\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/09689620dc116eaf6dc5d1e34c1a0673cc08d823\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/closure_compiler/master/closure_compiler.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/closure_compiler.nimble?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/blobs/09689620dc116eaf6dc5d1e34c1a0673cc08d823\",\"html\":\"https://github.com/yglukhov/closure_compiler/blob/master/closure_compiler.nimble\"}},{\"name\":\"compiler-latest\",\"path\":\"compiler-latest\",\"sha\":\"b23fb300c59f5a337abb9e50c465a20c69af0083\",\"size\":0,\"url\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/compiler-latest?ref=master\",\"html_url\":\"https://github.com/yglukhov/closure_compiler/tree/master/compiler-latest\",\"git_url\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/trees/b23fb300c59f5a337abb9e50c465a20c69af0083\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/closure_compiler/contents/compiler-latest?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/closure_compiler/git/trees/b23fb300c59f5a337abb9e50c465a20c69af0083\",\"html\":\"https://github.com/yglukhov/closure_compiler/tree/master/compiler-latest\"}}]",
"https://raw.githubusercontent.com/CORDEA/spotify/master/spotify.nimble": "# Package\n\nversion     = \"0.1.1\"\nauthor      = \"Yoshihiro Tanaka\"\ndescription = \"A Nim wrapper for the Spotify Web API\"\nlicense     = \"Apache License 2.0\"\nsrcDir      = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.18.0\"\nrequires \"oauth\"\n",
"https://github.com/bunkford/wChart": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"Chart plugin for wNim.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"docs\"]\n\n# Dependencies\n\nrequires: \"nim >= 0.20.0\"\nrequires: \"wNim >= 0.9.0\"",
"https://raw.githubusercontent.com/enthus1ast/flatdb/master/flatdb.nimble": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"enthus1ast\"\ndescription   = \"small/tiny, flatfile, jsonl based, inprogress database for nim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.17.0\"\n\n",
"https://raw.githubusercontent.com/Jeff-Ciesielski/fixmath/master/fixmath.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"LibFixMath 16:16 fixed point support for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.1\"\n",
"https://raw.githubusercontent.com/twist-vector/nhsl/master/nhsl.nimble": "[Package]\nname          = \"nhsl\"\nversion       = \"0.2.0\"\nauthor        = \"Tom Krauss\"\ndescription   = \"Nim Hessian Serialization Library encodes/decodes data into the Hessian binary protocol\"\nlicense       = \"Apache2\"\n\n[Deps]\nRequires: \"nim >= 0.12.0\"\n",
"https://raw.githubusercontent.com/matkuki/Nim-Impulse-Engine/master/impulse_engine.nimble": "# Package\nversion = \"1.6.0\"\nauthor = \"Matic Kukovec\"\ndescription = \"Nim port of a simple 2D physics engine\"\nlicense = \"zlib\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\nrequires \"opengl >= 1.2.3\"\nrequires \"x11 >= 1.0\"\nrequires \"nimgl >= 1.0.0\"\n\n# Compile binary\nbin = @[\"impulse_engine\"]\n",
"https://github.com/williamhatcher/azure_translate": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"William 'psyFi' Hatcher\"\ndescription   = \"Nim Library for Azure Cognitive Services Translate\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"nuuid >= 0.1.0\"\n",
"https://api.github.com/repos/mjfh/nim-tmplpro/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"c9b2cdb79f31edc16084612237d1711c756061ac\",\"size\":34,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/c9b2cdb79f31edc16084612237d1711c756061ac\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-tmplpro/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/c9b2cdb79f31edc16084612237d1711c756061ac\",\"html\":\"https://github.com/mjfh/nim-tmplpro/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"62a3380b5dc54f693f1713b62405149444e4f77a\",\"size\":14,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/62a3380b5dc54f693f1713b62405149444e4f77a\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-tmplpro/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/62a3380b5dc54f693f1713b62405149444e4f77a\",\"html\":\"https://github.com/mjfh/nim-tmplpro/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"e8bcd6a0c8da75d63531a8b824a4d90301fba7e3\",\"size\":2715,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/README.md?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/e8bcd6a0c8da75d63531a8b824a4d90301fba7e3\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-tmplpro/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/e8bcd6a0c8da75d63531a8b824a4d90301fba7e3\",\"html\":\"https://github.com/mjfh/nim-tmplpro/blob/master/README.md\"}},{\"name\":\"UNLICENSE\",\"path\":\"UNLICENSE\",\"sha\":\"68a49daad8ff7e35068f2b7a97d643aab440eaec\",\"size\":1211,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/UNLICENSE?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/blob/master/UNLICENSE\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/68a49daad8ff7e35068f2b7a97d643aab440eaec\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-tmplpro/master/UNLICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/UNLICENSE?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/68a49daad8ff7e35068f2b7a97d643aab440eaec\",\"html\":\"https://github.com/mjfh/nim-tmplpro/blob/master/UNLICENSE\"}},{\"name\":\"_config.yml\",\"path\":\"_config.yml\",\"sha\":\"c7418817439b2f071c93a4a6cee831e996123c0b\",\"size\":25,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/_config.yml?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/blob/master/_config.yml\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/c7418817439b2f071c93a4a6cee831e996123c0b\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-tmplpro/master/_config.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/_config.yml?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/c7418817439b2f071c93a4a6cee831e996123c0b\",\"html\":\"https://github.com/mjfh/nim-tmplpro/blob/master/_config.yml\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"c1d7681dcba947fc6066acb4f898a90d45089c2c\",\"size\":0,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/docs?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/trees/c1d7681dcba947fc6066acb4f898a90d45089c2c\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/trees/c1d7681dcba947fc6066acb4f898a90d45089c2c\",\"html\":\"https://github.com/mjfh/nim-tmplpro/tree/master/docs\"}},{\"name\":\"index.html\",\"path\":\"index.html\",\"sha\":\"c56623ce8db3b4388021ebe6f08c57bbe2a5e998\",\"size\":336,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/index.html?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/blob/master/index.html\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/c56623ce8db3b4388021ebe6f08c57bbe2a5e998\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-tmplpro/master/index.html\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/index.html?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/c56623ce8db3b4388021ebe6f08c57bbe2a5e998\",\"html\":\"https://github.com/mjfh/nim-tmplpro/blob/master/index.html\"}},{\"name\":\"makefile\",\"path\":\"makefile\",\"sha\":\"d012dfc118fe71af8bbdba15fb46763caa0c9f52\",\"size\":617,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/makefile?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/blob/master/makefile\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/d012dfc118fe71af8bbdba15fb46763caa0c9f52\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-tmplpro/master/makefile\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/makefile?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/d012dfc118fe71af8bbdba15fb46763caa0c9f52\",\"html\":\"https://github.com/mjfh/nim-tmplpro/blob/master/makefile\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"c72c62a33702de8f399822af43e6f6222b0280e3\",\"size\":0,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/src?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/tree/master/src\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/trees/c72c62a33702de8f399822af43e6f6222b0280e3\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/trees/c72c62a33702de8f399822af43e6f6222b0280e3\",\"html\":\"https://github.com/mjfh/nim-tmplpro/tree/master/src\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"7fe62da2e4422c2a4c014c92c9afd59b4735b102\",\"size\":0,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/tests?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/trees/7fe62da2e4422c2a4c014c92c9afd59b4735b102\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/trees/7fe62da2e4422c2a4c014c92c9afd59b4735b102\",\"html\":\"https://github.com/mjfh/nim-tmplpro/tree/master/tests\"}},{\"name\":\"tmplpro.nimble\",\"path\":\"tmplpro.nimble\",\"sha\":\"c93cd718da5486f1fcaeb9765dadc972464004a3\",\"size\":423,\"url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/tmplpro.nimble?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-tmplpro/blob/master/tmplpro.nimble\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/c93cd718da5486f1fcaeb9765dadc972464004a3\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-tmplpro/master/tmplpro.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-tmplpro/contents/tmplpro.nimble?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-tmplpro/git/blobs/c93cd718da5486f1fcaeb9765dadc972464004a3\",\"html\":\"https://github.com/mjfh/nim-tmplpro/blob/master/tmplpro.nimble\"}}]",
"https://github.com/neonnnnn/nimfm": "# Package\nversion       = \"0.3.0\"\nauthor        = \"Kyohei Atarashi\"\ndescription   = \"nimfm: A library for factorization machines in Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\nrequires \"nim >= 1.0.6\", \"cligen >= 0.9.43\", \"nimlapack >= 0.2.0\"\n\n# Compile and create binary in ./bin for end users\ntask make, \"builds nimfm\":\n  exec \"mkdir -p bin\"\n  exec \"nim c -o:bin/nimfm -d:release -d:danger --threads:on ./src/nimfm.nim\"\n  exec \"nim c -o:bin/nimfm_cfm -d:release -d:danger --threads:on ./src/nimfm_cfm.nim\"\n  exec \"nim c -o:bin/nimfm_sparsefm -d:release -d:danger --threads:on ./src/nimfm_sparsefm.nim\"\n\n",
"https://github.com/status-im/nim-toml-serialization": "mode = ScriptMode.Verbose\n\npackageName   = \"toml_serialization\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Flexible TOML serialization [not] relying on run-time type information\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\", \"assets\"]\n\nrequires \"nim >= 1.1.2\",\n         \"serialization\",\n         \"stew\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  when defined(macosx):\n    # cpp backend on macosx have mysterious\n    # bug\n    if lang == \"cpp\":\n      lang = \"c\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --outdir:build -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  exec \"nim -v\"\n  test \"--threads:off -d:release\", \"tests/test_all\"\n  test \"--threads:on -d:release\", \"tests/test_all\"\n",
"https://github.com/makingspace/cittadino": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Zach Smith\"\ndescription   = \"A simple PubSub framework using STOMP.\"\nlicense       = \"BSD2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"https://github.com/subsetpark/nim-stomp.git >= 0.1.3\"\n",
"https://raw.githubusercontent.com/status-im/nim-secp256k1/master/secp256k1.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"secp256k1\"\nversion       = \"0.5.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for the libsecp256k1 C library\"\nlicense       = \"Apache License 2.0\"\ninstallDirs   = @[\".\", \"secp256k1_wrapper\"]\n\nrequires \"nim >= 1.2.0\"\nrequires \"stew\"\nrequires \"nimcrypto\"\n\nproc getLang(): string =\n  result = \"c\"\n  if existsEnv\"TEST_LANG\":\n    result = getEnv\"TEST_LANG\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  --threads:on\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Tests\":\n  test \"all_tests\", getLang()\n",
"https://github.com/fragworks/frag": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zachary Carter\"\ndescription   = \"A 2D|3D game engine\"\nlicense       = \"MIT\"\n\n# Settings\n\nsrcDir        = \"src\"\nskipDirs      = @[ \"examples\", \"samples\" ]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\nrequires \"sdl2 >= 1.1\"\nrequires \"stb_image >= 1.2\"\nrequires \"https://github.com/yglukhov/android.git\"\nrequires \"x11 >= 1.0\"\nrequires \"https://github.com/fragworks/nim-chipmunk.git\"\nrequires \"https://github.com/zacharycarter/bgfx.nim.git\"\nrequires \"https://github.com/zacharycarter/bgfx.extras.nim.git\"\nrequires \"sound >= 0.1.0\"\nrequires \"https://github.com/zacharycarter/nuklear-nim.git\"\nrequires \"https://github.com/zacharycarter/nanovg.nim.git\"\nrequires \"strfmt >= 0.8.4\"\nrequires \"https://github.com/zacharycarter/nimassimp.git\"",
"https://raw.githubusercontent.com/achesak/nim-imghdr/master/imghdr.nimble": "[Package]\nname = \"imghdr\"\nversion = \"2.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Library for detecting the format of an image\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/rokups/nim-ustring": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Rokas Kupstys\"\ndescription   = \"utf-8 string\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"utf8rewind\"]\ninstallFiles  = @[\"ustring.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/nitely/nim-unicodedb": "# Package\n\nversion = \"0.9.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Unicode Character Database (UCD) access for Nim\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\", \"gen\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r tests/tests\"\n\ntask docs, \"Docs\":\n  exec \"nim doc2 -o:./docs/unicodedb --project ./src/unicodedb/segmentation.nim\"\n  exec \"nim doc2 -o:./docs/unicodedb --project ./src/unicodedb/casing.nim\"\n  exec \"nim doc2 -o:./docs/unicodedb --project ./src/unicodedb/scripts.nim\"\n  exec \"nim doc2 -o:./docs/unicodedb --project ./src/unicodedb/widths.nim\"\n  exec \"nim doc2 -o:./docs --project ./src/unicodedb.nim\"\n  exec \"mv ./docs/unicodedb.html ./docs/index.html\"\n  exec \"rm -fr ./docs/*/*_data.html\"\n\ntask gen, \"Gen data\":\n  exec \"nim c -r gen/segmentation.nim\"\n  exec \"nim c -r gen/casing.nim\"\n  exec \"nim c -r gen/scripts.nim\"\n  exec \"nim c -r gen/widths.nim\"\n  exec \"nim c -r gen/types.nim\"\n  exec \"nim c -r gen/compositions.nim\"\n  exec \"nim c -r gen/decompositions.nim\"\n  exec \"nim c -r gen/names.nim\"\n  exec \"nim c -r gen/properties.nim\"\n\ntask gen_tests, \"Gen test data\":\n  exec \"nim c -r gen/test_data.nim\"\n",
"https://raw.githubusercontent.com/JohnAD/jesterjson/master/jesterjson.nimble": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"A plugin for Jester that creates a json object and embeds the request object information.\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"jesterwithplugins >= 0.5.0\"\n",
"https://github.com/OpenSystemsLab/sam.nim": "# Package\n\nversion       = \"0.1.16\"\nauthor        = \"Huy Doan\"\ndescription   = \"Fast and just works JSON-Binding for Nim\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 0.20, jsmn >= 0.2\"\n",
"https://github.com/jangko/polyBool": "[Package]\nname          = \"polyBool\"\nversion       = \"0.1.0\"\nauthor        = \"Andri Lim\"\ndescription   = \"Polygon Clipping Library\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.16.0\"",
"https://github.com/makingspace/nim_consul": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Zach Smith\"\ndescription   = \"A simple interface to a running Consul agent.\"\nlicense       = \"BSD2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/singularperturbation/base62-encode": "[Package]\nname          = \"base62\"\nversion       = \"0.1.0\"\nauthor        = \"perturbation\"\ndescription   = \"Encoder/Decoder.  Defaults to Base-62, but allows for an arbitrary alphabet.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/Vladar4/libtcod_nim/": "# Package\nversion       = \"1.112.0\"\nauthor        = \"Vladar\"\ndescription   = \"Wrapper of the libtcod library for the Nim language.\"\nlicense       = \"zlib\"\n\n# Dependencies\nrequires \"nim >= 0.18.1\", \"sdl2_nim >= 0\"\n\n",
"https://raw.githubusercontent.com/Krognol/discordnim/master/discord.nimble": "# Package\n\nversion       = \"2.3.0\"\nauthor        = \"Krognol\"\ndescription   = \"Discord library for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\", \"zip >= 0.2.1\", \"websocket >= 0.4.1\"",
"https://github.com/jasonrbriggs/baker": "# Package\n\nversion       = \"2.0.7\"\nauthor        = \"Jason R Briggs\"\ndescription   = \"Static website generation\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\nbin           = @[\"baker\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"proton >= 0.2.4\"\nrequires \"https://github.com/docopt/docopt.nim#head\"\nrequires \"markdown >= 0.2.0\"\nrequires \"zip >= 0.2.1\"\nrequires \"timezones >= 0.5.0\"\nrequires \"ndb >= 0.19.4\"\n",
"https://raw.githubusercontent.com/hlaaftana/defines/master/defines.nimble": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"hlaaftana\"\ndescription   = \"syntax sugar for local definitions\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nimport os\n\ntask docs, \"build docs\":\n  const\n    gitUrl = \"https://github.com/hlaaftana/defines\"\n    gitCommit = \"master\"\n    gitDevel = \"master\" \n  for f in walkDirRec(\"src\"):\n    exec \"nim doc --git.url:\" & gitUrl &\n      \" --git.commit:\" & gitCommit &\n      \" --git.devel:\" & gitDevel &\n      \" --outdir:docs \" & f\n",
"https://raw.githubusercontent.com/planetis-m/patgraph/master/patgraph.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Antonis\"\ndescription   = \"graph data structure library\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.9\"\n",
"https://raw.githubusercontent.com/SolitudeSF/runeterra_decks/master/runeterra_decks.nimble": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Legends of Runeterra deck/card code encoder/decoder\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"base32\"\n\ntask generate, \"Generate definitions\":\n  exec \"nim r -d:runeterraGeneratePath:\" & paramStr(9) & \" tools/generator\"\n",
"https://raw.githubusercontent.com/sergiotapia/filesize/master/filesize.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Sergio Tapia\"\ndescription   = \"A Nim package to convert filesizes into other units, and turns filesizes into human readable strings.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/smallfx/luna.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jackson Broussard\"\ndescription   = \"Lua convenience library for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\"\n\n",
"https://raw.githubusercontent.com/dom96/webdriver/master/webdriver.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Implementation of the WebDriver w3c spec.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/nimscale/isa/master/isa.nimble": "[Package]\nname          = \"isa\"\nversion       = \"0.1.0\"\ndescription   = \"Nim bindings for ISA-L (Intel Storage Acceleration Library)\"\nlicense       = \"Apache License\"\nauthor        = \"nimscale\"\nskipDirs      = \"examples\"\n\n[Deps]\nRequires: \"nim >= 0.15.2\"\nRequires: \"collections >= 0.3.1\"\n",
"https://github.com/Bennyelg/nimPresto": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"Bennyelg\"\ndescription   = \"prestodb connector\"\nlicense       = \"MIT\"\nskipDirs = @[\"tests\"]\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-euclidean/master/euclidean.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Euclidean Division & Euclidean Modulo\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/matkuki/chipmunk7_demos/master//chipmunk7_demos.nimble": "# Package\nversion = \"1.1\"\nauthor = \"Matic Kukovec\"\ndescription = \"Demos for Chipmunk7 physics library\"\nlicense = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.18.0\", \"sdl2 >= 1.1\", \"opengl >= 1.1.0\"\n",
"https://github.com/Aearnus/unicode_numbers": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Tyler Limkemann\"\ndescription   = \"Converts a number into a specially formatted Unicode string\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/def-/nimes/master/nimes.nimble": "# Package\n\nversion       = \"0.1\"\nauthor        = \"Dennis Felsing\"\ndescription   = \"NimES: NES Emulator in Nim\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\nbin           = @[\"nimes\"]\nskipExt       = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.12.0\"\nrequires \"sdl2 >= 1.0\"\n",
"https://github.com/dom96/webdriver": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Implementation of the WebDriver w3c spec.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-internimgua/master/nimterlingua.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Internationalization at Compile Time for Nim. Macro to translate unmodified code from 1 INI file. NimScript compatible.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"example\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/theAkito/nim-neoid/master/neoid.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Akito\"\ndescription   = \"Nim implementation of NanoID.\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim    >= 1.4.0\"\nrequires \"random >= 0.5.7\"\nrequires \"winim  >= 3.4.0\"\n\n\n# Tasks\n\ntask configure, \"Configure project.\":\n  exec \"git fetch\"\n  exec \"git pull\"\n  exec \"git checkout master\"\n  exec \"git submodule add git@github.com:theAkito/nim-tools.git tasks\"\n  exec \"git submodule update --init --recursive\"\n  exec \"git submodule update --recursive --remote\"\n  exec \"nimble check\"\n  exec \"nimble install -d\"\ntask dbuild, \"Build test bin.\":\n  exec \"\"\"nim c \\\n            --debuginfo:on \\\n            --define:mingw \\\n            --out:neoid_debug \\\n            neoid\n       \"\"\"\n",
"https://github.com/olahol/nimrod-murmur/": "[Package]\nname          = \"murmur\"\nversion       = \"0.1.0\"\nauthor        = \"Ola Holmström\"\ndescription   = \"MurmurHash algorithm in pure nimrod.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.2\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/xxhash.nim/master/xxhash.nimble": "[Package]\nname          = \"xxhash\"\nversion       = \"0.7.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"xxhash wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/barnybug/nim-mqtt/master/mqtt.nimble": "[Package]\nname          = \"mqtt\"\nversion       = \"0.1.0\"\nauthor        = \"Barnaby Gray\"\ndescription   = \"Wrapper for libpaho-mqtt, a C library that communicates with an MQTT pub/sub server.\"\nlicense       = \"BSD\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/cheatfate/asynctools/master/asynctools.nimble": "# Package\nversion     = \"0.1.1\"\nauthor      = \"Eugene Kabanov\"\ndescription = \"Various asynchronous tools for Nim\"\nlicense     = \"MIT\"\n# Deps\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/mjfh/nim-tmplpro.git": "# Package\n\ndescription = \"Text template processor, handy not only for CGI\"\nversion = \"0.1.2\"\n\nauthor = \"Jordan Hrycaj\"\nlicense = \"UNLICENCE\"\n\nrequires \"nim >= 1.4.2\"\nsrcDir= \"src\"\n\n# Tasks\n\ntask test, \"Run some test\":\n  # set noisy and tracer flags to 1 for more info\n  exec \"nim c -r --hints:off -d:verbose:0 -d:noisy:0 -d:tracer:0 tests/tmplpro_test.nim\"\n\ntask clean, \"Clean up\":\n  exec \"rm -f tests/tmplpro_test\"\n\n# End\n",
"https://github.com/SolitudeSF/blurhash": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Encoder/decoder for blurhash algorithm\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"imageman >= 0.7.4\"\n",
"https://raw.githubusercontent.com/def-/nim-nanomsg/master/nanomsg.nimble": "# Package\n\nversion     = \"0.2\"\nauthor      = \"Dennis Felsing\"\ndescription = \"Wrapper for nanomsg, a socket library that provides several common communication patterns. It aims to make the networking layer fast, scalable, and easy to use.\"\nlicense     = \"MIT\"\n\nsrcDir      = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\n",
"https://github.com/citycide/fugitive": "version       = \"0.11.1\"\nauthor        = \"citycide\"\ndescription   = \"Simple command line tool to make git more intuitive, along with useful GitHub addons.\"\nlicense       = \"MIT\"\nbin           = @[\"fugitive\"]\nskipExt       = @[\"nim\"]\nbinDir        = \"dist\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.0 & < 2.0.0\"\nrequires \"gara >= 0.2.0\"\nrequires \"tempfile >= 0.1.7\"\nrequires \"unpack >= 0.4.0\"\n\nimport ospaths, strformat, strutils\n\ntemplate exe (basename: string): string =\n  if ExeExt == \"\": basename else: basename & \".\" & ExeExt\n\nconst\n  distFiles = @[\"license\", \"readme.md\", \"changelog.md\"]\n  staticArgs = \"--verbosity:0 --hints:off -d:release\"\n  outFile = \"fugitive\".exe\n  build = \"nim c -o:$1 $2 -d:fugitiveVersion=v$3 $4\"\n\nproc getZipName (os, arch: string): string =\n  let ext = if os == \"windows\": \".zip\" else: \".tar.gz\"\n  result = &\"fugitive_v{version}_{os}_{arch}{ext}\"\n\ntask release, \"Build fugitive for the current OS (release)\":\n  mkDir binDir\n\n  exec build % [\n    binDir / outFile,\n    staticArgs,\n    version,\n    srcDir / bin[0]\n  ]\n\nafter release:\n  let\n    zipName = getZipName(buildOS, buildCPU).multiReplace(\n      (\"_amd64\", \"_x64\"),\n      (\"macosx\", \"macos\")\n    )\n    params = join(@[zipName, outFile] & distFiles, \" \")\n\n  rmFile zipName\n\n  for distFile in distFiles:\n    cpFile(distFile, binDir / distFile)\n\n  withDir binDir:\n    if buildOS == \"windows\":\n      exec \"7z a -tzip \" & params\n    else:\n      exec \"tar -czf \" & params\n",
"https://github.com/lihf8515/parseini": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Lihaifeng <lihaifeng@wxm.com>\"\ndescription   = \"A high-performance ini parse library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/status-im/nim-eth-common/master/eth_common.nimble": "packageName   = \"eth_common\"\nversion       = \"1.0.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum Common library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim > 0.18.0\",\n         \"rlp\",\n         \"eth_trie\",\n         \"nimcrypto\",\n         \"ranges\",\n         \"stint\",\n         \"byteutils\"\n\ntask test, \"run tests\":\n  cd \"tests\"\n  exec \"nim c -r test\"",
"https://raw.githubusercontent.com/juancarlospaco/libarchibi/master/libarchibi.nimble": "version     = \"0.2.0\"\nauthor      = \"Juan Carlos\"\ndescription = \"Libarchive at compile-time, Libarchive Chibi Edition\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nrequires \"nim >= 1.2.4\"\n",
"https://raw.githubusercontent.com/bluenote10/nim-stringinterpolation/master/stringinterpolation.nimble": "[Package]\nname          = \"stringinterpolation\"\nversion       = \"0.1.0\"\nauthor        = \"Fabian Keller\"\ndescription   = \"String interpolation with printf syntax\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.0\"",
"https://github.com/fallingduck/linenoise-nim": "[Package]\nname          = \"linenoise\"\nversion       = \"0.1.0\"\nauthor        = \"Jack VanDrunen\"\ndescription   = \"Wrapper for linenoise, a free, self-contained alternative to GNU readline.\"\nlicense       = \"BSD\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://github.com/ba0f3/funchook.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"funchook wrapper\"\nlicense       = \"GPLv2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/paranim/pararules": "# Package\n\nversion       = \"0.14.0\"\nauthor        = \"oakes\"\ndescription   = \"A rules engine\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/iourinski/mutableseqs": "[Package]\nname          = \"mutableseqs\"\nversion       = \"0.1.0\"\nauthor        = \"Dima\"\ndescription   = \"utilities for transforming sequences\"\nlicense       = \"MIT\"\nbin           = \"mutableseqs\"\n[Deps]\n\nRequires: \"nim >= 0.15.2\"\n\n",
"https://raw.githubusercontent.com/nimious/myo/master/myo.nimble": "[Package]\nname: \"myo\"\nversion: \"1.0\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for the Thalmic Labs Myo gesture control armband SDK\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.12.0\"\n",
"https://github.com/bunkford/ffpass": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"ffpass - Api Calls for Ford vehicles equipped with the fordpass app.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"docs\"]\n\n# Dependencies\n\nrequires: \"nim >= 1.0.0\"",
"https://github.com/OHermesJunior/lolcat.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"OHermesJunior\"\ndescription   = \"lolcat implementation in Nim\"\nlicense       = \"MIT\"\nbin           = @[\"lolcat\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.9\"\n",
"https://github.com/Kashiwara0205/soundex": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"KASHIWARA FUKI\"\ndescription   = \"soundex algorithm\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://raw.githubusercontent.com/wolfadex/arksys/master/arksys.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Wolfgang Schuster\"\ndescription   = \"An entity component system package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/ucpr/httpstat/master/httpstat.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"taichi uchihara\"\ndescription   = \"curl statistics made simple \"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n# Build\nbin = @[\"httpstat\"]\n",
"https://raw.githubusercontent.com/Electric-Blue/NimBluez/master/nimbluez.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Maxim V. Abramov\"\ndescription   = \"Nim modules for access to system Bluetooth resources.\"\nlicense       = \"BSD\"\nskipdirs      = @[\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/psutil-nim/master/psutil.nimble": "# Package\nversion       = \"0.6.0\"\nauthor        = \"Juan Carlos, John Scillieri, Nim community\"\ndescription   = \"Psutil is a cross-platform library for retrieving information on running processes and system utilization (CPU, memory, disks, network)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/bluenote10/nim-stringinterpolation": "[Package]\nname          = \"stringinterpolation\"\nversion       = \"0.1.0\"\nauthor        = \"Fabian Keller\"\ndescription   = \"String interpolation with printf syntax\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.11.0\"",
"https://raw.githubusercontent.com/lguzzon-NIM/simpleAST/master/simpleAST.nimble": "\n# Package\nversion = \"1.1.6\"\nauthor = \"Luca Guzzon\"\ndescription = \"Simple AST in NIM\"\nlicense = \"MIT\"\n\ninstallDirs = @[\"simpleAST\"]\ninstallFiles = @[\"simpleAST.nim\", \"LICENSE\", \"README.md\"]\n\n# Dependencies\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/xflywind/async/master/xio.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zeshen Xing\"\ndescription   = \"Cross platform system API for os and net.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/enthus1ast/nimDbg": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"enthus1ast\"\ndescription   = \"\\\"dbg\\\" template; in debug echo\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\n",
"https://github.com/zacharycarter/bgfx.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zachary Carter\"\ndescription   = \"Bindings to BGFX\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"",
"https://github.com/j-a-s-d/xam": "version     = \"0.1.4\"\nauthor      = \"Javier Santo Domingo\"\ndescription = \"xam\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.0.6\"\n\n",
"https://raw.githubusercontent.com/samdmarshall/influx.nim/master/influx.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"wrapper for communicating with InfluxDB over the REST interface\"\nlicense       = \"BSD 3-Clause\"\nsrcDir        = \"src\"\n\nskipDirs      = @[\"tests\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/test\"\n",
"https://raw.githubusercontent.com/jyapayne/nim-libnx/master/libnx.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Joey Payne\"\ndescription   = \"Nintendo Switch library libnx for Nim.\"\nlicense       = \"The Unlicense\"\n\nsrcDir = \"src\"\n\nimport distros\n\nvar prefix = \"\"\nvar username = getEnv(\"USER\")\nif detectOs(Windows):\n  prefix = \"cmd /c \"\n  username = getEnv(\"USERNAME\")\n\n# Deps\nrequires \"nim >= 0.18.1\", \"nimgen#dc9943a22c9c8f6a5a6a92f0055e1de4dfaf87d2\"\nrequires \"switch_build >= 0.1.3\"\n\ntask setup, \"Download and generate bindings\":\n  echo \"Building libnx...\"\n  exec prefix & \"nimgen libnxGen.cfg\"\n\ntask buildExamples, \"Build switch examples\":\n  if detectOs(Windows):\n    let devkitPath = getEnv(\"DEVKITPRO\")\n    if devkitPath == \"\" or not dirExists(devkitPath):\n      echo \"You must set the DEVKITPRO environment variable to something valid!\"\n    else:\n      exec prefix & \"switch_build --libnxPath=\\\"\" & devkitPath & \"/libnx/\\\" --author=\\\"\" & username & \"\\\" --version=\\\"1.0.0\\\" examples/helloworld/helloworld.nim\"\n      exec prefix & \"switch_build --libnxPath=\\\"\" & devkitPath & \"/libnx/\\\" --author=\\\"\" & username & \"\\\" --version=\\\"1.0.0\\\" examples/accounts/account_ex.nim\"\n  else:\n    exec prefix & \"switch_build --libnxPath=\\\"\" & thisDir() & \"/src/libnx/wrapper/nx/\\\" --author=\\\"\" & username & \"\\\" --version=\\\"1.0.0\\\" examples/helloworld/helloworld.nim\"\n    exec prefix & \"switch_build --libnxPath=\\\"\" & thisDir() & \"/src/libnx/wrapper/nx/\\\" --author=\\\"\" & username & \"\\\" --version=\\\"1.0.0\\\" examples/accounts/account_ex.nim\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  discard\n# no tests because code needs to run on the Switch :(\n#  exec \"nim c -r tests/test.nim\"\n",
"https://github.com/zah/nim-package-visible-types": "mode = ScriptMode.Verbose\n\npackageName   = \"package_visible_types\"\nversion       = \"1.0.0\"\nauthor        = \"Zahary Karadjov\"\ndescription   = \"A cure for the lack of package-level visibility in Nim\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.18.0\"\n\n",
"https://raw.githubusercontent.com/OHermesJunior/lolcat.nim/master/lolcat.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"OHermesJunior\"\ndescription   = \"lolcat implementation in Nim\"\nlicense       = \"MIT\"\nbin           = @[\"lolcat\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.9\"\n",
"https://raw.githubusercontent.com/Senketsu/nsu/master/nsu.nimble": "# Package\nversion = \"0.1.5\"\nauthor = \"Senketsu\"\ndescription = \"A small screenshot library / utility for Windows & X11 based systems.\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nbin = @[\"nsu\"]\n\n# Dependencies\nrequires \"nim >= 0.17.2\", \"x11 >= 1.0.0\", \"winim >= 3.2.4\", \"flippy == 0.4.0\"\n",
"https://github.com/narimiran/blake2": "# Package\nversion       = \"0.4\"\nauthor        = \"tankfeeder\"\ndescription   = \"blake2 - cryptographic hash function\"\nlicense       = \"CC0\"\nskipExt       = @[\"txt\"]\n",
"https://github.com/Yardanico/nim-libvlc": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yardanico\"\ndescription   = \"libvlc bindings for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"nimterop\"\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\": buildDocs(@[\"src/libvlc.nim\"], \"build/htmldocs\")\nelse:\n  task docs, \"Do nothing\": discard",
"https://raw.githubusercontent.com/bio-nim/nim-strfmt/master/strfmt.nimble": "# Package\n\nversion     = \"0.10.0\"\nauthor      = \"Frank Fischer\"\ndescription = \"A string formatting library inspired by Python's `format`\"\nlicense     = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/brentp/nim-plotly": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"plotting library for nim\"\nlicense       = \"MIT\"\n\n\nrequires \"nim >= 0.18.0\", \"chroma\", \"jsbind\", \"webview\", \"ws\"\n\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\"]\n\nimport os, strutils\n\ntask test, \"run the tests\":\n  exec \"nim c -r tests/plotly/test_api.nim\"\n  exec \"nim c --lineDir:on --debuginfo -r examples/all\"\n  exec \"nim c --lineDir:on --debuginfo --threads:on -r examples/fig12_save_figure.nim\"\n\ntask travisTest, \"run the tests on travis\":\n  exec \"nim c -r tests/plotly/test_api.nim\"\n  # define the `travis` flag to use our custom `xdg-open` based proc to open\n  # firefox, which is non-blocking\n  exec \"nim c --lineDir:on -d:travis --debuginfo -r examples/all\"\n  exec \"nim c --lineDir:on -d:travis -d:DEBUG --debuginfo --threads:on -r examples/fig12_save_figure.nim\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"plotly\")\n  #exec \"nim doc2 --verbosity:0 --hints:off -o:docs/index.html  src/hts.nim\"\n  for file in listfiles(\"src/\"):\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n  for file in listfiles(\"src/plotly/\"):\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs/plotly\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n",
"https://raw.githubusercontent.com/itsumura-h/nim-allographer/master/allographer.nimble": "# Package\n\nversion       = \"0.15.0\"\nauthor        = \"Hidenobu Itsumura @dumblepytech1 as 'medy'\"\ndescription   = \"A Nim query builder library inspired by Laravel/PHP and Orator/Python\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbackend       = \"c\"\nbin           = @[\"allographer/cli/dbtool\"]\nbinDir        = \"src/bin\"\ninstallExt    = @[\"nim\"]\nskipDirs      = @[\"allographer/cli\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"cligen >= 0.9.38\"\nrequires \"progress >= 1.1.1\"\n\nimport strformat\nfrom os import `/`\n\ntask docs, \"Generate API documents\":\n  let\n    deployDir = \"deploy\" / \"docs\"\n    pkgDir = srcDir / \"allographer\"\n    srcFiles = @[\n      \"query_builder\",\n      \"schema_builder\",\n    ]\n\n  if existsDir(deployDir):\n    rmDir deployDir\n  for f in srcFiles:\n    let srcFile = pkgDir / f & \".nim\"\n    exec &\"nim doc --hints:off --project --out:{deployDir} --index:on {srcFile}\"\n\nlet toolImage = \"basolato:tool\"\n\ntask setupTool, \"Setup tool docker image\":\n  exec &\"docker build -t {toolImage} -f tool_Dockerfile .\"\n\nproc generateToc(dir: string) =\n  let cwd = getCurrentDir()\n  for f in listFiles(dir):\n    if 3 < f.len:\n      let ext = f[^3..^1]\n      if ext == \".md\":\n        exec &\"docker run --rm -v {cwd}:/work -it {toolImage} --insert --no-backup {f}\"\n\ntask toc, \"Generate TOC\":\n  generateToc(\".\")\n  generateToc(\"./documents\")\n",
"https://github.com/Yardanico/spinny": "version       = \"0.3.1\"\nauthor        = \"Mark Molnar (molnarmark), Danil Yarantsev (Yardanico)\"\ndescription   = \"Terminal Spinners for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"",
"https://github.com/jiro4989/rect": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"jiro4989\"\ndescription   = \"rect is a command to crop/paste rectangle text.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"rect\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\nrequires \"eastasianwidth >= 1.1.0\"\nrequires \"docopt >= 0.6.8\"\n\nimport strformat\n\ntask docs, \"Generate documents\":\n  exec \"nimble doc src/rect.nim -o:docs/rect.html\"\n  for m in [\"classifiedstring\", \"crop\", \"paste\", \"util\"]:\n    exec &\"nimble doc src/rect/{m}.nim -o:docs/{m}.html\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble docs -Y\"\n  exec \"nimble build -d:release -Y\"\n  exec \"./bin/rect -h\"\n  exec \"./bin/rect -v\"\n",
"https://raw.githubusercontent.com/Araq/ormin/master/ormin.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Araq\"\ndescription   = \"Prepared SQL statement generator. A lightweight ORM.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\nrequires \"websocket >= 0.2.2\"\n\nbin = @[\"tools/ormin_importer\"]\n\nskipDirs = @[\"examples\"]\ninstallExt = @[\"nim\"]\n\ntask test, \"Run all test suite\":\n  exec \"nim c -r tests/tfeature\"\n  exec \"nim c -r tests/tcommon\"\n  exec \"nim c -r tests/tsqlite\"\n  exec \"nim c -r -d:postgre tests/tfeature\"\n  exec \"nim c -r -d:postgre tests/tcommon\"\n  exec \"nim c -r tests/tpostgre\"\n\ntask buildexamples, \"Build examples: chat and forum\":\n  selfExec \"c examples/chat/server\"\n  selfExec \"js examples/chat/frontend\"\n  selfExec \"c examples/forum/forum\"\n  selfExec \"c examples/forum/forumproto\"\n  selfExec \"c examples/tweeter/src/tweeter\"",
"https://github.com/nim-lang/oldwinapi": "[Package]\r\nname          = \"oldwinapi\"\r\nversion       = \"2.1.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Old Win API library for Nim\"\r\nlicense       = \"LGPL\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://raw.githubusercontent.com/Skrylar/rfc3339/master/rfc3339.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Joshua Cearley\"\ndescription   = \"RFC3339 (dates and times) implementation for Nim.\"\nlicense       = \"BSD\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\n",
"https://github.com/nim-lang/ui": "# Package\r\n\r\nversion       = \"0.9.4\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Nim\\'s official UI library\"\r\nlicense       = \"MIT\"\r\n\r\ninstallDirs = @[\"ui\",\"res\"]\r\ninstallFiles = @[\"ui.nim\"]\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.19.4\"\r\n\r\n",
"https://raw.githubusercontent.com/HugoGranstrom/numericalnim/master//numericalnim.nimble": "# Package Information\nversion = \"0.6.1\"\nauthor = \"Hugo Granström\"\ndescription = \"A collection of numerical methods written in Nim. Current features: integration, ode, optimization.\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.20.0\", \"arraymancer >= 0.5.0\"\n",
"https://raw.githubusercontent.com/bung87/zopflipng/master/zopflipng.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"bung87\"\ndescription   = \"zopflipng-like png optimization\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.3.5\"\nrequires \"nimPNG\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/q.nim/master/q.nimble": "[Package]\nname          = \"q\"\nversion       = \"0.0.7\"\nauthor        = \"Huy Doan\"\ndescription   = \"Simple CSS3 selectors for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = \"tests\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"\n",
"https://github.com/PMunch/termstyle": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Easy to use colours for terminal applications\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://github.com/status-im/nim-rlp": "mode = ScriptMode.Verbose\n\npackageName   = \"rlp\"\nversion       = \"1.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"RLP serialization library for Nim\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\ninstallDirs   = @[\"rlp\"]\nbin           = @[\"rlp/bin/rlp_inspect\"]\n\nrequires \"nim >= 0.17.0\",\n         \"ranges\"\n\nproc configForTests() =\n  --hints: off\n  --debuginfo\n  --path: \".\"\n  --run\n  --threads: on\n\ntask test, \"run CPU tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n",
"https://github.com/dom96/sass": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A wrapper for the libsass library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu):\n    foreignDep \"libsass-dev\"\n  else:\n    foreignDep \"libsass\"\n\ntask test, \"Runs tester\":\n  exec \"nim c -r tests/tester\"",
"https://api.github.com/repos/ImVexed/quickjs4nim/contents": "[{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"39adca4e2aac1aebfcc5dd4eccb3150c688f090c\",\"size\":296,\"url\":\"https://api.github.com/repos/ImVexed/quickjs4nim/contents/README.md?ref=master\",\"html_url\":\"https://github.com/ImVexed/quickjs4nim/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/ImVexed/quickjs4nim/git/blobs/39adca4e2aac1aebfcc5dd4eccb3150c688f090c\",\"download_url\":\"https://raw.githubusercontent.com/ImVexed/quickjs4nim/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/ImVexed/quickjs4nim/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/ImVexed/quickjs4nim/git/blobs/39adca4e2aac1aebfcc5dd4eccb3150c688f090c\",\"html\":\"https://github.com/ImVexed/quickjs4nim/blob/master/README.md\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"53772a8811c572ea0330e903eb0f04361a72210c\",\"size\":0,\"url\":\"https://api.github.com/repos/ImVexed/quickjs4nim/contents/examples?ref=master\",\"html_url\":\"https://github.com/ImVexed/quickjs4nim/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/ImVexed/quickjs4nim/git/trees/53772a8811c572ea0330e903eb0f04361a72210c\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/ImVexed/quickjs4nim/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/ImVexed/quickjs4nim/git/trees/53772a8811c572ea0330e903eb0f04361a72210c\",\"html\":\"https://github.com/ImVexed/quickjs4nim/tree/master/examples\"}},{\"name\":\"quickjs4nim.nimble\",\"path\":\"quickjs4nim.nimble\",\"sha\":\"3a6dbd54ce7f7039787329425feb1cd3a8f93e10\",\"size\":156,\"url\":\"https://api.github.com/repos/ImVexed/quickjs4nim/contents/quickjs4nim.nimble?ref=master\",\"html_url\":\"https://github.com/ImVexed/quickjs4nim/blob/master/quickjs4nim.nimble\",\"git_url\":\"https://api.github.com/repos/ImVexed/quickjs4nim/git/blobs/3a6dbd54ce7f7039787329425feb1cd3a8f93e10\",\"download_url\":\"https://raw.githubusercontent.com/ImVexed/quickjs4nim/master/quickjs4nim.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/ImVexed/quickjs4nim/contents/quickjs4nim.nimble?ref=master\",\"git\":\"https://api.github.com/repos/ImVexed/quickjs4nim/git/blobs/3a6dbd54ce7f7039787329425feb1cd3a8f93e10\",\"html\":\"https://github.com/ImVexed/quickjs4nim/blob/master/quickjs4nim.nimble\"}},{\"name\":\"quickjs4nim\",\"path\":\"quickjs4nim\",\"sha\":\"d7c2b3a5672d5801b40f1f927190196e3888afa8\",\"size\":0,\"url\":\"https://api.github.com/repos/ImVexed/quickjs4nim/contents/quickjs4nim?ref=master\",\"html_url\":\"https://github.com/ImVexed/quickjs4nim/tree/master/quickjs4nim\",\"git_url\":\"https://api.github.com/repos/ImVexed/quickjs4nim/git/trees/d7c2b3a5672d5801b40f1f927190196e3888afa8\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/ImVexed/quickjs4nim/contents/quickjs4nim?ref=master\",\"git\":\"https://api.github.com/repos/ImVexed/quickjs4nim/git/trees/d7c2b3a5672d5801b40f1f927190196e3888afa8\",\"html\":\"https://github.com/ImVexed/quickjs4nim/tree/master/quickjs4nim\"}}]",
"https://raw.githubusercontent.com/PMunch/macroutils/master/macroutils.nimble": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"A package that makes creating macros easier\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/subsetpark/nim-gmp": "[Package]\nname          = \"gmp\"\nversion       = \"0.2.5\"\nauthor        = \"Will Szumski\"\ndescription   = \"Wrapper for the GNU Multiple Precision Arithmetic Library (GMP)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nInstallExt    = \"nim\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.4\"\n",
"https://raw.githubusercontent.com/euantorano/semver.nim/master/semver.nimble": "# Package\n\nversion       = \"1.1.1\"\nauthor        = \"Euan T\"\ndescription   = \"Semantic versioning parser for Nim.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/main.nim\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc2 --project --index:on -o:docs/ src/semver.nim\"\n",
"https://github.com/ThomasTJdev/nim_sermon": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"Tool to monitor various items on your Linux server\"\nlicense       = \"MIT\"\nbin           = @[\"sermon\"]\ninstallDirs   = @[\"src\"]\ninstallFiles  = @[\"config_default.cfg\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\nrequires \"jester >= 0.4.3\"\n\nimport distros\ntask setup, \"Generating executable\":\n  if detectOs(Windows):\n    echo \"Cannot run on Windows\"\n    quit()\n\nbefore install:\n  setupTask()",
"https://raw.githubusercontent.com/genotrance/nimbass/master/nimbass.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance\"\ndescription   = \"Bass wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.6.2\"\n\nimport os, strformat\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\": buildDocs(@[\"nimbass/bass.nim\", \"nimbass/bass_fx.nim\"], \"build/htmldocs\")\nelse:\n  task docs, \"Do nothing\": discard\n\ntask test, \"Test nimbass\":\n  withDir(\"tests\"):\n    exec \"nim c -f -d:nimDebugDlOpen --path:.. -r basstest.nim\"\n",
"https://raw.githubusercontent.com/h3rald/litestore/master/litestore.nimble": "import\n  strutils\n\nfrom os import parentDir, `/`\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/litestorepkg/lib/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/litestorepkg/lib/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import litestorepkg/lib/config\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = pkgLicense\nbin           = @[pkgName]\nsrcDir        = \"src\"\nskipDirs      = @[\"test\"]\ninstallExt    = @[\"nim\", \"c\", \"h\", \"json\", \"ico\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"jwt >= 0.2\", \"nimgen\", \"duktape\"\n\n# Build\n\nconst\n  parallel = \"\" #\"--parallelBuild:1 --verbosity:3\"\n  compile = \"nim c -d:release --opt:size \" & parallel\n  linux_x64 = \"--cpu:amd64 --os:linux --passL:-static\"\n  windows_x64 = \"--cpu:amd64 --os:windows\"\n  macosx_x64 = \"\"\n  ls = \"litestore\"\n  doc = \"LiteStore_UserGuide.htm\"\n  db = \"data.db\"\n  ls_file = \"litestore.nim\"\n  zip = \"zip -X\"\n\nproc shell(command, args = \"\", dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"litestore\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build LiteStore for Windows (x64)\":\n  shell compile, windows_x64, ls_file\n\ntask linux_x64_build, \"Build LiteStore for Linux (x64)\":\n  shell compile, linux_x64,  ls_file\n\ntask macosx_x64_build, \"Build LiteStore for Mac OS X (x64)\":\n  shell compile, macosx_x64, ls_file\n\ntask release, \"Release LiteStore\":\n  echo \"Generating Guide...\"\n  shell \"./build_guide\"\n  echo \"Preparing Data Store preloaded with Admin App...\"\n  cd \"src\"\n  if db.existsFile:\n    db.rmFile\n  shell \"litestore -d:admin import\"\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, \"$1 $2 $3 $4\" % [filename_for(\"windows\", \"x64\"), ls & \".exe\", doc, db]\n  shell \"rm\", ls & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, \"$1 $2 $3 $4\" % [filename_for(\"linux\", \"x64\"), ls, doc, db]\n  shell \"rm\", ls \n\n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, \"$1 $2 $3 $4\" % [filename_for(\"macosx\", \"x64\"), ls, doc, db]\n  shell \"rm\", ls\n  echo \"\\n\\n\\n ALL DONE!\"\n",
"https://raw.githubusercontent.com/vitreo12/omnicollider/master/omnicollider.nimble": "# MIT License\n# \n# Copyright (c) 2020 Francesco Cameli\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nversion       = \"0.2.3\"\nauthor        = \"Francesco Cameli\"\ndescription   = \"SuperCollider wrapper for omni.\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 1.0.0\"\nrequires \"cligen >= 1.0.0\"\nrequires \"omni >= 0.2.3\"\n\n#Ignore omnicollider_lang\nskipDirs = @[\"omnicollider_lang\"]\n\n#Install build/deps\ninstallDirs = @[\"omnicolliderpkg\"] \n\n#Compiler executable\nbin = @[\"omnicollider\"]\n\n#If using \"nimble install\" instead of \"nimble installOmniCollider\", make sure omnicollider-lang is still getting installed\nbefore install:\n    let package_dir = getPkgDir()\n    \n    withDir(package_dir):\n        exec \"git submodule update --init --recursive\"\n\n    withDir(package_dir & \"/omnicollider_lang\"):\n        exec \"nimble install\"\n\n#before/after are BOTH needed for any of the two to work\nafter install:\n    discard\n\n#As nimble install, but with -d:release, -d:danger and --opt:speed. Also installs omni_lang.\ntask installOmniCollider, \"Install the omnicollider-lang package and the omnicollider compiler\":\n    #Build and install the omnicollider compiler executable. This will also trigger the \"before install\" to install omnicollider_lang\n    exec \"nimble install --passNim:-d:release --passNim:-d:danger --passNim:--opt:speed\"",
"https://raw.githubusercontent.com/nim-lang/lua/master/lua.nimble": "version = \"1.0\"\nauthor = \"Andreas Rumpf\"\ndescription = \"Wrapper to interface with the Lua interpreter\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/c-blake/adix": "# Package\nversion     = \"0.1\"\nauthor      = \"Charles Blake\"\ndescription = \"An Adaptive Index Library for Nim\"\nlicense     = \"MIT/ISC\"\n\n# Deps\nrequires    \"nim >= 0.19.2\"\nskipDirs    = @[ \"tests\" ]\n",
"https://api.github.com/repos/flaviut/nre/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"3d647a25edaa7841fa5edd9e7e5e9410996be585\",\"size\":72,\"url\":\"https://api.github.com/repos/flaviut/nre/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/flaviut/nre/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/flaviut/nre/git/blobs/3d647a25edaa7841fa5edd9e7e5e9410996be585\",\"download_url\":\"https://raw.githubusercontent.com/flaviut/nre/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/flaviut/nre/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/flaviut/nre/git/blobs/3d647a25edaa7841fa5edd9e7e5e9410996be585\",\"html\":\"https://github.com/flaviut/nre/blob/master/.gitignore\"}},{\"name\":\"LICENCE\",\"path\":\"LICENCE\",\"sha\":\"561f818ac519f577291a9e5096549f139a1c43a1\",\"size\":1056,\"url\":\"https://api.github.com/repos/flaviut/nre/contents/LICENCE?ref=master\",\"html_url\":\"https://github.com/flaviut/nre/blob/master/LICENCE\",\"git_url\":\"https://api.github.com/repos/flaviut/nre/git/blobs/561f818ac519f577291a9e5096549f139a1c43a1\",\"download_url\":\"https://raw.githubusercontent.com/flaviut/nre/master/LICENCE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/flaviut/nre/contents/LICENCE?ref=master\",\"git\":\"https://api.github.com/repos/flaviut/nre/git/blobs/561f818ac519f577291a9e5096549f139a1c43a1\",\"html\":\"https://github.com/flaviut/nre/blob/master/LICENCE\"}},{\"name\":\"README.rst\",\"path\":\"README.rst\",\"sha\":\"3afa3c8eacf09e47a3eb126406c5273d0fd55230\",\"size\":9947,\"url\":\"https://api.github.com/repos/flaviut/nre/contents/README.rst?ref=master\",\"html_url\":\"https://github.com/flaviut/nre/blob/master/README.rst\",\"git_url\":\"https://api.github.com/repos/flaviut/nre/git/blobs/3afa3c8eacf09e47a3eb126406c5273d0fd55230\",\"download_url\":\"https://raw.githubusercontent.com/flaviut/nre/master/README.rst\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/flaviut/nre/contents/README.rst?ref=master\",\"git\":\"https://api.github.com/repos/flaviut/nre/git/blobs/3afa3c8eacf09e47a3eb126406c5273d0fd55230\",\"html\":\"https://github.com/flaviut/nre/blob/master/README.rst\"}},{\"name\":\"circle.yml\",\"path\":\"circle.yml\",\"sha\":\"b6105af659fa399ea2ef1eb129d18d03afdb6cdc\",\"size\":1078,\"url\":\"https://api.github.com/repos/flaviut/nre/contents/circle.yml?ref=master\",\"html_url\":\"https://github.com/flaviut/nre/blob/master/circle.yml\",\"git_url\":\"https://api.github.com/repos/flaviut/nre/git/blobs/b6105af659fa399ea2ef1eb129d18d03afdb6cdc\",\"download_url\":\"https://raw.githubusercontent.com/flaviut/nre/master/circle.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/flaviut/nre/contents/circle.yml?ref=master\",\"git\":\"https://api.github.com/repos/flaviut/nre/git/blobs/b6105af659fa399ea2ef1eb129d18d03afdb6cdc\",\"html\":\"https://github.com/flaviut/nre/blob/master/circle.yml\"}},{\"name\":\"nre.nimble\",\"path\":\"nre.nimble\",\"sha\":\"9d59ad5c2eb2e269dce3e918979c359f08062dbd\",\"size\":196,\"url\":\"https://api.github.com/repos/flaviut/nre/contents/nre.nimble?ref=master\",\"html_url\":\"https://github.com/flaviut/nre/blob/master/nre.nimble\",\"git_url\":\"https://api.github.com/repos/flaviut/nre/git/blobs/9d59ad5c2eb2e269dce3e918979c359f08062dbd\",\"download_url\":\"https://raw.githubusercontent.com/flaviut/nre/master/nre.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/flaviut/nre/contents/nre.nimble?ref=master\",\"git\":\"https://api.github.com/repos/flaviut/nre/git/blobs/9d59ad5c2eb2e269dce3e918979c359f08062dbd\",\"html\":\"https://github.com/flaviut/nre/blob/master/nre.nimble\"}},{\"name\":\"runtests.sh\",\"path\":\"runtests.sh\",\"sha\":\"51dbcaf35bee560c7b112030e4956589b6a218a8\",\"size\":141,\"url\":\"https://api.github.com/repos/flaviut/nre/contents/runtests.sh?ref=master\",\"html_url\":\"https://github.com/flaviut/nre/blob/master/runtests.sh\",\"git_url\":\"https://api.github.com/repos/flaviut/nre/git/blobs/51dbcaf35bee560c7b112030e4956589b6a218a8\",\"download_url\":\"https://raw.githubusercontent.com/flaviut/nre/master/runtests.sh\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/flaviut/nre/contents/runtests.sh?ref=master\",\"git\":\"https://api.github.com/repos/flaviut/nre/git/blobs/51dbcaf35bee560c7b112030e4956589b6a218a8\",\"html\":\"https://github.com/flaviut/nre/blob/master/runtests.sh\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"6a651c4a631bb3cc111f3a9986b6cf3cfb90d24f\",\"size\":0,\"url\":\"https://api.github.com/repos/flaviut/nre/contents/src?ref=master\",\"html_url\":\"https://github.com/flaviut/nre/tree/master/src\",\"git_url\":\"https://api.github.com/repos/flaviut/nre/git/trees/6a651c4a631bb3cc111f3a9986b6cf3cfb90d24f\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/flaviut/nre/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/flaviut/nre/git/trees/6a651c4a631bb3cc111f3a9986b6cf3cfb90d24f\",\"html\":\"https://github.com/flaviut/nre/tree/master/src\"}},{\"name\":\"test\",\"path\":\"test\",\"sha\":\"31b588e1dad63a547c0ee63ce99a9e2c7acb59b7\",\"size\":0,\"url\":\"https://api.github.com/repos/flaviut/nre/contents/test?ref=master\",\"html_url\":\"https://github.com/flaviut/nre/tree/master/test\",\"git_url\":\"https://api.github.com/repos/flaviut/nre/git/trees/31b588e1dad63a547c0ee63ce99a9e2c7acb59b7\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/flaviut/nre/contents/test?ref=master\",\"git\":\"https://api.github.com/repos/flaviut/nre/git/trees/31b588e1dad63a547c0ee63ce99a9e2c7acb59b7\",\"html\":\"https://github.com/flaviut/nre/tree/master/test\"}},{\"name\":\"web\",\"path\":\"web\",\"sha\":\"1d34d51b14bccdf93cd04bc17678b4d30110353c\",\"size\":0,\"url\":\"https://api.github.com/repos/flaviut/nre/contents/web?ref=master\",\"html_url\":\"https://github.com/flaviut/nre/tree/master/web\",\"git_url\":\"https://api.github.com/repos/flaviut/nre/git/trees/1d34d51b14bccdf93cd04bc17678b4d30110353c\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/flaviut/nre/contents/web?ref=master\",\"git\":\"https://api.github.com/repos/flaviut/nre/git/trees/1d34d51b14bccdf93cd04bc17678b4d30110353c\",\"html\":\"https://github.com/flaviut/nre/tree/master/web\"}}]",
"https://raw.githubusercontent.com/achesak/nim-grp/master/grp.nimble": "[Package]\nname = \"grp\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with the UNIX group file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/CORDEA/backoff/master/backoff.nimble": "# Package\n\nversion     = \"0.1\"\nauthor      = \"Yoshihiro Tanaka\"\ndescription = \"Implementation of exponential backoff for nim.\"\nlicense     = \"Apache License 2.0\"\nsrcDir      = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_websitecreator/master/nimwc.nimble": "# Package\nversion       = \"6.0.6\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev) & Juan Carlos (https://github.com/juancarlospaco)\"\ndescription   = \"Generate and host a website. Run the package and access your new webpage.\"\nlicense       = \"PPL\"\nbin           = @[\"nimwc\"]\nskipDirs      = @[\"private\", \"tmp\", \"devops\", \"docs\"]\ninstallDirs   = @[\"config\", \"nimwcpkg\", \"plugins\", \"public\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\nrequires \"jester >= 0.4.3\"\nrequires \"bcrypt >= 0.2.1\"\nrequires \"contra >= 0.2.5\"\nrequires \"datetime2human >= 0.2.5\"\nrequires \"firejail >= 0.5.0\"\nrequires \"libravatar >= 0.5.0\"\nrequires \"otp >= 0.1.1\"\nrequires \"recaptcha >= 1.0.3\"\nrequires \"webp >= 0.2.5\"\nrequires \"packedjson >= 0.1.0\"\n\n\nimport distros\n\ntask setup, \"Generating executable\":\n  if detectOs(Windows):\n    quit(\"Cannot run on Windows, but you can try Docker for Windows: http://docs.docker.com/docker-for-windows\")\n\n  if not fileExists(\"config/config.cfg\"):\n    cpFile(\"config/config_default.cfg\", \"config/config.cfg\")\n    echo \"Config file created. Please update the file: config/config.cfg.\"\n\n  if defined(webp):\n    foreignDep \"libwebp\"\n\n  if defined(firejail):\n    foreignDep \"firejail\"\n\n  if defined(demo):\n    echo \"Demo Mode: Database will reset each hour with the standard data.\"\n\n  if not defined(ssl):\n    echo \"SSL not defined: SSL is disabled, running unsecure.\"\n\n  if not defined(firejail):\n    echo \"Firejail not defined: Firejail is disabled, running unsecure.\"\n\n\nbefore install:\n  setupTask()\n",
"https://github.com/ba0f3/ptrace.nim": "version       = \"0.0.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"ptrace wrapper and helpers for Nim\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.10.0\"\n",
"https://github.com/status-im/nim-libbacktrace": "# Copyright (c) 2019-2020 Status Research & Development GmbH\n# Licensed under either of\n#  * Apache License, version 2.0,\n#  * MIT license\n# at your option.\n# This file may not be copied, modified, or distributed except according to\n# those terms.\n\nmode = ScriptMode.Verbose\n\npackageName   = \"libbacktrace\"\nversion       = \"0.0.4\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Nim wrapper for libbacktrace\"\nlicense       = \"MIT or Apache License 2.0\"\ninstallDirs   = @[\"vendor/whereami/src\", \"install\"]\ninstallFiles  = @[\"libbacktrace_wrapper.c\", \"libbacktrace_wrapper.cpp\", \"libbacktrace_wrapper.h\", \"libbacktrace_wrapper.nim\"]\n\nrequires \"nim >= 1.0\"\n\nbefore install:\n  exec \"git submodule update --init\"\n  var make = \"make\"\n  when defined(windows):\n    make = \"mingw32-make\"\n  exec make\n\n",
"https://raw.githubusercontent.com/zevv/nimz3/master/z3.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Ico Doornekamp\"\ndescription   = \"Nim Z3 theorem prover bindings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/enimatek-nl/tencil": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"enimatek\"\ndescription   = \"Tencil is a mustache-compatible JSON based template engine for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.1\"\n",
"https://raw.githubusercontent.com/madprops/lq/master/lq.nimble": "# Package\n\nversion       = \"2.0.0\"\nauthor        = \"madprops\"\ndescription   = \"Directory listing tool\"\nlicense       = \"GPL-2.0\"\nsrcDir        = \"src\"\nbin           = @[\"lq\"]\nskipExt       = @[\"nim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"nap >= 1.5.1\"\nrequires \"parsetoml >= 0.5.0\"\n",
"https://raw.githubusercontent.com/mcilya/nimrcon/master/nimrcon.nimble": "# Package\nversion = \"0.0.1\"\nauthor = \"Ilya Tretyakov\"\ndescription = \"Simple RCON client\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\nrequires \"struct >= 0.2.0\"",
"https://raw.githubusercontent.com/paul-nameless/nimbler/master/nimbler.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Paul Nameless\"\ndescription   = \"A new awesome nimble package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipFiles = @[\"run.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0\"\n",
"https://raw.githubusercontent.com/exelotl/trick/master/trick.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"exelotl\"\ndescription   = \"GBA image conversion library and more\"\nlicense       = \"zlib\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"nimPNG >= 0.2.5\"\n",
"https://github.com/achesak/nim-hashids": "[Package]\nname = \"hashids\"\nversion = \"1.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim implementation of Hashids\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/nitely/nim-graphemes/master/graphemes.nimble": "# Package\n\nversion = \"0.9.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Grapheme aware string handling (Unicode tr29)\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\", \"gen\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r tests/tests\"\n  exec \"nim doc --project -o:./docs/ugh ./src/graphemes.nim\"\n\ntask gen_re, \"Gen regex\":\n  exec \"nim c -r gen/gen_re\"\n\ntask gen_tables, \"Gen break tables\":\n  exec \"nim c -r gen/gen_grapheme_break\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/graphemes.nim\"\n",
"https://api.github.com/repos/def-/rsvg/contents": "[{\"name\":\"rsvg.babel\",\"path\":\"rsvg.babel\",\"sha\":\"fc1c240b100e779aa84b61367efa123acdceb304\",\"size\":215,\"url\":\"https://api.github.com/repos/def-/nim-rsvg/contents/rsvg.babel?ref=master\",\"html_url\":\"https://github.com/def-/nim-rsvg/blob/master/rsvg.babel\",\"git_url\":\"https://api.github.com/repos/def-/nim-rsvg/git/blobs/fc1c240b100e779aa84b61367efa123acdceb304\",\"download_url\":\"https://raw.githubusercontent.com/def-/nim-rsvg/master/rsvg.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-rsvg/contents/rsvg.babel?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-rsvg/git/blobs/fc1c240b100e779aa84b61367efa123acdceb304\",\"html\":\"https://github.com/def-/nim-rsvg/blob/master/rsvg.babel\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"b43a70d948aa7a46df76778988a6a1d6c14c57c3\",\"size\":0,\"url\":\"https://api.github.com/repos/def-/nim-rsvg/contents/src?ref=master\",\"html_url\":\"https://github.com/def-/nim-rsvg/tree/master/src\",\"git_url\":\"https://api.github.com/repos/def-/nim-rsvg/git/trees/b43a70d948aa7a46df76778988a6a1d6c14c57c3\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-rsvg/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-rsvg/git/trees/b43a70d948aa7a46df76778988a6a1d6c14c57c3\",\"html\":\"https://github.com/def-/nim-rsvg/tree/master/src\"}}]",
"https://raw.githubusercontent.com/nim-lang/x11/master/x11.nimble": "version = \"1.1\"\nauthor =\"Andreas Rumpf\"\ndescription = \"Wrapper for X11\"\nlicense = \"MIT\"\n\nrequires \"nim > 0.9.2\"\n\ntask test, \"test\":\n  exec \"nim c examples/x11ex.nim\"\n  exec \"nim c examples/xshmex.nim\"\n  exec \"nim c examples/xftex.nim\"\n",
"https://github.com/momeemt/base64_cui": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Momeemt\"\ndescription   = \"base64 cui\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"base64_cui\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/ThomasTJdev/nimlibxlsxwriter": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"KeepCoolWithCoolidge\"\ndescription   = \"libxslxwriter wrapper for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"nimgen >= 0.5.2\"\nrequires \"c2nim >= 0.9.14\"\n\nimport distros\n\nvar cmd = \"\"\nif detectOs(Windows):\n    cmd = \"cmd /c \"\n\ntask setup, \"Checkout and generate\":\n    exec cmd & \"nimgen nimlibxlsxwriter.cfg\"\n\nbefore install:\n    setupTask()\n\ntask test, \"Run tests\":\n    withDir(\"tests\"):\n        exec \"nim c -r anatomy.nim\"\n        exec \"nim c -r array_formula.nim\"\n        exec \"nim c -r autofilter.nim\"\n        exec \"nim c -r chart_area.nim\"\n        exec \"nim c -r chart_bar.nim\"\n        exec \"nim c -r chart_clustered.nim\"\n        exec \"nim c -r chart_column.nim\"\n        exec \"nim c -r chart_data_table.nim\"\n        exec \"nim c -r chart_data_tools.nim\"\n        exec \"nim c -r chart_test.nim\"\n        exec \"nim c -r date_and_times.nim\"\n        exec \"nim c -r date_and_times_2.nim\"\n        exec \"nim c -r date_and_times_3.nim\"\n",
"https://raw.githubusercontent.com/jangko/nimLUA/master/nimLUA.nimble": "packageName   = \"nimLUA\"\nversion       = \"0.3.8\"\nauthor        = \"Andri Lim\"\ndescription   = \"glue code generator to bind Nim and Lua together using Nim's powerful macro\"\nlicense       = \"MIT\"\nskipDirs      = @[\"test\", \"scripts\"]\n\nrequires: \"nim >= 1.2.2\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n    debugEcho \"LANG: \", lang\n\n  when defined(unix):\n    const libm = \"-lm\"\n  else:\n    const libm = \"\"\n\n  when defined(macosx):\n    # nim bug, incompatible pointer assignment\n    # see nim-lang/Nim#16123\n    if lang == \"cpp\":\n      lang = \"c\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --outdir:build -r --hints:off --warnings:off \" &\n    \" -d:lua_static_lib --passL:\\\"-Lexternal -llua \" & libm & \" \\\" \" & path\n\ntask test, \"Run all tests\":\n  test \"-d:nimDebugDlOpen\", \"tests/test_features\"\n  test \"-d:nimDebugDlOpen -d:release\", \"tests/test_features\"\n  test \"-d:importLogging\", \"tests/test_bugfixes\"\n  test \"-d:importLogging -d:release\", \"tests/test_bugfixes\"\n",
"https://raw.githubusercontent.com/fowlmouth/nimlibs/master/fowltek.nimble": "[Package]\nname = \"fowltek\"\nversion = \"0.9.3\"\nauthor = \"fowl\"\ndescription = \"Assorted wrappers and reusable libraries.\"\nlicense = \"MIT\"\n\n[Deps]\nRequires = \"nim >= 0.9.3\"\n",
"https://raw.githubusercontent.com/mrshu/nim-notetxt/master/notetxt.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"mr.Shu\"\ndescription   = \"A library that implements the note.txt specification for note taking.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.11\"\n\n",
"https://raw.githubusercontent.com/treeform/typography/master/typography.nimble": "version       = \"0.7.4\"\nauthor        = \"treeform\"\ndescription   = \"Fonts, Typesetting and Rasterization for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.0\"\nrequires \"pixie >= 0.0.20\"\nrequires \"vmath >= 0.4.0\"\nrequires \"chroma >= 0.1.2\"\nrequires \"print >= 0.1.0\"\nrequires \"bumpy >= 1.0.0\"\nrequires \"flatty >= 0.1.3\"\n\ntask docs, \"Generate API documents\":\n  exec \"nimble doc --index:on --project --out:docs --hints:off src/typography.nim\"\n",
"https://github.com/achesak/nim-srt": "[Package]\nname = \"srt\"\nversion = \"1.1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for parsing SRT (SubRip) subtitle files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://api.github.com/repos/nimious/io-isense/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"c1c1b265f5c6b80a08e161bc3861504ed6fbe302\",\"size\":92,\"url\":\"https://api.github.com/repos/nimious/isense/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nimious/isense/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nimious/isense/git/blobs/c1c1b265f5c6b80a08e161bc3861504ed6fbe302\",\"download_url\":\"https://raw.githubusercontent.com/nimious/isense/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/isense/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nimious/isense/git/blobs/c1c1b265f5c6b80a08e161bc3861504ed6fbe302\",\"html\":\"https://github.com/nimious/isense/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"size\":1076,\"url\":\"https://api.github.com/repos/nimious/isense/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nimious/isense/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nimious/isense/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"download_url\":\"https://raw.githubusercontent.com/nimious/isense/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/isense/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nimious/isense/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"html\":\"https://github.com/nimious/isense/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"db3c8e8e599b950911ad688a60da8dde4d58bdf0\",\"size\":1937,\"url\":\"https://api.github.com/repos/nimious/isense/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nimious/isense/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nimious/isense/git/blobs/db3c8e8e599b950911ad688a60da8dde4d58bdf0\",\"download_url\":\"https://raw.githubusercontent.com/nimious/isense/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/isense/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nimious/isense/git/blobs/db3c8e8e599b950911ad688a60da8dde4d58bdf0\",\"html\":\"https://github.com/nimious/isense/blob/master/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"1bb1e4396a1dac2f31055f571a513358b5930af6\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/isense/contents/docs?ref=master\",\"html_url\":\"https://github.com/nimious/isense/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/nimious/isense/git/trees/1bb1e4396a1dac2f31055f571a513358b5930af6\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/isense/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/nimious/isense/git/trees/1bb1e4396a1dac2f31055f571a513358b5930af6\",\"html\":\"https://github.com/nimious/isense/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"c216e75a9ad6b90590c36b03c55e6d6fbee50346\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/isense/contents/examples?ref=master\",\"html_url\":\"https://github.com/nimious/isense/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/nimious/isense/git/trees/c216e75a9ad6b90590c36b03c55e6d6fbee50346\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/isense/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/nimious/isense/git/trees/c216e75a9ad6b90590c36b03c55e6d6fbee50346\",\"html\":\"https://github.com/nimious/isense/tree/master/examples\"}},{\"name\":\"isense.nimble\",\"path\":\"isense.nimble\",\"sha\":\"d834cd816f429f172df64c89e8f0323afee02f6c\",\"size\":200,\"url\":\"https://api.github.com/repos/nimious/isense/contents/isense.nimble?ref=master\",\"html_url\":\"https://github.com/nimious/isense/blob/master/isense.nimble\",\"git_url\":\"https://api.github.com/repos/nimious/isense/git/blobs/d834cd816f429f172df64c89e8f0323afee02f6c\",\"download_url\":\"https://raw.githubusercontent.com/nimious/isense/master/isense.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/isense/contents/isense.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nimious/isense/git/blobs/d834cd816f429f172df64c89e8f0323afee02f6c\",\"html\":\"https://github.com/nimious/isense/blob/master/isense.nimble\"}},{\"name\":\"nim.cfg\",\"path\":\"nim.cfg\",\"sha\":\"42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"size\":13,\"url\":\"https://api.github.com/repos/nimious/isense/contents/nim.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/isense/blob/master/nim.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/isense/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"download_url\":\"https://raw.githubusercontent.com/nimious/isense/master/nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/isense/contents/nim.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/isense/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"html\":\"https://github.com/nimious/isense/blob/master/nim.cfg\"}},{\"name\":\"nimdoc.cfg\",\"path\":\"nimdoc.cfg\",\"sha\":\"b0083cffc68df0a5b40519bd4ef59f5c2213ddbd\",\"size\":102,\"url\":\"https://api.github.com/repos/nimious/isense/contents/nimdoc.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/isense/blob/master/nimdoc.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/isense/git/blobs/b0083cffc68df0a5b40519bd4ef59f5c2213ddbd\",\"download_url\":\"https://raw.githubusercontent.com/nimious/isense/master/nimdoc.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/isense/contents/nimdoc.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/isense/git/blobs/b0083cffc68df0a5b40519bd4ef59f5c2213ddbd\",\"html\":\"https://github.com/nimious/isense/blob/master/nimdoc.cfg\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"07c27e39e5be1f7273d18bab972f38d8e8042d49\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/isense/contents/src?ref=master\",\"html_url\":\"https://github.com/nimious/isense/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nimious/isense/git/trees/07c27e39e5be1f7273d18bab972f38d8e8042d49\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/isense/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nimious/isense/git/trees/07c27e39e5be1f7273d18bab972f38d8e8042d49\",\"html\":\"https://github.com/nimious/isense/tree/master/src\"}}]",
"https://github.com/reactormonk/nim-kwin": "[Package]\nname          = \"kwin\"\nversion       = \"1.0.0\"\nauthor        = \"Simon Hafner\"\ndescription   = \"Wraps the JS API offered by KWin\"\nlicense       = \"MIT\"\nbackend       = \"js\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.2\"\n",
"https://raw.githubusercontent.com/lamartire/anycase/master/anycase.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lamartire\"\ndescription   = \"Convert strings to any case\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/fenekku/commandeer/master/commandeer.nimble": "# Package\n\nversion     = \"0.12.3\"\nauthor      = \"Guillaume Viger\"\ndescription = \"A small command line parsing DSL\"\nlicense     = \"MIT\"\n\ninstallFiles = @[\"commandeer.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask tests, \"Run the Commandeer tester\":\n  exec \"nim compile --run runTests\"\n",
"https://raw.githubusercontent.com/LemonBoy/compactdict/master/compactdict.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"LemonBoy\"\ndescription   = \"A compact dictionary implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://github.com/citycide/cascade": "version       = \"1.0.0\"\nauthor        = \"citycide\"\ndescription   = \"Method & assignment cascades for Nim, inspired by Smalltalk & Dart.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.0.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r \" & \"tests/tests.nim\"\n",
"https://github.com/rsirres/NimMarc": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Raphael\"\ndescription   = \"Marc21 parser for Nimlang\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/GULPF/nimquery/master/nimquery.nimble": "# Package\n\nversion       = \"1.2.2\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"Library for querying HTML using CSS-selectors (like JavaScripts document.querySelector)\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\nrequires \"nim >= 0.20.0\"\n\ntask test, \"Run the tests\":\n    exec \"nim c -r tests/incltests\"\n    rmFile \"tests/incltests\"\n    exec \"nim c -r tests/tests\"\n    rmFile \"tests/tests\"\n",
"https://github.com/davidgarland/sol": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"davidgarland\"\ndescription   = \"A portable SIMD-accelerated vector library written in C99 with Nim bindings.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\n# Tasks\n\ntask clean, \"Cleans up files.\":\n  exec \"rm -rf tests/test\"\n",
"https://raw.githubusercontent.com/enimatek-nl/tencil/master/tencil.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"enimatek\"\ndescription   = \"Tencil is a mustache-compatible JSON based template engine for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.1\"\n",
"https://api.github.com/repos/Varriount/DevIL/contents": "[{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"3c97b27022e705a6e87bd71b99b4390e93134ea7\",\"size\":1075,\"url\":\"https://api.github.com/repos/Varriount/DevIL/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/Varriount/DevIL/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/Varriount/DevIL/git/blobs/3c97b27022e705a6e87bd71b99b4390e93134ea7\",\"download_url\":\"https://raw.githubusercontent.com/Varriount/DevIL/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Varriount/DevIL/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/Varriount/DevIL/git/blobs/3c97b27022e705a6e87bd71b99b4390e93134ea7\",\"html\":\"https://github.com/Varriount/DevIL/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"acb7d248bcd73612e86b4a87da26428b89b2d615\",\"size\":230,\"url\":\"https://api.github.com/repos/Varriount/DevIL/contents/README.md?ref=master\",\"html_url\":\"https://github.com/Varriount/DevIL/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/Varriount/DevIL/git/blobs/acb7d248bcd73612e86b4a87da26428b89b2d615\",\"download_url\":\"https://raw.githubusercontent.com/Varriount/DevIL/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Varriount/DevIL/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/Varriount/DevIL/git/blobs/acb7d248bcd73612e86b4a87da26428b89b2d615\",\"html\":\"https://github.com/Varriount/DevIL/blob/master/README.md\"}},{\"name\":\"devil.babel\",\"path\":\"devil.babel\",\"sha\":\"973765b347b136d11df578c02aaa7c5ba6212eb7\",\"size\":230,\"url\":\"https://api.github.com/repos/Varriount/DevIL/contents/devil.babel?ref=master\",\"html_url\":\"https://github.com/Varriount/DevIL/blob/master/devil.babel\",\"git_url\":\"https://api.github.com/repos/Varriount/DevIL/git/blobs/973765b347b136d11df578c02aaa7c5ba6212eb7\",\"download_url\":\"https://raw.githubusercontent.com/Varriount/DevIL/master/devil.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Varriount/DevIL/contents/devil.babel?ref=master\",\"git\":\"https://api.github.com/repos/Varriount/DevIL/git/blobs/973765b347b136d11df578c02aaa7c5ba6212eb7\",\"html\":\"https://github.com/Varriount/DevIL/blob/master/devil.babel\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"4628b9ba83b5b60a7dba1755f03b9cbb2cfc4d76\",\"size\":0,\"url\":\"https://api.github.com/repos/Varriount/DevIL/contents/src?ref=master\",\"html_url\":\"https://github.com/Varriount/DevIL/tree/master/src\",\"git_url\":\"https://api.github.com/repos/Varriount/DevIL/git/trees/4628b9ba83b5b60a7dba1755f03b9cbb2cfc4d76\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Varriount/DevIL/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/Varriount/DevIL/git/trees/4628b9ba83b5b60a7dba1755f03b9cbb2cfc4d76\",\"html\":\"https://github.com/Varriount/DevIL/tree/master/src\"}}]",
"https://github.com/jyapayne/switch-build": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Joey Payne\"\ndescription   = \"Nintendo Switch library libnx for Nim.\"\nlicense       = \"The Unlicense\"\n\nsrcDir = \"src\"\n\nbin = @[\"switch_build\"]\n\n# Deps\nrequires \"nim >= 0.18.1\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/test.nim\"\n",
"https://raw.githubusercontent.com/euantorano/sysrandom.nim/master/sysrandom.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"Euan T\"\ndescription   = \"A simple library to create random strings of data.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc2 --index:on -o:docs/sysrandom.html src/sysrandom.nim\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/main.nim\"\n",
"https://github.com/FedericoCeratto/nim-lmdb": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"LMDB wrapper\"\nlicense       = \"OpenLDAP Public license\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask tests_functional, \"Functional tests\":\n  exec \"nim c -p:. -d:release -r tests/functional.nim\"\n\n",
"https://raw.githubusercontent.com/def-/nim-brainfuck/master/brainfuck.nimble": "# Package\n\nversion       = \"1.1\"\nauthor        = \"Dennis Felsing\"\ndescription   = \"A brainfuck interpreter and compiler\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\nbin           = @[\"brainfuck\"]\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\nrequires \"docopt >= 0.1.0\"\n",
"https://github.com/achesak/nim-qrcode": "[Package]\nname = \"qrcode\"\nversion = \"0.3\"\nauthor = \"Adam Chesak\"\ndescription = \"module for creating and reading QR codes using http://goqr.me/\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-constants/master/constants.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Mathematical numerical named static constants useful for different disciplines\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/surf1nb1rd/nim-prompt/master/prompt.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"prompt\"\nversion       = \"0.0.1\"\nauthor        = \"Surf1nb1rd\"\ndescription   = \"Feature-rich readline replacement\"\nlicense       = \"BSD2\"\n\nrequires \"nim >= 0.18.0\",\n         \"unicodedb >= 0.3.2\"\n",
"https://raw.githubusercontent.com/status-im/nimbus/master/nimbus.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"nimbus\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"An Ethereum 2.0 Sharding Client for Resource-Restricted Devices\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\", \"examples\"]\n# we can't have the result of a custom task in the \"bin\" var - https://github.com/nim-lang/nimble/issues/542\n# bin           = @[\"build/nimbus\"]\n\nrequires \"nim >= 1.2.0\",\n  \"bncurve\",\n  \"chronicles\",\n  \"chronos\",\n  \"eth\",\n  \"json_rpc\",\n  \"libbacktrace\",\n  \"nimcrypto\",\n  \"stew\",\n  \"stint\"\n\nproc buildBinary(name: string, srcDir = \"./\", params = \"\", lang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  # allow something like \"nim nimbus --verbosity:0 --hints:off nimbus.nims\"\n  var extra_params = params\n  for i in 2..<paramCount():\n    extra_params &= \" \" & paramStr(i)\n  exec \"nim \" & lang & \" --out:build/\" & name & \" \" & extra_params & \" \" & srcDir & name & \".nim\"\n\nproc test(name: string, lang = \"c\") =\n  buildBinary name, \"tests/\", \"-d:chronicles_log_level=ERROR\"\n  exec \"build/\" & name\n\ntask test, \"Run tests\":\n  test \"all_tests\"\n  test \"test_rpc\"\n  test \"test_rpc_whisper\"\n\ntask nimbus, \"Build Nimbus\":\n  buildBinary \"nimbus\", \"nimbus/\", \"-d:chronicles_log_level=TRACE\"\n",
"https://raw.githubusercontent.com/dfdeshom/nimlz4/master/nimlz4.nimble": "[Package]\nname          = \"nimlz4\"\nversion       = \"0.1.0\"\nauthor        = \"Didier Deshommes\"\ndescription   = \"Nim wrapper for the LZ4 library\"\nlicense       = \"BSD-3\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-seriesdetiempoar/master/seriesdetiempoar.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Series de Tiempo de Argentina Government MultiSync API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://api.github.com/repos/Vladar4/sdl2_nim/contents": "[{\"name\":\"CHANGELOG-2.0.10.md\",\"path\":\"CHANGELOG-2.0.10.md\",\"sha\":\"1508b203bfbdb5677c1a07e0a193bfc57fb7760b\",\"size\":879,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.10.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.10.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/1508b203bfbdb5677c1a07e0a193bfc57fb7760b\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/CHANGELOG-2.0.10.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.10.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/1508b203bfbdb5677c1a07e0a193bfc57fb7760b\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.10.md\"}},{\"name\":\"CHANGELOG-2.0.12.md\",\"path\":\"CHANGELOG-2.0.12.md\",\"sha\":\"858ebd26764fbe4f9e4a712d9125a41ac608dcd7\",\"size\":1480,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.12.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.12.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/858ebd26764fbe4f9e4a712d9125a41ac608dcd7\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/CHANGELOG-2.0.12.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.12.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/858ebd26764fbe4f9e4a712d9125a41ac608dcd7\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.12.md\"}},{\"name\":\"CHANGELOG-2.0.14.md\",\"path\":\"CHANGELOG-2.0.14.md\",\"sha\":\"cb52d60edda3453aae503bdc1906b77922ac516a\",\"size\":2973,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.14.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.14.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/cb52d60edda3453aae503bdc1906b77922ac516a\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/CHANGELOG-2.0.14.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.14.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/cb52d60edda3453aae503bdc1906b77922ac516a\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.14.md\"}},{\"name\":\"CHANGELOG-2.0.6.md\",\"path\":\"CHANGELOG-2.0.6.md\",\"sha\":\"7a47aa2aa6b22b7f3a10f15cb5234c4e12cb6f69\",\"size\":2030,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.6.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.6.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/7a47aa2aa6b22b7f3a10f15cb5234c4e12cb6f69\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/CHANGELOG-2.0.6.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.6.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/7a47aa2aa6b22b7f3a10f15cb5234c4e12cb6f69\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.6.md\"}},{\"name\":\"CHANGELOG-2.0.7.md\",\"path\":\"CHANGELOG-2.0.7.md\",\"sha\":\"9c4c6ab9b50ac3c665e74f42b3188bdae22ffe98\",\"size\":920,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.7.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.7.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/9c4c6ab9b50ac3c665e74f42b3188bdae22ffe98\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/CHANGELOG-2.0.7.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.7.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/9c4c6ab9b50ac3c665e74f42b3188bdae22ffe98\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.7.md\"}},{\"name\":\"CHANGELOG-2.0.8.md\",\"path\":\"CHANGELOG-2.0.8.md\",\"sha\":\"748a532a7e2b199d8415a3c6999c2a532788171f\",\"size\":587,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.8.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.8.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/748a532a7e2b199d8415a3c6999c2a532788171f\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/CHANGELOG-2.0.8.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.8.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/748a532a7e2b199d8415a3c6999c2a532788171f\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.8.md\"}},{\"name\":\"CHANGELOG-2.0.9.md\",\"path\":\"CHANGELOG-2.0.9.md\",\"sha\":\"e70137b7115ccda09c15e67a5f500072c61483df\",\"size\":1205,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.9.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.9.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/e70137b7115ccda09c15e67a5f500072c61483df\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/CHANGELOG-2.0.9.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/CHANGELOG-2.0.9.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/e70137b7115ccda09c15e67a5f500072c61483df\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/CHANGELOG-2.0.9.md\"}},{\"name\":\"LINKS.md\",\"path\":\"LINKS.md\",\"sha\":\"3ab4e95a7aafe939f4ff2088f11fa0fc1affb097\",\"size\":817,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/LINKS.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/LINKS.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/3ab4e95a7aafe939f4ff2088f11fa0fc1affb097\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/LINKS.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/LINKS.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/3ab4e95a7aafe939f4ff2088f11fa0fc1affb097\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/LINKS.md\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"53385d516406e410197719213e0242abdfa00099\",\"size\":4542,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/README.md?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/53385d516406e410197719213e0242abdfa00099\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/53385d516406e410197719213e0242abdfa00099\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/README.md\"}},{\"name\":\"SDL-COPYING.txt\",\"path\":\"SDL-COPYING.txt\",\"sha\":\"f158cb42e5fb8039fc85f76b7c6d6194bd3b2a40\",\"size\":930,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-COPYING.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-COPYING.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/f158cb42e5fb8039fc85f76b7c6d6194bd3b2a40\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SDL-COPYING.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-COPYING.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/f158cb42e5fb8039fc85f76b7c6d6194bd3b2a40\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-COPYING.txt\"}},{\"name\":\"SDL-CREDITS.txt\",\"path\":\"SDL-CREDITS.txt\",\"sha\":\"74163e8244a7198e7925120b0beaa7e97a126840\",\"size\":1920,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-CREDITS.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-CREDITS.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/74163e8244a7198e7925120b0beaa7e97a126840\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SDL-CREDITS.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-CREDITS.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/74163e8244a7198e7925120b0beaa7e97a126840\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-CREDITS.txt\"}},{\"name\":\"SDL-GFX-COPYING\",\"path\":\"SDL-GFX-COPYING\",\"sha\":\"2d5488373642f7739528e6ec35ede2415ae11743\",\"size\":101,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-GFX-COPYING?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-GFX-COPYING\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/2d5488373642f7739528e6ec35ede2415ae11743\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SDL-GFX-COPYING\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-GFX-COPYING?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/2d5488373642f7739528e6ec35ede2415ae11743\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-GFX-COPYING\"}},{\"name\":\"SDL-IMAGE-COPYING.txt\",\"path\":\"SDL-IMAGE-COPYING.txt\",\"sha\":\"d7690d77c3d3d06896490a5105e1b171d3ef14f2\",\"size\":996,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-IMAGE-COPYING.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-IMAGE-COPYING.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/d7690d77c3d3d06896490a5105e1b171d3ef14f2\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SDL-IMAGE-COPYING.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-IMAGE-COPYING.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/d7690d77c3d3d06896490a5105e1b171d3ef14f2\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-IMAGE-COPYING.txt\"}},{\"name\":\"SDL-MIXER-COPYING.txt\",\"path\":\"SDL-MIXER-COPYING.txt\",\"sha\":\"c59f77f5d2f27596c80b8935f1825d9809f3021e\",\"size\":994,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-MIXER-COPYING.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-MIXER-COPYING.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/c59f77f5d2f27596c80b8935f1825d9809f3021e\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SDL-MIXER-COPYING.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-MIXER-COPYING.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/c59f77f5d2f27596c80b8935f1825d9809f3021e\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-MIXER-COPYING.txt\"}},{\"name\":\"SDL-NET-COPYING.txt\",\"path\":\"SDL-NET-COPYING.txt\",\"sha\":\"49cc656779b4a06e20670ac311bc44d0bdd41b1f\",\"size\":1003,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-NET-COPYING.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-NET-COPYING.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/49cc656779b4a06e20670ac311bc44d0bdd41b1f\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SDL-NET-COPYING.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-NET-COPYING.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/49cc656779b4a06e20670ac311bc44d0bdd41b1f\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-NET-COPYING.txt\"}},{\"name\":\"SDL-README-SDL.txt\",\"path\":\"SDL-README-SDL.txt\",\"sha\":\"2984b145eec100ff3ea9d2633e68b405706c77ac\",\"size\":433,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-README-SDL.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-README-SDL.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/2984b145eec100ff3ea9d2633e68b405706c77ac\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SDL-README-SDL.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-README-SDL.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/2984b145eec100ff3ea9d2633e68b405706c77ac\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-README-SDL.txt\"}},{\"name\":\"SDL-README.txt\",\"path\":\"SDL-README.txt\",\"sha\":\"e8630c713a8cc77c2b67ab3c1394cf5a56108989\",\"size\":648,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-README.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-README.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/e8630c713a8cc77c2b67ab3c1394cf5a56108989\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SDL-README.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-README.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/e8630c713a8cc77c2b67ab3c1394cf5a56108989\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-README.txt\"}},{\"name\":\"SDL-TTF-COPYING.txt\",\"path\":\"SDL-TTF-COPYING.txt\",\"sha\":\"ef90bbc2aebbe36fae96405e15a56ac1396d76ea\",\"size\":1008,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-TTF-COPYING.txt?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-TTF-COPYING.txt\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/ef90bbc2aebbe36fae96405e15a56ac1396d76ea\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SDL-TTF-COPYING.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SDL-TTF-COPYING.txt?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/ef90bbc2aebbe36fae96405e15a56ac1396d76ea\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SDL-TTF-COPYING.txt\"}},{\"name\":\"SMPEG-COPYING\",\"path\":\"SMPEG-COPYING\",\"sha\":\"eb685a5ec981b949faa391ad3fc395cd42932510\",\"size\":25265,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SMPEG-COPYING?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SMPEG-COPYING\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/eb685a5ec981b949faa391ad3fc395cd42932510\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/SMPEG-COPYING\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/SMPEG-COPYING?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/eb685a5ec981b949faa391ad3fc395cd42932510\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/SMPEG-COPYING\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"d651cb9e90a40e93d2bd4d3287432c9e725bc9db\",\"size\":0,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/docs?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/trees/d651cb9e90a40e93d2bd4d3287432c9e725bc9db\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/trees/d651cb9e90a40e93d2bd4d3287432c9e725bc9db\",\"html\":\"https://github.com/Vladar4/sdl2_nim/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"2090a1df5029813242d525f764caea729f4d1c0f\",\"size\":0,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/examples?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/trees/2090a1df5029813242d525f764caea729f4d1c0f\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/trees/2090a1df5029813242d525f764caea729f4d1c0f\",\"html\":\"https://github.com/Vladar4/sdl2_nim/tree/master/examples\"}},{\"name\":\"sdl2.nimble\",\"path\":\"sdl2.nimble\",\"sha\":\"662b342d49ff5469bf481183635e843a36510ba2\",\"size\":232,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/sdl2.nimble?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/blob/master/sdl2.nimble\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/662b342d49ff5469bf481183635e843a36510ba2\",\"download_url\":\"https://raw.githubusercontent.com/Vladar4/sdl2_nim/master/sdl2.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/sdl2.nimble?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/blobs/662b342d49ff5469bf481183635e843a36510ba2\",\"html\":\"https://github.com/Vladar4/sdl2_nim/blob/master/sdl2.nimble\"}},{\"name\":\"sdl2\",\"path\":\"sdl2\",\"sha\":\"281eb51b4e992da0c18b3c97640739b4e9534467\",\"size\":0,\"url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/sdl2?ref=master\",\"html_url\":\"https://github.com/Vladar4/sdl2_nim/tree/master/sdl2\",\"git_url\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/trees/281eb51b4e992da0c18b3c97640739b4e9534467\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Vladar4/sdl2_nim/contents/sdl2?ref=master\",\"git\":\"https://api.github.com/repos/Vladar4/sdl2_nim/git/trees/281eb51b4e992da0c18b3c97640739b4e9534467\",\"html\":\"https://github.com/Vladar4/sdl2_nim/tree/master/sdl2\"}}]",
"https://raw.githubusercontent.com/gmshiba/nish/master/nsh.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"gmshiba\"\ndescription   = \"nsh: Nim SHell(cross platform)\"\nlicense       = \"MIT\"\nbinDir        = \"bin\"\nsrcDir        = \"src\"\ninstallFiles  = @[\"apd.bat\", \"pipe.bat\"]\ninstallDirs   = @[\"nshpkg\"]\nbin           = @[\"nsh\", \"tocl\"]\n\n# Dependencies\n\n\nrequires \"nim >= 0.18.0\"\n# requires \"unixcmd >= 0.1.0\"\n",
"https://github.com/me7/srv": "import\n  os\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nimport config\n\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = \"MIT\"\nbin           = @[\"srv\"]\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\nconst compile = \"nim c -d:release\"\nconst linux_x64 = \"--cpu:amd64 --os:linux -o:srv\"\nconst windows_x64 = \"--cpu:amd64 --os:windows -o:srv.exe\"\nconst macosx_x64 = \"-o:srv\"\nconst program = \"srv\"\nconst program_file = \"src/srv.nim\"\nconst zip = \"zip -X\"\n\nproc shell(command, args: string, dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"srv\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build srv for Windows (x64)\":\n  shell compile, windows_x64, program_file\n\ntask linux_x64_build, \"Build srv for Linux (x64)\":\n  shell compile, linux_x64,  program_file\n  \ntask macosx_x64_build, \"Build srv for Mac OS X (x64)\":\n  shell compile, macosx_x64, program_file\n\ntask release, \"Release srv\":\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, filename_for(\"windows\", \"x64\"), program & \".exe\"\n  shell \"rm\", program & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, filename_for(\"linux\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, filename_for(\"macosx\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n ALL DONE!\"\n\n",
"https://api.github.com/repos/dfdeshom/nimrdkafka/contents": "[{\"name\":\".circleci\",\"path\":\".circleci\",\"sha\":\"6428ea1fa6ac3cc6f49da045a6eba4071f6481dc\",\"size\":0,\"url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/.circleci?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimrdkafka/tree/master/.circleci\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/trees/6428ea1fa6ac3cc6f49da045a6eba4071f6481dc\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/.circleci?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/trees/6428ea1fa6ac3cc6f49da045a6eba4071f6481dc\",\"html\":\"https://github.com/dfdeshom/nimrdkafka/tree/master/.circleci\"}},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"817f48e97af446a5470f92e07de4565fe85aef79\",\"size\":16,\"url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/817f48e97af446a5470f92e07de4565fe85aef79\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimrdkafka/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/817f48e97af446a5470f92e07de4565fe85aef79\",\"html\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"8f71f43fee3f78649d238238cbde51e6d7055c82\",\"size\":11358,\"url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/8f71f43fee3f78649d238238cbde51e6d7055c82\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimrdkafka/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/8f71f43fee3f78649d238238cbde51e6d7055c82\",\"html\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"ca3fd3b722ebf891580fdda7c5b6c429cff9c6d2\",\"size\":826,\"url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/README.md?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/ca3fd3b722ebf891580fdda7c5b6c429cff9c6d2\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimrdkafka/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/ca3fd3b722ebf891580fdda7c5b6c429cff9c6d2\",\"html\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/README.md\"}},{\"name\":\"example.nim\",\"path\":\"example.nim\",\"sha\":\"e4b45ed5e30f143200649aa654f1c5683331b851\",\"size\":2239,\"url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/example.nim?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/example.nim\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/e4b45ed5e30f143200649aa654f1c5683331b851\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimrdkafka/master/example.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/example.nim?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/e4b45ed5e30f143200649aa654f1c5683331b851\",\"html\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/example.nim\"}},{\"name\":\"nimrdkafka.nim\",\"path\":\"nimrdkafka.nim\",\"sha\":\"1b967d5b70bb9006b4ad53e64c9717138572a2db\",\"size\":44590,\"url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/nimrdkafka.nim?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/nimrdkafka.nim\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/1b967d5b70bb9006b4ad53e64c9717138572a2db\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimrdkafka/master/nimrdkafka.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/nimrdkafka.nim?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/1b967d5b70bb9006b4ad53e64c9717138572a2db\",\"html\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/nimrdkafka.nim\"}},{\"name\":\"nimrdkafka.nimble\",\"path\":\"nimrdkafka.nimble\",\"sha\":\"ab2c8071eb1d72cd809422c165235e86e12345ac\",\"size\":211,\"url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/nimrdkafka.nimble?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/nimrdkafka.nimble\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/ab2c8071eb1d72cd809422c165235e86e12345ac\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimrdkafka/master/nimrdkafka.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/contents/nimrdkafka.nimble?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimrdkafka/git/blobs/ab2c8071eb1d72cd809422c165235e86e12345ac\",\"html\":\"https://github.com/dfdeshom/nimrdkafka/blob/master/nimrdkafka.nimble\"}}]",
"https://raw.githubusercontent.com/ba0f3/ssh2.nim/master/ssh2.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"SSH, SCP and SFTP client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\", \"libssh2 >= 0.1.4\"\n",
"https://github.com/juancarlospaco/nim-unsplash": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Unsplash API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/kedean/nest/master/nest.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Kevin Dean <kevin.e.dean@gmail.com>\"\ndescription   = \"RESTful URI router\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n",
"https://raw.githubusercontent.com/JesterOrNot/Nim-Tac-Toe/master/NimTacToe.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Sean Hellum\"\ndescription   = \"A TicTacToe game written in nim!\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"NimTacToe\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/FedericoCeratto/nim-syslog": "version       = \"0.0.5\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Minimal syslog support.\"\nlicense       = \"LGPLv3\"\n\nskipDirs = @[\"tests\"]\n\n# Deps\nrequires \"nake\"\nrequires \"nim >= 0.10.2\"\n\n",
"https://raw.githubusercontent.com/genotrance/nimbigwig/master/nimbigwig.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"libBigWig wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimbigwig\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://github.com/JohnAD/diffoutput": "# Package\n\nversion      = \"0.1.2\"\nauthor       = \"John Dupuy\"\ndescription  = \"Collection of Diff stringifications (and reversals)\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"diff >= 0.5.0\"\n",
"https://github.com/juancarlospaco/nim-open-elevation": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Juan Carlos\"\ndescription   = \"OpenStreetMap Elevation API MultiSync Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/disruptek/sigv4/master/sigv4.nimble": "version = \"1.0.13\"\nauthor = \"disruptek\"\ndescription = \"Amazon Web Services Signature Version 4\"\nlicense = \"MIT\"\n\nwhen getEnv(\"GITHUB_ACTIONS\", \"false\") != \"true\":\n  when defined(sigv4UseNimCrypto):\n    requires \"https://github.com/cheatfate/nimcrypto >= 0.5.4 & < 1.0.0\"\n  else:\n    requires \"https://github.com/jangko/nimSHA2 < 1.0.0\"\nelse:\n  # just require everything for CI purposes\n  requires \"https://github.com/cheatfate/nimcrypto >= 0.5.4 & < 1.0.0\"\n  requires \"https://github.com/jangko/nimSHA2 < 1.0.0\"\n\nwhen not defined(release):\n  requires \"https://github.com/disruptek/balls >= 2.0.0 & < 3.0.0\"\n\ntask test, \"run unit testes\":\n  when defined(windows):\n    exec \"balls.cmd\"\n  else:\n    exec \"balls\"\n    exec \"balls --define:sigv4UseNimCrypto\"\n",
"https://github.com/xmonader/nim-sonic-client": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"client for sonic search backend\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\ntask genDocs, \"Create code documentation for sonic\":\n    exec \"nim doc --threads:on --project src/sonic.nim && rm -rf docs/api; mkdir -p docs && mv src/htmldocs docs/api \"",
"https://raw.githubusercontent.com/mratsim/weave/master/weave.nimble": "# Package\n\nversion       = \"0.4.9\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"a state-of-the-art ùultithreading runtime\"\nlicense       = \"MIT or Apache License 2.0\"\n\n# Dependencies\n\n# requires Nim post abea80376a113fb218c22b6474727c279e694cd3\nrequires \"nim >= 1.2.0\", \"synthesis\"\n\nproc test(flags, path: string) =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  # Note: we compile in release mode. This still have stacktraces\n  #       but is much faster than -d:debug\n\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  echo \"\\n========================================================================================\"\n  echo \"Running [ \", lang, \" \", flags, \" ] \", path\n  echo \"========================================================================================\"\n  exec \"nim \" & lang & \" \" & flags & \" --verbosity:0 --hints:off --warnings:off --threads:on -d:release --stacktrace:on --linetrace:on --outdir:build -r \" & path\n\ntask test, \"Run Weave tests\":\n  test \"\", \"weave/cross_thread_com/channels_spsc_single.nim\"\n  test \"\", \"weave/cross_thread_com/channels_spsc_single_ptr.nim\"\n  test \"\", \"weave/cross_thread_com/channels_mpsc_unbounded_batch.nim\"\n  test \"\", \"weave/cross_thread_com/flow_events.nim\"\n\n  test \"\", \"weave/datatypes/binary_worker_trees.nim\"\n  test \"\", \"weave/datatypes/bounded_queues.nim\"\n  test \"\", \"weave/datatypes/prell_deques.nim\"\n  test \"\", \"weave/datatypes/sparsesets.nim\"\n\n  test \"\", \"weave/memory/lookaside_lists.nim\"\n  test \"\", \"weave/memory/memory_pools.nim\"\n  test \"\", \"weave/memory/persistacks.nim\"\n\n  test \"\", \"weave/parallel_tasks.nim\"\n  test \"\", \"weave/parallel_for.nim\"\n  test \"\", \"weave/parallel_for_staged.nim\"\n  test \"\", \"weave/parallel_reduce.nim\"\n\n  test \"--debugger:native\", \"tests/test_background_jobs.nim\"\n  test \"--debugger:native\", \"tests/test_auxiliary_procs.nim\"\n\n  test \"-d:WV_LazyFlowvar\", \"weave/parallel_tasks.nim\"\n  test \"-d:WV_LazyFlowvar\", \"weave/parallel_for.nim\"\n  test \"-d:WV_LazyFlowvar\", \"weave/parallel_for_staged.nim\"\n  test \"-d:WV_LazyFlowvar\", \"weave/parallel_reduce.nim\"\n\n  test \"-d:WV_LazyFlowvar\", \"tests/test_background_jobs.nim\"\n\n  when not defined(windows): # Does not support erand48\n    test \"\", \"demos/raytracing/smallpt.nim\"\n\n  test \"\", \"benchmarks/dfs/weave_dfs.nim\"\n  test \"\", \"benchmarks/fibonacci/weave_fib.nim\"\n  test \"\", \"benchmarks/heat/weave_heat.nim\"\n  test \"\", \"benchmarks/matrix_transposition/weave_transposes.nim\"\n  test \"\", \"benchmarks/nqueens/weave_nqueens.nim\"\n  when not defined(windows): # Need \"time\" support - https://github.com/mratsim/weave/issues/60\n    test \"\", \"benchmarks/single_task_producer/weave_spc.nim\"\n    test \"\", \"benchmarks/bouncing_producer_consumer/weave_bpc.nim\"\n  when defined(i386) or defined(amd64):\n    if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n      # TODO: syncRoot doesn't block for Pledges - https://github.com/mratsim/weave/issues/97\n      # test \"\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave.nim\"\n      test \"\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave_nestable.nim\"\n\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/dfs/weave_dfs.nim\"\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/fibonacci/weave_fib.nim\"\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/heat/weave_heat.nim\"\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/matrix_transposition/weave_transposes.nim\"\n  test \"-d:WV_LazyFlowvar\", \"benchmarks/nqueens/weave_nqueens.nim\"\n  when not defined(windows): # Timer impl missing\n    test \"-d:WV_LazyFlowvar\", \"benchmarks/single_task_producer/weave_spc.nim\"\n    test \"-d:WV_LazyFlowvar\", \"benchmarks/bouncing_producer_consumer/weave_bpc.nim\"\n  when defined(i386) or defined(amd64):\n    if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n      # TODO: syncRoot doesn't block for Pledges - https://github.com/mratsim/weave/issues/97\n      # test \"-d:WV_LazyFlowvar\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave.nim\"\n      test \"-d:WV_LazyFlowvar\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave_nestable.nim\"\n\n  # Full test that combine everything:\n  # - Nested parallelFor + parallelStrided\n  # - spawn\n  # - spawnDelayed by pledges\n  # - syncScope\n  when false: # TODO, not sure why this stalls why the gemm_weave_nestable don't - https://github.com/mratsim/weave/pull/150\n    when not defined(windows) and (defined(i386) or defined(amd64)):\n      if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n        test \"-d:danger\", \"benchmarks/matmul_gemm_blas/test_gemm_output.nim\"\n\ntask test_gc_arc, \"Run Weave tests with --gc:arc\":\n  test \"--gc:arc\", \"weave/cross_thread_com/channels_spsc_single.nim\"\n  test \"--gc:arc\", \"weave/cross_thread_com/channels_spsc_single_ptr.nim\"\n  test \"--gc:arc\", \"weave/cross_thread_com/channels_mpsc_unbounded_batch.nim\"\n  test \"--gc:arc\", \"weave/cross_thread_com/flow_events.nim\"\n\n  test \"--gc:arc\", \"weave/datatypes/binary_worker_trees.nim\"\n  test \"--gc:arc\", \"weave/datatypes/bounded_queues.nim\"\n  test \"--gc:arc\", \"weave/datatypes/prell_deques.nim\"\n  test \"--gc:arc\", \"weave/datatypes/sparsesets.nim\"\n\n  test \"--gc:arc\", \"weave/memory/lookaside_lists.nim\"\n  test \"--gc:arc\", \"weave/memory/memory_pools.nim\"\n  test \"--gc:arc\", \"weave/memory/persistacks.nim\"\n\n  test \"--gc:arc\", \"weave/parallel_tasks.nim\"\n  test \"--gc:arc\", \"weave/parallel_for.nim\"\n  test \"--gc:arc\", \"weave/parallel_for_staged.nim\"\n  test \"--gc:arc\", \"weave/parallel_reduce.nim\"\n\n  test \"--gc:arc\", \"tests/test_background_jobs.nim\"\n  test \"--gc:arc\", \"tests/test_auxiliary_procs.nim\"\n\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"weave/parallel_tasks.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"weave/parallel_for.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"weave/parallel_for_staged.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"weave/parallel_reduce.nim\"\n\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"tests/test_background_jobs.nim\"\n\n  when not defined(windows):\n    test \"--gc:arc\", \"demos/raytracing/smallpt.nim\"\n\n  test \"--gc:arc\", \"benchmarks/dfs/weave_dfs.nim\"\n  test \"--gc:arc\", \"benchmarks/fibonacci/weave_fib.nim\"\n  test \"--gc:arc\", \"benchmarks/heat/weave_heat.nim\"\n  test \"--gc:arc\", \"benchmarks/matrix_transposition/weave_transposes.nim\"\n  test \"--gc:arc\", \"benchmarks/nqueens/weave_nqueens.nim\"\n  when not defined(windows): # Need \"time\" support - https://github.com/mratsim/weave/issues/60\n    test \"--gc:arc\", \"benchmarks/single_task_producer/weave_spc.nim\"\n    test \"--gc:arc\", \"benchmarks/bouncing_producer_consumer/weave_bpc.nim\"\n  when defined(i386) or defined(amd64):\n    if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n      # TODO: syncRoot doesn't block for Pledges - https://github.com/mratsim/weave/issues/97\n      # test \"--gc:arc\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave.nim\"\n      test \"--gc:arc\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave_nestable.nim\"\n\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/dfs/weave_dfs.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/fibonacci/weave_fib.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/heat/weave_heat.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/matrix_transposition/weave_transposes.nim\"\n  test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/nqueens/weave_nqueens.nim\"\n  when not defined(windows): # Timer impl missing\n    test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/single_task_producer/weave_spc.nim\"\n    test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/bouncing_producer_consumer/weave_bpc.nim\"\n  when defined(i386) or defined(amd64):\n    if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n      # TODO: syncRoot doesn't block for Pledges - https://github.com/mratsim/weave/issues/97\n      # test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave.nim\"\n      test \"--gc:arc -d:WV_LazyFlowvar\", \"benchmarks/matmul_gemm_blas/gemm_pure_nim/gemm_weave_nestable.nim\"\n\n  # Full test that combine everything:\n  # - Nested parallelFor + parallelStrided\n  # - spawn\n  # - spawnDelayed by pledges\n  # - syncScope\n  when false: # TODO, not sure why this stalls why the gemm_weave_nestable don't - https://github.com/mratsim/weave/pull/150\n    when not defined(windows) and (defined(i386) or defined(amd64)):\n      if not existsEnv\"TEST_LANG\" or getEnv\"TEST_LANG\" != \"cpp\":\n        test \"-d:danger\", \"benchmarks/matmul_gemm_blas/test_gemm_output.nim\"\n\ntask gen_book, \"Generate Weave documentation\":\n  exec \"mdbook build docs\"\n\ntask publish_book, \"Publish book on Github Pages\":\n  exec \"\"\"\n    git worktree add tmp-book gh-pages && \\\n    rm -rf tmp-book/* && \\\n    cp -a docs/book/* tmp-book/ && \\\n    cd tmp-book && \\\n    git add . && { \\\n      git commit -m \"publish book\" && \\\n      git push origin gh-pages || true; } && \\\n    cd .. && \\\n    git worktree remove -f tmp-book && \\\n    rm -rf tmp-book\n  \"\"\"\n",
"https://raw.githubusercontent.com/Araq/lazy_rest/master/lazy_rest.nimble": "[Package]\nname          = \"lazy_rest\"\nversion       = \"0.2.3\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Simple rst (reStructuredText) HTML generation from Nimrod or C with some extras\"\"\"\nlicense       = \"MIT\"\nbin = \"lazy_rest_badger.exe\"\n\ninstallDirs = \"\"\"\n\ndocs\nlazy_rest_pkg\nresources\n\n\"\"\"\n\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\nlazy_rest.nim\nlazy_rest_badger.nim\nlazy_rest_badger.nimrod.cfg\nlazy_rest_c_api.nim\nnakefile.nim\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\nnake >= 1.2\nargument_parser >= 0.2\nhttps://github.com/gradha/badger_bits.git >= 0.2.2\n\"\"\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/daemonize.nim/master/daemonize.nimble": "[Package]\nname          = \"daemonize\"\nversion       = \"0.0.5\"\nauthor        = \"Huy Doan\"\ndescription   = \"This library makes your code run as a daemon process on Unix-like systems\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.20.0\"\n",
"https://github.com/genotrance/nimbass": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance\"\ndescription   = \"Bass wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.6.2\"\n\nimport os, strformat\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\": buildDocs(@[\"nimbass/bass.nim\", \"nimbass/bass_fx.nim\"], \"build/htmldocs\")\nelse:\n  task docs, \"Do nothing\": discard\n\ntask test, \"Test nimbass\":\n  withDir(\"tests\"):\n    exec \"nim c -f -d:nimDebugDlOpen --path:.. -r basstest.nim\"\n",
"https://github.com/JohnAD/ur": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"John Dupuy\"\ndescription   = \"Universal Result objects\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/bio-nim/nim-strfmt": "# Package\n\nversion     = \"0.10.0\"\nauthor      = \"Frank Fischer\"\ndescription = \"A string formatting library inspired by Python's `format`\"\nlicense     = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/brentp/hts-nim": "# Package\n\nversion       = \"0.3.14\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"hts (bam/sam) for nim\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\"]\nskipFiles = @[\"teloage.nim\"]\n\nimport os, strutils\n\ntask test, \"run the tests\":\n  exec \"nim c  -d:useSysAssert -d:useGcAssert --lineDir:on --debuginfo -r tests/all\"\n\n#before test:\n#  exec \"c2nim src/hts/private/hts_concat.h\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"hts\")\n  #exec \"nim doc2 --verbosity:0 --hints:off -o:docs/index.html  src/hts.nim\"\n  for file in listfiles(\"src/hts\"):\n    if file.endswith(\"value.nim\"): continue\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n\n",
"https://raw.githubusercontent.com/def-/nim-platformer/master/platformer.nimble": "# Package\n\nversion       = \"1.1\"\nauthor        = \"Dennis Felsing\"\ndescription   = \"An example 2D platform game with SDL2\"\nlicense       = \"MIT\"\n\nbin           = @[\"platformer\"]\n\n# Dependencies\n\nrequires \"nim >= 0.10.0\"\nrequires \"sdl2 >= 1.1\"\nrequires \"strfmt >= 0.6\"\nrequires \"basic2d >= 0.1.0\"\n\ntask tests, \"Compile all tutorial steps\":\n  for i in 1..9:\n    exec \"nim c tutorial/platformer_part\" & $i\n",
"https://github.com/Amrykid/nim-locale/": "#Package\n\nversion = \"0.1\"\nauthor = \"Amrykid\"\ndescription = \"A simple library for localizing Nimrod applications.\"\nlicense = \"MIT\"\n\nskipFiles = @[\"locale.xml\", \"LocaleData.cfg\"]\n\n#Dep\n\nrequires \"nimrod >= 0.9.4\"\n",
"https://raw.githubusercontent.com/rokups/nim-ustring/master/ustring.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Rokas Kupstys\"\ndescription   = \"utf-8 string\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"utf8rewind\"]\ninstallFiles  = @[\"ustring.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/barcharcraz/Phosphor/master/Phosphor.nimble": "[Package]\nname = \"Phosphor\"\nversion = \"0.1.0\"\nauthor = \"Charlie Barto\"\ndescription = \"\"\"Phosphor is a library that uses light metaprogramming to make\n                 writing openGL code eaiser\"\"\"\nlicense = \"MIT\"\n\nsrcDir = src\n\n[Deps]\nRequires: \"opengl\"\n",
"https://raw.githubusercontent.com/stisa/ajax/master/ajax.nimble": "# Package\nversion       = \"0.1.1\"\nauthor        = \"stisa\"\ndescription   = \"Wrapper for js ajax\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires: \"nim >= 1.4.0\"\n\nimport ospaths\n\ntask builddocs, \"Build docs folder - examples and documentation\":\n  exec(\"exampler\") # custom utility to generate example pages\n  exec(\"nim doc2 -o:docs/ajax.html src/ajax.nim\")\n  withdir \"examples\":\n    for file in listfiles(\".\"):\n      if splitfile(file).ext == \".nim\":\n        exec \"nim js -o:../docs/examples/\"&file.changefileext(\"js\")&\" \"&file\n",
"https://github.com/LemonBoy/compactdict": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"LemonBoy\"\ndescription   = \"A compact dictionary implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://raw.githubusercontent.com/mikra01/sharedmempool/master/sharedmempool.nimble": "# Package\nversion = \"0.1.0\"\nauthor = \"Michael Krauter\"\ndescription = \"sharedmemorypool implementation in Nim\"\nlicense = \"MIT\"\nskipDirs = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 0.19.0\"\n\ntask test, \"running tests\":\n  exec \"nim sharedmempool_tests\"",
"https://raw.githubusercontent.com/ThomasTJdev/nim_homeassistant/master/nimha.nimble": "# Package\nversion       = \"0.4.5\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Nim Home Assistant\"\nlicense       = \"GPLv3\"\nbin           = @[\"nimha\"]\nskipDirs      = @[\"private\"]\ninstallDirs   = @[\"config\", \"public\", \"nimhapkg\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.0.4\"\nrequires \"jester 0.4.3\"\nrequires \"httpbeast 0.2.2\"\nrequires \"recaptcha >= 1.0.2\"\nrequires \"bcrypt >= 0.2.1\"\nrequires \"multicast 0.1.4\"\nrequires \"websocket 0.4.1\"\nrequires \"wiringPiNim >= 0.1.0\"\nrequires \"xiaomi >= 0.1.4\"\n\n\nimport distros\n\ntask setup, \"Setup started\":\n  if detectOs(Windows):\n    echo \"Cannot run on Windows\"\n    quit()\n\nbefore install:\n  setupTask()\n\nafter install:\n  echo \"Development: Copy config/nimha_default.cfg to config/nimha_dev.cfg\\n\"\n  echo \"Production:  Copy config/nimha_default.cfg to /etc/nimha/nimha.cfg\\n\"",
"https://github.com/metatexx/nimzend": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Hans Raaf - METATEXX GmbH\"\ndescription   = \"Native Nim Zend API glue for easy PHP extension development.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n",
"https://raw.githubusercontent.com/JeffersonLab/drand48/master/drand48.nimble": "# Package\n\nversion       = \"1.1.2\"\nauthor        = \"Robert Edwards\"\ndescription   = \"Nim implementation of standard unix drand48 random number generator\"\nlicense       = \"BSD clause 3\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Builds\ntask test, \"Run the test suite\":\n  exec \"nim c -r drand48\"\n\ntask docgen, \"Generate the documentation\":\n  exec \"nim doc2 --out:docs/drand48.html drand48.nim\"\n\n",
"https://github.com/akavel/dali": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"Mateusz Czapliński\"\ndescription   = \"Dalvik Assembler/Linker\"\nlicense       = \"AGPL-3.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"patty 0.3.3\"\n",
"https://github.com/joryschossau/bitset": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jory Schossau\"\ndescription   = \"A pure nim version of C++'s std::bitset\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.5.1\"\n\nimport oswalkdir, os, strutils\n\nproc runTests(nimFlags = \"\") =\n\n  for f in oswalkdir.walkDir(\"tests\"):\n    # Run all nim modules starting with \"t\"\n    let sf = f.path.splitFile()\n    if sf.ext == \".nim\" and sf.name.startsWith(\"t\"):\n      exec \"nim c \" & \" -r \" & nimFlags & \" \" & f.path\n\ntask test, \"run tests\":\n  runTests()\n",
"https://raw.githubusercontent.com/nim-lang/cairo/master/cairo.nimble": "# Package\n\nversion = \"1.1.1\"\nauthor       = \"Andreas Rumpf\"\ndescription  = \"Wrapper for cairo, a vector graphics library with display and print output\"\nlicense      = \"MIT\"\n\nsrcDir       = \"src\"\n\n# Deps\n\nrequires \"nim >= 1.0.0\"\n\n\ntask test, \"Tests the tests\":\n  exec \"nim c -r tests/arc\"\n  exec \"nim c -r tests/clip\"\n  exec \"nim c -r tests/clip_image\"\n  exec \"nim c -r tests/curve_to\"\n  exec \"nim c -r tests/dash\"\n  exec \"nim c -r tests/fill_and_stroke\"\n  exec \"nim c -r tests/gradient\"\n  exec \"nim c -r tests/image\"\n  exec \"nim c -r tests/image_pattern\"\n  exec \"nim c -r tests/line_cap\"\n  exec \"nim c -r tests/line_join\"\n  exec \"nim c -r tests/rounded_rectangle\"\n  exec \"nim c -r tests/text\"\n  exec \"nim c -r tests/text_align\"\n",
"https://raw.githubusercontent.com/dom96/analytics/master/analytics.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Allows statistics to be sent to and recorded in Google Analytics.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\nrequires \"uuids >= 0.1.7\"\nrequires \"osinfo >= 0.3.0\"\n",
"https://raw.githubusercontent.com/jackhftang/wyhash.nim/master/wyhash.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jack Tang\"\ndescription   = \"A new awesome nimble package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"wyhash.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    # print current version\n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://raw.githubusercontent.com/capocasa/nim-opus/master/opus.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Carlo Capocasa\"\ndescription   = \"A nim wrapper for the opus audio decoder\"\nlicense       = \"BSD-3-Clause\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"nimterop\"\n\nimport distros\nforeignDep \"cmake\"\n",
"https://github.com/FedericoCeratto/nim-httpauth": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"HTTP Authentication and Authorization\"\nlicense       = \"LGPLv3\"\n\nbin           = @[\"httpauth\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"libsodium\"\n\n# Tested with dependencies:\n# redis 0.3.0\n",
"https://raw.githubusercontent.com/hiteshjasani/nim-d3/master/d3.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Hitesh Jasani\"\ndescription   = \"Nim bindings to D3js\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"js\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\n# Tasks\n\ntask docs, \"Build documentation\":\n  mkDir(\"docs/d3\")\n  exec \"nim doc --project --index:on --outdir:docs src/d3.nim\"\n  exec \"nim buildIndex -o:docs/theindex.html docs\"\n",
"https://github.com/elijahr/lockfreequeues": "# Package\nversion       = \"2.0.0\"\nauthor        = \"Elijah Shaw-Rutschman\"\ndescription   = \"Lock-free queue implementations for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n\n# Tasks\ntask make_docs, \"Generate documentation\":\n  exec \"sh bin/make_docs.sh\"\n\ntask test, \"Runs the test suite (C & C++)\":\n  exec \"nim c -r -f tests/test.nim\"\n  exec \"nim cpp -r -f tests/test.nim\"\n\ntask examples, \"Runs the examples\":\n  exec \"nim c -r -f examples/mupmuc.nim\"\n  exec \"nim c -r -f examples/mupsic.nim\"\n  exec \"nim c -r -f examples/sipsic.nim\"\n",
"https://github.com/Himujjal/asciitextNim": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Himujjal\"\ndescription   = \"Ascii Text allows you to print large ASCII fonts for the console and for the web\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/alaviss/dnsstamps": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Leorize\"\ndescription   = \"An implementation of DNS server stamps in Nim\"\nlicense       = \"MPL-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/yglukhov/jsbind/master/jsbind.nimble": "# Package\nversion       = \"0.1.1\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Bind to JavaScript and Emscripten environments\"\nlicense       = \"MIT\"\n\nrequires \"https://github.com/yglukhov/wasmrt\"\n\ntask tests, \"Run tests\":\n    exec \"nim c -d:emscripten tests/test.nim\"\n    exec \"node test.js\"\n",
"https://raw.githubusercontent.com/SolitudeSF/tam/master/tam.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Tales of Maj'Eyal addon manager\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"tam\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"cligen >= 1.0.0\", \"nimquery >= 1.2.2\", \"tiny_sqlite#3fa5c0c8c14105be8a8f9f2bd93b60678d44a33f\"\n",
"https://github.com/FedericoCeratto/nim-i3ipc": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"i3 IPC client\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://raw.githubusercontent.com/jrenner/nim-simplepng/master/simplepng.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jon Renner\"\ndescription   = \"simple png writer\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"nimPNG\"\n",
"https://raw.githubusercontent.com/OpenSystemsLab/tempfile.nim/master/tempfile.nimble": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"Huy Doan\"\ndescription   = \"Temporary files and folders\"\nlicense       = \"MIT\"\n\nbin = @[\"tempfile_seeder\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://api.github.com/repos/nimious/io-serialport/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"ac27ebe72c17dce8ad305a838b614cbf4df7212b\",\"size\":69,\"url\":\"https://api.github.com/repos/nimious/serialport/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nimious/serialport/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nimious/serialport/git/blobs/ac27ebe72c17dce8ad305a838b614cbf4df7212b\",\"download_url\":\"https://raw.githubusercontent.com/nimious/serialport/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/serialport/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nimious/serialport/git/blobs/ac27ebe72c17dce8ad305a838b614cbf4df7212b\",\"html\":\"https://github.com/nimious/serialport/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"size\":1076,\"url\":\"https://api.github.com/repos/nimious/serialport/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nimious/serialport/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nimious/serialport/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"download_url\":\"https://raw.githubusercontent.com/nimious/serialport/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/serialport/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nimious/serialport/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"html\":\"https://github.com/nimious/serialport/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"4c940feb1e0f36ca15569d5290e304d40aeee9eb\",\"size\":1903,\"url\":\"https://api.github.com/repos/nimious/serialport/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nimious/serialport/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nimious/serialport/git/blobs/4c940feb1e0f36ca15569d5290e304d40aeee9eb\",\"download_url\":\"https://raw.githubusercontent.com/nimious/serialport/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/serialport/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nimious/serialport/git/blobs/4c940feb1e0f36ca15569d5290e304d40aeee9eb\",\"html\":\"https://github.com/nimious/serialport/blob/master/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"00c8c7f1adfd80b1451759bc28cc08a30a2c872c\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/serialport/contents/docs?ref=master\",\"html_url\":\"https://github.com/nimious/serialport/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/nimious/serialport/git/trees/00c8c7f1adfd80b1451759bc28cc08a30a2c872c\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/serialport/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/nimious/serialport/git/trees/00c8c7f1adfd80b1451759bc28cc08a30a2c872c\",\"html\":\"https://github.com/nimious/serialport/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"56ae0036b7fe0bb7a706d8912fb3bedac7986e9d\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/serialport/contents/examples?ref=master\",\"html_url\":\"https://github.com/nimious/serialport/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/nimious/serialport/git/trees/56ae0036b7fe0bb7a706d8912fb3bedac7986e9d\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/serialport/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/nimious/serialport/git/trees/56ae0036b7fe0bb7a706d8912fb3bedac7986e9d\",\"html\":\"https://github.com/nimious/serialport/tree/master/examples\"}},{\"name\":\"nim.cfg\",\"path\":\"nim.cfg\",\"sha\":\"42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"size\":13,\"url\":\"https://api.github.com/repos/nimious/serialport/contents/nim.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/serialport/blob/master/nim.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/serialport/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"download_url\":\"https://raw.githubusercontent.com/nimious/serialport/master/nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/serialport/contents/nim.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/serialport/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"html\":\"https://github.com/nimious/serialport/blob/master/nim.cfg\"}},{\"name\":\"nimdoc.cfg\",\"path\":\"nimdoc.cfg\",\"sha\":\"81f705e29356b222eb3ade77d9b9c773d69b6b5d\",\"size\":110,\"url\":\"https://api.github.com/repos/nimious/serialport/contents/nimdoc.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/serialport/blob/master/nimdoc.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/serialport/git/blobs/81f705e29356b222eb3ade77d9b9c773d69b6b5d\",\"download_url\":\"https://raw.githubusercontent.com/nimious/serialport/master/nimdoc.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/serialport/contents/nimdoc.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/serialport/git/blobs/81f705e29356b222eb3ade77d9b9c773d69b6b5d\",\"html\":\"https://github.com/nimious/serialport/blob/master/nimdoc.cfg\"}},{\"name\":\"serialport.nimble\",\"path\":\"serialport.nimble\",\"sha\":\"c632fd5257e3413e7ddf48276ad0ebf97241be2e\",\"size\":247,\"url\":\"https://api.github.com/repos/nimious/serialport/contents/serialport.nimble?ref=master\",\"html_url\":\"https://github.com/nimious/serialport/blob/master/serialport.nimble\",\"git_url\":\"https://api.github.com/repos/nimious/serialport/git/blobs/c632fd5257e3413e7ddf48276ad0ebf97241be2e\",\"download_url\":\"https://raw.githubusercontent.com/nimious/serialport/master/serialport.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/serialport/contents/serialport.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nimious/serialport/git/blobs/c632fd5257e3413e7ddf48276ad0ebf97241be2e\",\"html\":\"https://github.com/nimious/serialport/blob/master/serialport.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"50843a2d4bd2f36a20293ed20dcb9ff447ae3b6a\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/serialport/contents/src?ref=master\",\"html_url\":\"https://github.com/nimious/serialport/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nimious/serialport/git/trees/50843a2d4bd2f36a20293ed20dcb9ff447ae3b6a\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/serialport/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nimious/serialport/git/trees/50843a2d4bd2f36a20293ed20dcb9ff447ae3b6a\",\"html\":\"https://github.com/nimious/serialport/tree/master/src\"}}]",
"https://raw.githubusercontent.com/watzon/github-api-nim/master/github_api.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Chris Watson\"\ndescription   = \"Connector for the GitHub API v3\"\nlicense       = \"WTFPL\"\n\nskipDirs      = @[\"test\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://raw.githubusercontent.com/nim-lang/gtk2/master/gtk2.nimble": "[Package]\nname: \"gtk2\"\nversion: \"1.4\"\nauthor: \"Nim developers\"\ndescription: \"Wrapper for gtk2, a feature rich toolkit for creating graphical user interfaces.\"\nlicense: \"MIT\"\n\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nim > 0.9.2, cairo\"\n",
"https://api.github.com/repos/jlp765/parsefixed/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"size\":10,\"url\":\"https://api.github.com/repos/jlp765/parsefixed/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/jlp765/parsefixed/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"download_url\":\"https://raw.githubusercontent.com/jlp765/parsefixed/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jlp765/parsefixed/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"html\":\"https://github.com/jlp765/parsefixed/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"ea649a79842a1b6c6fafd5ec7e9bffcbb890c76f\",\"size\":1074,\"url\":\"https://api.github.com/repos/jlp765/parsefixed/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/jlp765/parsefixed/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/ea649a79842a1b6c6fafd5ec7e9bffcbb890c76f\",\"download_url\":\"https://raw.githubusercontent.com/jlp765/parsefixed/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jlp765/parsefixed/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/ea649a79842a1b6c6fafd5ec7e9bffcbb890c76f\",\"html\":\"https://github.com/jlp765/parsefixed/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"dbf39c9635e8642968fb7be4207f3991091bd5fe\",\"size\":839,\"url\":\"https://api.github.com/repos/jlp765/parsefixed/contents/README.md?ref=master\",\"html_url\":\"https://github.com/jlp765/parsefixed/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/dbf39c9635e8642968fb7be4207f3991091bd5fe\",\"download_url\":\"https://raw.githubusercontent.com/jlp765/parsefixed/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jlp765/parsefixed/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/dbf39c9635e8642968fb7be4207f3991091bd5fe\",\"html\":\"https://github.com/jlp765/parsefixed/blob/master/README.md\"}},{\"name\":\"parsefixed.nim\",\"path\":\"parsefixed.nim\",\"sha\":\"c949bf66284fc6a76e1793b12dfa7e1ebd41a59d\",\"size\":7187,\"url\":\"https://api.github.com/repos/jlp765/parsefixed/contents/parsefixed.nim?ref=master\",\"html_url\":\"https://github.com/jlp765/parsefixed/blob/master/parsefixed.nim\",\"git_url\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/c949bf66284fc6a76e1793b12dfa7e1ebd41a59d\",\"download_url\":\"https://raw.githubusercontent.com/jlp765/parsefixed/master/parsefixed.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jlp765/parsefixed/contents/parsefixed.nim?ref=master\",\"git\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/c949bf66284fc6a76e1793b12dfa7e1ebd41a59d\",\"html\":\"https://github.com/jlp765/parsefixed/blob/master/parsefixed.nim\"}},{\"name\":\"parsefixed.nimble\",\"path\":\"parsefixed.nimble\",\"sha\":\"fe0f57501c25925acf05a6aaeb686f5a16f0eb35\",\"size\":182,\"url\":\"https://api.github.com/repos/jlp765/parsefixed/contents/parsefixed.nimble?ref=master\",\"html_url\":\"https://github.com/jlp765/parsefixed/blob/master/parsefixed.nimble\",\"git_url\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/fe0f57501c25925acf05a6aaeb686f5a16f0eb35\",\"download_url\":\"https://raw.githubusercontent.com/jlp765/parsefixed/master/parsefixed.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jlp765/parsefixed/contents/parsefixed.nimble?ref=master\",\"git\":\"https://api.github.com/repos/jlp765/parsefixed/git/blobs/fe0f57501c25925acf05a6aaeb686f5a16f0eb35\",\"html\":\"https://github.com/jlp765/parsefixed/blob/master/parsefixed.nimble\"}}]",
"https://raw.githubusercontent.com/DangerOnTheRanger/nimatic/master/nimatic.nimble": "# package\n\nversion = \"0.2.0\"\nauthor = \"Kermit Alexander II\"\ndescription = \"A static site generator written in Nim\"\nlicense = \"2-clause BSD\"\nsrcDir = \"src\"\nbin = @[\"nimatic\"]\nskipExt = @[\"nim\"]\n\n# dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"markdown >= 0.8.0\"\n",
"https://github.com/oprypin/nim-csfml": "[Package]\nname: \"csfml\"\nversion: \"2.5.0\"\nauthor: \"Oleh Prypin\"\ndescription: \"Bindings for Simple and Fast Multimedia Library (through CSFML)\"\nlicense: \"zlib\"\nsrcDir: \"src\"\n[Deps]\nrequires: \"nim >= 0.17.0\"\n",
"https://raw.githubusercontent.com/Vindaar/LatexDSL/master/latexdsl.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Vindaar\"\ndescription   = \"A DSL to write LaTeX in Nim. No idea who wants that.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/Skrylar/sksbox/master/sksbox.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Skrylar\"\ndescription   = \"A Nim-native implementation of the sBOX file format.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\nskipDirs = @[\"examples\"]\n\n",
"https://raw.githubusercontent.com/Yardanico/nim-strenc/master/strenc.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Danil Yarantsev (Yardanico)\"\ndescription   = \"A library to automatically encrypt all string constants in your programs\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/alehander42/breeze": "version         = \"0.0.5\"\npackageName     = \"breeze\"\nauthor          = \"Alexander Ivanov\"\ndescription     = \"macro dsl\"\nlicense         = \"MIT\"\n\nrequires \"nim >= 0.16.1\"\n",
"https://raw.githubusercontent.com/Araq/dropbox_filename_sanitizer/master//dropbox_filename_sanitizer.nimble": "[Package]\nname          = \"dropbox_filename_sanitizer\"\nversion       = \"0.4.1\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Mangles filename for dropbox compatibility.\"\"\"\nlicense       = \"MIT\"\nbin           = \"dropbox_filename_sanitizer\"\n\n\ninstallDirs = \"\"\"\n\ndbfs_pkg\ndocs\nlazy_rest_pkg\n\n\"\"\"\n\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\nnakefile.nim\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nnake >= 1.2\nargument_parser >= 0.1.2\nhttps://github.com/gradha/badger_bits.git >= 0.2.5\nnim >= 0.10.2\n\n\n\"\"\"\n",
"https://raw.githubusercontent.com/bunkford/wChart/master/wChart.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"Chart plugin for wNim.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"docs\"]\n\n# Dependencies\n\nrequires: \"nim >= 0.20.0\"\nrequires: \"wNim >= 0.9.0\"",
"https://github.com/skrylar/skbintext": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joshua Cearley\"\ndescription   = \"A Binary<->Text converter.\"\nlicense       = \"MPL-2\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/akiradeveloper/nim-fuse.git": "[Package]\nname          = \"fuse\"\nversion       = \"0.1.0\"\nauthor        = \"Akira Hayakawa\"\ndescription   = \"A FUSE binding for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/nimious/io-gles.git": "[Package]\nname: \"gles\"\nversion: \"0.1\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for OpenGL ES, the embedded 3D graphics library\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://github.com/SolitudeSF/xcm": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Color management utility for X\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"xcm\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"x11#74cbb2c73be7f4b079b6f4edbadc1d1f00d9af15\", \"cligen >= 0.9.41\"\n",
"https://raw.githubusercontent.com/achesak/nim-gitapi/master/gitapi.nimble": "[Package]\nname = \"gitapi\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with git version control software\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/nitely/nim-hpack/master/hpack.nimble": "# Package\n\nversion = \"0.2.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"HPACK (Header Compression for HTTP/2)\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipDirs = @[\"tests\"]\n\nrequires \"nim >= 0.19.0\"\n\ntask gen, \"Gen data\":\n  exec \"nim c -r gen/huffman.nim\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/hpack/hcollections.nim\"\n  exec \"nim c -r src/hpack/encoder.nim\"\n  exec \"nim c -r src/hpack/huffman_encoder.nim\"\n  exec \"nim c -r src/hpack/decoder.nim\"\n  exec \"nim c -r src/hpack/huffman_decoder.nim\"\n  exec \"nim c -r tests/tests.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc2 -o:./docs --project ./src/hpack.nim\"\n  exec \"mv ./docs/hpack.html ./docs/index.html\"\n  exec \"rm -fr ./docs/*/*_data.html\"\n",
"https://github.com/calcit-lang/ternary-tree": "# Package\n\nversion       = \"0.1.33\"\nauthor        = \"jiyinyiyong\"\ndescription   = \"Ternary tree of list data structure\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n\ntask t, \"Runs the test suite\":\n  # exec \"nim c --hints:off -r tests/test_revision\"\n  exec \"nim c --hints:off -r tests/test_list\"\n  exec \"nim c --hints:off -r tests/test_map\"\n\ntask perf, \"try large file\":\n  exec \"nim compile --verbosity:0 --profiler:on --stackTrace:on --hints:off -r tests/costs\"\n",
"https://github.com/misebox/pdba": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"misebox\"\ndescription   = \"A postgres DB adapter for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipdirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 1.1.1\"\nrequires \"yaml >= 0.13.1\"\nrequires \"ndb >= 0.19.8\"\n\ntask examples, \"compile and run examples\":\n  exec \"cd examples && docker-compose up -d\"\n  exec \"nim c -r examples/sample_conn.nim\"\n  exec \"nim c -r examples/sample_ddl.nim\"\n  exec \"nim c -r examples/sample_dml.nim\"\n  exec \"cd examples && docker-compose down\"\n",
"https://api.github.com/repos/nimious/io-sixense/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"74d2c87a2f694110ea65a41c66f9e487c91cca4b\",\"size\":60,\"url\":\"https://api.github.com/repos/nimious/sixense/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nimious/sixense/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nimious/sixense/git/blobs/74d2c87a2f694110ea65a41c66f9e487c91cca4b\",\"download_url\":\"https://raw.githubusercontent.com/nimious/sixense/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/sixense/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nimious/sixense/git/blobs/74d2c87a2f694110ea65a41c66f9e487c91cca4b\",\"html\":\"https://github.com/nimious/sixense/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"size\":1076,\"url\":\"https://api.github.com/repos/nimious/sixense/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nimious/sixense/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nimious/sixense/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"download_url\":\"https://raw.githubusercontent.com/nimious/sixense/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/sixense/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nimious/sixense/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"html\":\"https://github.com/nimious/sixense/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"050ce403a7407814e8c8be2d0a9aea4c038aa34e\",\"size\":1208,\"url\":\"https://api.github.com/repos/nimious/sixense/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nimious/sixense/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nimious/sixense/git/blobs/050ce403a7407814e8c8be2d0a9aea4c038aa34e\",\"download_url\":\"https://raw.githubusercontent.com/nimious/sixense/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/sixense/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nimious/sixense/git/blobs/050ce403a7407814e8c8be2d0a9aea4c038aa34e\",\"html\":\"https://github.com/nimious/sixense/blob/master/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"0c3d093e47a155d3fc0bcc967402089cf258e759\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/sixense/contents/docs?ref=master\",\"html_url\":\"https://github.com/nimious/sixense/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/nimious/sixense/git/trees/0c3d093e47a155d3fc0bcc967402089cf258e759\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/sixense/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/nimious/sixense/git/trees/0c3d093e47a155d3fc0bcc967402089cf258e759\",\"html\":\"https://github.com/nimious/sixense/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"8de7d93aab003cef1db5ebe86d65cfa9b3a9fb23\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/sixense/contents/examples?ref=master\",\"html_url\":\"https://github.com/nimious/sixense/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/nimious/sixense/git/trees/8de7d93aab003cef1db5ebe86d65cfa9b3a9fb23\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/sixense/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/nimious/sixense/git/trees/8de7d93aab003cef1db5ebe86d65cfa9b3a9fb23\",\"html\":\"https://github.com/nimious/sixense/tree/master/examples\"}},{\"name\":\"nim.cfg\",\"path\":\"nim.cfg\",\"sha\":\"42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"size\":13,\"url\":\"https://api.github.com/repos/nimious/sixense/contents/nim.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/sixense/blob/master/nim.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/sixense/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"download_url\":\"https://raw.githubusercontent.com/nimious/sixense/master/nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/sixense/contents/nim.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/sixense/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"html\":\"https://github.com/nimious/sixense/blob/master/nim.cfg\"}},{\"name\":\"nimdoc.cfg\",\"path\":\"nimdoc.cfg\",\"sha\":\"a979b66de5eeec08eb0908e4f78406468c6e39ec\",\"size\":104,\"url\":\"https://api.github.com/repos/nimious/sixense/contents/nimdoc.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/sixense/blob/master/nimdoc.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/sixense/git/blobs/a979b66de5eeec08eb0908e4f78406468c6e39ec\",\"download_url\":\"https://raw.githubusercontent.com/nimious/sixense/master/nimdoc.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/sixense/contents/nimdoc.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/sixense/git/blobs/a979b66de5eeec08eb0908e4f78406468c6e39ec\",\"html\":\"https://github.com/nimious/sixense/blob/master/nimdoc.cfg\"}},{\"name\":\"sixense.nimble\",\"path\":\"sixense.nimble\",\"sha\":\"66288c76adc948947d4ef255fb991f238879d51d\",\"size\":200,\"url\":\"https://api.github.com/repos/nimious/sixense/contents/sixense.nimble?ref=master\",\"html_url\":\"https://github.com/nimious/sixense/blob/master/sixense.nimble\",\"git_url\":\"https://api.github.com/repos/nimious/sixense/git/blobs/66288c76adc948947d4ef255fb991f238879d51d\",\"download_url\":\"https://raw.githubusercontent.com/nimious/sixense/master/sixense.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/sixense/contents/sixense.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nimious/sixense/git/blobs/66288c76adc948947d4ef255fb991f238879d51d\",\"html\":\"https://github.com/nimious/sixense/blob/master/sixense.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"bd9db46652ec95f21f82cdc87de764957d862f12\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/sixense/contents/src?ref=master\",\"html_url\":\"https://github.com/nimious/sixense/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nimious/sixense/git/trees/bd9db46652ec95f21f82cdc87de764957d862f12\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/sixense/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nimious/sixense/git/trees/bd9db46652ec95f21f82cdc87de764957d862f12\",\"html\":\"https://github.com/nimious/sixense/tree/master/src\"}}]",
"https://raw.githubusercontent.com/status-im/nim-stew/master/stew.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"stew\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Backports, standard library candidates and small utilities that don't yet deserve their own repository\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"--threads:off\", \"tests/all_tests\"\n  test \"--threads:on -d:nimTypeNames\", \"tests/all_tests\"\n  test \"--threads:on -d:noIntrinsicsBitOpts -d:noIntrinsicsEndians\", \"tests/all_tests\"\n\ntask testvcc, \"Run all tests with vcc compiler\":\n  test \"--cc:vcc --threads:off\", \"tests/all_tests\"\n  test \"--cc:vcc --threads:on -d:nimTypeNames\", \"tests/all_tests\"\n  test \"--cc:vcc --threads:on -d:noIntrinsicsBitOpts -d:noIntrinsicsEndians\", \"tests/all_tests\"\n",
"https://raw.githubusercontent.com/t8m8/currying/master/currying.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"t8m8\"\ndescription   = \"Currying Library for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\n",
"https://github.com/jrenner/nim-simplepng": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jon Renner\"\ndescription   = \"simple png writer\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"nimPNG\"\n",
"https://raw.githubusercontent.com/tulayang/nimnode/master/node.nimble": "# Package\nversion = \"0.1.1\"\nauthor = \"Wang Tong\"\ndescription = \"Library for async programming and communication. This Library uses an event-driven, non-blocking I/O model based on libuv. Furthermore, you can use ``Future`` ``async/await`` in the standard library to construct logical workflow to simplify programming tasks.\"\nlicense = \"MIT\"\nskipFiles = @[\"TODO.md\"]\n\n# Dependencies\nrequires \"nim >= 0.17.1\", \"httpkit >= 0.1.0\"",
"https://github.com/Skrylar/skEasing": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Skrylar\"\ndescription   = \"A collection of easing curves for animation purposes.\"\nlicense       = \"BSD\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n",
"https://github.com/soasme/nim-mustache": "# Package\n\nversion       = \"0.3.2\"\nauthor        = \"Ju Lin\"\ndescription   = \"Mustache in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"mustache\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/Nycto/DelaunayNim/master/delaunay.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Nycto\"\ndescription   = \"Delaunay triangulator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[ \"bin\" ]\n\n# Deps\nrequires \"nim >= 1.2.0\"\n\n",
"https://github.com/c6h4clch3/NimSuite": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"c6h4clch3\"\ndescription   = \"a simple test framework for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimsuite\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\ntask start, \"an alias for `nimble run nest`.\":\n  exec(\"nimble run nimsuite\")\n",
"https://raw.githubusercontent.com/sealmove/LZ77/master/lz77.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"Implementation of various LZ77 algorithms\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n",
"https://raw.githubusercontent.com/nim-lang/libsvm_legacy/master/libsvm_legacy.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Libsvm wrapper rescued from the stdlib.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/jiro4989/alignment/master/alignment.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"alignment is a library to align strings.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"eastasianwidth >= 1.1.0\"\n\ntask docs, \"Generate documents\":\n  exec \"nimble doc src/alignment.nim -o:docs/alignment.html\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble install -Y\"\n  exec \"nimble docs -Y\"\n  exec \"nimble test -Y\"\n",
"https://raw.githubusercontent.com/status-im/nim-nat-traversal/master/nat_traversal.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"nat_traversal\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"miniupnpc and libnatpmp wrapper\"\nlicense       = \"Apache License 2.0 or MIT\"\ninstallDirs   = @[\"vendor\"]\n\n### Dependencies\nrequires \"nim >= 0.19.0\", \"stew\"\n\nproc compileStaticLibraries() =\n  var cc = getEnv(\"CC\", \"\")\n  if cc.len == 0:\n    cc = \"gcc\"\n    putEnv(\"CC\", cc)\n\n  withDir \"vendor/miniupnp/miniupnpc\":\n    when defined(windows):\n      exec(\"mingw32-make -f Makefile.mingw libminiupnpc.a\")\n    else:\n      exec(\"make libminiupnpc.a\")\n  withDir \"vendor/libnatpmp-upstream\":\n    when defined(windows):\n      # We really need to override CC on the Make command line, here, because of:\n      # https://github.com/miniupnp/libnatpmp/blob/4536032ae32268a45c073a4d5e91bbab4534773a/Makefile#L51\n      exec(\"mingw32-make CC=\\\"\" & cc & \"\\\" CFLAGS=\\\"-Wall -Os -DWIN32 -DNATPMP_STATICLIB -DENABLE_STRNATPMPERR -DNATPMP_MAX_RETRIES=4\\\" libnatpmp.a\")\n    else:\n      exec(\"make CFLAGS=\\\"-Wall -Os -DENABLE_STRNATPMPERR -DNATPMP_MAX_RETRIES=4\\\" libnatpmp.a\")\n\ntask buildBundledLibs, \"build bundled libraries\":\n  compileStaticLibraries()\n\nbefore install:\n  compileStaticLibraries()\n\n",
"https://raw.githubusercontent.com/ba0f3/libproxy.nim/master/proxyproto.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"PROXY Protocol enabler for aged programs\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://github.com/2KAbhishek/nimfcuk": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Abhishek Keshri\"\ndescription   = \"A brainfuck interpreter & compiler implemented in nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"nimfcuk\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"docopt >= 0.6.8\"\n",
"https://raw.githubusercontent.com/achesak/nim-epub/master/epub.nimble": "[Package]\nname = \"epub\"\nversion = \"0.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Module for working with EPUB e-book files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim>= 0.10.2\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-hackpad/master/hackpad.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Hackathon Web Scratchpad for teaching Nim on events using Wifi with limited or no Internet\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"hackpad\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"jester\"\nrequires \"zip\"\n",
"https://api.github.com/repos/dfdeshom/nimlz4/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"size\":10,\"url\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimlz4/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimlz4/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"html\":\"https://github.com/dfdeshom/nimlz4/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"c1f2b8e2a530886a7c38b6d857d35020866045da\",\"size\":1300,\"url\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimlz4/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/c1f2b8e2a530886a7c38b6d857d35020866045da\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimlz4/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/c1f2b8e2a530886a7c38b6d857d35020866045da\",\"html\":\"https://github.com/dfdeshom/nimlz4/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"d66668ce7704922d55e973bef8b6546bdd30a7a2\",\"size\":790,\"url\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/README.md?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimlz4/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/d66668ce7704922d55e973bef8b6546bdd30a7a2\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimlz4/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/d66668ce7704922d55e973bef8b6546bdd30a7a2\",\"html\":\"https://github.com/dfdeshom/nimlz4/blob/master/README.md\"}},{\"name\":\"clz4\",\"path\":\"clz4\",\"sha\":\"1e0351f56833b6c5609bb94eecbbab205f198d04\",\"size\":0,\"url\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/clz4?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimlz4/tree/master/clz4\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/trees/1e0351f56833b6c5609bb94eecbbab205f198d04\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/clz4?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/trees/1e0351f56833b6c5609bb94eecbbab205f198d04\",\"html\":\"https://github.com/dfdeshom/nimlz4/tree/master/clz4\"}},{\"name\":\"lz4.nim\",\"path\":\"lz4.nim\",\"sha\":\"c882ac1200e265b6b7a131da5275ca0e5b9b6d75\",\"size\":11697,\"url\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/lz4.nim?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimlz4/blob/master/lz4.nim\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/c882ac1200e265b6b7a131da5275ca0e5b9b6d75\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimlz4/master/lz4.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/lz4.nim?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/c882ac1200e265b6b7a131da5275ca0e5b9b6d75\",\"html\":\"https://github.com/dfdeshom/nimlz4/blob/master/lz4.nim\"}},{\"name\":\"nimlz4.nimble\",\"path\":\"nimlz4.nimble\",\"sha\":\"91c728ae95b81afc0ae480e212d25f21b6eebb47\",\"size\":202,\"url\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/nimlz4.nimble?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimlz4/blob/master/nimlz4.nimble\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/91c728ae95b81afc0ae480e212d25f21b6eebb47\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimlz4/master/nimlz4.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/nimlz4.nimble?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/91c728ae95b81afc0ae480e212d25f21b6eebb47\",\"html\":\"https://github.com/dfdeshom/nimlz4/blob/master/nimlz4.nimble\"}},{\"name\":\"test.nim\",\"path\":\"test.nim\",\"sha\":\"634ae19ac3058b1b612da8356632d9b0244597ba\",\"size\":1232,\"url\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/test.nim?ref=master\",\"html_url\":\"https://github.com/dfdeshom/nimlz4/blob/master/test.nim\",\"git_url\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/634ae19ac3058b1b612da8356632d9b0244597ba\",\"download_url\":\"https://raw.githubusercontent.com/dfdeshom/nimlz4/master/test.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/dfdeshom/nimlz4/contents/test.nim?ref=master\",\"git\":\"https://api.github.com/repos/dfdeshom/nimlz4/git/blobs/634ae19ac3058b1b612da8356632d9b0244597ba\",\"html\":\"https://github.com/dfdeshom/nimlz4/blob/master/test.nim\"}}]",
"https://github.com/PMunch/ansiparse": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"PMunch\"\ndescription   = \"A package to read data and parse it into ANSI escape characters\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/AndreiRegiani/INim/master/inim.nimble": "# Package\n\nskipDirs      = @[\"tests\"]\nversion       = \"0.6.1\"\nauthor        = \"Andrei Regiani\"\ndescription   = \"Interactive Nim Shell / REPL / Playground\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"inimpkg\"]\ninstallExt    = @[\"nim\"]\nbin           = @[\"inim\"]\n\n# Dependencies\n\nrequires \"cligen >= 1.2.0\"\n\nrequires \"noise >= 0.1.4\"\n\ntask test, \"Run all tests\":\n  exec \"mkdir -p bin\"\n  exec \"nim c -d:NoColor -d:prompt_no_history --out:bin/inim inim.nim\"\n  exec \"nim c -r -d:prompt_no_history tests/test.nim\"\n  # Recompile with tty checks\n  exec \"nim c -d:NoColor -d:NOTTYCHECK -d:prompt_no_history --out:bin/inim inim.nim\"\n  exec \"nim c -r -d:withTools -d:prompt_no_history tests/test_commands.nim\"\n  exec \"nim c -r -d:prompt_no_history tests/test_interface.nim\"\n",
"https://github.com/euantorano/spdx_licenses.nim": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Euan T\"\ndescription   = \"A library to retrieve the list of commonly used licenses from the SPDX License List.\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask docs, \"Create documentation\":\n  exec \"nim doc --index:on -o:docs/spdx_licenses.html src/spdx_licenses.nim\"\n\ntask test, \"Run the tests\":\n  withDir \"tests\":\n    exec \"nim c -r main\"\n",
"https://github.com/kidandcat/jsutils": "# Package\n\nversion       = \"0.2.7\"\nauthor        = \"Jairo\"\ndescription   = \"Utils to work with javascript\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/xflywind/timerwheel": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"flywind\"\ndescription   = \"A high performance timer based on timerwheel for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n\ntask tests, \"Tests all\":\n  exec \"testament all\"\n",
"https://raw.githubusercontent.com/jamesalbert/nimates/master/nimates.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"James Albert\"\ndescription   = \"a client library for the Postmates API written in Nim\"\nlicense       = \"Apache License 2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\ntask example, \"running example\":\n  exec \"cd examples && nim c -r basic.nim\"\n\ntask docs, \"generating docs\":\n  exec \"nim doc -o:docs/nimates.html src/nimates.nim\"\n",
"https://raw.githubusercontent.com/quelklef/nim-finals/master/finals.nimble": "# Package\nversion       = \"1.0.5\"\nauthor        = \"Eli Maynard\"\ndescription   = \"Transparently declare single-set attributes.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n",
"https://raw.githubusercontent.com/achesak/nim-shorturl/master/shorturl.nimble": "[Package]\nname = \"shorturl\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for generating URL identifiers\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/2vg/mofuw/master/mofuw.nimble": "# Package\n\nversion       = \"2.0.0\"\nauthor        = \"2vg\"\ndescription   = \"more faster, ultra performance webserver\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"images\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"https://github.com/2vg/mofuparser\"\nrequires \"https://github.com/2vg/mofuhttputils\"",
"https://raw.githubusercontent.com/KittyTechnoProgrammer/torim/master/torim.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Federico Ceratto and KittyTechno\"\ndescription   = \"Updated version of tor.nim from https://github.com/FedericoCeratto/nim-tor\"\nlicense       = \"MPL-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/6A/getch": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Gregoire GEIS\"\ndescription   = \"getch() for Windows and Unix\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\"\n\n",
"https://github.com/treeform/mpeg": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"treeform\"\ndescription   = \"Wrapper for pl_mpeg single header mpeg library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipDirs = @[\"examples\"]\n\n# Dependencies\nrequires \"nim >= 0.20.0\"\n\n",
"https://github.com/lihf8515/miniblink": "# Package\r\n\r\nversion       = \"0.1.0\"\r\nauthor        = \"Lihaifeng <lihaifeng@wxm.com>\"\r\ndescription   = \"A miniblink library for nim.\"\r\nlicense       = \"MIT\"\r\nskipDirs      = @[\"examples\"]\r\nsrcDir        = \"src\"\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 1.2.0\"\r\n",
"https://github.com/enthus1ast/flatdb": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"enthus1ast\"\ndescription   = \"small/tiny, flatfile, jsonl based, inprogress database for nim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.17.0\"\n\n",
"https://github.com/LemonBoy/dtoa.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"LemonBoy\"\ndescription   = \"Port of Milo Yip's fast dtoa() implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/apahl/csvtable/master/csvtable.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Axel Pahl\"\ndescription   = \"Nim tools for handling CSV files with an API similar to Python\\'s CSVDictReader and -Writer\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\nconst\n  module = \"csvtable\"\n\ntask gendoc, \"build the documentation\":\n  echo \"\\nBuilding documentation in doc/\"\n  mkDir \"doc\"\n  let taskCmd = \"nim -o:doc/\" & module & \".html doc \" & module & \".nim\"\n  exec taskCmd\n\ntask test, \"run the tests\":\n  echo \"\\nRunning tests...\"\n  let taskCmd = \"nim -r --verbosity:0 --hints:off c \" & module & \".nim\"\n  exec taskCmd\n  rmFile toExe(module)",
"https://raw.githubusercontent.com/rogercloud/nim-routine/master/nimroutine.nimble": "[Package]\nname          = \"nimroutine\"\nversion       = \"0.1.1\"\nauthor        = \"Roger Shi\"\ndescription   = \"A go routine like nim implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.11.3\"\n",
"https://github.com/zielmicha/leveldb.nim": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"Michał Zieliński\"\ndescription   = \"LevelDB wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"leveldbtool\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/momeemt/Blackvas/master/Blackvas.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Momeemt\"\ndescription   = \"declarative UI framework for building Canvas\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"js\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/mildred/nimnews": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Mildred Ki'Lya\"\ndescription   = \"Nim newsgroup NNTP server\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimnews\", \"web/newsweb\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\n# NimNews\n\nrequires \"docopt\"\nrequires \"nuuid\"\nrequires \"scram\"\nrequires \"passgen\"\nrequires \"npeg\"\n\n# NewsWeb\n\nrequires \"nimassets\" # dev only\nrequires \"prologue\"\nrequires \"templates\"\nrequires \"asynctools\"\n\n",
"https://github.com/juancarlospaco/nim-easings": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Robert Penner Easing Functions for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/MnlPhlp/cli_menu/master/cli_menu.nimble": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"MnlPhlp\"\ndescription   = \"A library to create interactive commandline menus without writing boilerplate code.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Tasks\n\nimport os\ntask docs,\"generate docs\":\n  selfExec \"doc2 --project --git.url:https://github.com/MnlPhlp/cli_menu --git.commit:master src/cli_menu.nim\"\n  rmDir(\"docs\")\n  mvDir(\"src/htmldocs\",\"docs\")\n  mvFile(\"docs/cli_menu.html\",\"docs/index.html\")\n\ntask test,\"run Tests\":\n  selfExec\"c -r -d:testing tests/t**.nim\"",
"https://github.com/jyapayne/einheit": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Joey Payne\"\ndescription   = \"Tool for providing unit tests. Einheit is German for Unit.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/test.nim\"\n\ntask testjs, \"Run tests on Node.js\":\n  exec \"nim js -d:nodejs -r tests/test.nim\"\n",
"https://github.com/genotrance/nimrax": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"genotrance\"\ndescription   = \"Radix tree wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.5.0\"\n\nvar\n  name = \"nimrax\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://api.github.com/repos/def-/nim-bpg/contents": "[{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"1e98fcbef66454d167297e8b39deafd1b7549ae1\",\"size\":1017,\"url\":\"https://api.github.com/repos/def-/nim-bpg/contents/README.md?ref=master\",\"html_url\":\"https://github.com/def-/nim-bpg/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/def-/nim-bpg/git/blobs/1e98fcbef66454d167297e8b39deafd1b7549ae1\",\"download_url\":\"https://raw.githubusercontent.com/def-/nim-bpg/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-bpg/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-bpg/git/blobs/1e98fcbef66454d167297e8b39deafd1b7549ae1\",\"html\":\"https://github.com/def-/nim-bpg/blob/master/README.md\"}},{\"name\":\"bpg.nimble\",\"path\":\"bpg.nimble\",\"sha\":\"32e7bccd0a268e77420e659d420ac5405bcde0b7\",\"size\":219,\"url\":\"https://api.github.com/repos/def-/nim-bpg/contents/bpg.nimble?ref=master\",\"html_url\":\"https://github.com/def-/nim-bpg/blob/master/bpg.nimble\",\"git_url\":\"https://api.github.com/repos/def-/nim-bpg/git/blobs/32e7bccd0a268e77420e659d420ac5405bcde0b7\",\"download_url\":\"https://raw.githubusercontent.com/def-/nim-bpg/master/bpg.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-bpg/contents/bpg.nimble?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-bpg/git/blobs/32e7bccd0a268e77420e659d420ac5405bcde0b7\",\"html\":\"https://github.com/def-/nim-bpg/blob/master/bpg.nimble\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"911aba406559140d4850082d4d13c0ed5e27dd5a\",\"size\":0,\"url\":\"https://api.github.com/repos/def-/nim-bpg/contents/examples?ref=master\",\"html_url\":\"https://github.com/def-/nim-bpg/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/def-/nim-bpg/git/trees/911aba406559140d4850082d4d13c0ed5e27dd5a\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-bpg/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-bpg/git/trees/911aba406559140d4850082d4d13c0ed5e27dd5a\",\"html\":\"https://github.com/def-/nim-bpg/tree/master/examples\"}},{\"name\":\"libbpg.h.patch\",\"path\":\"libbpg.h.patch\",\"sha\":\"f60b2791ace18a5d13eed44c26364dc3d8bb5ce6\",\"size\":1031,\"url\":\"https://api.github.com/repos/def-/nim-bpg/contents/libbpg.h.patch?ref=master\",\"html_url\":\"https://github.com/def-/nim-bpg/blob/master/libbpg.h.patch\",\"git_url\":\"https://api.github.com/repos/def-/nim-bpg/git/blobs/f60b2791ace18a5d13eed44c26364dc3d8bb5ce6\",\"download_url\":\"https://raw.githubusercontent.com/def-/nim-bpg/master/libbpg.h.patch\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-bpg/contents/libbpg.h.patch?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-bpg/git/blobs/f60b2791ace18a5d13eed44c26364dc3d8bb5ce6\",\"html\":\"https://github.com/def-/nim-bpg/blob/master/libbpg.h.patch\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"13756ad4e93ba6e60be87e57c0681ee45fac607e\",\"size\":0,\"url\":\"https://api.github.com/repos/def-/nim-bpg/contents/src?ref=master\",\"html_url\":\"https://github.com/def-/nim-bpg/tree/master/src\",\"git_url\":\"https://api.github.com/repos/def-/nim-bpg/git/trees/13756ad4e93ba6e60be87e57c0681ee45fac607e\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/def-/nim-bpg/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/def-/nim-bpg/git/trees/13756ad4e93ba6e60be87e57c0681ee45fac607e\",\"html\":\"https://github.com/def-/nim-bpg/tree/master/src\"}}]",
"https://raw.githubusercontent.com/KeepCoolWithCoolidge/nimclutter/master/nimclutter.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Andrew Burns\"\ndescription   = \"Nim bindings for Clutter toolkit.\"\nlicense       = \"LGPLv2.1\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"oldgtk3\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-chonker/master/chonker.nimble": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Arch Linux Pacman Optimizer\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"chonker\"]\n\nrequires \"nim >= 1.0.2\"\n",
"https://github.com/JohnAD/jestergeoip": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"A plugin for Jester that gets location data from an IP address using a GeoIP library service (currently GeoJS).\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"jesterwithplugins >= 0.5.0\"\n",
"https://raw.githubusercontent.com/jangko/nimCEF/master/nimCEF.nimble": "[Package]\nname          = \"nimCEF\"\nversion       = \"0.1.0\"\nauthor        = \"Andri Lim\"\ndescription   = \"CEF3 Chromium Emmbedded Framework wrapper\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13.0\"",
"https://raw.githubusercontent.com/leonardoce/nim-clickhouse/master/db_clickhouse.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Leonardo Cecchi <leonardo.cecchi@gmail.com>\"\ndescription   = \"ClickHouse Nim interface\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/Skrylar/nfltk/master/fltk.nimble": "# Package\n\nversion       = \"1.3.4\"\nauthor        = \"Skrylar\"\ndescription   = \"Fast Light Toolkit.\"\nlicense       = \"LGPL\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/jlp765/db": "[Package]\nname          = \"db\"\nversion       = \"1.1.0\"\nauthor        = \"James Parkinson\"\ndescription   = \"Unified database access to Sqlite, MySql, and Postgres\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/nim-lang/sdl1/master/sdl1.nimble": "[Package]\r\nname          = \"sdl1\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"SDL 1.2 wrapper for Nim.\"\r\nlicense       = \"LGPL\"\r\n\r\nsrcDir        = \"src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://github.com/Araq/dropbox_filename_sanitizer/": "[Package]\nname          = \"dropbox_filename_sanitizer\"\nversion       = \"0.4.1\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Mangles filename for dropbox compatibility.\"\"\"\nlicense       = \"MIT\"\nbin           = \"dropbox_filename_sanitizer\"\n\n\ninstallDirs = \"\"\"\n\ndbfs_pkg\ndocs\nlazy_rest_pkg\n\n\"\"\"\n\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\nnakefile.nim\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nnake >= 1.2\nargument_parser >= 0.1.2\nhttps://github.com/gradha/badger_bits.git >= 0.2.5\nnim >= 0.10.2\n\n\n\"\"\"\n",
"https://raw.githubusercontent.com/aidansteele/sph/master/sph.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Aidan Steele\"\ndescription   = \"Nim wrapper for sphlib\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.1\"\n\n",
"https://raw.githubusercontent.com/rxi/gifwriter/master/gifwriter.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rxi\"\ndescription   = \"GIF writing library based on jo_gif\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://raw.githubusercontent.com/JohnAD/diffoutput/master/diffoutput.nimble": "# Package\n\nversion      = \"0.1.2\"\nauthor       = \"John Dupuy\"\ndescription  = \"Collection of Diff stringifications (and reversals)\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"diff >= 0.5.0\"\n",
"https://github.com/paranim/paramidi": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"oakes\"\ndescription   = \"A library for making MIDI music\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-osrm/master/osrm.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"juancarlospaco\"\ndescription   = \"Open Source Routing Machine for OpenStreetMap API Lib and App\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/disruptek/swayipc/master/swayipc.nimble": "version = \"3.1.8\"\nauthor = \"disruptek\"\ndescription = \"IPC interface to sway (or i3) compositors\"\nlicense = \"MIT\"\nrequires \"nesm >= 0.4.5 & < 1.0.0\"\nrequires \"cligen >= 0.9.40 & < 2.0.0\"\n\nbin = @[\"swayipc\"]\n\ntask test, \"run unit testes\":\n  exec \"swayipc --help\"\n",
"https://raw.githubusercontent.com/def-/nim-syscall/master/syscall.nimble": "# Package\n\nversion       = \"0.1\"\nauthor        = \"Dennis Felsing\"\ndescription   = \"Raw system calls for Nim\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.10.3\"\n\ntask tests, \"Test syscall\":\n  exec \"nim c -r src/syscall\"\n",
"https://raw.githubusercontent.com/Araq/gh_nimrod_doc_pages/master/gh_nimrod_doc_pages.nimble": "[Package]\nname         = \"gh_nimrod_doc_pages\"\nversion      = \"0.2.5\"\nauthor       = \"Grzegorz Adam Hankiewicz\"\ndescription  = \"Generates a GitHub documentation website for Nim projects.\"\nlicense      = \"MIT\"\nbin          = \"gh_nimrod_doc_pages\"\n\nInstallFiles = \"\"\"\n\ngh_nimrod_doc_pages.nimble\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nargument_parser >= 0.2.0\nhttps://github.com/gradha/badger_bits.git >= 0.2.4\nlazy_rest >= 0.2.2\nmidnight_dynamite >= 1.0.0\n\n\"\"\"\n",
"https://raw.githubusercontent.com/jxy/chebyshev/master/chebyshev.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Xiao-Yong Jin\"\ndescription   = \"Chebyshev approximation.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask test, \"Run test\":\n  --define: release\n  --run\n  setCommand \"c\", \"chebyshev.nim\"\n",
"https://raw.githubusercontent.com/jamesalbert/grafanim/master/grafanim.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"jamesalbert\"\ndescription   = \"Grafana module for nim\"\nlicense       = \"GPL\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\nskipDirs = @[\"tests\"]\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/status-im/nim-zxcvbn/master/zxcvbn.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"zxcvbn\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Nim bindings for the zxcvbn-c password strenght estimator\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.0.0\",\n         \"testutils\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r --threads:off tests/test_all\"\n  exec \"nim c -r --threads:on tests/test_all\"\n\n",
"https://raw.githubusercontent.com/lompik/pari.nim/master/pari.nimble": "[Package]\nname          = \"pari\"\nversion       = \"0.1.0\"\nauthor        = \"Lompik\"\ndescription   = \"Pari/Gp C library wrapper for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/kerrycobb/PhylogeNi": "version     = \"0.1.0\"\nauthor      = \"Kerry Cobb\"\ndescription = \"A Nim library for working with phylogenetic trees.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/JohnAD/jestercookiemsgs": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"A plugin for Jester that enables easy message passing between web pages using browser cookies.\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"jesterwithplugins >= 0.5.0\"\n",
"https://github.com/captainbland/nim-validation": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"captainbland\"\ndescription   = \"Field validation for Nim objects\"\nlicense       = \"GPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\ntask docs, \"Docs\":\n  exec \"nim doc2 --project -o ./validation.nim\"",
"https://github.com/juancarlospaco/nim-firejail": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Firejail wrapper for Nim, Isolate your Production App before its too late!\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\nimport distros\nforeignDep \"firejail\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-calibre/master/calibre.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Calibre Database Lib for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/Bennyelg/csvql/master/csvql.nimble": "# Package\nversion     = \"3.0.2\"\nauthor      = \"Benny Elgazar\"\ndescription = \"csvql - query csv using ansisql.\"\nlicense     = \"MIT\"\nbin         = @[\"csvql\"]\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.2\"\nrequires \"cligen >= 0.9.41\"\n",
"https://github.com/its5Q/ducominer": "# Package Information\nversion         = \"1.2.0\"\nauthor          = \"its5Q\"\ndescription     = \"A multithreaded miner for DuinoCoin written in Nim.\"\nlicense         = \"MIT\"\n\nbin = @[\"ducominer\"]\n\n# Dependencies\nrequires \"nimcrypto\"",
"https://raw.githubusercontent.com/markspanbroek/nim-lazyseq/master/lazyseq.nimble": "version = \"0.1.0\"\nauthor = \"lazyseq authors\"\ndescription = \"Lazy evaluated sequences\"\nlicense = \"MIT\"\n\nrequires \"nim >= 1.4.2 & < 2.0.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-html-tools/master/html_tools.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"HTML5 Tools for Nim, all Templates, No CSS, No Libs, No JS Framework\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\nrequires \"contra\"\n",
"https://raw.githubusercontent.com/samuelroy/coco/master/coco.nimble": "import strutils\n\n# Package\n\nversion       = \"0.0.3\" \nauthor        = \"Samuel Roy\"\ndescription   = \"Code coverage with line and branch support for Nim\"\nlicense       = \"MIT\"\n\ninstallFiles= @[\"coco.nim\"]\nbin = @[\"coco\"]\n\n# Deps\n\nrequires \"nim >= 0.19.0\"\nrequires \"cligen\"\nrequires \"glob\"\n\ntask coverage, \"Generate code coverage report\":\n  echo \"Generate code coverage report\"\n  exec \"./coco\"\n\n",
"https://raw.githubusercontent.com/gokr/spryvm/master/spryvm.nimble": "# Package\nversion       = \"0.9.3\"\nauthor        = \"Göran Krampe\"\ndescription   = \"Homoiconic dynamic language interpreter in Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n# Deps\nrequires \"nim >= 1.2.0\"\nrequires \"python\"\nrequires \"ui\"\nrequires \"snappy\"\nrequires \"https://github.com/status-im/nim-rocksdb.git#5b1307cb1f4c85bb72ff781d810fb8c0148b1183\"\n\ntask test, \"Run the tests\":\n  withDir \"tests\":\n    exec \"nim c -r all\"\n",
"https://github.com/jiro4989/edens": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"jiro4989\"\ndescription   = \"A command to encode / decode text with your dictionary\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"edens\"]\nbinDir        = \"src\" # 辞書の読み込みに失敗するのを回避するため\ninstallFiles  = @[\"dict.json\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"cligen >= 0.9.32\"\n",
"https://github.com/jangko/nimSHA2": "# Package\nversion       = \"0.1.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"SHA2 secure hash algorithm - 2 - [224, 256, 384, 512 bits]\"\nlicense       = \"MIT\"\nskipDirs     = @[\"tests\", \"docs\"]\n\n# Deps\nrequires \"nim >= 0.11.2\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  test \"-d:release\", \"tests/test\"\n\ntask testvcc, \"Run tests with vcc compiler\":\n  test \"--cc:vcc -d:release\", \"tests/test\"\n",
"https://github.com/bio-nim/nim-edlib": "version     = \"1.2.6\"\nauthor      = \"Christopher Dunn\"\ndescription = \"Wrapper for edlib (Martin Šošić).\"\nlicense     = \"BSD-3\"\nskipDirs    = @[\"tests\", \"apps\"]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/smallfx/luna.nim/master/luna.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jackson Broussard\"\ndescription   = \"Lua convenience library for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\"\n\n",
"https://raw.githubusercontent.com/treeform/vmath/master/vmath.nimble": "version       = \"0.4.1\"\nauthor        = \"treeform\"\ndescription   = \"Math vector library for graphical things.\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/jiro4989/nimtetris/master/nimtetris.nimble": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"jiro4989\"\ndescription   = \"A simple terminal tetris in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimtetris\"]\nbinDir        = \"bin\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.2\"\nrequires \"illwill >= 0.1.0\"\n\nimport os, strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"nimtetris\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/liquid600pgm/delight": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"liquid600pgm\"\ndescription   = \"Engine-agnostic library for computing 2D raycasted lights\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"glm >= 1.1.1\"\n",
"https://github.com/Knaque/spinner": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Reilly Moore\"\ndescription   = \"Prebuilt components for the Fidget GUI library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"fidget#head\"\nrequires \"gradient#head\"",
"https://raw.githubusercontent.com/euantorano/serial.nim/master/serial.nimble": "# Package\n\nversion       = \"1.1.5\"\nauthor        = \"Euan T\"\ndescription   = \"SerialPort library for Nim.\"\nlicense       = \"BSD-3-Clause\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/zevv/npeg": "# Package\n\nversion       = \"0.24.1\"\nauthor        = \"Ico Doornekamp\"\ndescription   = \"a PEG library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\n# Test\n\ntask test, \"Runs the test suite\":\n  exec \"nimble testc && nimble testcpp && nimble testarc && nimble testjs\"\n\ntask testc, \"C tests\":\n  exec \"nim c -r tests/tests.nim\"\n\ntask testcpp, \"CPP tests\":\n  exec \"nim cpp -r tests/tests.nim\"\n\ntask testjs, \"JS tests\":\n  exec \"nim js -r tests/tests.nim\"\n\ntask testdanger, \"Runs the test suite in danger mode\":\n  exec \"nim c -d:danger -r tests/tests.nim\"\n\ntask testwin, \"Mingw tests\":\n  exec \"nim c -d:mingw tests/tests.nim && wine tests/tests.exe\"\n\ntask test32, \"32 bit tests\":\n  exec \"nim c --cpu:i386 --passC:-m32 --passL:-m32 tests/tests.nim && tests/tests\"\n\ntask testall, \"Test all\":\n  exec \"nimble test && nimble testcpp && nimble testdanger && nimble testjs && nimble testwin\"\n\nwhen (NimMajor, NimMinor) >= (1, 1):\n  task testarc, \"--gc:arc tests\":\n    exec \"nim c --gc:arc -r tests/tests.nim\"\nelse:\n  task testarc, \"--gc:arc tests\":\n    exec \"true\"\n\ntask perf, \"Test performance\":\n  exec \"nim cpp -r -d:danger tests/performance.nim\"\n",
"https://github.com/codehz/nim-vtable": "# Package\n\nversion       = \"0.3.3\"\nauthor        = \"CodeHz\"\ndescription   = \"Vtable for nim\"\nlicense       = \"LGPL-3.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n",
"https://github.com/Riderfighter/binio": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Riderfighter\"\ndescription   = \"Package for packing and unpacking byte data\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\", \"struct >= 0.1.0\"\n",
"https://github.com/greenfork/nimraylib_now": "# Package\n\nversion = \"0.9.1\"\nauthor = \"Dmitry Matveyev\"\ndescription = \"The Ultimate Raylib gaming library wrapper\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipFiles = @[\"converter.nim\"]\nbackend = \"c\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"regex\"\n\nfrom os import `/`\n\ntask convert, \"run with c2nim\":\n  let\n    converterFile = \"src\"/\"converter.nim\"\n    raylibFile = \"src\"/\"nimraylib_now\"/\"raylib.nim\"\n    rayguiFile = \"src\"/\"nimraylib_now\"/\"raygui.nim\"\n    rlglFile = \"src\"/\"nimraylib_now\"/\"rlgl.nim\"\n    raymathFile = \"src\"/\"nimraylib_now\"/\"raymath.nim\"\n    physacFile = \"src\"/\"nimraylib_now\"/\"physac.nim\"\n  echo \"Running converter\\n\"\n  exec \"nim r \" & converterFile\n  echo \"\\nExecuting nim check\\n\"\n  exec \"nim check \" & raylibFile\n  exec \"nim check \" & rlglFile\n  exec \"nim check \" & raymathFile\n  exec \"nim check \" & rayguiFile\n  exec \"nim check \" & physacFile\n\ntask buildRaygui, \"build raygui as a dynamic library\":\n  let sourceFile = \"raygui\"/\"src\"/\"raygui.h\"\n  exec \"cc -x c -fPIC -c -o raygui.o -DRAYGUI_IMPLEMENTATION -DRAYGUI_SUPPORT_ICONS \" & sourceFile\n  exec \"cc -shared -o libraygui.so -lraylib raygui.o\"\n  rmFile \"raygui.o\"\n\ntask testExamples, \"checks that all examples are correctly compiled\":\n  exec \"testament run texamples\"\n",
"https://raw.githubusercontent.com/status-im/nim-metrics/master/metrics.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"metrics\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Metrics client library supporting Prometheus\"\nlicense       = \"MIT or Apache License 2.0\"\nskipDirs      = @[\"tests\", \"benchmarks\"]\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\n\n### Helper functions\nproc buildBinary(name: string, srcDir = \"./\", params = \"\", lang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  var extra_params = params\n  if paramStr(1) != \"e\":\n    # we're under Nim, not Nimble\n    for i in 2..<paramCount():\n      extra_params &= \" \" & paramStr(i)\n  exec \"nim \" & lang & \" --out:./build/\" & name & \" -f --skipParentCfg \" & extra_params & \" \" & srcDir & name & \".nim\"\n\nproc test(name: string) =\n  buildBinary name, \"tests/\", \"-r -d:metrics --threads:on\"\n\nproc bench(name: string) =\n  buildBinary name, \"benchmarks/\", \"-r -d:metrics --threads:on -d:release\"\n\n### tasks\ntask test, \"Main tests\":\n  # build it with metrics disabled, first\n  buildBinary \"main_tests\", \"tests/\"\n  buildBinary \"main_tests\", \"tests/\", \"--threads:on\"\n  test \"main_tests\"\n  buildBinary \"bench_collectors\", \"benchmarks/\"\n  buildBinary \"bench_collectors\", \"benchmarks/\", \"-d:metrics --threads:on\"\n\ntask test_chronicles, \"Chronicles tests\":\n  buildBinary \"chronicles_tests\", \"tests/\"\n  test \"chronicles_tests\"\n\ntask benchmark, \"Run benchmarks\":\n  bench \"bench_collectors\"\n\n",
"https://github.com/zevv/nmqtt": "# Package\nversion       = \"1.0.4\"\nauthor        = \"zevv & ThomasTJdev\"\ndescription   = \"Native MQTT library and binaries for publishing, subscribing and broker\"\nlicense       = \"MIT\"\nbin           = @[\"nmqtt/nmqtt\", \"nmqtt/nmqtt_password\", \"nmqtt/nmqtt_pub\", \"nmqtt/nmqtt_sub\"]\nbinDir        = \"bin\"\ninstallFiles  = @[\"nmqtt.nim\"]\ninstallDirs   = @[\"config\"]\nskipDirs      = @[\"tests\", \"nmqtt\"]\n\n# Dependencies\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 0.9.45\"\nwhen not defined(Windows):\n  requires \"bcrypt >= 0.2.1\"\n\n\nfrom strutils import format\n\n\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r tests/tester\"\n\n\ntask setup, \"Generate default nmqtt configuration file\":\n  var path: string\n\n  echo \"\\nGenerate default nmqtt.conf? (y/N)\"\n  let genConf = readLineFromStdin()\n  if genConf == \"y\" or genConf == \"Y\":\n    let confPath = \"/home/\" & getEnv(\"USER\") & \"/.nmqtt\"\n    echo \"\\nSpecify the absolute path to the nmqtt config folder.\\nPress enter to use default path: \" & confPath\n\n    path = readLineFromStdin()\n    if path == \"\":\n      path = confPath\n\n    if not dirExists(path):\n      mkDir(path)\n\n    cpFile(\"config/nmqtt.conf\", path & \"/nmqtt.conf\")\n\n    echo \"\"\"\n___________________________________________________________\n\nnmqtt v$1\n\nThe brokers configuration has been saved at:\n  $2/nmqtt.conf\n\nYou can now run the broker with:\n  nmqtt -c $2/nmqtt.conf\n\n___________________________________________________________\n\n\"\"\".format(version, path)",
"https://raw.githubusercontent.com/lompik/libmpdclient.nim/master/libmpdclient.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Lompik\"\ndescription   = \"Bindings to Music Player Daemon client library\"\nlicense       = \"BSD\"\nskipFiles     = @[\"example.nim\", \"libmpdclient.pre\"]\n\n# Deps\nrequires \"nim >= 0.10.0\"\n",
"https://github.com/twist-vector/nhsl.git": "[Package]\nname          = \"nhsl\"\nversion       = \"0.2.0\"\nauthor        = \"Tom Krauss\"\ndescription   = \"Nim Hessian Serialization Library encodes/decodes data into the Hessian binary protocol\"\nlicense       = \"Apache2\"\n\n[Deps]\nRequires: \"nim >= 0.12.0\"\n",
"https://raw.githubusercontent.com/ire4ever1190/mike/master/mike.nimble": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"Jake Leahy\"\ndescription   = \"A very simple micro web framework\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"httpx == 0.1.0\"\n#[\n    Could be made to be an optional dependency that the user needs to install themselves\n    But for now I will have it has a requirement\n]#\nrequires \"regex == 0.16.2\" \n\ntask r, \"runs the example\":\n    exec(\"nim c -d:debug -r example\")\n\ntask genDoc, \"Generates the doc\":\n    rmDir(\"docs\")\n    exec(\"nimble doc2 --git.url:https://github.com/ire4ever1190/mike --git.commit:master --index:on --outdir:docs -d:docs --project src/mike.nim; exit 0\")\n    exec(\"nim buildIndex -o:docs/theindex.html docs\")\n    exec(\"nim rst2html -o:docs/index.html readme.rst\")\n    # Adds a fix for dark theme on the index\n    var index = readFile(\"docs/index.html\")\n    index &= \"\"\"\n        <script>\n        const currentTheme = localStorage.getItem('theme') ? localStorage.getItem('theme') : null;\n        if (currentTheme) {\n            document.documentElement.setAttribute('data-theme', currentTheme);\n        }\n        </script>\n        \"\"\"\n    writeFile(\"docs/index.html\", index)\n\ntask workspace, \"Internal use, loads up all the files\":\n    exec(\"micro src/mike.nim src/mike/*.nim\")\n\ntask benchmark, \"Runs the benchmarks\":\n    cd(\"benchmarks\")\n    exec(\"nim c -r benchmark\")\n",
"https://raw.githubusercontent.com/bung87/simhash-nim/master/simhash.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"zhoupeng\"\ndescription   = \"Nim implementation of simhash algoritim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"lc\"\n",
"https://raw.githubusercontent.com/JohnAD/jestercookiemsgs/master/jestercookiemsgs.nimble": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"A plugin for Jester that enables easy message passing between web pages using browser cookies.\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"jesterwithplugins >= 0.5.0\"\n",
"https://github.com/mikra01/timerpool/": "# Package\nversion = \"0.1.0\"\nauthor = \"Michael Krauter\"\ndescription = \"single thread Timerpool implementation in Nim for event purpose\"\nlicense = \"MIT\"\nskipDirs = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 0.17.0\"\n\ntask test, \"running tests\":\n  exec \"nim timerpool_tests\"",
"https://raw.githubusercontent.com/narimiran/sha3/master/sha3.nimble": "# Package\n\nversion       = \"0.6\"\nauthor        = \"tankfeeder\"\ndescription   = \"sha3 library\"\nlicense       = \"CC0\"\nskipExt       = @[\"rsp\"]\n",
"https://raw.githubusercontent.com/genotrance/nimzbar/master/nimzbar.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"genotrance\"\ndescription   = \"zbar wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.5.0\"\n\nvar\n  name = \"nimzbar\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif defined(MacOSX):\n  raise newException(Exception, \"Install failed, package is not supported on MacOSX\")\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/nimscale/nim-libjwt/master/libjwt.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Iwan Budi Kusnanto\"\ndescription   = \"Nim binding for libjwt\"\nlicense       = \"LGPL\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\n",
"https://raw.githubusercontent.com/genotrance/libsvm/master/libsvm.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance\"\ndescription   = \"libsvm wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.1.0\"\n\nimport strformat\n\ntask test, \"Run tests\":\n  exec \"nim cpp --path:. -r tests/tlibsvm.nim\"\n\ntask docs, \"Generate docs\":\n  exec &\"nim doc -o:build/htmldocs/ libsvm.nim\"\n\ntask docsPublish, \"Generate and publish docs\":\n  # Uses: pip install ghp-import\n  docsTask()\n  exec &\"ghp-import --no-jekyll -fp build/htmldocs\"\n",
"https://github.com/achesak/nim-pwd": "[Package]\nname = \"pwd\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with the UNIX password file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/ucpr/httpstat": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"taichi uchihara\"\ndescription   = \"curl statistics made simple \"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n# Build\nbin = @[\"httpstat\"]\n",
"https://raw.githubusercontent.com/apense/nimrat/master/nimrat.nimble": "[Package]\nname          = \"nimrat\"\nversion       = \"0.1.0\"\nauthor        = \"Jonathan Edwards\"\ndescription   = \"Rational arithmetic module for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/PMunch/notifishower": "# Package\n\nversion       = \"0.7.0\"\nauthor        = \"PMunch\"\ndescription   = \"Simple program to show notifications with images and actions around the screen\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"notifishower\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"imlib2\"\nrequires \"https://github.com/PMunch/x11#monitors\"\nrequires \"npeg\"\nrequires \"kiwi\"\nrequires \"termstyle\"\n#requires \"x11\"\n",
"https://raw.githubusercontent.com/mattaylor/elvis/master/elvis.nimble": "# Package\nversion       = \"0.2.0\"\nauthor        = \"Mat Taylor\"\ndescription   = \"truthy, elvis, ternary and conditional assignment operators for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.17.0\"\n\n# Tasks\ntask test, \"run tests\": exec \"nim c -r tests.nim\"\n",
"https://github.com/flaviut/nre.git": "[Package]\nname        = \"nre\"\nauthor      = \"Flaviu Tamas\"\nversion     = \"2.0.2\"\ndescription = \"Yet another PCRE library\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/squattingmonk/nasher.nim/master/nasher.nimble": "# Package\n\nversion       = \"0.14.2\"\nauthor        = \"Michael A. Sinclair\"\ndescription   = \"A build tool for Neverwinter Nights projects\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nasher\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"neverwinter >= 1.4.1\"\nrequires \"glob >= 0.10.0\"\nrequires \"nwnt >= 1.3.0\"\n",
"https://github.com/mratsim/Synthesis": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"A compile-time, compact, fast, without allocation, state-machine generator.\"\nlicense       = \"MIT or Apache License 2.0\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\nproc test(flags, path: string) =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  # Note: we compile in release mode. This still have stacktraces\n  #       but is much faster than -d:debug\n\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  echo \"\\n========================================================================================\"\n  echo \"Running [ \", lang, \" \", flags, \" ] \", path\n  echo \"========================================================================================\"\n  exec \"nim \" & lang & \" \" & flags & \" -d:release --outdir:build -r \" & path\n\ntask test, \"Run Synthesis tests\":\n  test \"\", \"examples/water_phase_transitions.nim\"\n",
"https://github.com/PMunch/nim-persistent-vector": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Implementation of Clojures persistent vector in Nim for easy immutable lists.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires      \"nim >= 0.17.1\"\n\n# Skip examples from nimble installation\n\nskipFiles     = @[\"example.nim\"]\n\n",
"https://raw.githubusercontent.com/nim-lang/tcl/master/tcl.nimble": "[Package]\nname: \"tcl\"\nversion: \"1.0\"\nauthor: \"Andreas Rumpf\"\ndescription: \"Wrapper for the TCL programming language\"\nlicense: \"MIT\"\n\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://raw.githubusercontent.com/JohnAD/turn_based_game/master/turn_based_game.nimble": "# Package\n\nversion       = \"1.1.6\"\nauthor        = \"John Dupuy\"\ndescription   = \"Game rules framework for turn-based games\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/bung87/daemon": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"zhoupeng\"\ndescription   = \"daemonizer for Unix, Linux and OS X\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/enthus1ast/nimMime": "# Package\nversion       = \"0.0.3\"\nauthor        = \"enthus1ast\"\ndescription   = \"mime generator (email with attachments)\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"src\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"",
"https://raw.githubusercontent.com/CORDEA/sha1ext/master/sha1ext.nimble": "# Package\n\nversion     = \"0.1.1\"\nauthor      = \"Yoshihiro Tanaka\"\ndescription = \"std / sha1 extension\"\nlicense     = \"Apache License 2.0\"\nsrcDir      = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.17.3\"\n",
"https://raw.githubusercontent.com/planety/cached/master/cache.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"flywind\"\ndescription   = \"A cache library.\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/jangko/nimLUA": "packageName   = \"nimLUA\"\nversion       = \"0.3.8\"\nauthor        = \"Andri Lim\"\ndescription   = \"glue code generator to bind Nim and Lua together using Nim's powerful macro\"\nlicense       = \"MIT\"\nskipDirs      = @[\"test\", \"scripts\"]\n\nrequires: \"nim >= 1.2.2\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n    debugEcho \"LANG: \", lang\n\n  when defined(unix):\n    const libm = \"-lm\"\n  else:\n    const libm = \"\"\n\n  when defined(macosx):\n    # nim bug, incompatible pointer assignment\n    # see nim-lang/Nim#16123\n    if lang == \"cpp\":\n      lang = \"c\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --outdir:build -r --hints:off --warnings:off \" &\n    \" -d:lua_static_lib --passL:\\\"-Lexternal -llua \" & libm & \" \\\" \" & path\n\ntask test, \"Run all tests\":\n  test \"-d:nimDebugDlOpen\", \"tests/test_features\"\n  test \"-d:nimDebugDlOpen -d:release\", \"tests/test_features\"\n  test \"-d:importLogging\", \"tests/test_bugfixes\"\n  test \"-d:importLogging -d:release\", \"tests/test_bugfixes\"\n",
"https://github.com/stefansalewski/oldgtk3": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Stefan Salewski\"\ndescription   = \"Low level bindings for GTK3 related libraries\"\nlicense       = \"MIT\"\nskipDirs = @[\"common\", \"nim-atk\", \"nim-cairo\", \"nim-gdk3\", \"nim-gdk_pixbuf\", \"nim-gio\", \"nim-gir\", \"nim-glib\", \"nim-gobject\", \"nim-gtk3\", \"nim-gtksourceview\", \"nim-pango\", \"nim-rsvg\", \"oldgtk3.bak\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu) or detectOs(Debian):\n    foreignDep \"libgtk-3-dev\"\n  elif detectOs(Gentoo):\n    foreignDep \"gtk+\" # can we specify gtk3?\n  #else: we don't know the names for all the other distributions\n  #  foreignDep \"\"\n\n\n",
"https://github.com/xmonader/nim-magic": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"libmagic for nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/genotrance/nimclipboard/master/nimclipboard.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"Nim wrapper for libclipboard\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimclipboard\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/andreaferretti/interfaced/master/interfaced.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Go-like interfaces\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"test.nim\", \"test_exports.nim\", \"test_logsink.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask tests, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"test.nim\"\n\ntask test, \"run tests\":\n  setCommand \"tests\"",
"https://github.com/PMunch/Imlib2": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"PMunch\"\ndescription   = \"Wrapper of the Imlib2 library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/pietroppeter/nimoji/master/nimoji.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Pietro Peterlongo\"\ndescription   = \"🍕🍺 emoji support for Nim 👑 and the world 🌍\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallext    = @[\"nim\"]\nbin           = @[\"nimoji\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n\n# Tasks\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/test_nimoji\"\n  exec \"nim c -r src/nimoji\"\n\ntask generate, \"Generates codemap\":\n  exec \"nim c -r tools/generate\"\n\n",
"https://raw.githubusercontent.com/guzba/zippy/master/zippy.nimble": "version       = \"0.5.3\"\nauthor        = \"Ryan Oldenburg\"\ndescription   = \"Pure Nim implementation of deflate, zlib, gzip and zip.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/jiro4989/gameoflife/master/gameoflife.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"gameoflife is library for Game of Life.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"gameoflife\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\ntask docs, \"Generate document\":\n  exec \"nimble doc src/gameoflife.nim -o:docs/gameoflife.html\"\n\ntask examples, \"Build examples (not execute)\":\n  for d in [\"blinker\", \"glider\", \"read_file\"]:\n    withDir \"examples/\" & d:\n      exec \"nim c main.nim\"\n      exec \"echo ---------\"\n\ntask ci, \"Run CI tasks\":\n  exec \"nimble test\"\n  exec \"nimble docs\"\n  exec \"nimble examples\"\n  exec \"nimble buildjs\"\n\ntask buildjs, \"Build JS library\":\n  exec \"nimble js -o:docs/js/gameoflife_js.js js/gameoflife_js.nim\"\n",
"https://github.com/jiro4989/subnet": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"jiro4989\"\ndescription   = \"subnet prints subnet mask in human readable.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"subnet\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\nrequires \"cligen >= 1.0.0\"\n\nimport os, strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"subnet\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/guevara-chan/conio": "# Package\r\n\r\nversion       = \"0.1.0\"\r\nauthor        = \"Guevara-chan\"\r\ndescription   = \".NET-inspired lightweight terminal library\"\r\nlicense       = \"MIT\"\r\nsrcDir        = \"src\"\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.18.0\"",
"https://github.com/aidansteele/aws_sdk.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Aidan Steele\"\ndescription   = \"AWS SDK for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"stringinterpolation\"\nrequires \"sph\"\nrequires \"nim >= 0.13.1\"\n\ntask tests, \"Run tests\":\n    for t in [\"smoketest\"]:\n        exec(\"nim c -r -d:ssl tests/t\" & t)\n",
"https://github.com/MnlPhlp/nimagehide": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"MnlPhlp\"\ndescription   = \"A library to hide data in images. Usable as library or cli tool.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimagehide\"]\n\nbackend       = \"c\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"stb_image >= 2.3\"\nrequires \"cligen >= 0.9.40\"\nrequires \"cli_menu >= 0.2.5\" \n\n# Tasks\nimport os\ntask docs,\"generate docs\":\n  selfExec \"doc2 --project --git.url:https://github.com/MnlPhlp/nimagehide --git.commit:master src/nimagehide.nim\"\n  rmDir(\"docs\")\n  mvDir(\"src/htmldocs\",\"docs\")\n  mvFile(\"docs/nimagehide.html\",\"docs/index.html\")\n",
"https://raw.githubusercontent.com/andreaferretti/csvtools/master/csvtools.nimble": "mode = ScriptMode.Verbose\n\nversion       = \"0.2.1\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Manage CSV files in Nim\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"test.nim\", \"goog.csv\", \"goog-tab.csv\", \"expected.csv\"]\n\nrequires: \"nim >= 1.0\"\n\ntask test, \"run standard tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"test.nim\"",
"https://github.com/mzteruru52/NmiLine": "version     = \"1.1\"\r\nauthor      = \"Teruki Tada\"\r\ndescription = \"Plotting tool using NiGui\"\r\nlicense     = \"MIT\"\r\n\r\nrequires \"nim >= 0.18.0\"\r\nsrcDir = \"src\"\r\nskipDirs = @ [\"example\",\"ScreenShots\",]\r\n",
"https://raw.githubusercontent.com/status-im/nim-chronos/master/chronos.nimble": "packageName   = \"chronos\"\nversion       = \"2.5.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Chronos\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\"]\n\n### Dependencies\n\nrequires \"nim > 1.2.0\",\n         \"stew\",\n         \"bearssl\"\n\ntask test, \"Run all tests\":\n  var commands = [\n    \"nim c -r -d:useSysAssert -d:useGcAssert tests/\",\n    \"nim c -r -d:chronosStackTrace tests/\",\n    \"nim c -r -d:release tests/\",\n    \"nim c -r -d:release -d:chronosFutureTracking tests/\"\n  ]\n  for testname in [\"testall\"]:\n    for cmd in commands:\n      let curcmd = cmd & testname\n      echo \"\\n\" & curcmd\n      exec curcmd\n",
"https://github.com/soasme/nim-markdown": "# Package\n\nversion       = \"0.8.0\"\nauthor        = \"Ju Lin\"\ndescription   = \"A Markdown Parser in Nim World.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"markdown\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask watch, \"run test cases whenever modified the code.\":\n  exec \"watchmedo shell-command --patterns='*.nim' --recursive --command='nimble test' .\"\n",
"https://github.com/jyapayne/nim-libnx": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Joey Payne\"\ndescription   = \"Nintendo Switch library libnx for Nim.\"\nlicense       = \"The Unlicense\"\n\nsrcDir = \"src\"\n\nimport distros\n\nvar prefix = \"\"\nvar username = getEnv(\"USER\")\nif detectOs(Windows):\n  prefix = \"cmd /c \"\n  username = getEnv(\"USERNAME\")\n\n# Deps\nrequires \"nim >= 0.18.1\", \"nimgen#dc9943a22c9c8f6a5a6a92f0055e1de4dfaf87d2\"\nrequires \"switch_build >= 0.1.3\"\n\ntask setup, \"Download and generate bindings\":\n  echo \"Building libnx...\"\n  exec prefix & \"nimgen libnxGen.cfg\"\n\ntask buildExamples, \"Build switch examples\":\n  if detectOs(Windows):\n    let devkitPath = getEnv(\"DEVKITPRO\")\n    if devkitPath == \"\" or not dirExists(devkitPath):\n      echo \"You must set the DEVKITPRO environment variable to something valid!\"\n    else:\n      exec prefix & \"switch_build --libnxPath=\\\"\" & devkitPath & \"/libnx/\\\" --author=\\\"\" & username & \"\\\" --version=\\\"1.0.0\\\" examples/helloworld/helloworld.nim\"\n      exec prefix & \"switch_build --libnxPath=\\\"\" & devkitPath & \"/libnx/\\\" --author=\\\"\" & username & \"\\\" --version=\\\"1.0.0\\\" examples/accounts/account_ex.nim\"\n  else:\n    exec prefix & \"switch_build --libnxPath=\\\"\" & thisDir() & \"/src/libnx/wrapper/nx/\\\" --author=\\\"\" & username & \"\\\" --version=\\\"1.0.0\\\" examples/helloworld/helloworld.nim\"\n    exec prefix & \"switch_build --libnxPath=\\\"\" & thisDir() & \"/src/libnx/wrapper/nx/\\\" --author=\\\"\" & username & \"\\\" --version=\\\"1.0.0\\\" examples/accounts/account_ex.nim\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  discard\n# no tests because code needs to run on the Switch :(\n#  exec \"nim c -r tests/test.nim\"\n",
"https://github.com/planetis-m/patgraph": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Antonis\"\ndescription   = \"graph data structure library\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.9\"\n",
"https://raw.githubusercontent.com/genotrance/nimfuzzy/master/nimfuzzy.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"genotrance\"\ndescription   = \"Fuzzy search wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimfuzzy\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim cpp --passC:\\\"-DFTS_FUZZY_MATCH_IMPLEMENTATION\\\" -r tests/fuzztest.nim\"\n\n",
"https://github.com/Nycto/DelaunayNim": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Nycto\"\ndescription   = \"Delaunay triangulator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[ \"bin\" ]\n\n# Deps\nrequires \"nim >= 1.2.0\"\n\n",
"https://github.com/numforge/nim-clblast": "### Package\npackageName   = \"clblast\"\nversion       = \"0.0.1\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"A wrapper for CLBlast, an OpenCL BLAS library\"\nlicense       = \"Apache License 2.0\"\n\n### Source\nsrcDir        = \"src\"\n\n### Dependencies\nrequires \"nim >= 0.17.2\", \"opencl\"\n\ntask autogen, \"Automatically generate up-to-date CLBlast bindings (requires nimgen)\":\n  exec \"nimgen clblast_nimgen.cfg\"\n  if dirExists\"src/generated\":\n    echo \"src/generated directory exists and will replaced by up-to-date bindings\"\n    rmDir \"src/generated\"\n  mvFile \"clblast\", \"src/generated\"\n  echo \"CLBlast bindings generated\"",
"https://raw.githubusercontent.com/yglukhov/rect_packer/master/rect_packer.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Pack rects into bigger rect\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n",
"https://github.com/planety/kview": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"flywind\"\ndescription   = \"For karax html preview.\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"karax\"\n\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/test.nim\"\n",
"https://github.com/subsetpark/ad": "# Package\nversion       = \"0.7.3\"\nauthor        = \"Z. D. Smith\"\ndescription   = \"A simple RPN calculator\"\nlicense       = \"MIT\"\nbin           = @[\"ad\"]\nskipExt       = @[\"nim\"]\n\n# Deps\nrequires \"nim >= 1.2.0\"\nrequires \"bignum >= 0.2.5\"\n",
"https://github.com/disruptek/golden": "version = \"3.0.15\"\nauthor = \"disruptek\"\ndescription = \"a benchmark tool\"\nlicense = \"MIT\"\nrequires \"nim >= 1.0.4\"\n\nrequires \"foreach >= 1.0.2\"\nrequires \"bump >= 1.8.15\"\nrequires \"msgpack4nim 0.2.9\"\nrequires \"terminaltables#82ee5890c13e381de0f11c8ba6fe484d7c0c2f19\"\nrequires \"https://github.com/disruptek/gittyup >= 2.4.4 & < 3.0.0\"\nrequires \"nimterop >= 0.6.2 & < 1.0.0\"\n\n# we need this one for csize reasons\nrequires \"cligen >= 0.9.40\"\n\nbin = @[\"golden\"]\nsrcDir = \"src\"\n\nproc execCmd(cmd: string) =\n  echo \"execCmd:\" & cmd\n  exec cmd\n\nproc execTest(test: string) =\n  execCmd \"nim c           -f -r \" & test\n  execCmd \"nim c   -d:release -r \" & test\n  execCmd \"nim c   -d:danger  -r \" & test\n  execCmd \"nim cpp            -r \" & test\n  execCmd \"nim cpp -d:danger  -r \" & test\n  when NimMajor >= 1 and NimMinor >= 1:\n    execCmd \"nim c --useVersion:1.0 -d:danger -r \" & test\n    execCmd \"nim c   --gc:arc -r \" & test\n    execCmd \"nim cpp --gc:arc -r \" & test\n\ntask test, \"run tests for travis\":\n  execTest(\"tests/tstats.nim\")\n  execTest(\"tests/tspec.nim\")\n  execTest(\"tests/tdb.nim\")\n  execTest(\"tests/tinvoke.nim\")\n",
"https://github.com/markspanbroek/monocypher.nim": "# Package\n\nversion     = \"0.2.1\"\nauthor      = \"Mark Spanbroek\"\ndescription = \"Monocypher\"\nlicense     = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0 & < 2.0.0\"\nrequires \"nimterop >= 0.6.13 & < 0.7.0\"\n\n# Test dependencies\n\nrequires \"sysrandom >= 1.1.0 & < 2.0.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-overpass/master/overpass.nimble": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"juancarlospaco\"\ndescription   = \"OpenStreetMap Overpass API Lib\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/mratsim/Synthesis/master/synthesis.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"A compile-time, compact, fast, without allocation, state-machine generator.\"\nlicense       = \"MIT or Apache License 2.0\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\nproc test(flags, path: string) =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  # Note: we compile in release mode. This still have stacktraces\n  #       but is much faster than -d:debug\n\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  echo \"\\n========================================================================================\"\n  echo \"Running [ \", lang, \" \", flags, \" ] \", path\n  echo \"========================================================================================\"\n  exec \"nim \" & lang & \" \" & flags & \" -d:release --outdir:build -r \" & path\n\ntask test, \"Run Synthesis tests\":\n  test \"\", \"examples/water_phase_transitions.nim\"\n",
"https://raw.githubusercontent.com/Clonkk/nimfftw3/master/fftw3.nimble": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"rcaillaud\"\ndescription   = \"Nim FFTW bindings\"\nlicense       = \"LGPL-2.1\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"arraymancer >= 0.6.1\"\n\ntask gendoc, \"gen doc\":\n  exec(\"nimble doc --project src/fftw3.nim --out:docs/\")\n\n",
"https://github.com/status-im/nim-faststreams": "mode = ScriptMode.Verbose\n\npackageName   = \"faststreams\"\nversion       = \"0.2.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Nearly zero-overhead input/output streams for Nim\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"stew\",\n         \"testutils\",\n         \"chronos\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"-d:debug   --threads:on\", \"tests/all_tests\"\n  test \"-d:release --threads:on\", \"tests/all_tests\"\n  test \"-d:danger  --threads:on\", \"tests/all_tests\"\n",
"https://github.com/disruptek/atoz": "version = \"2626.1.0\"\nauthor = \"disruptek\"\ndescription = \"Amazon Web Services (AWS) APIs\"\nlicense = \"MIT\"\nrequires \"nim >= 0.20.0\"\nrequires \"sigv4 >= 1.0.4\"\nrequires \"https://github.com/disruptek/rest >= 1.0.0\"\nrequires \"https://github.com/disruptek/openapi >= 3.1.3\"\nrequires \"npeg >= 0.22.2\"\n\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/rockcavera/pcgbasic/master/pcgbasic.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"rockcavera\"\ndescription   = \"Permuted Congruential Generator (PCG) Random Number Generation (RNG) for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/markspanbroek/monocypher.nim/master/monocypher.nimble": "# Package\n\nversion     = \"0.2.1\"\nauthor      = \"Mark Spanbroek\"\ndescription = \"Monocypher\"\nlicense     = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0 & < 2.0.0\"\nrequires \"nimterop >= 0.6.13 & < 0.7.0\"\n\n# Test dependencies\n\nrequires \"sysrandom >= 1.1.0 & < 2.0.0\"\n",
"https://github.com/jxy/MDevolve": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Xiao-Yong Jin\"\ndescription   = \"Integrator framework for Molecular Dynamic evolutions\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/mjendrusch/metric/master/metric.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Michael Jendrusch\"\ndescription   = \"Unit types for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n\nproc testConfig() =\n  --path: \"../src\"\n  --run\n\ntask test, \"run metric tests\":\n  testConfig()\n  setCommand \"c\", \"tests/tall.nim\"\n",
"https://raw.githubusercontent.com/abbeymart/mctranslog/master/mctranslog.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Abi Akindele [abbeymart]\"\ndescription   = \"mctranslog - Transaction Log Package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipFiles     = @[\"project.md\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"mcresponse >= 0.1.0\"\nrequires \"mcdb >= 0.1.3\"\n",
"https://github.com/zendbit/nim.zfblast": "# Package\nversion     = \"0.2.0\"\nauthor      = \"Amru Rosyada\"\ndescription = \"High performance http server (https://tools.ietf.org/html/rfc2616) with persistent connection for nim language\"\nlicense     = \"BSD\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 1.4.0\"\nrequires \"uri3 >= 0.1.4\"\nrequires \"sha1\"\n",
"https://raw.githubusercontent.com/status-im/nim-daemon/master/daemon.nimble": "packageName   = \"daemon\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Cross-platform process daemonization\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\", \"Nim\", \"nim\"]\n\n### Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/testdaemon\"\n  exec \"nim c -r -d:release tests/testdaemon\"\n",
"https://api.github.com/repos/achesak/nim-geoip/contents": "[{\"name\":\"LICENSE.md\",\"path\":\"LICENSE.md\",\"sha\":\"8abf71ba1cca2ee7c774ec83c2c3eeb287fd10dd\",\"size\":1055,\"url\":\"https://api.github.com/repos/achesak/nim-freegeoip/contents/LICENSE.md?ref=master\",\"html_url\":\"https://github.com/achesak/nim-freegeoip/blob/master/LICENSE.md\",\"git_url\":\"https://api.github.com/repos/achesak/nim-freegeoip/git/blobs/8abf71ba1cca2ee7c774ec83c2c3eeb287fd10dd\",\"download_url\":\"https://raw.githubusercontent.com/achesak/nim-freegeoip/master/LICENSE.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/achesak/nim-freegeoip/contents/LICENSE.md?ref=master\",\"git\":\"https://api.github.com/repos/achesak/nim-freegeoip/git/blobs/8abf71ba1cca2ee7c774ec83c2c3eeb287fd10dd\",\"html\":\"https://github.com/achesak/nim-freegeoip/blob/master/LICENSE.md\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"9f2f66e1a727f78490a8ee75e73bfd8c308a6fb2\",\"size\":267,\"url\":\"https://api.github.com/repos/achesak/nim-freegeoip/contents/README.md?ref=master\",\"html_url\":\"https://github.com/achesak/nim-freegeoip/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/achesak/nim-freegeoip/git/blobs/9f2f66e1a727f78490a8ee75e73bfd8c308a6fb2\",\"download_url\":\"https://raw.githubusercontent.com/achesak/nim-freegeoip/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/achesak/nim-freegeoip/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/achesak/nim-freegeoip/git/blobs/9f2f66e1a727f78490a8ee75e73bfd8c308a6fb2\",\"html\":\"https://github.com/achesak/nim-freegeoip/blob/master/README.md\"}},{\"name\":\"freegeoip.nim\",\"path\":\"freegeoip.nim\",\"sha\":\"d8f1971c6b9c8d557f9e56bcd496ce8553503137\",\"size\":2259,\"url\":\"https://api.github.com/repos/achesak/nim-freegeoip/contents/freegeoip.nim?ref=master\",\"html_url\":\"https://github.com/achesak/nim-freegeoip/blob/master/freegeoip.nim\",\"git_url\":\"https://api.github.com/repos/achesak/nim-freegeoip/git/blobs/d8f1971c6b9c8d557f9e56bcd496ce8553503137\",\"download_url\":\"https://raw.githubusercontent.com/achesak/nim-freegeoip/master/freegeoip.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/achesak/nim-freegeoip/contents/freegeoip.nim?ref=master\",\"git\":\"https://api.github.com/repos/achesak/nim-freegeoip/git/blobs/d8f1971c6b9c8d557f9e56bcd496ce8553503137\",\"html\":\"https://github.com/achesak/nim-freegeoip/blob/master/freegeoip.nim\"}},{\"name\":\"freegeoip.nimble\",\"path\":\"freegeoip.nimble\",\"sha\":\"33048f34c75d76ce1bfb535e434a4fa520e0dca6\",\"size\":183,\"url\":\"https://api.github.com/repos/achesak/nim-freegeoip/contents/freegeoip.nimble?ref=master\",\"html_url\":\"https://github.com/achesak/nim-freegeoip/blob/master/freegeoip.nimble\",\"git_url\":\"https://api.github.com/repos/achesak/nim-freegeoip/git/blobs/33048f34c75d76ce1bfb535e434a4fa520e0dca6\",\"download_url\":\"https://raw.githubusercontent.com/achesak/nim-freegeoip/master/freegeoip.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/achesak/nim-freegeoip/contents/freegeoip.nimble?ref=master\",\"git\":\"https://api.github.com/repos/achesak/nim-freegeoip/git/blobs/33048f34c75d76ce1bfb535e434a4fa520e0dca6\",\"html\":\"https://github.com/achesak/nim-freegeoip/blob/master/freegeoip.nimble\"}}]",
"https://github.com/sealmove/oblivion": "version       = \"0.1.0\"\nauthor        = \"Stefanos Mandalas\"\ndescription   = \"Shell command manager\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"o\"]\n",
"https://github.com/liquid600pgm/rdgui": "# Package\n\nversion = \"0.1.0\"\nauthor = \"liquid600pgm\"\ndescription = \"A modular GUI toolkit for rapid\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"rapid\"\n",
"https://raw.githubusercontent.com/wltsmrz/nim_zstd/master/zstd.nimble": "version = \"0.5.0\"\nauthor = \"wltsmrz\"\ndescription = \"Nim bindings for zstd\"\nlicense = \"MIT\"\nskipDirs = @[\"examples\"]\nskipFiles = @[\"README.md\"]\ninstallDirs = @[\"zstd\"]\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/pseudo-random/geometryutils": "version = \"1.2.0\"\nauthor = \"pseudo-random <josh.leh.2018@gmail.com>\"\nlicense = \"MIT\"\ndescription = \"A collection of geometry utilities for nim\"\nsrc_dir = \"src\"\n\nrequires \"nim >= 1.2.4\"\nrequires \"sdl2 >= 2.0.3\"\nrequires \"opengl >= 1.2.6\"\n",
"https://raw.githubusercontent.com/chocobo333/asciitype/master/asciitype.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"chocobo333\"\ndescription   = \"This module performs character tests.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/Vladar4/nimgame/master/nimgame.nimble": "[Package]\nname          = \"nimgame\"\nversion       = \"0.3.2\"\nauthor        = \"Vladar\"\ndescription   = \"\"\"Simple 2D game engine for Nim language.\"\"\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.12.2\"\n\n",
"https://github.com/Matceporial/nim-urand": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Matceporial\"\ndescription   = \"Simple method of obtaining secure random numbers from the OS\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/momeemt/Unit": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Momeemt\"\ndescription   = \"A library that provides unit types in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/fox0430/moe": "# Package\n\nversion       = \"0.2.4.1\"\nauthor        = \"fox0430\"\ndescription   = \"A command lined based text editor\"\nlicense       = \"GPLv3\"\nsrcDir        = \"src\"\nbin           = @[\"moe\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"https://github.com/walkre-niboshi/nim-ncurses >= 1.0.2\"\nrequires \"unicodedb >= 0.9.0\"\nrequires \"parsetoml >= 0.4.0\"\n\ntask release, \"Build for release\":\n  exec \"nim c -o:moe -d:release src/moe\"\n\n",
"https://github.com/def-/nim-bpg.git": "# Package\n\nversion     = \"0.1\"\nauthor      = \"Dennis Felsing\"\ndescription = \"Bindings for Bellard's BPG (Better Portable Graphics) library\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n# Dependencies\n\nrequires \"nim > 0.10\"\n",
"https://github.com/oswjk/nimpb": "version = \"0.2.0\"\nauthor = \"Oskari Timperi\"\ndescription = \"protobuf library for Nim\"\nlicense = \"MIT\"\n\nskipDirs = @[\"examples\", \"tests\", \"protobuf-3.5.1\"]\n\nbin = @[\"nimpb/compiler/nimpb_build\"]\n\nrequires \"nim >= 0.19.0\"\n\n# Hard dependency for now. In the future we could make nimpb_protoc download\n# stuff on-demand which would make the dependency a bit lighter. Especially\n# if a user already has the protoc compiler somewhere, in which case\n# nimpb_protoc might be unnecessary.\nrequires \"nimpb_protoc\"\n\nimport ospaths, strformat\n\ntask build_protobuf, \"Download protobuf, build it and then build the conformance test suite\":\n    if not fileExists(\"protobuf-all-3.5.1.zip\"):\n        exec \"wget https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-all-3.5.1.zip\"\n    if not dirExists(\"protobuf-3.5.1\"):\n        exec \"unzip protobuf-all-3.5.1.zip\"\n    withDir \"protobuf-3.5.1\":\n        if not fileExists(\"Makefile\"):\n            exec \"./configure\"\n        exec \"make\"\n        withDir \"conformance\":\n            exec \"make\"\n\ntask run_conformance_tests, \"Run the conformance test suite\":\n    var testDir = \"tests/conformance\"\n    var proto = testDir / \"test_messages_proto3.proto\"\n    var testRunner = \"./protobuf-3.5.1/conformance/conformance-test-runner\"\n    exec &\"./nimpb/compiler/nimpb_build -I={testDir} --out={testDir} {proto}\"\n    exec &\"./nimpb/compiler/nimpb_build -I={testDir} --out={testDir} {testDir}/conformance.proto\"\n    exec &\"nimble c {testDir}/conformance_nim.nim\"\n    exec &\"{testRunner} {testDir}/conformance_nim\"\n\ntask gen_wkt, \"Re-generate WKT's\":\n    var incdir = \"../nimpb_protoc/src/nimpb_protocpkg/protobuf/include/google/protobuf\"\n    var outdir = \"nimpb/wkt\"\n    for proto in listFiles(incdir):\n        echo(&\"COMPILING {proto}\")\n        exec &\"./nimpb/compiler/nimpb_build -I={incdir} --out={outdir} {proto}\"\n",
"https://raw.githubusercontent.com/status-im/nim-testutils/master/testutils.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"testutils\"\nversion       = \"0.3.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A unittest framework\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\nbin           = @[\"ntu\"]\n#srcDir        = \"testutils\"\n\nrequires \"nim >= 1.0.2\"\n\nproc execCmd(cmd: string) =\n  echo \"execCmd: \" & cmd\n  exec cmd\n\nproc execTest(test: string) =\n  let\n    test = \"ntu test \" & test\n  when true:\n    execCmd \"nim c           -f -r \" & test\n    execCmd \"nim c   -d:release -r \" & test\n    execCmd \"nim c   -d:danger  -r \" & test\n    execCmd \"nim cpp            -r \" & test\n    execCmd \"nim cpp -d:danger  -r \" & test\n    #when NimMajor >= 1 and NimMinor >= 1 and not defined(macosx):\n    when false:\n      # we disable gc:arc test here because Nim cgen\n      # generate something not acceptable for clang\n      # and failed on windows 64 bit too\n      execCmd \"nim c   --gc:arc --exceptions:goto -r \" & test\n      execCmd \"nim cpp --gc:arc --exceptions:goto -r \" & test\n  else:\n    execCmd \"nim c           -f -r \" & test\n\ntask test, \"run tests for travis\":\n  execTest(\"tests\")\n",
"https://raw.githubusercontent.com/matkuki/chipmunk7_demos/master/chipmunk7_demos.nimble": "# Package\nversion = \"1.1\"\nauthor = \"Matic Kukovec\"\ndescription = \"Demos for Chipmunk7 physics library\"\nlicense = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.18.0\", \"sdl2 >= 1.1\", \"opengl >= 1.1.0\"\n",
"https://raw.githubusercontent.com/Senketsu/nim-db-ex/master/ndbex.nimble": "[Package]\nname = \"ndbex\"\nversion = \"0.2.1\"\nauthor = \"Senketsu\"\ndescription = \"small extension for Nim's database modules (db_*)\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n[Deps]\nRequires: \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/stisa/jupyternim/master/jupyternim.nimble": "# Package\n\nversion       = \"0.6.1\"\nauthor        = \"stisa\"\ndescription   = \"A Jupyter Kernel for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"zmq >= 0.3.1\"\nrequires \"hmac\"\nrequires \"nimSHA2\"\nrequires \"nimPNG\"\n\ninstallDirs = @[\"jupyternimpkg\", \"jupyternimspec\"]\nsrcDir = \"src\"\nbin = @[\"jupyternim\"]\n\nimport os, strutils\n\nafter install:\n  var jnpath = gorgeEx(\"nimble path jupyternim\")\n  jnpath.output.stripLineEnd\n  if jnpath.exitCode == 0:\n    exec(jnpath.output / bin[0].changeFileExt(ExeExt))\n  else:\n    echo \"Error: jupyternim not installed in nimble\"\n\ntask dev, \"Build a debug version\":\n  # Assumes cwd is jupyternim/\n  var jnpath = gorgeEx(\"nimble path jupyternim\")\n  jnpath.output.stripLineEnd\n  if jnpath.exitCode == 0:\n    exec(\"nim c -d:debug -o:\" & jnpath.output / bin[0].changeFileExt(ExeExt) & \" src/jupyternim.nim\")\n  else:\n    echo \"Can't find an installed jupyternim\"\n\ntask hcr, \"Build a debug version with -d:useHcr\":\n  # Assumes cwd is jupyternim/\n  var jnpath = gorgeEx(\"nimble path jupyternim\")\n  jnpath.output.stripLineEnd\n  if jnpath.exitCode == 0:\n    exec(\"nim c -d:debug -d:useHcr -o:\" & jnpath.output / bin[0].changeFileExt(ExeExt) & \" src/jupyternim.nim\")\n  else:\n    echo \"Can't find an installed jupyternim\"\n\ntask rhcr, \"Build and register a release version with -d:useHcr\":\n  # Assumes cwd is jupyternim/\n  var jnpath = gorgeEx(\"nimble path jupyternim\")\n  jnpath.output.stripLineEnd\n  if jnpath.exitCode == 0:\n    exec(\"nim c -d:release -d:useHcr -o:\" & jnpath.output / bin[0].changeFileExt(ExeExt) & \" src/jupyternim.nim\")\n    exec(jnpath.output / bin[0].changeFileExt(ExeExt))\n  else:\n    echo \"Can't find an installed jupyternim\"\n\ntask docs, \"Build docs\":\n  exec(r\"nim doc -O:.\\docs\\display.html .\\src\\jupyternimpkg\\display.nim\")\n  exec(r\"nim doc -O:.\\docs\\index.html .\\src\\jupyternim.nim\")",
"https://github.com/treeform/netty/": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"treeform\"\ndescription   = \"Netty is a reliable UDP connection for games in Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"flatty >= 0.1.0\"\n",
"https://github.com/capocasa/naw": "version     = \"0.1.0\"\nauthor      = \"Carlo Capocasa\"\ndescription = \"A glue wrapper to do awk-style text processing with Nim\"\nlicense     = \"MIT\"\nbin           = @[\"naw\"]\ninstallExt    = @[\"nim\"]\n\nrequires \"nim >= 1.2.0\"\n\n",
"https://raw.githubusercontent.com/genotrance/nimtess2/master/nimtess2.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"genotrance\"\ndescription   = \"Nim wrapper for libtess2\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimtess2\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://github.com/fowlmouth/nimrod-sfml/": "[Package]\nname        = \"sfml\"\nversion     = \"2.0\"\nauthor      = \"fowl\"\ndescription = \"High level OpenGL-based Game Library\"\nlicense     = \"MIT\"\n",
"https://raw.githubusercontent.com/Jeff-Ciesielski/nimr/master/nimr.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"Helper to run nim code like a script\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n# Executable\n\nbin           = @[\"nimr\"]\n\n# Settings\n\nsrcDir        = \"src\"\n\n",
"https://raw.githubusercontent.com/PMunch/xevloop/master/xevloop.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Library to more easily create X11 event loops\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"x11\"\n",
"https://raw.githubusercontent.com/owlinux1000/nish/master/nish.nimble": "version = \"1.0.0\"\nauthor = \"owlinux1000\"\ndescription = \"A Toy Shell Application\"\nlicense = \"MIT\"\nbin = @[\"nish\"]\nskipExt = @[\"nim\"]\n",
"https://raw.githubusercontent.com/tormund/news/master/news.nimble": "# Package\n\nversion       = \"0.5\"\nauthor        = \"Andre von Houck, Volodymyr Melnychuk\"\ndescription   = \"Simple WebSocket library for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/paradox460/spurdify/master/spurdify.nimble": "# Package\n\nversion       = \"0.0.6\"\nauthor        = \"Jeff Sandberg\"\ndescription   = \"Spurdification library and CLI\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"spurdify\"]\nbinDir        = \"bin/\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2, cligen >= 1.0.0 & < 1.1.0\"\n\ntask upx, \"Build minified binary\":\n  let args = \"nimble build -d:release -y\"\n  exec args\n\n  if findExe(\"upx\") != \"\":\n    echo \"Running `upx --best`\"\n    exec \"upx --best bin/spurdify\"\n\n  if findExe(\"sha256sum\") != \"\":\n    echo \"Running `sha256sum`\"\n    exec \"sha256sum bin/spurdify\"\n",
"https://github.com/kristianmandrup/react-16.nim": "# Package\n\nversion       = \"0.3.6\"\nauthor        = \"Andrea Ferretti and Kristian Mandrup\"\ndescription   = \"Sample React 16.6 SPA with hooks using Nim\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"example\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask example, \"builds example application\":\n  --define: release\n  switch(\"out\", \"example/app.js\")\n  --path: \".\"\n  setCommand \"js\", \"example/app.nim\"\n",
"https://github.com/Yardanico/nim-osureplay": "# Package\nversion     = \"0.0.3\"\nauthor      = \"Daniil Yarancev\"\ndescription = \"Osu replay parser library and command-line utility.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nbin = @[\"osureader\"]\nrequires \"nim >= 0.16.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/tester\"",
"https://github.com/technicallyagd/unpack": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"T.agd\"\ndescription   = \"Array/Sequence/Object destructuring/unpacking macro\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/technicallyagd/ringDeque/master/ringDeque.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"T.agd\"\ndescription   = \"deque implementatoin using DoublyLinkedRing\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/nim-lang/osinfo.git": "# Package\nversion       = \"0.3.2\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Modules providing information about the OS.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/moigagoo/loco/master/loco.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Konstantin Molchanov\"\ndescription   = \"Localization package for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/momeemt/SampleTodoList/master/sampleTodoList.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"momeemt\"\ndescription   = \"Sample Todo List Application\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"sampleTodoList\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"cligen >= 1.2.2\"",
"https://raw.githubusercontent.com/dom96/gamelight/master/gamelight.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A set of simple modules for writing a JavaScript 2D game.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\nrequires \"sdl2\"\nrequires \"chroma >= 0.1.0\"\nrequires \"typography >= 0.2.4\"\nrequires \"flippy >= 0.4.0\"\n\ntask exampleem, \"Builds examples for emscripten\":\n  exec \"rm -r examples/emscripten\"\n  exec \"nim c -d:emscripten examples/clipping.nim\"\n  exec \"nim c -r examples/rename_all.nim clipping\"",
"https://raw.githubusercontent.com/PMunch/combparser/master/combparser.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"A parser combinator library for easy generation of complex parsers\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents": "[{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"498d874cd52e60977a9d7db0d76911989f2479c8\",\"size\":1086,\"url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/blobs/498d874cd52e60977a9d7db0d76911989f2479c8\",\"download_url\":\"https://raw.githubusercontent.com/philip-wernersbach/nim-qt5_qtsql/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/blobs/498d874cd52e60977a9d7db0d76911989f2479c8\",\"html\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"37aa7ea541cc5dad683cb385042ec047ffbd80bc\",\"size\":2796,\"url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/README.md?ref=master\",\"html_url\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/blobs/37aa7ea541cc5dad683cb385042ec047ffbd80bc\",\"download_url\":\"https://raw.githubusercontent.com/philip-wernersbach/nim-qt5_qtsql/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/blobs/37aa7ea541cc5dad683cb385042ec047ffbd80bc\",\"html\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/blob/master/README.md\"}},{\"name\":\"qt5_qtsql.nim\",\"path\":\"qt5_qtsql.nim\",\"sha\":\"e0dde6921cf8f8cc839574660587cb85d50af5d5\",\"size\":1842,\"url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/qt5_qtsql.nim?ref=master\",\"html_url\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/blob/master/qt5_qtsql.nim\",\"git_url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/blobs/e0dde6921cf8f8cc839574660587cb85d50af5d5\",\"download_url\":\"https://raw.githubusercontent.com/philip-wernersbach/nim-qt5_qtsql/master/qt5_qtsql.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/qt5_qtsql.nim?ref=master\",\"git\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/blobs/e0dde6921cf8f8cc839574660587cb85d50af5d5\",\"html\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/blob/master/qt5_qtsql.nim\"}},{\"name\":\"qt5_qtsql.nimble\",\"path\":\"qt5_qtsql.nimble\",\"sha\":\"cb514dab9de5c1c3530e200d071fa2c3ab338016\",\"size\":292,\"url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/qt5_qtsql.nimble?ref=master\",\"html_url\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/blob/master/qt5_qtsql.nimble\",\"git_url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/blobs/cb514dab9de5c1c3530e200d071fa2c3ab338016\",\"download_url\":\"https://raw.githubusercontent.com/philip-wernersbach/nim-qt5_qtsql/master/qt5_qtsql.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/qt5_qtsql.nimble?ref=master\",\"git\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/blobs/cb514dab9de5c1c3530e200d071fa2c3ab338016\",\"html\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/blob/master/qt5_qtsql.nimble\"}},{\"name\":\"qt5_qtsql\",\"path\":\"qt5_qtsql\",\"sha\":\"a98f6f587765a026568599d84f79f7bed5a11b29\",\"size\":0,\"url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/qt5_qtsql?ref=master\",\"html_url\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/tree/master/qt5_qtsql\",\"git_url\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/trees/a98f6f587765a026568599d84f79f7bed5a11b29\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/contents/qt5_qtsql?ref=master\",\"git\":\"https://api.github.com/repos/philip-wernersbach/nim-qt5_qtsql/git/trees/a98f6f587765a026568599d84f79f7bed5a11b29\",\"html\":\"https://github.com/philip-wernersbach/nim-qt5_qtsql/tree/master/qt5_qtsql\"}}]",
"https://raw.githubusercontent.com/williamhatcher/azure_translate/master/azure_translate.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"William 'psyFi' Hatcher\"\ndescription   = \"Nim Library for Azure Cognitive Services Translate\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"nuuid >= 0.1.0\"\n",
"https://raw.githubusercontent.com/Parashurama/fontconfig/master/fontconfig.nimble": "[Package]\nname = \"fontconfig\"\nversion = \"0.1.0\"\nauthor = \"Parashurama\"\ndescription = \"Low level wrapper for the fontconfig library.\"\nlicense = \"Fontconfig Licence.\"\n\nInstallFiles = \"fontconfig.nim\"\n\n",
"https://raw.githubusercontent.com/alialrahahleh/fjq/master/jq.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Ali AlRahahleh\"\ndescription   = \"Fast JSON parser\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\nbin           = @[\"fjq\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/PMunch/drawille-nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Allows drawing in the terminal by using UTF Braille characters. Idea from https://github.com/asciimoo/drawille\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\nskipDirs = @[\"examples\"]",
"https://github.com/achesak/nim-grp": "[Package]\nname = \"grp\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with the UNIX group file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/oswjk/nimlevenshtein/master/nimlevenshtein.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Oskari Timperi\"\ndescription   = \"A wrapper for algorithms from python-Levenshtein package.\"\nlicense       = \"GPL-2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/ThomasTJdev/nim_eloverblik_api": "# Copyright 2020 - Thomas T. Jarløv\n\n# Package\nversion       = \"0.0.7\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"API for www.eloverblik.dk\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"config\", \"src\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\nrequires \"nmqtt >= 1.0.0\"\n\n",
"https://raw.githubusercontent.com/jangko/nimAGG/master/nimAGG.nimble": "[Package]\nname          = \"nimAGG\"\nversion       = \"0.1.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"nimAGG is a Nim port of Anti Grain Geometry(AGG)\"\nlicense       = \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.16.0\"\nrequires: \"sdl2_nim#head\"\nrequires: \"nimBMP >= 0.1.0\"\nrequires: \"freetype >= 0.1.0\"\nrequires: \"polyBool >= 0.1.0\"\n",
"https://github.com/genotrance/snip": "# Package\n\nversion     = \"0.2.3\"\nauthor      = \"genotrance\"\ndescription = \"Text editor to speed up testing code snippets\"\nlicense     = \"MIT\"\n\nbin = @[\"snip\"]\nsrcDir = \"src\"\nskipDirs = @[\"snip\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n\ntask release, \"Build release binary\":\n  exec \"nim c -d:release -o:snip -d:VERSION=v\" & version & \" --opt:size src/snip.nim\"\n  exec \"sleep 1\"\n  exec \"strip -s snip.exe\"\n  exec \"upx --best snip.exe\"\n\ntask key, \"Build key\":\n  exec \"nim c -o:key src/snip/key.nim\"\n\ntask buildmap, \"Build buildmap\":\n  exec \"nim c -o:buildmap src/snip/buildmap.nim\"\n\ntask test, \"Test snip\":\n  exec \"nim c tests/sniptest.nim\"\n",
"https://raw.githubusercontent.com/SolitudeSF/pinggraph/master/pinggraph.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Simple terminal ping graph\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"pinggraph\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\", \"cligen >= 0.9.28\"\n",
"https://raw.githubusercontent.com/Knaque/stalinsort/master/stalinsort.nimble": "# Package\nversion = \"0.3.1\"\nauthor = \"Knaque\"\ndescription = \"A Nim implementation of the Stalin Sort algorithm.\"\nlicense = \"CC0-1.0\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n\n\nsrcDir = \"src\"",
"https://github.com/OpenSystemsLab/hmac.nim": "version       = \"0.2.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"HMAC hashing in Nim\"\nlicense       = \"MIT\"\n\nrequires \"nim\", \"nimSHA2\", \"sha1\", \"nimcrypto >= 0.5.4\"\n",
"https://github.com/quelklef/lilt": "\n# Package\n\n# Thanks to https://github.com/nim-lang/nimble/blob/master/nimble.nimble#L4\n\nimport ospaths\ntemplate packageDir: string = instantiationInfo(fullPaths=true).filename.parentDir\n\nwhen fileExists(packageDir / \"src/version.txt\"):\n    # In the git repository the Nimble sources are in a ``src`` directory.\n    version = slurp(packageDir / \"src/version.txt\")\nelse:\n    # When the package is installed, the ``src`` directory disappears.\n    version = slurp(packageDir / \"version.txt\")\n\n# Verison set above\nauthor        = \"Eli Maynard\"\ndescription   = \"Simple language for writing parsers\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://raw.githubusercontent.com/luked99/linuxfb.nim/master/linuxfb.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Luke Diamand\"\ndescription   = \"Wrapper for <linux/fb.h> framebuffer ioctls\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\"\n\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/tester\"\n",
"https://raw.githubusercontent.com/yglukhov/persistent_enums/master/persistent_enums.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Define enums which values preserve their binary representation upon inserting or reordering\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.1\"\n\n",
"https://raw.githubusercontent.com/juancarlospaco/nimbug/master/nimbug.nimble": "version       = \"0.2.2\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Nim Semi-Auto Bug Report Tool\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimbug\"]\n\nrequires \"nim >= 1.2.2\"\n",
"https://raw.githubusercontent.com/ruivieira/matplotnim/master/matplotnim.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Rui Vieira\"\ndescription   = \"Nim wrapper for matplotlib\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\nrequires \"tempfile\"\n",
"https://raw.githubusercontent.com/GULPF/samson/master/samson.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"JSON & JSON5 implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -d:json5InternalTesting -r tests/testrunner.nim\"\n  rmFile \"tests/testrunner\"\n\ntask unicode, \"Generate Unicode ranges\":\n  exec \"nim c -r unicode_data/generate '\" &\n    thisDir() & \"/src/samson/private/generated/unicode_data.nim'\"\n  rmFile \"unicode_data/generate\"\n\ntask docs, \"Generate docs\":\n  exec \"nim doc -o:docs/samson.html src/samson\"\n  exec \"nim doc -o:docs/pragmas.html src/samson/pragmas\"\n  exec \"nim doc -o:docs/errors.html src/samson/errors\"",
"https://github.com/kaushalmodi/bignum": "# Package\nversion     = \"1.0.4\"\nauthor      = \"Federico Omoto\"\ndescription = \"Wrapper around the GMP bindings for the Nim language.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 0.20.0\", \"gmp >= 0.2.4\"\n",
"https://raw.githubusercontent.com/fragcolor-xyz/nimline/master/nimline.nimble": "# Package\nversion     = \"0.1.7\"\nauthor      = \"sinkingsugar\"\ndescription = \"Wrapper-less C/C++ interop for Nim\"\nlicense     = \"MIT\"\nskipFiles   = @[\".gitlab-ci.yml\", \".travis.yml\", \"Dockerfile\"]\n\n# Deps\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/FedericoCeratto/nim-bencode": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"bencode library\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-webp/master/webp.nimble": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"Juan Carlos\"\ndescription   = \"WebP Tools wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n\nimport distros\nforeignDep \"libwebp\"\n",
"https://raw.githubusercontent.com/euantorano/pledge.nim/master/pledge.nimble": "# Package\n\nversion       = \"2.0.1\"\nauthor        = \"Euan T\"\ndescription   = \"A wrapper around OpenBSD's pledge(2) systemcall for Nim.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask test, \"Runs the test suite\":\n    exec \"nim c -r tests/main\"\n",
"https://raw.githubusercontent.com/haxscramper/hdrawing/master/hdrawing.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"haxscramper\"\ndescription   = \"Simple shape drawing\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"hmisc >= 0.9.15\"\n",
"https://raw.githubusercontent.com/aleandros/about/master/about.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Edgar Cabrera\"\ndescription   = \"Executable for finding information about programs in PATH\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"about\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"docopt\"\n",
"https://raw.githubusercontent.com/ivankoster/nimbench/master/nimbench.nimble": "# Package\r\n\r\nversion       = \"0.2.1\"\r\nauthor        = \"Ivan Koster <ivankoster@gmail.com>\"\r\ndescription   = \"Micro benchmarking tool for Nim\"\r\nlicense       = \"Apache License, Version 2.0\"\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.13.0\"\r\nrequires \"strfmt >= 0.10.0\"\r\n\r\n",
"https://raw.githubusercontent.com/capocasa/nim-dav1d/master/dav1d.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Carlo Capocasa\"\ndescription   = \"Nim wrapper for dav1d, a fast, portable av1 video decoder created by videolan and used by VLC and Netflix\"\nlicense       = \"BSD2\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"https://github.com/capocasa/nimterop#a2af4b6\"\n\nimport distros\nforeignDep \"meson\"\nif detectOs(Windows):\n  foreignDep(\"mingw-w64-x86_64-toolchain\")\n  foreignDep(\"mingw-w64-x86_64-nasm\")\nelse:\n  foreignDep \"nasm\"\n\n",
"https://github.com/achesak/nim-coverartarchive": "[Package]\nname = \"coverartarchive\"\nversion = \"0.3\"\nauthor = \"Adam Chesak\"\ndescription = \"Cover Art Archive API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/juancarlospaco/nim-itchio": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"itch.io API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/Nycto/PerlinNim/master/perlin.nimble": "# Package\n\nversion       = \"0.6.1\"\nauthor        = \"Nycto\"\ndescription   = \"A Perlin Noise Implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\n\n# Targets\n\ntask demo, \"Executes demo code\":\n    exec \"nimble c ./bin/noise1d.nim\"\n    exec \"nimble c ./bin/noise2d.nim\"\n    exec \"./bin/noise2d --perlin\"\n    exec \"./bin/noise1d --perlin\"\n    exec \"./bin/noise2d --simplex\"\n    exec \"./bin/noise1d --simplex --zoom=2\"\n\n",
"https://github.com/tormund/nimwebp": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"tormund\"\ndescription   = \"webp bindings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.0.4\"\nrequires \"nimPNG\" #for tests\nrequires \"https://github.com/yglukhov/clurp\"\n",
"https://raw.githubusercontent.com/jerous86/nim_midi/master/nim_midi.nimble": "# Package\n\nversion       = \"0.1\"\nauthor        = \"jerous\"\ndescription   = \"Read and write midi files\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.0\"\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/ --project --index:on  src/nim_midi.nim\"\n\ntask reader, \"Builds a simple midi file reader that displays all midi events\":\n  exec \"nim c --out:nim_midi_reader test/nim_midi_reader.nim\"\n\n",
"https://raw.githubusercontent.com/momeemt/Palette/master/Palette.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"momeemt\"\ndescription   = \"Color Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"palette\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"nigui >= 0.2.4\"\nrequires \"cligen >= 1.3.2\"",
"https://raw.githubusercontent.com/juancarlospaco/nim-pypi/master/plz.nimble": "version     = CompileDate.replace(\"-\", \".\")\nauthor      = \"Juan Carlos\"\ndescription = \"PLZ Python PIP alternative\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nbin         = @[\"plz\"]\n\nrequires \"nim >= 1.3.5\"\nrequires \"requirementstxt >= 0.0.1\"\nrequires \"libarchibi >= 0.0.1\"\n",
"https://github.com/jackhftang/timestamp.nim": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"Jack Tang\"\ndescription   = \"An alternative time library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nproc updateNimbleVersion(ver: string) =\n  let fname = \"timestamp.nimble\"\n  let txt = readFile(fname)\n  var lines = txt.split(\"\\n\")\n  for i, line in lines:\n    if line.startsWith(\"version\"): \n      let s = line.find('\"')\n      let e = line.find('\"', s+1)\n      lines[i] = line[0..s] & ver & line[e..<line.len]\n      break\n  writeFile(fname, lines.join(\"\\n\"))\n\ntask version, \"update version\":\n  # last params as version\n  let ver = paramStr( paramCount() )\n  if ver == \"version\": \n    echo version\n  else:\n    withDir thisDir(): \n      updateNimbleVersion(ver)\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/index.html src/timestamp.nim\"\n\ntask release_patch, \"release with patch increment\":\n  exec \"release-it --ci -i patch\"\n\ntask release_minor, \"releaes with minor increment\":\n  exec \"release-it --ci -i minor\"\n\ntask release_major, \"release with major increment\":\n  exec \"release-it --ci -i major\"",
"https://raw.githubusercontent.com/FedericoCeratto/nim-syslog/master/syslog.nimble": "version       = \"0.0.5\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Minimal syslog support.\"\nlicense       = \"LGPLv3\"\n\nskipDirs = @[\"tests\"]\n\n# Deps\nrequires \"nake\"\nrequires \"nim >= 0.10.2\"\n\n",
"https://github.com/vegansk/dbschema": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Anatoly Galiulin\"\ndescription   = \"Database scheme migration library for Nim language\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"nimboost >= 0.5.3\", \"nimfp >= 0.4.2\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-seccomp/master/seccomp.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Seccomp (Linux sandboxing) adapter\"\nlicense       = \"LGPLv2.1\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\ntask release, \"Build a release\":\n  exec \"nim c -d:release seccomp.nim\"\n\ntask test, \"Basic test\":\n  exec \"nim c -p:. -r tests/basic_test.nim\"\n  exec \"nim c -p:. -r tests/syscall_num.nim\"\n\ntask test_trigger_seccomp, \"Test triggering seccomp\":\n  exec \"nim c -p:. -r tests/trigger_seccomp.nim\"\n",
"https://raw.githubusercontent.com/pragmagic/karax/master/karax.nimble": "# Package\n\nversion       = \"1.2.1\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"Karax is a framework for developing single page applications in Nim.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"ws\"\nrequires \"dotenv\"\nskipDirs = @[\"examples\", \"experiments\", \"tests\"]\n\nbin = @[\"karax/tools/karun\"]\ninstallExt = @[\"nim\"]\n",
"https://raw.githubusercontent.com/brentp/nim-lapper/master/lapper.nimble": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"fast, simple interval overlaps with binary search\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.19.2\" #, \"nim-lang/c2nim>=0.9.13\"\nsrcDir = \"src\"\n\nskipFiles = @[\"bench.nim\", \"example.nim\"]\n\nskipDirs = @[\"tests\"]\n\ntask test, \"run the tests\":\n  exec \"nim c -d:release --lineDir:on -r src/lapper\"\n\ntask docs, \"make docs\":\n  exec \"nim doc2 src/lapper; mkdir -p docs; mv lapper.html docs/index.html\"\n",
"https://github.com/lzoz/nauthy": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lzoz\"\ndescription   = \"Nim library for One Time Password verification and generation.\"\nlicense       = \"MIT\"\nsrcDir        = \"nauthy\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"nimSHA2 >= 0.1.1\"\n",
"https://github.com/c0ffeeartc/nim-sections": "[Package]\nname          = \"sections\"\nversion       = \"0.1\"\nauthor        = \"c0ffeeartc and Serhii Sokoliuk https://github.com/cmgc\"\ndescription   = \"`Section` macro with BDD aliases for testing\"\nlicense       = \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.12\"\n",
"https://github.com/mattaylor/whip": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"mtaylor\"\ndescription   = \"Fast http server based on httpbeast and nest for high performance routing\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\", \"empower\"]\n# Dependencies\n\n#requires \"packedjson\", \"nim >= 1.0.19.0\", \"nest\", \"httpbeast >= 0.2\"\nrequires \"packedjson\", \"nim\", \"nest\", \"httpbeast\"\n\ntask test, \"run tests\": exec \"nim c -r --threads=on ./whip.nim\"\ntask bench, \"run bench\": exec \"./bench.sh -c\"\n",
"https://raw.githubusercontent.com/achesak/nim-csv/master/csv.nimble": "[Package]\nname = \"csv\"\nversion = \"0.3\"\nauthor = \"Adam Chesak\"\ndescription = \"procedures for reading, writing, parsing, and stringifying CSV (comma separated value) files\"\nlicense = \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.18\"\n",
"https://github.com/qqtop/NimFinLib": "[Package]\nname          = \"nimFinLib\"\nversion       = \"0.3.0.5\"\nauthor        = \"qqTop\"\ndescription   = \"Financial Library for Nim\"\nlicense       = \"MIT\"\n\n\n[Deps]\nRequires:  \"nim >= 1.4.0\"\nRequires:  \"https://github.com/qqtop/NimCx >= 0.9.9\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-statsd-client/master/statsd_client.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"statsd client\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n",
"https://raw.githubusercontent.com/treeform/ws/master/ws.nimble": "# Package\n\nversion       = \"0.4.3\"\nauthor        = \"Andre von Houck\"\ndescription   = \"Simple WebSocket library for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim > 1.0.0\"\n",
"https://raw.githubusercontent.com/pigmej/nim-simple-decimal/master/simpledecimal.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jedrzej Nowak\"\ndescription   = \"A simple decimal library\"\nlicense       = \"MIT\"\nskipFiles     = @[\"test.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18\"\n\ntask test, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --run\n  setCommand \"c\", \"simpledecimal\"\n",
"https://raw.githubusercontent.com/milisarge/nimrpc_milis/master/nimrpc_milis.nimble": "[Package]\nname        = \"nimrpc_milis\"\nversion     = \"0.1.0\"\nauthor      = \"milisarge\"\ndescription = \"RPC implementation for Nim based on msgpack4nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n[Deps]\nRequires:   \"\"\"\n\nnim >= 0.11.2\nmsgpack4nim >= 0.1.2\n\n\n\"\"\"\n\n",
"https://raw.githubusercontent.com/achesak/nim-subviewer/master/subviewer.nimble": "[Package]\nname = \"subviewer\"\nversion = \"1.1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim module for parsing SubViewer subtitle files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.18\"\n",
"https://raw.githubusercontent.com/xmonader/nim-loadenv/master/loadenv.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"load .env variables\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/PMunch/libkeepass": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Library for reading KeePass files and decrypt the passwords within it\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"nimSHA2 >= 0.1.1\", \"nimAES >= 0.1.1\", \"zip >= 0.1.1\"\n",
"https://raw.githubusercontent.com/treeform/benchy/master/benchy.nimble": "version     = \"0.0.1\"\nauthor      = \"Andre von Houck\"\ndescription = \"Benchmarking\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://raw.githubusercontent.com/bluenote10/NimSvg/master/nimsvg.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Fabian Keller\"\ndescription   = \"Nim-based DSL allowing to generate SVG files and GIF animations.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2\"\n\ntask test, \"Runs unit tests\":\n  exec \"nim c -r -d:debugDsl -d:unittest tests/tester.nim\"\n\ntask examples, \"Runs examples\":\n  exec \"nim c -r examples/basic1.nim\"\n  exec \"nim c -r examples/basic2.nim\"\n  exec \"nim c -r examples/text1.nim\"\n  exec \"nim c -r examples/animation1.nim\"\n  exec \"nim c -r examples/spinner1.nim\"\n  exec \"nim c -r examples/spinner2.nim\"\n  exec \"nim c -r examples/spinner3.nim\"\n  exec \"nim c -r examples/dsl_demo.nim\"\n  exec \"nim c -r examples/timeline_ex1.nim\"\n  exec \"nim c -r examples/timeline_ex2.nim\"\n  exec \"nim c -r examples/embed_other_svgs.nim\"\n\ntask docs, \"Generates docs\":\n  exec \"nim doc2 --project --docSeeSrcUrl:https://github.com/bluenote10/NimSvg/blob/master -o:./docs/ src/nimsvg.nim\"",
"https://raw.githubusercontent.com/treeform/encode/master/encode.nimble": "# Package\nversion = \"0.1.0\"\nauthor = \"Andre von Houck\"\ndescription = \"Encode/decode utf8 utf16 and utf32.\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/ebran/grim": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Erik G. Brandt\"\ndescription   = \"Bringer of property graphs to Nim!\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4\"\nrequires \"yaml#head\"\nrequires \"zero_functional\"\n\n# Tasks\n\n# build HTML documentation\ntask docs, \"Build the documentation (in HTML)\":\n  # Build documentation from .rst files in docs/ folder\n  for dir in \"docs\" & listDirs(\"docs\"):\n    for file in listFiles(dir):\n      if file[^4..^1] == \".rst\":\n        selfExec \"rst2html --outdir:$1 $2\".format(dir, file)\n  \n  # Build reference documentation from comments in code\n  selfExec \"doc --outdir:docs/ --project --index:on --git.url:https://www.github.com/ebran/grim src/grim.nim\"\n  selfExec \"buildIndex --outdir:docs/ -o:docs/theindex docs\"\n  # Get rid of xml header line\n  exec \"sed -i '1d' docs/index.html\"\n\n# Tutorials\ntask northwind, \"Northwind tutorial\":\n  withDir(\"tutorials\"):\n    # selfExec \"c -r northwind.nim\"                        # debug mode\n    selfExec \"c -d:release -d:danger -r northwind.nim\"  # release mode\n",
"https://raw.githubusercontent.com/c-blake/lc/master/lc.nimble": "# Package\nversion     = \"0.9.0\"\nauthor      = \"Charles Blake\"\ndescription = \"A post-modern, \\\"multi-dimensional\\\", configurable, abbreviating, extensible ls/file lister\"\nlicense     = \"MIT/ISC\"\nbin         = @[\"lc\"]\n\n# Dependencies\nrequires \"nim >= 0.20.1\", \"cligen >= 1.2.0\"\nskipDirs = @[\"configs\"]\n",
"https://raw.githubusercontent.com/khchen/minhook/master/minhook.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Ward\"\ndescription   = \"MinHook wrapper for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/ruivieira/nim-mentat/master/mentat.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Rui Vieira\"\ndescription   = \"Machine learning library for Nim\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\nrequires \"science\"",
"https://github.com/Krognol/discordnim": "# Package\n\nversion       = \"2.3.0\"\nauthor        = \"Krognol\"\ndescription   = \"Discord library for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\", \"zip >= 0.2.1\", \"websocket >= 0.4.1\"",
"https://github.com/daehee/ago": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Daehee\"\ndescription   = \"Time ago in words in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n",
"https://raw.githubusercontent.com/PMunch/nim-optionsutils/master/optionsutils.nimble": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"PMunch\"\ndescription   = \"Utility macros for easier handling of options in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/genotrance/nimgraphql/master/nimgraphql.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance\"\ndescription   = \"libgraphqlparser wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.4.4\"\n\ntask test, \"Run tests\":\n  exec \"nim cpp -d:GraphQLAstGit -p:.. -r tests/tnimgraphql.nim\"\n  exec \"nim cpp -d:GraphQLAstGit -d:GraphQLAstCompile -p:.. -r tests/tnimgraphql.nim\"\n",
"https://github.com/jangko/nimPNG": "# Package\nversion       = \"0.3.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"PNG encoder and decoder\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"docs\"]\n\n# Deps\nrequires \"nim >= 0.19.0\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --outdir:build -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  exec \"nim -v\"\n  test \"-d:release\", \"tests/all_tests\"\n  test \"--gc:arc -d:release\", \"tests/all_tests\"\n\ntask testvcc, \"Run tests with vcc compiler\":\n  test \"--cc:vcc -d:release\", \"tests/all_tests\"\n",
"https://raw.githubusercontent.com/PMunch/wxnim/master/wxnim.nimble": "# Package\r\nversion       = \"0.9\"\r\nauthor        = \"Andreas Rumpf and Peter Munch-Ellingsen\"\r\ndescription   = \"Nim wrapper for wxWidgets\"\r\nlicense       = \"MIT\"\r\n\r\n# Deps\r\nrequires \"nim >= 0.17.0\"\r\n",
"https://raw.githubusercontent.com/zacharycarter/nimgui/master/nimgui.nimble": "# Package\n\nversion     = \"1.6.9\"\nauthor      = \"Leonardo Mariscal & Zachary Carter\"\ndescription = \"bindings to cimgui - https://github.com/cimgui/cimgui\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\ninstallExt    = @[\"nim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask gen, \"build the generator\":\n  exec \"nim c -r -d:ssl tools/imgui_gen.nim\"\n  exec \"nimble install -y\"\n",
"https://raw.githubusercontent.com/yglukhov/closure_compiler/master/closure_compiler.nimble": "# Package\nversion = \"0.3.5\"\nauthor = \"Yuriy Glukhov\"\ndescription = \"Bindings to closure compiler web API\"\nlicense = \"MIT\"\nbin = @[\"closure_compiler\"]\ninstallDirs = @[\"compiler-latest\"]\n\n",
"https://github.com/SolitudeSF/notification": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Desktop notifications\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"https://github.com/SolitudeSF/nim-dbus#537dee6dd70bbe5a85014b9293e3c0389e35f150\", \"imageman >= 0.7.4\"\n",
"https://api.github.com/repos/yglukhov/nim-jwt/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"2f0bb149bc15dad76a8ce0358d4ef85d1e8fa1bb\",\"size\":31,\"url\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/yglukhov/nim-jwt/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/2f0bb149bc15dad76a8ce0358d4ef85d1e8fa1bb\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/nim-jwt/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/2f0bb149bc15dad76a8ce0358d4ef85d1e8fa1bb\",\"html\":\"https://github.com/yglukhov/nim-jwt/blob/master/.gitignore\"}},{\"name\":\".travis.yml\",\"path\":\".travis.yml\",\"sha\":\"e562f4955b69eb496b241cb236ca92206d405992\",\"size\":850,\"url\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/.travis.yml?ref=master\",\"html_url\":\"https://github.com/yglukhov/nim-jwt/blob/master/.travis.yml\",\"git_url\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/e562f4955b69eb496b241cb236ca92206d405992\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/nim-jwt/master/.travis.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/.travis.yml?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/e562f4955b69eb496b241cb236ca92206d405992\",\"html\":\"https://github.com/yglukhov/nim-jwt/blob/master/.travis.yml\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"01b24e55e181839ac1ba3db9a0d1949f48d6b038\",\"size\":1081,\"url\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/yglukhov/nim-jwt/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/01b24e55e181839ac1ba3db9a0d1949f48d6b038\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/nim-jwt/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/01b24e55e181839ac1ba3db9a0d1949f48d6b038\",\"html\":\"https://github.com/yglukhov/nim-jwt/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"eebecc0876895d8e16cfd2b9627029754a3d0049\",\"size\":2813,\"url\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/README.md?ref=master\",\"html_url\":\"https://github.com/yglukhov/nim-jwt/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/eebecc0876895d8e16cfd2b9627029754a3d0049\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/nim-jwt/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/eebecc0876895d8e16cfd2b9627029754a3d0049\",\"html\":\"https://github.com/yglukhov/nim-jwt/blob/master/README.md\"}},{\"name\":\"jwt.nim\",\"path\":\"jwt.nim\",\"sha\":\"1373a8e6e6a59b93a7c54285580ab54328ce94a2\",\"size\":4611,\"url\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/jwt.nim?ref=master\",\"html_url\":\"https://github.com/yglukhov/nim-jwt/blob/master/jwt.nim\",\"git_url\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/1373a8e6e6a59b93a7c54285580ab54328ce94a2\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/nim-jwt/master/jwt.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/jwt.nim?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/1373a8e6e6a59b93a7c54285580ab54328ce94a2\",\"html\":\"https://github.com/yglukhov/nim-jwt/blob/master/jwt.nim\"}},{\"name\":\"jwt.nimble\",\"path\":\"jwt.nimble\",\"sha\":\"a8ba1bd1e736e187d5416e5858ad282ca82e807b\",\"size\":281,\"url\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/jwt.nimble?ref=master\",\"html_url\":\"https://github.com/yglukhov/nim-jwt/blob/master/jwt.nimble\",\"git_url\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/a8ba1bd1e736e187d5416e5858ad282ca82e807b\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/nim-jwt/master/jwt.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/jwt.nimble?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/blobs/a8ba1bd1e736e187d5416e5858ad282ca82e807b\",\"html\":\"https://github.com/yglukhov/nim-jwt/blob/master/jwt.nimble\"}},{\"name\":\"jwt\",\"path\":\"jwt\",\"sha\":\"abc53e339008e0fa1112f1b07f8843067a070d82\",\"size\":0,\"url\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/jwt?ref=master\",\"html_url\":\"https://github.com/yglukhov/nim-jwt/tree/master/jwt\",\"git_url\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/trees/abc53e339008e0fa1112f1b07f8843067a070d82\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/jwt?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/trees/abc53e339008e0fa1112f1b07f8843067a070d82\",\"html\":\"https://github.com/yglukhov/nim-jwt/tree/master/jwt\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"cc764d5f406b5febc11b428cdea2328ab7b71050\",\"size\":0,\"url\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/tests?ref=master\",\"html_url\":\"https://github.com/yglukhov/nim-jwt/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/trees/cc764d5f406b5febc11b428cdea2328ab7b71050\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/nim-jwt/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/nim-jwt/git/trees/cc764d5f406b5febc11b428cdea2328ab7b71050\",\"html\":\"https://github.com/yglukhov/nim-jwt/tree/master/tests\"}}]",
"https://github.com/ba0f3/sequoia.nim": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"Sequoia PGP wrapper for Nim\"\nlicense       = \"GPLv3\"\nsrcDir        = \"src\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/Vindaar/nblosc/master/blosc.nimble": "# Package\n\nversion       = \"1.15.0\"\nauthor        = \"Skrylar,Vindaar\"\ndescription   = \"BLOSC meta-compression for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_eloverblik_api/master/eloverblik.nimble": "# Copyright 2020 - Thomas T. Jarløv\n\n# Package\nversion       = \"0.0.7\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"API for www.eloverblik.dk\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"config\", \"src\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\nrequires \"nmqtt >= 1.0.0\"\n\n",
"https://raw.githubusercontent.com/SkyVault/nim-tiled/master/nim_tiled.nimble": "# Package\n\nversion       = \"1.2.2\"\nauthor        = \"SkyVault\"\ndescription   = \"Tiled map loader for the Nim programming language\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/dom96/jester/": "# Package\n\nversion       = \"0.5.0\" # Be sure to update jester.jesterVer too!\nauthor        = \"Dominik Picheta\"\ndescription   = \"A sinatra-like web framework for Nim.\"\nlicense       = \"MIT\"\n\nskipFiles = @[\"todo.markdown\"]\nskipDirs = @[\"tests\"]\n\n# Deps\n\nrequires \"nim >= 1.0.0\"\n\nwhen not defined(windows):\n  requires \"httpbeast >= 0.2.2\"\n\n# For tests\nrequires \"https://github.com/timotheecour/asynctools#pr_fix_compilation\"\n\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r tests/tester\"",
"https://github.com/tulayang/asyncmysql": "# Package\nversion = \"0.4.3\"\nauthor = \"Wang Tong\"\ndescription = \"Asynchronous MySQL connector written in pure Nim.\"\nlicense = \"MIT\"\nskipFiles = @[\"TODO.md\"]\n\n# Dependencies\nrequires \"nim >= 0.17.0\", \"mysqlparser >= 0.1.0\"",
"https://github.com/zacharycarter/nimgui": "# Package\n\nversion     = \"1.6.9\"\nauthor      = \"Leonardo Mariscal & Zachary Carter\"\ndescription = \"bindings to cimgui - https://github.com/cimgui/cimgui\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\ninstallExt    = @[\"nim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask gen, \"build the generator\":\n  exec \"nim c -r -d:ssl tools/imgui_gen.nim\"\n  exec \"nimble install -y\"\n",
"https://github.com/juancarlospaco/nim-crosscompile": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"juancarlospaco\"\ndescription   = \"Crosscompile Nim source code into multiple targets on Linux with this proc.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"zip\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-morelogging/master/morelogging.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Logging helpers\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.0\", \"zip\"\n\n\ntask functional_tests, \"Functional tests\":\n  exec \"nim c -p:. tests/test_morelogging.nim\"\n  exec \"nim c -p:. tests/test_threaded.nim\"\n  exec \"./tests/test_morelogging\"\n  exec \"./tests/test_threaded\"\n",
"https://api.github.com/repos/nim-lang/osinfo/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"f701b3e84fe059e42047a011e896373f8eadb41a\",\"size\":56,\"url\":\"https://api.github.com/repos/nim-lang/osinfo/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nim-lang/osinfo/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nim-lang/osinfo/git/blobs/f701b3e84fe059e42047a011e896373f8eadb41a\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/osinfo/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/osinfo/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/osinfo/git/blobs/f701b3e84fe059e42047a011e896373f8eadb41a\",\"html\":\"https://github.com/nim-lang/osinfo/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"853b46db127831eb9f8e8a7a8576e41c98619be4\",\"size\":1067,\"url\":\"https://api.github.com/repos/nim-lang/osinfo/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nim-lang/osinfo/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nim-lang/osinfo/git/blobs/853b46db127831eb9f8e8a7a8576e41c98619be4\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/osinfo/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/osinfo/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/osinfo/git/blobs/853b46db127831eb9f8e8a7a8576e41c98619be4\",\"html\":\"https://github.com/nim-lang/osinfo/blob/master/LICENSE\"}},{\"name\":\"osinfo.nimble\",\"path\":\"osinfo.nimble\",\"sha\":\"be23e666405ca1cb446ad3a1e5c86427ada17dc9\",\"size\":209,\"url\":\"https://api.github.com/repos/nim-lang/osinfo/contents/osinfo.nimble?ref=master\",\"html_url\":\"https://github.com/nim-lang/osinfo/blob/master/osinfo.nimble\",\"git_url\":\"https://api.github.com/repos/nim-lang/osinfo/git/blobs/be23e666405ca1cb446ad3a1e5c86427ada17dc9\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/osinfo/master/osinfo.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/osinfo/contents/osinfo.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/osinfo/git/blobs/be23e666405ca1cb446ad3a1e5c86427ada17dc9\",\"html\":\"https://github.com/nim-lang/osinfo/blob/master/osinfo.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"fd0783a67b985a634d74776c408c3a27f6c1a7a4\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/osinfo/contents/src?ref=master\",\"html_url\":\"https://github.com/nim-lang/osinfo/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nim-lang/osinfo/git/trees/fd0783a67b985a634d74776c408c3a27f6c1a7a4\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/osinfo/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nim-lang/osinfo/git/trees/fd0783a67b985a634d74776c408c3a27f6c1a7a4\",\"html\":\"https://github.com/nim-lang/osinfo/tree/master/src\"}}]",
"https://raw.githubusercontent.com/LemonBoy/dtoa.nim/master/dtoa.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"LemonBoy\"\ndescription   = \"Port of Milo Yip's fast dtoa() implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/kixixixixi/camelize/master/camelize.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"kixixixixi\"\ndescription   = \"Convert json node to camelcase\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/momeemt/Palette": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"momeemt\"\ndescription   = \"Color Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"palette\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"nigui >= 0.2.4\"\nrequires \"cligen >= 1.3.2\"",
"https://raw.githubusercontent.com/mattaylor/whip/master/whip.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"mtaylor\"\ndescription   = \"Fast http server based on httpbeast and nest for high performance routing\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\", \"empower\"]\n# Dependencies\n\n#requires \"packedjson\", \"nim >= 1.0.19.0\", \"nest\", \"httpbeast >= 0.2\"\nrequires \"packedjson\", \"nim\", \"nest\", \"httpbeast\"\n\ntask test, \"run tests\": exec \"nim c -r --threads=on ./whip.nim\"\ntask bench, \"run bench\": exec \"./bench.sh -c\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-bytes2human/master/bytes2human.nimble": "version     = \"0.2.2\"\nauthor      = \"Juan Carlos\"\ndescription = \"Convert bytes to kilobytes, megabytes, gigabytes, etc.\"\nlicense     = \"LGPLv3\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.0.0\"  # https://github.com/juancarlospaco/nim-bytes2human/issues/2#issue-714338524\n",
"https://raw.githubusercontent.com/genotrance/nimrax/master/nimrax.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"genotrance\"\ndescription   = \"Radix tree wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.5.0\"\n\nvar\n  name = \"nimrax\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/stefansalewski/RTree/master/rtree.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Stefan Salewski\"\ndescription   = \"R-Tree\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nskipFiles = @[\"drawingarea.nim\"]\n",
"https://api.github.com/repos/skyforce77/ctrulib-nim/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"size\":10,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"download_url\":\"https://raw.githubusercontent.com/skyforce77/ctrulib-nim/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/.gitignore\"}},{\"name\":\"3ds.nim\",\"path\":\"3ds.nim\",\"sha\":\"e3d736ac9c9e520df16b8b62ce91bed46f289402\",\"size\":893,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/3ds.nim?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/3ds.nim\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/e3d736ac9c9e520df16b8b62ce91bed46f289402\",\"download_url\":\"https://raw.githubusercontent.com/skyforce77/ctrulib-nim/master/3ds.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/3ds.nim?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/e3d736ac9c9e520df16b8b62ce91bed46f289402\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/3ds.nim\"}},{\"name\":\"3ds\",\"path\":\"3ds\",\"sha\":\"16b2b78ccae2ae9aaa2e8f90f9d80fde22b5a05f\",\"size\":0,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/3ds?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/tree/master/3ds\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/trees/16b2b78ccae2ae9aaa2e8f90f9d80fde22b5a05f\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/3ds?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/trees/16b2b78ccae2ae9aaa2e8f90f9d80fde22b5a05f\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/tree/master/3ds\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"d7f105139782ab695d86613e343916f7372f4ac0\",\"size\":18026,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/d7f105139782ab695d86613e343916f7372f4ac0\",\"download_url\":\"https://raw.githubusercontent.com/skyforce77/ctrulib-nim/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/d7f105139782ab695d86613e343916f7372f4ac0\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"a731a5e16d2c6c0eb59f3cc7e11f97dca4403c5f\",\"size\":71,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/README.md?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/a731a5e16d2c6c0eb59f3cc7e11f97dca4403c5f\",\"download_url\":\"https://raw.githubusercontent.com/skyforce77/ctrulib-nim/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/a731a5e16d2c6c0eb59f3cc7e11f97dca4403c5f\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/README.md\"}},{\"name\":\"arpa\",\"path\":\"arpa\",\"sha\":\"0277c76c48199803e7d42523c3cf486a5c2f45c5\",\"size\":0,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/arpa?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/tree/master/arpa\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/trees/0277c76c48199803e7d42523c3cf486a5c2f45c5\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/arpa?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/trees/0277c76c48199803e7d42523c3cf486a5c2f45c5\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/tree/master/arpa\"}},{\"name\":\"ctrulib.nim\",\"path\":\"ctrulib.nim\",\"sha\":\"afff51a3d51650042ae28b26be83a778e8d481a8\",\"size\":14,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/ctrulib.nim?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/ctrulib.nim\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/afff51a3d51650042ae28b26be83a778e8d481a8\",\"download_url\":\"https://raw.githubusercontent.com/skyforce77/ctrulib-nim/master/ctrulib.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/ctrulib.nim?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/afff51a3d51650042ae28b26be83a778e8d481a8\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/ctrulib.nim\"}},{\"name\":\"ctrulib.nimble\",\"path\":\"ctrulib.nimble\",\"sha\":\"074170722369572b7327c8639bff3321c0f3d24d\",\"size\":194,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/ctrulib.nimble?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/ctrulib.nimble\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/074170722369572b7327c8639bff3321c0f3d24d\",\"download_url\":\"https://raw.githubusercontent.com/skyforce77/ctrulib-nim/master/ctrulib.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/ctrulib.nimble?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/074170722369572b7327c8639bff3321c0f3d24d\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/ctrulib.nimble\"}},{\"name\":\"netdb.nim\",\"path\":\"netdb.nim\",\"sha\":\"776a0e61be0679bcfcebd3b2df30de99ec1f791b\",\"size\":930,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/netdb.nim?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/netdb.nim\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/776a0e61be0679bcfcebd3b2df30de99ec1f791b\",\"download_url\":\"https://raw.githubusercontent.com/skyforce77/ctrulib-nim/master/netdb.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/netdb.nim?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/776a0e61be0679bcfcebd3b2df30de99ec1f791b\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/netdb.nim\"}},{\"name\":\"netinet\",\"path\":\"netinet\",\"sha\":\"20face6b80ad50c279cd67c38621284624d18653\",\"size\":0,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/netinet?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/tree/master/netinet\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/trees/20face6b80ad50c279cd67c38621284624d18653\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/netinet?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/trees/20face6b80ad50c279cd67c38621284624d18653\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/tree/master/netinet\"}},{\"name\":\"poll.nim\",\"path\":\"poll.nim\",\"sha\":\"c839f0a14f833467f19cedf995cfaebef6f9d2aa\",\"size\":458,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/poll.nim?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/poll.nim\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/c839f0a14f833467f19cedf995cfaebef6f9d2aa\",\"download_url\":\"https://raw.githubusercontent.com/skyforce77/ctrulib-nim/master/poll.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/poll.nim?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/blobs/c839f0a14f833467f19cedf995cfaebef6f9d2aa\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/blob/master/poll.nim\"}},{\"name\":\"sys\",\"path\":\"sys\",\"sha\":\"42f8bc7a51fb977a807e990ee8b2461a4d2b8978\",\"size\":0,\"url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/sys?ref=master\",\"html_url\":\"https://github.com/skyforce77/ctrulib-nim/tree/master/sys\",\"git_url\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/trees/42f8bc7a51fb977a807e990ee8b2461a4d2b8978\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/contents/sys?ref=master\",\"git\":\"https://api.github.com/repos/skyforce77/ctrulib-nim/git/trees/42f8bc7a51fb977a807e990ee8b2461a4d2b8978\",\"html\":\"https://github.com/skyforce77/ctrulib-nim/tree/master/sys\"}}]",
"https://github.com/Vindaar/shell": "# Package\n\nversion       = \"0.4.3\"\nauthor        = \"Vindaar\"\ndescription   = \"A Nim mini DSL to execute shell commands\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask test, \"executes the tests\":\n  exec \"nim c -d:debugShell -r tests/tShell.nim\"\n  exec \"nim c -r tests/tException.nim\"\n  # execute using NimScript as well\n  exec \"nim e -d:debugShell -r tests/tNimScript.nims\"\n  # and execute PWD test, by running the nims file in another dir,\n  # which itself calls the test\n  when not defined(windows):\n    exec \"cd tests/anotherDir && nim e -r runAnotherTest.nims\"\n\ntask travis, \"executes the tests on travis\":\n  exec \"nim c -d:debugShell -d:travisCI -r tests/tShell.nim\"\n  # execute using NimScript as well\n  exec \"nim e -d:debugShell -d:travisCI -r tests/tNimScript.nims\"\n  when not defined(windows):\n    exec \"cd tests/anotherDir && nim e -d:travisCI -r runAnotherTest.nims\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-etcd-client/master/etcd_client.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"etcd client library\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.0\"\n\ntask functional_tests, \"Run functional tests\":\n  exec \"NIMTEST_NO_COLOR=1 nim c -p=.  -r tests/functional.nim\"\n",
"https://raw.githubusercontent.com/ethosa/nimage/master/nimage.nimble": "[Package]\r\nname = \"nimage\"\r\nversion = \"0.0.5\"\r\ndescription = \"The image management library written in Nim.\"\r\nlicense = \"MIT\"\r\nauthor = \"Ethosa\"\r\nsrcDir = \"scr\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://github.com/MarcAzar/BitVector": "# Package\n\nversion       = \"0.4.10\"\nauthor        = \"Marc Azar\"\ndescription   = \"Bit Vector with base SomeOrdinal and little endian format. Supports `seq` based operations.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://raw.githubusercontent.com/jiro4989/monit/master/monit.nimble": "# Package\n\nversion       = \"1.2.2\"\nauthor        = \"jiro4989\"\ndescription   = \"A simple task runner. Run tasks and watch file changes with custom paths.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"monit\"]\nbinDir        = \"bin\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"yaml#d173f2a7f6279bb8351d42a5e3a1e853f8623778\"\nrequires \"cligen == 1.2.2\"\n\nimport strformat, os\n\ntask checkFormat, \"Checking that codes were formatted\":\n  var errCount = 0\n  for f in listFiles(\"src\"):\n    let tmpFile = f & \".tmp\"\n    exec &\"nimpretty --output:{tmpFile} {f}\"\n    if readFile(f) != readFile(tmpFile):\n      inc errCount\n    rmFile tmpFile\n  exec &\"exit {errCount}\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble check\"\n  if buildOS == \"linux\":\n    exec \"nimble checkFormat\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble build -d:release -Y\"\n  exec \"./bin/monit help\"\n  exec \"./bin/monit --version\"\n",
"https://github.com/Guevara-chan/Cliptomania": "# Package\r\n\r\nversion       = \"0.1.0\"\r\nauthor        = \"Guevara-chan\"\r\ndescription   = \".NET-inspired lightweight clipboard library\"\r\nlicense       = \"MIT\"\r\nsrcDir        = \"src\"\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.18.0\"",
"https://github.com/jiro4989/alignment": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"alignment is a library to align strings.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"eastasianwidth >= 1.1.0\"\n\ntask docs, \"Generate documents\":\n  exec \"nimble doc src/alignment.nim -o:docs/alignment.html\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble install -Y\"\n  exec \"nimble docs -Y\"\n  exec \"nimble test -Y\"\n",
"https://raw.githubusercontent.com/zielmicha/leveldb.nim/master/leveldb.nimble": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"Michał Zieliński\"\ndescription   = \"LevelDB wrapper for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"leveldbtool\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/elijahr/lockfreequeues/master/lockfreequeues.nimble": "# Package\nversion       = \"2.0.0\"\nauthor        = \"Elijah Shaw-Rutschman\"\ndescription   = \"Lock-free queue implementations for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n\n# Tasks\ntask make_docs, \"Generate documentation\":\n  exec \"sh bin/make_docs.sh\"\n\ntask test, \"Runs the test suite (C & C++)\":\n  exec \"nim c -r -f tests/test.nim\"\n  exec \"nim cpp -r -f tests/test.nim\"\n\ntask examples, \"Runs the examples\":\n  exec \"nim c -r -f examples/mupmuc.nim\"\n  exec \"nim c -r -f examples/mupsic.nim\"\n  exec \"nim c -r -f examples/sipsic.nim\"\n",
"https://raw.githubusercontent.com/stefansalewski/oldgtk3/master/oldgtk3.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Stefan Salewski\"\ndescription   = \"Low level bindings for GTK3 related libraries\"\nlicense       = \"MIT\"\nskipDirs = @[\"common\", \"nim-atk\", \"nim-cairo\", \"nim-gdk3\", \"nim-gdk_pixbuf\", \"nim-gio\", \"nim-gir\", \"nim-glib\", \"nim-gobject\", \"nim-gtk3\", \"nim-gtksourceview\", \"nim-pango\", \"nim-rsvg\", \"oldgtk3.bak\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu) or detectOs(Debian):\n    foreignDep \"libgtk-3-dev\"\n  elif detectOs(Gentoo):\n    foreignDep \"gtk+\" # can we specify gtk3?\n  #else: we don't know the names for all the other distributions\n  #  foreignDep \"\"\n\n\n",
"https://github.com/zielmicha/reactorfuse": "[Package]\nname          = \"reactorfuse\"\nversion       = \"0.0.1\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"Filesystem in userspace (FUSE) support for reactor.nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15.0\"\nRequires: \"reactor >= 0.3.2\"\n",
"https://github.com/h3rald/nimhttpd": "import\n  os\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen system.fileExists(thisModuleFile.parentDir / \"src/nimhttpdpkg/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/nimhttpdpkg/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import nimhttpdpkg/config\n\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = \"MIT\"\nbin           = @[\"nimhttpd\"]\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\nconst compile = \"nim c -d:release\"\nconst linux_x64 = \"--cpu:amd64 --os:linux -o:nimhttpd\"\nconst windows_x64 = \"--cpu:amd64 --os:windows -o:nimhttpd.exe\"\nconst macosx_x64 = \"-o:nimhttpd\"\nconst program = \"nimhttpd\"\nconst program_file = \"src/nimhttpd.nim\"\nconst zip = \"zip -X\"\n\nproc shell(command, args: string, dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"nimhttpd\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build NimHTTPd for Windows (x64)\":\n  shell compile, windows_x64, program_file\n\ntask linux_x64_build, \"Build NimHTTPd for Linux (x64)\":\n  shell compile, linux_x64,  program_file\n  \ntask macosx_x64_build, \"Build NimHTTPd for Mac OS X (x64)\":\n  shell compile, macosx_x64, program_file\n\ntask release, \"Release NimHTTPd\":\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, filename_for(\"windows\", \"x64\"), program & \".exe\"\n  shell \"rm\", program & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, filename_for(\"linux\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, filename_for(\"macosx\", \"x64\"), program \n  shell \"rm\", program \n  echo \"\\n\\n\\n ALL DONE!\"\n\n",
"https://raw.githubusercontent.com/alex-laskin/nim-taglib/master/taglib.nimble": "[Package]\nname          = \"taglib\"\nversion       = \"0.1.0\"\nauthor        = \"Alex Laskin\"\ndescription   = \"Thin wrapper over https://taglib.github.io/\"\nlicense       = \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.14\"\n",
"https://raw.githubusercontent.com/chocobo333/mcmurry/master/mcmurry.nimble": "# Package\n\nversion       = \"0.3.5\"\nauthor        = \"chocobo333\"\ndescription   = \"A module for generating lexer/parser.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tmp\"]\n# installExt    = @[\"nim\"]\n# bin           = @[\"mcmurry\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\nrequires \"asciitype\"\n\n# For compiling\nrequires \"ast_pattern_matching\"\nrequires \"regex\"\n# requires \"timeit\"\n",
"https://raw.githubusercontent.com/nim-lang/opencl/master/opencl.nimble": "[Package]\nname: \"opencl\"\nversion: \"1.0\"\nauthor: \"Andreas Rumpf\"\ndescription: \"Low-level wrapper for OpenCL\"\nlicense: \"MIT\"\n\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nim > 0.9.2\"\n",
"https://github.com/Adeohluwa/gen": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"Adeoluwa Adejumo\"\ndescription   = \"Ultimate Scaffolding Tool for building GUI/Web/CLI apps in Nim Lang.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"gen\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\", \"progress\", \"docopt\", \"fab\", \"gara\"\n\n# Tasks\n\ntask test, \"Run the Test Suite\":\n  exec \"nim c -r tests/tGen.nim\"\n",
"https://github.com/juancarlospaco/nim-datetime2human": "version     = \"0.2.5\"\nauthor      = \"juancarlospaco\"\ndescription = \"Human friendly DateTime string representations, seconds to millenniums.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.2.4\"\n",
"https://github.com/SolitudeSF/runeterra_decks": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Legends of Runeterra deck/card code encoder/decoder\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"base32\"\n\ntask generate, \"Generate definitions\":\n  exec \"nim r -d:runeterraGeneratePath:\" & paramStr(9) & \" tools/generator\"\n",
"https://raw.githubusercontent.com/andreaferretti/emmy/master/emmy.nimble": "# Copyright 2016-18 UniCredit S.p.A.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nmode = ScriptMode.Verbose\n\npackageName   = \"emmy\"\nversion       = \"0.1.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Algebra for Nim\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\"]\nskipFiles     = @[\"emmy.html\", \"emmy.png\"]\n\nrequires \"nim >= 0.19\", \"bigints >= 0.4.2\", \"stint >= 0.0.1\"\n\n--forceBuild\n\ntask tests, \"run emmy tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  --define: reportConceptFailures\n  setCommand \"c\", \"tests/all.nim\"\n\ntask test, \"run emmy tests\":\n  setCommand \"tests\"",
"https://raw.githubusercontent.com/xzeshen/huffman/master/huffman.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Huffman encode/decode for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/ba0f3/fastcgi.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"FastCGI library for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.9\"\n",
"https://raw.githubusercontent.com/LemonBoy/cassette/master/cassette.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"LemonBoy\"\ndescription   = \"Record and replay your HTTP sessions!\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://raw.githubusercontent.com/status-im/nim-rlp/master/rlp.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"rlp\"\nversion       = \"1.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"RLP serialization library for Nim\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\ninstallDirs   = @[\"rlp\"]\nbin           = @[\"rlp/bin/rlp_inspect\"]\n\nrequires \"nim >= 0.17.0\",\n         \"ranges\"\n\nproc configForTests() =\n  --hints: off\n  --debuginfo\n  --path: \".\"\n  --run\n  --threads: on\n\ntask test, \"run CPU tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n",
"https://github.com/ba0f3/libproxy.nim": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"PROXY Protocol enabler for aged programs\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://github.com/disruptek/swayipc": "version = \"3.1.8\"\nauthor = \"disruptek\"\ndescription = \"IPC interface to sway (or i3) compositors\"\nlicense = \"MIT\"\nrequires \"nesm >= 0.4.5 & < 1.0.0\"\nrequires \"cligen >= 0.9.40 & < 2.0.0\"\n\nbin = @[\"swayipc\"]\n\ntask test, \"run unit testes\":\n  exec \"swayipc --help\"\n",
"https://github.com/Udiknedormin/NimContracts": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"M. Kotwica\"\ndescription   = \"Design by contract (DbC) library.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n\n# Tests\nimport ospaths, sequtils\n\ntask tests, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --define:explainContracts:0\n  --path: \".\"\n  --run\n  var dir_list = @[\"tests\"]\n  while dir_list.len != 0:\n    let dir = dir_list.pop\n    dir_list.add listDirs(dir)\n    if splitPath(dir).tail != \"nimcache\":\n      for file in listFiles(dir):\n        var (_, _, ext) = splitFile(file)\n        if ext == \".nim\":\n          echo \"running ---- \" & file\n          setCommand \"c\", file\n\ntask test, \"run tests\":\n  setCommand \"tests\"\n",
"https://github.com/not-lum/imgcat": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"not-lum\"\ndescription   = \"See pictures in your console\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"imgcat\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"flippy 0.4.5\"\nrequires \"cligen 1.2.2\"",
"https://raw.githubusercontent.com/Vladar4/nimgame2/master//nimgame2.nimble": "# Package\n\nversion       = \"0.6.1\"\nauthor        = \"Vladar\"\ndescription   = \"A simple 2D game engine for Nim language.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"sdl2_nim#head\"\n\n# Options\n\nskipDirs = @[\"demos\"]\n\n",
"https://raw.githubusercontent.com/status-im/nim-libbacktrace/master/libbacktrace.nimble": "# Copyright (c) 2019-2020 Status Research & Development GmbH\n# Licensed under either of\n#  * Apache License, version 2.0,\n#  * MIT license\n# at your option.\n# This file may not be copied, modified, or distributed except according to\n# those terms.\n\nmode = ScriptMode.Verbose\n\npackageName   = \"libbacktrace\"\nversion       = \"0.0.4\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Nim wrapper for libbacktrace\"\nlicense       = \"MIT or Apache License 2.0\"\ninstallDirs   = @[\"vendor/whereami/src\", \"install\"]\ninstallFiles  = @[\"libbacktrace_wrapper.c\", \"libbacktrace_wrapper.cpp\", \"libbacktrace_wrapper.h\", \"libbacktrace_wrapper.nim\"]\n\nrequires \"nim >= 1.0\"\n\nbefore install:\n  exec \"git submodule update --init\"\n  var make = \"make\"\n  when defined(windows):\n    make = \"mingw32-make\"\n  exec make\n\n",
"https://github.com/jasonrbriggs/proton-nim": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Jason R Briggs\"\ndescription   = \"Proton template engine\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n#bin           = @[\"proton\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/johnnovak/illwill/master/illwill.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"John Novak <john@johnnovak.net>\"\ndescription   = \"A curses inspired simple cross-platform console library for Nim\"\nlicense       = \"WTFPL\"\n\nskipDirs = @[\"doc\", \"examples\", \"img\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\ntask examples, \"Compiles the examples\":\n  exec \"nim c -d:release examples/boxdrawing.nim\"\n  exec \"nim c -d:release examples/drawtest.nim\"\n  exec \"nim c -d:release examples/fullscreen.nim\"\n  exec \"nim c -d:release examples/keycodes.nim\"\n  exec \"nim c -d:release examples/readmeexample.nim\"\n  exec \"nim c -d:release examples/simplekeycodes.nim\"\n  exec \"nim c -d:release examples/mouse.nim\"\n  exec \"nim c -d:release examples/mouseMinimal.nim\"\n\ntask examplesDebug, \"Compiles the examples (debug mode)\":\n  exec \"nim c examples/boxdrawing.nim\"\n  exec \"nim c examples/drawtest.nim\"\n  exec \"nim c examples/fullscreen.nim\"\n  exec \"nim c examples/keycodes.nim\"\n  exec \"nim c examples/readmeexample.nim\"\n  exec \"nim c examples/simplekeycodes.nim\"\n  exec \"nim c examples/mouse.nim\"\n  exec \"nim c examples/mouseMinimal.nim\"\n\ntask docgen, \"Generate HTML documentation\":\n  exec \"nim doc -o:doc/illwill.html illwill\"\n\n",
"https://raw.githubusercontent.com/paranim/pararules/master/pararules.nimble": "# Package\n\nversion       = \"0.14.0\"\nauthor        = \"oakes\"\ndescription   = \"A rules engine\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/rockcavera/nim-dnsprotocol": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rockcavera\"\ndescription   = \"Domain Name System (DNS) protocol for Nim programming language\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"stew\"\n",
"https://github.com/ethosa/yukiko": "[Package]\r\nname = \"yukiko\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.40\"\r\ndescription = \"The Nim GUI asynchronous framework based on SDL2.\"\r\nlicense = \"MIT\"\r\nsrcDir = \"yukiko\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\nRequires: \"sdl2\"\r\n",
"https://github.com/xmonader/nimassets": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"bundle your assets to a nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimassets\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask assetsBin, \"Build nimassets\":\n    exec \"nimble build --threads:on\"\n\ntask buildTemplates, \"bundle templates in templatesdir\":\n    # exec \"nimble assetsBin\"\n    exec \"nimassets -d=templatesdir -o=assetsfile.nim\"\n\ntask buildTemplatesFast, \"bundle templates in templatesdir fast\":\n    # exec \"nimble assetsBin\"\n    exec \"nimassets -d=templatesdir -o=assetsfilefast.nim -f\"",
"https://raw.githubusercontent.com/status-im/nim-byteutils/master/byteutils.nimble": "packageName   = \"byteutils\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A library to handle raw bytes and hex representations\"\nlicense       = \"MIT or Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\n\n### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  # TODO, don't forget to change defaultLang to `cpp` if the project requires C++\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache:nimcache\n  --threads:on\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://raw.githubusercontent.com/YesDrX/bitarray/master/bitarray.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yes DrX\"\ndescription   = \"bitarray\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/lee-b/nimrun/master/nimrun.nimble": "# Package\n\nversion = \"0.1.0\"\nauthor = \"Lee Braiden <leebraid@gmail.com>\"\ndescription = \"Runs nim code as scripts, regardless of file extension\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\nbinDir = \"bin\"\n\nbin = @[\"nimrun\"]\n\nskipExt = @[\"nim\"]\n\nrequires \"tempfile\"",
"https://raw.githubusercontent.com/rogercloud/nim-rpc/master/nimrpc.nimble": "[Package]\nname        = \"nimrpc\"\nversion     = \"0.1.0\"\nauthor      = \"Roger Shi\"\ndescription = \"RPC implementation for Nim based on msgpack4nim created by @jangko.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n[Deps]\nRequires:   \"\"\"\n\nnim >= 0.11.2\nmsgpack4nim >= 0.1.2\n\n\n\"\"\"\n\n",
"https://github.com/juancarlospaco/psutil-nim": "# Package\nversion       = \"0.6.0\"\nauthor        = \"Juan Carlos, John Scillieri, Nim community\"\ndescription   = \"Psutil is a cross-platform library for retrieving information on running processes and system utilization (CPU, memory, disks, network)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/zendbit/nim.stdext": "# Package\nversion     = \"0.0.8\"\nauthor      = \"Amru Rosyada\"\ndescription = \"Extended library for nim stdlib\"\nlicense     = \"BSD\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n\n",
"https://raw.githubusercontent.com/akiradeveloper/nim-fuse/master/fuse.nimble": "[Package]\nname          = \"fuse\"\nversion       = \"0.1.0\"\nauthor        = \"Akira Hayakawa\"\ndescription   = \"A FUSE binding for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/xflywind/xlsx": "# Package\n\nversion       = \"0.4.4\"\nauthor        = \"flywind\"\ndescription   = \"Read and parse Excel files\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"zip >= 0.2.1\"\n\n# tests\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/alltests.nim\"\n\ntask test_arc, \"Run all tests with arc\":\n  exec \"nim c -r --gc:arc tests/alltests.nim\"\n\n# docs\ntask docs, \"Generate docs\":\n\n  exec \"nim doc2 \" & \n    \"--git.commit:master \" &\n    \"--index:on \" &\n    \"--git.devel:master \" &\n    \"--git.url:https://github.com/xflywind/xlsx \" &\n    \"-o:docs/utils.html \" &\n    \"src/xlsx/utils.nim\"\n",
"https://github.com/juancarlospaco/nim-crc32": "version     = \"0.1.1\"\nauthor      = \"juancarlospaco\"\ndescription = \"CRC32, 2 proc, copied from RosettaCode.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/nim-lang/redis/master/redis.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Official redis client for Nim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.11.0\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc --index:on -o:docs/redis.html src/redis.nim\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/main.nim\"\n",
"https://raw.githubusercontent.com/fragworks/frag/master/frag.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zachary Carter\"\ndescription   = \"A 2D|3D game engine\"\nlicense       = \"MIT\"\n\n# Settings\n\nsrcDir        = \"src\"\nskipDirs      = @[ \"examples\", \"samples\" ]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\nrequires \"sdl2 >= 1.1\"\nrequires \"stb_image >= 1.2\"\nrequires \"https://github.com/yglukhov/android.git\"\nrequires \"x11 >= 1.0\"\nrequires \"https://github.com/fragworks/nim-chipmunk.git\"\nrequires \"https://github.com/zacharycarter/bgfx.nim.git\"\nrequires \"https://github.com/zacharycarter/bgfx.extras.nim.git\"\nrequires \"sound >= 0.1.0\"\nrequires \"https://github.com/zacharycarter/nuklear-nim.git\"\nrequires \"https://github.com/zacharycarter/nanovg.nim.git\"\nrequires \"strfmt >= 0.8.4\"\nrequires \"https://github.com/zacharycarter/nimassimp.git\"",
"https://github.com/stisa/jswebsockets": "# Package\nversion       = \"0.1.3\"\nauthor        = \"stisa\"\ndescription   = \"Wrapper for js websockets\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\nskipDirs = @[\"templates\"]\n# Deps\nrequires: \"nim >= 0.16.0\"\nimport ospaths\n\ntask docs, \"Build docs\":\n  mkdir \"docs\"\n  exec(\"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\"/\"jswebsockets.html \" & \".\"/\"src\"/\"jswebsockets.nim\")\n\ntask examples, \"Build examples\":\n  exec(\"exampler\")\n  mkdir \"docs\"/\"examples\"\n  withdir \"examples\":\n    for file in listfiles(\".\"):\n      if splitfile(file).ext == \".nim\":\n        exec \"nim js -d:test --verbosity:0 --hints:off -o:\" & \"..\"/\"docs\"/\"examples\"/ file.changefileext(\"js\") & \" \" & file\n",
"https://github.com/achesak/nim-ris": "[Package]\nname = \"ris\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Module for working with RIS citation files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/binhonglee/stones/master/stones.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"BinHong Lee\"\ndescription   = \"A library of useful functions and tools for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"test\"]\n\nrequires \"nim >= 1.0.0\"\n\ntask docs, \"Build docs\":\n  exec \"./scripts/docs.nims\"\n\ntask test, \"Runs the test suite\":\n  exec \"./scripts/tests.nims\"\n",
"https://api.github.com/repos/fowlmouth/glossolalia/contents": "[{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"6bb8a291517d679d962db079ade50adfaf39ae2a\",\"size\":1209,\"url\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/fowlmouth/glossolalia/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/blobs/6bb8a291517d679d962db079ade50adfaf39ae2a\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/glossolalia/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/blobs/6bb8a291517d679d962db079ade50adfaf39ae2a\",\"html\":\"https://github.com/fowlmouth/glossolalia/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"e663d691defc6cd1c54b34fe94035653061f1f83\",\"size\":197,\"url\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/README.md?ref=master\",\"html_url\":\"https://github.com/fowlmouth/glossolalia/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/blobs/e663d691defc6cd1c54b34fe94035653061f1f83\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/glossolalia/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/blobs/e663d691defc6cd1c54b34fe94035653061f1f83\",\"html\":\"https://github.com/fowlmouth/glossolalia/blob/master/README.md\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"e99d080b88d52e7d5c8c3bd6c353da77a026203d\",\"size\":0,\"url\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/examples?ref=master\",\"html_url\":\"https://github.com/fowlmouth/glossolalia/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/trees/e99d080b88d52e7d5c8c3bd6c353da77a026203d\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/trees/e99d080b88d52e7d5c8c3bd6c353da77a026203d\",\"html\":\"https://github.com/fowlmouth/glossolalia/tree/master/examples\"}},{\"name\":\"glossolalia.babel\",\"path\":\"glossolalia.babel\",\"sha\":\"99ecad825fa52295439281eafbe1dd7741298c81\",\"size\":189,\"url\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/glossolalia.babel?ref=master\",\"html_url\":\"https://github.com/fowlmouth/glossolalia/blob/master/glossolalia.babel\",\"git_url\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/blobs/99ecad825fa52295439281eafbe1dd7741298c81\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/glossolalia/master/glossolalia.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/glossolalia.babel?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/blobs/99ecad825fa52295439281eafbe1dd7741298c81\",\"html\":\"https://github.com/fowlmouth/glossolalia/blob/master/glossolalia.babel\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"2f8d8c72fca0dc48879f794c67fc88a16d6b360f\",\"size\":0,\"url\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/src?ref=master\",\"html_url\":\"https://github.com/fowlmouth/glossolalia/tree/master/src\",\"git_url\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/trees/2f8d8c72fca0dc48879f794c67fc88a16d6b360f\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/glossolalia/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/glossolalia/git/trees/2f8d8c72fca0dc48879f794c67fc88a16d6b360f\",\"html\":\"https://github.com/fowlmouth/glossolalia/tree/master/src\"}}]",
"https://raw.githubusercontent.com/petermora/nimLazy/master/lazy.nimble": "[Package]\nname          = \"lazy\"\nversion       = \"0.1.0\"\nauthor        = \"Peter Mora\"\ndescription   = \"Iterator library for Nim\"\nlicense       = \"MIT\"\nInstallFiles  = \"lazy.nim\"\ninstallDirs   = \"doc\"\n",
"https://github.com/JohnAD/mongopool": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"MongoDB pooled client for threaded applications such as web servers\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"bson >= 1.1.2\", \"scram >= 0.1.13\"\n",
"https://raw.githubusercontent.com/ba0f3/rbac.nim/master/rbac.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"Simple Role-based Access Control Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.9\"\n",
"https://raw.githubusercontent.com/yglukhov/jnim/master/jnim.nimble": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"Anatoly Galiulin, Yuriy Glukhov\"\ndescription   = \"Java bridge for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.19\"\n\nfrom os import `/`\n\nconst BIN_DIR = \"bin\"\nconst BUILD_DIR = \"build\"\n\nproc compileJava() =\n  BUILD_DIR.mkDir\n  var cmd = \"javac\".toExe & \" -d \" & BUILD_DIR\n  for f in [\n      \"TestClass\",\n      \"ConstructorTestClass\",\n      \"MethodTestClass\",\n      \"PropsTestClass\",\n      \"InnerTestClass\",\n      \"ExceptionTestClass\",\n      \"GenericsTestClass\",\n      \"BaseClass\",\n      \"ChildClass\",\n      \"ExportTestClass\" ]:\n    cmd &= \" tests/java/\" & f & \".java\"\n\n  if fileExists(\"Jnim.java\"):\n    cmd &= \" Jnim.java\"\n  cmd &= \" jnim/support/io/github/vegansk/jnim/NativeInvocationHandler.java\"\n  exec cmd\n\nproc test(name: string) =\n  let outFile = BIN_DIR / \"test_\" & name\n  rmFile(\"Jnim.java\")\n  exec \"nim c --passC:-g --threads:on -d:nimEmulateOverflowChecks -d:jnimGlue=Jnim.java --out:\" & outFile & \" tests/test_\" & name\n  compileJava()\n  exec outFile\n\ntask test, \"Run all tests\":\n  test \"all\"\n\ntask test_jvm_finder, \"Run jvm_finder test\":\n  test \"jvm_finder\"\n\ntask test_jni_wrapper, \"Run jni_wrapper test\":\n  test \"jni_wrapper\"\n\ntask test_jni_api, \"Run jni_api test\":\n  test \"jni_api\"\n\ntask test_jni_generator, \"Run jni_api test\":\n  test \"jni_generator\"\n\ntask test_jni_export, \"Run jni_export test\":\n  test \"jni_export\"\n\ntask test_jni_export_old, \"Run jni_export_old test\":\n  test \"jni_export_old\"\n\ntask test_java_lang, \"Run java.lang test\":\n  test \"java_lang\"\n\ntask test_java_util, \"Run java.util test\":\n  test \"java_util\"\n\ntask example, \"Run example\":\n  test \"example\"\n",
"https://github.com/niv/websocket.nim": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"niv\"\ndescription   = \"websockets for nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n",
"https://github.com/bung87/tim_sort": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"bung87\"\ndescription   = \"A new awesome nimble package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.1.0\"\n",
"https://raw.githubusercontent.com/ba0f3/uibuilder.nim/master/uibuilder.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"UI building with Gnome\\'s Glade\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"tests\"]\nbin           = @[\"uibuilder\"]\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\nrequires \"ui >= 0.9.2\"\nrequires \"xml#devel\"\n",
"https://raw.githubusercontent.com/jiro4989/filetype/master/filetype.nimble": "# Package\n\nversion       = \"0.9.0\"\nauthor        = \"jiro4989\"\ndescription   = \"Small and dependency free Nim package to infer file and MIME type checking the magic numbers signature.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n\ntask docs, \"generate documents\":\n  selfExec \"doc --index:on --project --out:documents src/filetype.nim\"\n",
"https://github.com/onionhammer/shoconim.git": "[Package]\nname = \"shoco\"\nversion = \"0.1\"\nauthor = \"Erik O'Leary\"\ndescription = \"Wrapper for shoco, https://github.com/Ed-von-Schleck/shoco\"\nlicense = \"MIT\"",
"https://raw.githubusercontent.com/nimscale/forestdb/master/forestdb.nimble": "#Package\n\nversion       = \"1.2\"\nauthor        = \"Nimscale\"\ndescription   = \"ForestDB bind for Nim.\"\nlicense       = \"Apache Licence 2.0\"\n\nsrcDir = \"src\"\nbin = @[\"forestdb\"]\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\"\n\ntask build, \"Building forestdb!\":\n  setCommand \"nim e build.nims\"\n  #exec \"nim e build.nims\"\n\n",
"https://github.com/barcharcraz/nimalpm/": "[Package]\nname = \"nimalpm\"\nversion = \"0.1\"\nauthor = \"Charlie Barto\"\ndescription = \"A nimrod wrapper for libalpm\"\nlicense = \"GPLv2\"\n\nInstallFiles = \"\"\"\n\ncalpm.nim\ntests/rawalpmopts.nim\n\"\"\"\n\n",
"https://github.com/Tyler-Yocolano/nimbomb": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Tyler Yocolano\"\ndescription   = \"A GiantBomb-wiki wrapper for nim \"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\nskipDirs = @[\"tests\"]",
"https://github.com/jangko/nimpdf": "packageName   = \"nimPDF\"\nversion       = \"0.4.3\"\nauthor        = \"Andri Lim\"\ndescription   = \"PDF document generation library written in nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"new feature\", \"demo\", \"docs\"]\n\nrequires: \"nim >= 0.18.1\"\nrequires: \"nimBMP >= 0.1.0\"\nrequires: \"nimPNG >= 0.1.0\"\nrequires: \"nimSHA2 >= 0.1.0\"\nrequires: \"nimAES >= 0.1.0\"\nrequires: \"stb_image >= 2.1\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  withDir(\"demo\"):\n    test \"--warning[LockLevel]:off --path:../nimPDF -d:release\", \"test_all\"\n\ntask testvcc, \"Run all tests\":\n  withDir(\"demo\"):\n    test \"--cc:vcc --warning[LockLevel]:off --path:../nimPDF -d:release\", \"test_all\"\n",
"https://github.com/thebigbaron/rainbow": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"BigBaron\"\ndescription   = \"256 colors for shell\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/treeform/miniz/master/miniz.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"treeform\"\ndescription   = \"Wrapper for Miniz lib.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0\"\n",
"https://github.com/Bennyelg/csvql": "# Package\nversion     = \"3.0.2\"\nauthor      = \"Benny Elgazar\"\ndescription = \"csvql - query csv using ansisql.\"\nlicense     = \"MIT\"\nbin         = @[\"csvql\"]\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.2\"\nrequires \"cligen >= 0.9.41\"\n",
"https://github.com/markspanbroek/nimpc": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"Mark Spanbroek\"\ndescription   = \"Secure multi-party computation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0 & < 1.3.0\"\nrequires \"sysrandom >= 1.1.0 & < 2.0.0\"\nrequires \"simpleot >= 0.5.1 & < 0.6.0\"\nrequires \"monocypher >= 0.2.0 & < 0.3.0\"\n",
"https://github.com/rosado/reframe.nim": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Roland Sadowski\"\ndescription   = \"Tools for working with re-frame ClojureScript projects\"\nlicense       = \"EPL-2.0\"\nsrcDir        = \"src\"\nskipDirs      = @[\"test-data\"]\nbin           = @[\"reframe\", \"clojure_keyword_index\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\nrequires \"edn 0.2.1\"\n",
"https://github.com/jxy/primme": "version     = \"2.1.0\"\nauthor      = \"Xiao-Yong Jin\"\ndescription = \"Nim interface for PRIMME: PReconditioned Iterative MultiMethod Eigensolver\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 0.19.9\"\n\ntask test, \"Runs the test suite\":\n  withDir \"test\":\n    exec \"nim c -r -d:release t\"\n\nbefore test:\n  echo \"#\"\n  echo \"#     Modify `test/config.nims' for compiler and link flags for PRIMME\"\n  echo \"#     Test for singular values may fail because of the runtime dynamic method\"\n  echo \"#\"\n\nafter install:\n  echo \"#\"\n  echo \"#     To compile and link against PRIMME, define `primmeDir' and `lapackLib' properly.\"\n  echo \"#     For example:\"\n  echo \"#        nim c -d:primmeDir='/path/to/primme' \\\\\"\n  echo \"#              -d:lapackLib='-L/path/to/lapack/lib -llapack -lblas' \\\\\"\n  echo \"#              -d:release \\\\\"\n  echo \"#              YourApp\"\n  echo \"#     Check the beginning of the file `primme.nim' for details.\"\n  echo \"#\"\n",
"https://raw.githubusercontent.com/johnnovak/nim-fmod/master/fmod.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"John Novak\"\ndescription   = \"Nim wrapper for the FMOD Low Level C API\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\n# Tasks\n\ntask compileExamples, \"Compiles the examples\":\n  exec \"nim c examples/playsound\"\n  exec \"nim c examples/usercreatedsound\"\n",
"https://raw.githubusercontent.com/PMunch/ansiparse/master/ansiparse.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"PMunch\"\ndescription   = \"A package to read data and parse it into ANSI escape characters\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/zevv/npeg/master/npeg.nimble": "# Package\n\nversion       = \"0.24.1\"\nauthor        = \"Ico Doornekamp\"\ndescription   = \"a PEG library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\n# Test\n\ntask test, \"Runs the test suite\":\n  exec \"nimble testc && nimble testcpp && nimble testarc && nimble testjs\"\n\ntask testc, \"C tests\":\n  exec \"nim c -r tests/tests.nim\"\n\ntask testcpp, \"CPP tests\":\n  exec \"nim cpp -r tests/tests.nim\"\n\ntask testjs, \"JS tests\":\n  exec \"nim js -r tests/tests.nim\"\n\ntask testdanger, \"Runs the test suite in danger mode\":\n  exec \"nim c -d:danger -r tests/tests.nim\"\n\ntask testwin, \"Mingw tests\":\n  exec \"nim c -d:mingw tests/tests.nim && wine tests/tests.exe\"\n\ntask test32, \"32 bit tests\":\n  exec \"nim c --cpu:i386 --passC:-m32 --passL:-m32 tests/tests.nim && tests/tests\"\n\ntask testall, \"Test all\":\n  exec \"nimble test && nimble testcpp && nimble testdanger && nimble testjs && nimble testwin\"\n\nwhen (NimMajor, NimMinor) >= (1, 1):\n  task testarc, \"--gc:arc tests\":\n    exec \"nim c --gc:arc -r tests/tests.nim\"\nelse:\n  task testarc, \"--gc:arc tests\":\n    exec \"true\"\n\ntask perf, \"Test performance\":\n  exec \"nim cpp -r -d:danger tests/performance.nim\"\n",
"https://raw.githubusercontent.com/andreaferretti/nimcl/master/nimcl.nimble": "version       = \"0.1.3\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"OpenCL utilities\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"examples\"]\nskipFiles     = @[\"points.json\"]\n\nrequires \"nim >= 0.15.0\", \"opencl >= 1.0\"\n\n\ntemplate dependsOn*(task: untyped): typed =\n  exec \"nimble \" & astToStr(task)\n\nproc addDefaults() =\n  switch(\"cincludes\", \"/usr/local/cuda/targets/x86_64-linux/include\")\n  switch(\"clibdir\", \"/usr/local/cuda/targets/x86_64-linux/lib\")\n  --define: release\n  --path: \".\"\n\ntask info, \"OpenCL info\":\n  addDefaults()\n  --run\n  setCommand \"c\", \"examples/info.nim\"\n\ntask clcompile, \"OpenCL compiler\":\n  addDefaults()\n  setCommand \"c\", \"examples/compile.nim\"\n\ntask vadd, \"run vector add example\":\n  addDefaults()\n  --run\n  setCommand \"c\", \"examples/vadd.nim\"\n\ntask headers, \"compile headers with c2nim\":\n  exec \"c2nim examples/point.h\"\n\ntask kmeans, \"run kmeans example\":\n  dependsOn headers\n  addDefaults()\n  --run\n  setCommand \"c\", \"examples/kmeans.nim\"",
"https://github.com/keyme/nim_cobs": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"Consistent Overhead Byte Stuffing for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/thebigbaron/pine/master/pine.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"BigBaron\"\ndescription   = \"Nim Static Blog & Site Generator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"pine\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"markdown >= 0.8.0\"\nrequires \"rainbow >= 0.2.2\"",
"https://raw.githubusercontent.com/status-im/nim-stint/master/stint.nimble": "packageName   = \"stint\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Efficient stack-based multiprecision int in Nim\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\", \"benchmarks\"]\n### Dependencies\n\n# TODO test only requirements don't work: https://github.com/nim-lang/nimble/issues/482\nrequires \"nim >= 0.19\",\n         \"stew\"\n #, \"https://github.com/alehander42/nim-quicktest >= 0.18.0\", \"https://github.com/status-im/nim-ttmath\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test_internal_debug, \"Run tests for internal procs - test implementation (StUint[64] = 2x uint32\":\n  switch(\"define\", \"stint_test\")\n  test \"internal\"\n\ntask test_internal_release, \"Run tests for internal procs - prod implementation (StUint[64] = uint64\":\n  test \"internal\"\n\ntask test_debug, \"Run all tests - test implementation (StUint[64] = 2x uint32\":\n  switch(\"define\", \"stint_test\")\n  test \"all_tests\"\n\ntask test_release, \"Run all tests - prod implementation (StUint[64] = uint64\":\n  test \"all_tests\"\n\ntask test_property_debug, \"Run random tests (debug mode) - test implementation (StUint[64] = 2x uint32)\":\n  requires \"https://github.com/alehander42/nim-quicktest >= 0.18.0\"\n  switch(\"define\", \"stint_test\")\n  test \"property_based\"\n\ntask test_property_release, \"Run random tests (release mode) - test implementation (StUint[64] = 2x uint32)\":\n  requires \"https://github.com/alehander42/nim-quicktest >= 0.18.0\"\n  switch(\"define\", \"stint_test\")\n  switch(\"define\", \"release\")\n  test \"property_based\"\n\ntask test_property_uint256_debug, \"Run random tests Uint256 (debug mode) vs TTMath (StUint[256] = 8 x uint32)\":\n  # TODO: another reference implementation?\n  requires \"https://github.com/alehander42/nim-quicktest >= 0.18.0\", \"https://github.com/status-im/nim-ttmath\"\n  test \"property_based\", \"cpp\"\n\ntask test_property_uint256_release, \"Run random tests Uint256 (release mode) vs TTMath (StUint[256] = 4 x uint64)\":\n  # TODO: another reference implementation?\n  requires \"https://github.com/alehander42/nim-quicktest >= 0.18.0\", \"https://github.com/status-im/nim-ttmath\"\n  switch(\"define\", \"release\")\n  test \"property_based\", \"cpp\"\n\ntask test, \"Run all tests - test and production implementation\":\n  exec \"nimble test_internal_debug\"\n  exec \"nimble test_internal_release\"\n  exec \"nimble test_debug\"\n  exec \"nimble test_release\"\n  ## TODO test only requirements don't work: https://github.com/nim-lang/nimble/issues/482\n  # exec \"nimble test_property_debug\"\n  # exec \"nimble test_property_release\"\n  # exec \"nimble test_property_uint256_debug\"\n  # exec \"nimble test_property_uint256_release\"\n",
"https://github.com/andreaferretti/interfaced": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Go-like interfaces\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"test.nim\", \"test_exports.nim\", \"test_logsink.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask tests, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"test.nim\"\n\ntask test, \"run tests\":\n  setCommand \"tests\"",
"https://github.com/euantorano/recaptcha.nim": "# Package\n\nversion       = \"1.0.3\"\nauthor        = \"Euan T\"\ndescription   = \"reCAPTCHA support for Nim, supporting rendering a capctcha and verifying a user\\'s response.\"\nlicense       = \"BSD-3-Clause\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/bpr/vla/master/vla.nimble": "[Package]\nname          = \"vla\"\nversion       = \"0.1.0\"\nauthor        = \"Brian Rogoff\"\ndescription   = \"Variable length arrays for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/dvolk/gnuplot.nim": "mode = ScriptMode.Verbose\n\n# Package\npackageName = \"gnuplot\"\nversion = \"0.6\"\nauthor = \"dvolk\"\ndescription = \"Interface to Gnuplot\"\nlicense = \"MIT\"\nskipDirs = @[\"examples\"]\n\n# Deps\nrequires \"nim >= 0.9.2\"\n\nwhen defined(nimdistros):\n  import distros\n  foreignDep \"gnuplot\"\n",
"https://raw.githubusercontent.com/achesak/nim-pythonmath/master/pythonmath.nimble": "[Package]\nname = \"pythonmath\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \" Nim module to provide an interface as similar as possible to Python's math libary\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/mzteruru52/NmiLine/master/nmiline.nimble": "version     = \"1.1\"\r\nauthor      = \"Teruki Tada\"\r\ndescription = \"Plotting tool using NiGui\"\r\nlicense     = \"MIT\"\r\n\r\nrequires \"nim >= 0.18.0\"\r\nsrcDir = \"src\"\r\nskipDirs = @ [\"example\",\"ScreenShots\",]\r\n",
"https://github.com/Double-oxygeN/tinamou": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"Double_oxygeN\"\ndescription   = \"Game Library in Nim with SDL2\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"sdl2 >= 1.1\"\n\n# tasks\n\ntask release, \"do release build\":\n  exec \"nimble build -d:release --opt:speed --app:gui && strip ./bin/tinamou\"\n\ntask cleanup, \"clean up files\":\n  exec \"rm -f bin/* && rm -rf src/nimcache\"\n  exec \"find tests -type f ! -name \\\"*.*\\\" -delete && rm -rf tests/nimcache\"\n\ntask docgen, \"generate documentation\":\n  exec \"nimble doc2 src/tinamou.nim --project -o:docs\"\n\ntask test, \"test codes\":\n  withDir \"tests\":\n    exec \"nim c -r test\"\n    exec \"rm -f test\"\n",
"https://github.com/dom96/prometheus": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A prometheus instrumentation library for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/status-im/nim-eth-keyfile": "packageName   = \"eth_keyfile\"\nversion       = \"0.1.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Tools for handling the encrypted keyfile format used to store Ethereum private keys\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\", \"Nim\", \"nim\"]\n\n### Dependencies\n\nrequires \"nim > 0.18.0\",\n         \"nimcrypto\",\n         \"eth_keys\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/testuuid\"\n  exec \"nim c -r tests/testkeyfile\"\n  exec \"nim c -r -d:release tests/testuuid\"\n  exec \"nim c -r -d:release tests/testkeyfile\"\n",
"https://github.com/xmonader/nim-configparser": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"pure Ini configurations parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/Xe/argument_parser/master/argument_parser.nimble": "[Package]\nname          = \"argument_parser\"\nversion       = \"0.4.3\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Provides a complex commandline parser.\"\"\"\nlicense       = \"MIT\"\n\ninstallDirs = \"\"\"\n\ndocs\nexamples\n\n\"\"\"\n\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\nargument_parser.nim\nnakefile.nim\nnakefile.nimrod.cfg\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nhttps://github.com/Xe/badger_bits.git >= 0.2.2\nnake >= 1.4\nnim >= 0.10.2\n\n\"\"\"\n",
"https://github.com/CORDEA/oauth": "# Package\nversion     = \"0.10\"\nauthor      = \"Yoshihiro Tanaka\"\ndescription = \"OAuth library for nim\"\nlicense     = \"Apache License 2.0\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 0.19.0\"\nrequires \"sha1\"\n",
"https://raw.githubusercontent.com/stefansalewski/gintro/master/gintro.nimble": "# Package\n\nversion       = \"0.8.6\"\nauthor        = \"Stefan Salewski\"\ndescription = \"High level GObject-Introspection based GTK3/GTK4 bindings\"\nlicense       = \"MIT\"\nskipDirs = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu) or detectOs(Debian):\n    foreignDep \"libgtk-3-dev\"\n  elif detectOs(Gentoo):\n    foreignDep \"gtk+\" # can we specify gtk3?\n  #else: we don't know the names for all the other distributions\n  #  foreignDep \"openssl\"\n\nimport ospaths\n\nproc prep =\n  let this = thisDir()\n  let td = getTempDir()\n  cd(td)\n  let wd = \"gintrosalewski\"\n  if dirExists(wd):\n    rmDir(wd)\n    # quit(\"gintro: tmp directory already exists!\")\n  mkDir(wd)\n  cd(wd)\n  mkDir(\"ngtk3\")\n  cd(\"ngtk3\")\n\n  cpFile(this / \"tests\" / \"gen.nim\", td / wd / \"gen.nim\")\n  cpFile(this / \"tests\" / \"combinatorics.nim\", td / wd / \"combinatorics.nim\")\n  cpFile(this / \"tests\" / \"maxby.nim\", td / wd / \"maxby.nim\")\n\n  cd(td)\n  cd(wd)\n\n  try:\n    exec(\"wget https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/gobject.nim -O gobject.nim\")\n    exec(\"wget https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/glib.nim -O glib.nim\")\n    exec(\"wget https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/gir.nim -O gir.nim\")\n  except:\n    try:\n      exec(\"nimgrab https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/gobject.nim gobject.nim\")\n      exec(\"nimgrab https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/glib.nim glib.nim\")\n      exec(\"nimgrab https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/gir.nim gir.nim\")\n    except:\n      echo \"For bootstrapping of gintro package we need the low level files gobject.nim, glib.nim and gir.nim.\"\n      echo \"We take these from package oldgtk3. As most gintro users will not need the whole oldgtk3 package\"\n      echo \"we tried to only download these 3 single files using wget or nimgrab. But that failed.\"\n      echo \"Ensure that wget or nimgrab are available. wget should be available for Unix like systems.\"\n      echo \"Nimgrab should be available in Nim/tools directory. You may compile it with 'nim c -d:ssl nimgrab.nim'\"\n      echo \"and put it into your search path\"\n      echo \"For the unlikely case that you have already full oldgtk3 package installed, we will just try to continue...\"\n\n  exec(\"nim c gen.nim\")\n  mkDir(\"nim_gi\")\n  exec(td / wd / \"gen 1\")\n  exec(td / wd / \"gen\")\n  let mods = listFiles(\"nim_gi\")\n  for i in mods:\n    let j = i[7 .. ^1]\n    cpFile(i, this / \"gintro\" / j)\n  cd(td)\n  rmDir(wd) # cleanup\n\n#task prepare, \"preparing gintro\":\nbefore install:\n\n  echo \"preparing gintro\"\n  prep()\n  \n\n",
"https://github.com/bunkford/winserial": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"Serial library for Windows.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires: \"nim >= 0.20.0\", \"winim >= 3.2.4\"",
"https://github.com/ul/soundio": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Ruslan Prokopchuk\"\ndescription   = \"Bindings for libsoundio, a library providing cross-platform audio input and output.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://api.github.com/repos/mjfh/nim-jhash/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"a3c7f63af73ec8a27b60c4ec275c00f7b88d3e62\",\"size\":29,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/a3c7f63af73ec8a27b60c4ec275c00f7b88d3e62\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-jhash/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/a3c7f63af73ec8a27b60c4ec275c00f7b88d3e62\",\"html\":\"https://github.com/mjfh/nim-jhash/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"62a3380b5dc54f693f1713b62405149444e4f77a\",\"size\":14,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/62a3380b5dc54f693f1713b62405149444e4f77a\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-jhash/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/62a3380b5dc54f693f1713b62405149444e4f77a\",\"html\":\"https://github.com/mjfh/nim-jhash/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"8f106987fde2560d9de4038f94d6418d6bd7644a\",\"size\":684,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/README.md?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/8f106987fde2560d9de4038f94d6418d6bd7644a\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-jhash/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/8f106987fde2560d9de4038f94d6418d6bd7644a\",\"html\":\"https://github.com/mjfh/nim-jhash/blob/master/README.md\"}},{\"name\":\"UNLICENSE\",\"path\":\"UNLICENSE\",\"sha\":\"68a49daad8ff7e35068f2b7a97d643aab440eaec\",\"size\":1211,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/UNLICENSE?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/blob/master/UNLICENSE\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/68a49daad8ff7e35068f2b7a97d643aab440eaec\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-jhash/master/UNLICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/UNLICENSE?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/68a49daad8ff7e35068f2b7a97d643aab440eaec\",\"html\":\"https://github.com/mjfh/nim-jhash/blob/master/UNLICENSE\"}},{\"name\":\"_config.yml\",\"path\":\"_config.yml\",\"sha\":\"c4192631f25b34d77a7f159aa0da0e3ae99c4ef4\",\"size\":26,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/_config.yml?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/blob/master/_config.yml\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/c4192631f25b34d77a7f159aa0da0e3ae99c4ef4\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-jhash/master/_config.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/_config.yml?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/c4192631f25b34d77a7f159aa0da0e3ae99c4ef4\",\"html\":\"https://github.com/mjfh/nim-jhash/blob/master/_config.yml\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"f7db7c06cf2e03a5e0bb09d38f9128e70f9b3efb\",\"size\":0,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/docs?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/trees/f7db7c06cf2e03a5e0bb09d38f9128e70f9b3efb\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/trees/f7db7c06cf2e03a5e0bb09d38f9128e70f9b3efb\",\"html\":\"https://github.com/mjfh/nim-jhash/tree/master/docs\"}},{\"name\":\"index.html\",\"path\":\"index.html\",\"sha\":\"f8de4f8b4d99f933a939b4a66585f10582b60e53\",\"size\":332,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/index.html?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/blob/master/index.html\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/f8de4f8b4d99f933a939b4a66585f10582b60e53\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-jhash/master/index.html\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/index.html?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/f8de4f8b4d99f933a939b4a66585f10582b60e53\",\"html\":\"https://github.com/mjfh/nim-jhash/blob/master/index.html\"}},{\"name\":\"jhash.nimble\",\"path\":\"jhash.nimble\",\"sha\":\"cf0450dd56a12bf0ee3e6ded0245739e3b250ace\",\"size\":412,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/jhash.nimble?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/blob/master/jhash.nimble\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/cf0450dd56a12bf0ee3e6ded0245739e3b250ace\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-jhash/master/jhash.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/jhash.nimble?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/cf0450dd56a12bf0ee3e6ded0245739e3b250ace\",\"html\":\"https://github.com/mjfh/nim-jhash/blob/master/jhash.nimble\"}},{\"name\":\"makefile\",\"path\":\"makefile\",\"sha\":\"63ac5e6830ced07d12b5987ac95cc881d851a009\",\"size\":612,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/makefile?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/blob/master/makefile\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/63ac5e6830ced07d12b5987ac95cc881d851a009\",\"download_url\":\"https://raw.githubusercontent.com/mjfh/nim-jhash/master/makefile\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/makefile?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/blobs/63ac5e6830ced07d12b5987ac95cc881d851a009\",\"html\":\"https://github.com/mjfh/nim-jhash/blob/master/makefile\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"51b37b8034d01a32a65e35b8fec5975398adcb32\",\"size\":0,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/src?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/tree/master/src\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/trees/51b37b8034d01a32a65e35b8fec5975398adcb32\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/trees/51b37b8034d01a32a65e35b8fec5975398adcb32\",\"html\":\"https://github.com/mjfh/nim-jhash/tree/master/src\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"b8be191bdc9b264261f4cca8d63bd66127125cbf\",\"size\":0,\"url\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/tests?ref=master\",\"html_url\":\"https://github.com/mjfh/nim-jhash/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/mjfh/nim-jhash/git/trees/b8be191bdc9b264261f4cca8d63bd66127125cbf\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/mjfh/nim-jhash/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/mjfh/nim-jhash/git/trees/b8be191bdc9b264261f4cca8d63bd66127125cbf\",\"html\":\"https://github.com/mjfh/nim-jhash/tree/master/tests\"}}]",
"https://github.com/Narazaka/shiori-nim": "# Package\n\nversion       = \"1.3.0\"\nauthor        = \"Narazaka\"\ndescription   = \"SHIORI Protocol Parser/Builder\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\ntask test, \"test\":\n    exec \"nim c -r -p:. tests/parseRequest\"\n",
"https://raw.githubusercontent.com/andreaferretti/spills/master/spills.nimble": "mode = ScriptMode.Verbose\n\nversion       = \"0.1.3\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Disk-backed sequences\"\nlicense       = \"Apache2\"\nskipFiles      = @[\"test.nim\"]\n\nrequires \"nim >= 0.13.0\"\n\ntask tests, \"run tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"test.nim\"\n\ntask test, \"run tests\":\n  setCommand \"tests\"\n\ntask gendoc, \"generate documentation\":\n  --docSeeSrcUrl: https://github.com/andreaferretti/spills/blob/master\n  --project\n  setCommand \"doc2\", \"spills\"",
"https://github.com/barnybug/nim-mqtt": "[Package]\nname          = \"mqtt\"\nversion       = \"0.1.0\"\nauthor        = \"Barnaby Gray\"\ndescription   = \"Wrapper for libpaho-mqtt, a C library that communicates with an MQTT pub/sub server.\"\nlicense       = \"BSD\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/stefansalewski/gintro": "# Package\n\nversion       = \"0.8.6\"\nauthor        = \"Stefan Salewski\"\ndescription = \"High level GObject-Introspection based GTK3/GTK4 bindings\"\nlicense       = \"MIT\"\nskipDirs = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu) or detectOs(Debian):\n    foreignDep \"libgtk-3-dev\"\n  elif detectOs(Gentoo):\n    foreignDep \"gtk+\" # can we specify gtk3?\n  #else: we don't know the names for all the other distributions\n  #  foreignDep \"openssl\"\n\nimport ospaths\n\nproc prep =\n  let this = thisDir()\n  let td = getTempDir()\n  cd(td)\n  let wd = \"gintrosalewski\"\n  if dirExists(wd):\n    rmDir(wd)\n    # quit(\"gintro: tmp directory already exists!\")\n  mkDir(wd)\n  cd(wd)\n  mkDir(\"ngtk3\")\n  cd(\"ngtk3\")\n\n  cpFile(this / \"tests\" / \"gen.nim\", td / wd / \"gen.nim\")\n  cpFile(this / \"tests\" / \"combinatorics.nim\", td / wd / \"combinatorics.nim\")\n  cpFile(this / \"tests\" / \"maxby.nim\", td / wd / \"maxby.nim\")\n\n  cd(td)\n  cd(wd)\n\n  try:\n    exec(\"wget https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/gobject.nim -O gobject.nim\")\n    exec(\"wget https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/glib.nim -O glib.nim\")\n    exec(\"wget https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/gir.nim -O gir.nim\")\n  except:\n    try:\n      exec(\"nimgrab https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/gobject.nim gobject.nim\")\n      exec(\"nimgrab https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/glib.nim glib.nim\")\n      exec(\"nimgrab https://raw.githubusercontent.com/StefanSalewski/oldgtk3/master/oldgtk3/gir.nim gir.nim\")\n    except:\n      echo \"For bootstrapping of gintro package we need the low level files gobject.nim, glib.nim and gir.nim.\"\n      echo \"We take these from package oldgtk3. As most gintro users will not need the whole oldgtk3 package\"\n      echo \"we tried to only download these 3 single files using wget or nimgrab. But that failed.\"\n      echo \"Ensure that wget or nimgrab are available. wget should be available for Unix like systems.\"\n      echo \"Nimgrab should be available in Nim/tools directory. You may compile it with 'nim c -d:ssl nimgrab.nim'\"\n      echo \"and put it into your search path\"\n      echo \"For the unlikely case that you have already full oldgtk3 package installed, we will just try to continue...\"\n\n  exec(\"nim c gen.nim\")\n  mkDir(\"nim_gi\")\n  exec(td / wd / \"gen 1\")\n  exec(td / wd / \"gen\")\n  let mods = listFiles(\"nim_gi\")\n  for i in mods:\n    let j = i[7 .. ^1]\n    cpFile(i, this / \"gintro\" / j)\n  cd(td)\n  rmDir(wd) # cleanup\n\n#task prepare, \"preparing gintro\":\nbefore install:\n\n  echo \"preparing gintro\"\n  prep()\n  \n\n",
"https://github.com/treeform/mddoc": "version       = \"0.1.0\"\nauthor        = \"treeform\"\ndescription   = \"Generate Nim API docs in markdown for GitHub's README.md files.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbin = @[\"mddoc\"]\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/jiro4989/maze/master/maze.nimble": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"jiro4989\"\ndescription   = \"A command and library to generate mazes\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"maze\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n\ntask docs, \"Generate documents\":\n  rmDir \"docs\"\n  exec \"nimble doc --project --index:on -o:docs src/maze.nim\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble check\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble docs -Y\"\n  exec \"nimble build -d:release -Y\"\n  exec \"./bin/maze -h\"\n  exec \"./bin/maze -v\"\n\nimport strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"maze\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = &\"dist/{assets}\"\n  mkDir &\"{dir}/bin\"\n  cpFile &\"bin/{app}\", &\"{dir}/bin/{app}\"\n  cpFile \"LICENSE\", &\"{dir}/LICENSE\"\n  cpFile \"README.adoc\", &\"{dir}/README.adoc\"\n  withDir \"dist\":\n    exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/PMunch/xevloop": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Library to more easily create X11 event loops\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"x11\"\n",
"https://github.com/andreaferretti/alea": "import os\n\n# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"A library to work with random variables\"\nlicense       = \"Apache2\"\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\", \"random >= 0.5.6\"\n\ntask test, \"run alea tests\":\n  withDir \"tests\":\n    exec \"nimble test\"",
"https://github.com/dfdeshom/nimlz4.git": "[Package]\nname          = \"nimlz4\"\nversion       = \"0.1.0\"\nauthor        = \"Didier Deshommes\"\ndescription   = \"Nim wrapper for the LZ4 library\"\nlicense       = \"BSD-3\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/quelklef/lilt/master/lilt.nimble": "\n# Package\n\n# Thanks to https://github.com/nim-lang/nimble/blob/master/nimble.nimble#L4\n\nimport ospaths\ntemplate packageDir: string = instantiationInfo(fullPaths=true).filename.parentDir\n\nwhen fileExists(packageDir / \"src/version.txt\"):\n    # In the git repository the Nimble sources are in a ``src`` directory.\n    version = slurp(packageDir / \"src/version.txt\")\nelse:\n    # When the package is installed, the ``src`` directory disappears.\n    version = slurp(packageDir / \"version.txt\")\n\n# Verison set above\nauthor        = \"Eli Maynard\"\ndescription   = \"Simple language for writing parsers\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://raw.githubusercontent.com/kerrycobb/PhylogeNi/main/phylogeni.nimble": "version     = \"0.1.0\"\nauthor      = \"Kerry Cobb\"\ndescription = \"A Nim library for working with phylogenetic trees.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/Vladar4/nimgame2/": "# Package\n\nversion       = \"0.6.1\"\nauthor        = \"Vladar\"\ndescription   = \"A simple 2D game engine for Nim language.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"sdl2_nim#head\"\n\n# Options\n\nskipDirs = @[\"demos\"]\n\n",
"https://github.com/lmariscal/figures": "# Package\n\nversion     = \"1.2.0\"\nauthor      = \"Leonardo Mariscal\"\ndescription = \"Unicode symbols with Windows CMD fallbacks \"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/dom96/choosenim/master/choosenim.nimble": "# Package\n\nversion       = \"0.7.5\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"The Nim toolchain installer.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\nbinDir = \"bin\"\nbin = @[\"choosenim\"]\n\nskipExt = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\", \"nimble#8f7af86\"\nrequires \"nimterop >= 0.6.12\", \"nimarchive >= 0.5.3\"\n#requires \"libcurl >= 1.0.0\" - OSX now uses httpclient\nrequires \"analytics >= 0.2.0\"\nrequires \"osinfo >= 0.3.0\"\n",
"https://raw.githubusercontent.com/PMunch/Imlib2/master/imlib2.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"PMunch\"\ndescription   = \"Wrapper of the Imlib2 library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/planetis-m/looper/master/looper.nimble": "# Package\n\nversion       = \"0.8.0\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"For loop macros for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/paranim/paramidi_soundfonts/master/paramidi_soundfonts.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"oakes\"\ndescription   = \"Sound fonts for paramidi\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"sf2\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/yglukhov/typelists/master/typelists.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Type lists\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nimtomd/master/nimtomd.nimble": "# Package\nversion       = \"0.3.1\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"Convert Nim files to markdown\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimtomd\"]\n\n\n# Dependencies\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/trustable-code/NiGui/master/nigui.nimble": "# Package\n\nversion = \"0.2.5\"\nauthor = \"Simon Krauter\"\ndescription = \"Cross-platform, desktop GUI toolkit using native widgets.\"\nlicense = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.19.0\"\n\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/filcuc/nimqml/master/nimqml.nimble": "[Package]\nname          = \"nimqml\"\nversion       = \"0.8.0\"\nauthor        = \"Filippo Cucchetto\"\ndescription   = \"QML bindings for Nim\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/bung87/stage/master/stage.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"bung87\"\ndescription   = \"nim tasks apply to git hooks\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin = @[\"stage\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\nrequires \"shell\"\nrequires \"cligen >= 1.3.2\"\n\nlet sh = \"\"\"\n#!/bin/sh\nif stage checkError;then\n    stage fixStyle\nelse\n    exit 1\nfi\n\"\"\"\nif dirExists(\".git\"):\n  writeFile \".git/hooks/pre-commit\",sh\n  exec \"chmod 0755 .git/hooks/pre-commit\"\n  # inclFilePermissions \".git/hooks/pre-commit\",{fpUserExec,fpGroupExec,fpOthersExec}\n",
"https://github.com/MarcAzar/RollingHash": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Marc Azar\"\ndescription   = \"A high performance Nim implementation of a Cyclic Polynomial Hash, aka BuzHash, and Rabin-Karp algorithm.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://github.com/lambci/awslambda.nim": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Michael Hart\"\ndescription   = \"A package to compile nim functions for AWS Lambda\"\nlicense       = \"MIT\"\nsrcDir        = \".\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/Mnenmenth/libgraphnim": "# Package\n\nversion       = \"1.2\"\nauthor        = \"Earl Kennedy\"\ndescription   = \"Converts 2D linear graph coordinates to pixels on screen\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\nskipDirs      = @[\"test\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n#task test, \"Test graph functionality\"\n#    exec \"nim c --d:debug --lineDir:on --debuginfo --run src/test/test.nim\"\n",
"https://github.com/iffy/nim-keyring": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Matt Haggard\"\ndescription   = \"Cross-platform OS keyring interface\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nwhen defined(windows):\n  requires \"winim >= 3.2.4\"\nwhen defined(linux):\n  requires \"dbus >= 0.0.1\"\n",
"https://github.com/bpr/vla": "[Package]\nname          = \"vla\"\nversion       = \"0.1.0\"\nauthor        = \"Brian Rogoff\"\ndescription   = \"Variable length arrays for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/Knaque/spinner/master/spinner.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Reilly Moore\"\ndescription   = \"Prebuilt components for the Fidget GUI library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"fidget#head\"\nrequires \"gradient#head\"",
"https://raw.githubusercontent.com/Amrykid/nim-locale/master//locale.nimble": "#Package\n\nversion = \"0.1\"\nauthor = \"Amrykid\"\ndescription = \"A simple library for localizing Nimrod applications.\"\nlicense = \"MIT\"\n\nskipFiles = @[\"locale.xml\", \"LocaleData.cfg\"]\n\n#Dep\n\nrequires \"nimrod >= 0.9.4\"\n",
"https://raw.githubusercontent.com/jiro4989/subnet/master/subnet.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"jiro4989\"\ndescription   = \"subnet prints subnet mask in human readable.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"subnet\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\nrequires \"cligen >= 1.0.0\"\n\nimport os, strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"subnet\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/akiradeveloper/msgpack-nim.git": "[Package]\nname          = \"msgpack\"\nversion       = \"0.1.0\"\nauthor        = \"Akira Hayakawa\"\ndescription   = \"A MessagePack binding for Nim\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/onelivesleft/simple_parseopt/master/simple_parseopt.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"onelivesleft\"\ndescription   = \"Nim module which provides clean, zero-effort command line parsing.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://github.com/treeform/encode": "# Package\nversion = \"0.1.0\"\nauthor = \"Andre von Houck\"\ndescription = \"Encode/decode utf8 utf16 and utf32.\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/planetis-m/manu": "# mode = ScriptMode.Verbose\n\npackageName   = \"manu\"\nversion       = \"2.2.1\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"Nim Matrix library\"\nlicense       = \"MIT\"\nskipDirs = @[\"tests\", \"docs\", \"examples\", \"experiments\"]\n\nrequires \"nim >= 1.5.0\"\n\nswitch \"forceBuild\"\n\nproc configForTests() =\n   switch \"hints\", \"off\"\n   switch \"linedir\", \"on\"\n   switch \"stacktrace\", \"on\"\n   switch \"linetrace\", \"on\"\n   switch \"debuginfo\"\n   switch \"path\", \".\"\n   switch \"gc\", \"arc\"\n   switch \"run\"\n\ntask test, \"run tests\":\n   configForTests()\n   setCommand \"c\", \"tests/testMatrix.nim\"\n\ntask doc, \"generate documentation\":\n   switch \"project\"\n   #switch \"index\"\n   switch \"out\", \"docs/\"\n   switch \"git.url\", \"https://github.com/planetis-m/manu\"\n   #switch \"docSeeSrcUrl\", \"https://github.com/planetis-m/manu/tree/master\"\n   setCommand \"doc\", \"manu.nim\"\n\nafter doc:\n   switch \"out\", \"docs/index.html\"\n   setCommand \"buildIndex\", \"docs/\"\n",
"https://github.com/disruptek/openapi": "version = \"3.2.2\"\nauthor = \"disruptek\"\ndescription = \"OpenAPI Code Generator\"\nlicense = \"MIT\"\nrequires \"npeg < 1.0.0\"\nrequires \"foreach >= 1.0.1 & < 2.0.0\"\nrequires \"https://github.com/disruptek/rest.git >= 1.0.3 & < 2.0.0\"\n\nsrcDir = \"src\"\n\nproc execCmd(cmd: string) =\n  echo \"execCmd:\" & cmd\n  exec cmd\n\nproc execTest(test: string) =\n  execCmd \"nim c           -f -r \" & test\n  execCmd \"nim c   -d:release -r \" & test\n  execCmd \"nim c   -d:danger  -r \" & test\n  execCmd \"nim cpp            -r \" & test\n  execCmd \"nim cpp -d:danger  -r \" & test\n  when NimMajor >= 1 and NimMinor >= 1:\n    execCmd \"nim c   --gc:arc -r \" & test\n    execCmd \"nim cpp --gc:arc -r \" & test\n\ntask test, \"run tests for travis\":\n  execTest(\"tests/tests.nim\")\n",
"https://raw.githubusercontent.com/OpenSystemsLab/hmac.nim/master/hmac.nimble": "version       = \"0.2.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"HMAC hashing in Nim\"\nlicense       = \"MIT\"\n\nrequires \"nim\", \"nimSHA2\", \"sha1\", \"nimcrypto >= 0.5.4\"\n",
"https://raw.githubusercontent.com/Guevara-chan/Cliptomania/master/cliptomania.nimble": "# Package\r\n\r\nversion       = \"0.1.0\"\r\nauthor        = \"Guevara-chan\"\r\ndescription   = \".NET-inspired lightweight clipboard library\"\r\nlicense       = \"MIT\"\r\nsrcDir        = \"src\"\r\n\r\n# Dependencies\r\n\r\nrequires \"nim >= 0.18.0\"",
"https://raw.githubusercontent.com/onionhammer/nim-templates/master/templates.nimble": "version = \"0.5\"\nauthor = \"Erik O'Leary\"\ndescription = \"a compile-time templating engine for nim\"\nlicense = \"BSD\"\nskipDirs = @[\"tests\"]\ntask test, \"Runs the test suite\":\n  exec \"nim c --outdir:bin -r tests/annotate_tests.nim\"\n  exec \"nim c --outdir:bin -r tests/templates_tests.nim\"\n  exec \"nim js --outdir:bin -r tests/js_target.nim\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-xdo/master/xdo.nimble": "version       = \"0.7.5\"\nauthor        = \"Juan Carlos, Mircea Ilie Ploscaru\"\ndescription   = \"Nim GUI Automation Linux, simulate user interaction, mouse and keyboard.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nrequires \"nim >= 1.2.4\"\n\nimport distros\n\nbefore install:\n  foreignDep \"xdo\"\n",
"https://github.com/hiteshjasani/nim-d3": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Hitesh Jasani\"\ndescription   = \"Nim bindings to D3js\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nbackend       = \"js\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\n# Tasks\n\ntask docs, \"Build documentation\":\n  mkDir(\"docs/d3\")\n  exec \"nim doc --project --index:on --outdir:docs src/d3.nim\"\n  exec \"nim buildIndex -o:docs/theindex.html docs\"\n",
"https://github.com/andreaferretti/csvtools": "mode = ScriptMode.Verbose\n\nversion       = \"0.2.1\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Manage CSV files in Nim\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"test.nim\", \"goog.csv\", \"goog-tab.csv\", \"expected.csv\"]\n\nrequires: \"nim >= 1.0\"\n\ntask test, \"run standard tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"test.nim\"",
"https://raw.githubusercontent.com/achesak/nim-pythonpathlib/master/pythonpathlib.nimble": "[Package]\nname = \"pythonpathlib\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Module for working with paths that is as similar as possible to Python's pathlib\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/capocasa/nim-nestegg/master/nestegg.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Carlo Capocasa\"\ndescription   = \"nestegg, a portable demuxer for the webm audio/video container format, which is a subset of the matroska container format.\"\nlicense       = \"0BSD\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"nimterop\"\nforeignDep \"autoconf\"\nforeignDep \"libtool\"\nforeignDep \"make\"\n\n",
"https://github.com/geotre/wren": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"geotre\"\ndescription   = \"A nim wrapper for Wren, an embedded scripting language\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"nimgen >= 0.5.0\"\n\nvar\n  name = \"wren\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\n\ntask ex1, \"Run example 1 (hello world)\":\n  exec \"cd examples/01_hello_world && nim c -r main.nim\"\n\ntask ex2, \"Run example 2 (foreign functions)\":\n  exec \"cd examples/02_foreign_functions && nim c -r main.nim\"\n\ntask ex3, \"Run example 3 (module import)\":\n  exec \"cd examples/03_module_import && nim c -r main.nim\"\n\ntask ex4, \"Run example 4 (slots)\":\n  exec \"cd examples/04_slots && nim c -r main.nim\"\n\ntask ex5, \"Run example 5 (variables)\":\n  exec \"cd examples/05_variables && nim c -r main.nim\"\n",
"https://github.com/fowlmouth/horde3d": "[package]\nname: \"horde3d\"\nauthor:\"fowl\"\nversion:\"1.0\"\ndescription:\"Wrapper for Horde3D, a small open source 3D rendering engine.\"\nlicense:\"WTFPL\"\n\n[dependencies]\nrequires: \"nimrod >= 0.9.2\"\n",
"https://github.com/gokr/norx": "# Package\nversion       = \"0.4.2\"\nauthor        = \"Göran Krampe\"\ndescription   = \"A wrapper of the ORX 2.5D game engine\"\nlicense       = \"Zlib\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/luminosoda/gradient/master/gradient.nimble": "# Package\nversion = \"1.0.0\"\nauthor = \"Andrew Yarche\"\ndescription = \"Color gradients generation\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\nrequires \"chroma >= 0.1.0\"",
"https://github.com/numforge/laser": "# Laser\n# Copyright (c) 2018 Mamy André-Ratsimbazafy\n# Distributed under the Apache v2 License (license terms are at http://www.apache.org/licenses/LICENSE-2.0).\n# This file may not be copied, modified, or distributed except according to those terms.\n\npackageName   = \"Laser\"\nversion       = \"0.0.1\"\nauthor        = \"Mamy André-Ratsimbazafy\"\ndescription   = \"High Performance Computing and Image Toolbox: SIMD, JIT Assembler, OpenMP, runtime CPU feature detection, optimised machine learning primitives\"\nlicense       = \"Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 0.19.2\"\n\n### Helper functions\nproc test(name: string, defaultLang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand defaultLang, \"tests/\" & name & \".nim\"\n\n### tasks\ntask test, \"Run all tests\":\n  test \"all_tests\"\n",
"https://github.com/nim-appkit/utils": "[Package]\nname          = \"utils\"\nversion       = \"0.1.0\"\nauthor        = \"Christoph Herzog\"\ndescription   = \"Collection of useful Nim code.\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.12.0, values >= 0.1\"\n",
"https://raw.githubusercontent.com/ba0f3/anybar.nim/master/anybar.nimble": "[Package]\nname          = \"Anybar\"\nversion       = \"0.0.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"Anybar client written in Nim\"\nlicense       = \"MIT\"\n\nbin = \"anybar\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/lcrees/gentabs/master/gentabs.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lcrees\"\ndescription   = \"Efficient hash table that is a key-value mapping (removed from stdlib)\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/markspanbroek/simpleot.nim/master/simpleot.nimble": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"Mark Spanbroek\"\ndescription   = \"Simple OT wrapper\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0 & < 2.0.0\"\nrequires \"nimterop >= 0.5.8 & < 0.6.0\"\n",
"https://github.com/achesak/nim-freegeoip": "[Package]\nname = \"freegeoip\"\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Retrieve info about a location from an IP address \"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/PMunch/protobuf-nim/master/protobuf.nimble": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Pure Nim library for using protobuf in Nim. It is implemented through a string parsing macro that generate code based on the official protobuf specification.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"combparser\"\n",
"https://github.com/jabbalaci/nimpykot": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Laszlo Szathmary (Jabba Laci)\"\ndescription   = \"Porting some Python / Kotlin features to Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/beshrkayali/webdavclient": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Beshr Kayali\"\ndescription   = \"WebDAV Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/achesak/nim-geonames/master/geonames.nimble": "[Package]\nname = \"geonames\"\nversion = \"0.1\"\nauthor = \"Adam Chesak\"\ndescription = \"GeoNames API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://github.com/ruivieira/nim-slimdown": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Rui Vieira\"\ndescription   = \"Nim module that converts Markdown text to HTML using only regular expressions. Based on jbroadway's Slimdown.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.3\"\n\nbin = @[\"slimdown\"]\n",
"https://github.com/OHermesJunior/nimRC4": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"OHermesJunior\"\ndescription   = \"RC4 library implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipDirs = @[\"tests\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/paranim/parasound": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"oakes\"\ndescription   = \"Bindings for miniaudio\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-httpauth/master/httpauth.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"HTTP Authentication and Authorization\"\nlicense       = \"LGPLv3\"\n\nbin           = @[\"httpauth\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"libsodium\"\n\n# Tested with dependencies:\n# redis 0.3.0\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-openexchangerates/master/openexchangerates.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"OpenExchangeRates API Client for Nim. Works with/without SSL. Partially works with/without Free API Key.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/FedericoCeratto/nim-mmgeoip": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"MaxMind GeoIP library\"\nlicense       = \"LGPLv2.1\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\ntask test, \"basic test\":\n  exec \"nim c -p:. -d:nimDebugDlOpen -d:release -r tests/basic_test.nim\"\n",
"https://raw.githubusercontent.com/jlp765/seqmath/master/seqmath.nimble": "# Package\n\nversion     = \"0.1.2\"\nauthor      = \"James Parkinson\"\ndescription = \"math for sequences and nested sequences\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/tall.nim\"\n",
"https://github.com/nigredo-tori/classy": "# Package\n\nversion       = \"0.0.4\"\nauthor        = \"nigredo-tori\"\ndescription   = \"typeclasses for Nim\"\nlicense       = \"Unlicense\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\n# Layout\n\ninstallFiles = @[\"classy.nim\"]\nbinDir = \"bin\"\n",
"https://raw.githubusercontent.com/juancarlospaco/fision/master/fision.nimble": "requires \"nim >= 1.4.0\",\n  \"argparse\",\n  \"arraymancer\", \"nim c tests/tests_cpu.nim\",\n  \"awk\",\n  \"bigints\", url = \"https://github.com/araq/nim-bigints\",\n  \"binaryheap\", \"nim c -r binaryheap.nim\",\n  \"bipbuffer\",\n  \"bncurve\",\n  \"brainfuck\", \"nim c -d:release -r tests/compile.nim\",\n  \"bump\", \"nim c --gc:arc -r tests/tbump.nim\", \"https://github.com/disruptek/bump\",\n  \"c2nim\", \"nim c testsuite/tester.nim\",\n  \"cascade\",\n  \"cello\",\n  \"chroma\",\n  \"chronicles\", \"nim c -o:chr -r chronicles.nim\",\n  \"cligen\", \"nim c --path:. -r cligen.nim\",\n  \"combparser\", \"nimble test --gc:orc\",\n  \"compactdict\",\n  \"comprehension\", \"nimble test\", \"https://github.com/alehander42/comprehension\",\n  \"criterion\",\n  \"dashing\", \"nim c tests/functional.nim\",\n  \"delaunay\",\n  \"docopt\",\n  \"easygl\", \"nim c -o:egl -r src/easygl.nim\", \"https://github.com/jackmott/easygl\",\n  \"elvis\",\n  \"fidget\",\n  \"fragments\", \"nim c -r fragments/dsl.nim\",\n  \"gara\",\n  \"ggplotnim\", \"nim c -d:nocairo -r tests/tests.nim\",\n  \"glob\",\n  \"gnuplot\", \"nim c gnuplot.nim\",\n  \"hts\", \"nim c -o:htss src/hts.nim\",\n  \"illwill\", \"nimble examples\",\n  \"inim\",\n  \"itertools\", \"nim doc src/itertools.nim\",\n  \"iterutils\",\n  \"jstin\",\n  \"karax\", \"nim c -r tests/tester.nim\",\n  \"kdtree\", \"nimble test\", \"https://github.com/jblindsay/kdtree\",\n  \"loopfusion\",\n  \"macroutils\",\n  \"markdown\",\n  \"memo\",\n  \"msgpack4nim\", \"nim c -r tests/test_spec.nim\",\n  \"nake\", \"nim c nakefile.nim\",\n  \"neo\", \"nim c -d:blas=openblas tests/all.nim\",\n  \"nicy\", \"nim c -r src/nicy.nim\",\n  \"nigui\", \"nim c -o:niguii -r src/nigui.nim\",\n  \"nimcrypto\", \"nim c -r tests/testall.nim\",\n  \"nimdata\", \"nim c -o:nimdataa src/nimdata.nim\",\n  \"nimes\", \"nim c src/nimes.nim\",\n  \"nimfp\", \"nim c -o:nfp -r src/fp.nim\",\n  \"nimgame2\", \"nim c nimgame2/nimgame.nim\",\n  \"nimgen\", \"nim c -o:nimgenn -r src/nimgen/runcfg.nim\",\n  \"nimlsp\",\n  \"nimly\", \"nim c -r tests/test_readme_example.nim\",\n  \"nimpy\", \"nim c -r tests/nimfrompy.nim\",\n  \"nimquery\",\n  \"nimsl\",\n  \"nimsvg\",\n  \"nimterop\", \"nimble minitest\",\n  \"nimwc\", \"nim c nimwc.nim\",\n  \"norm\", \"nim c -r tests/tsqliterows.nim\",\n  \"npeg\", \"nimble testarc\",\n  \"numericalnim\", \"nim c -r tests/test_integrate.nim\",\n  \"optionsutils\",\n  \"ormin\", \"nim c -o:orminn ormin.nim\",\n  \"parsetoml\",\n  \"patty\",\n  \"plotly\", \"nim c examples/all.nim\",\n  \"pnm\",\n  \"polypbren\",\n  \"prologue\", \"nimble tcompile\",\n  \"protobuf\", \"nim c -o:protobuff -r src/protobuf.nim\",\n  \"pylib\",\n  \"rbtree\",\n  \"react\", \"nimble example\",\n  \"regex\", \"nim c src/regex\",\n  \"result\", \"nim c -r result.nim\",\n  \"rollinghash\", \"nim c -r tests/test_cyclichash.nim\",\n  \"rosencrantz\", \"nim c -o:rsncntz -r rosencrantz.nim\",\n  \"sdl1\", \"nim c -r src/sdl.nim\",\n  \"sdl2_nim\", \"nim c -r sdl2/sdl.nim\",\n  \"sigv4\", \"nim c --gc:arc -r sigv4.nim\", \"https://github.com/dis,\n  \"snip\", \"nimble test\", \"https://github.com/genotrance/snip\",\n  \"stint\", \"nim c -o:stintt -r stint.nim\",\n  \"strslice\",\n  \"strunicode\", \"nim c -r src/strunicode.nim\",\n  \"synthesis\",\n  \"telebot\", \"nim c -o:tbot -r src/telebot.nim\",\n  \"tempdir\",\n  \"templates\",\n  \"tensordsl\", \"nim c -r tests/tests.nim\", \"https://krux02@bitbucket.org/krux02/tensordslnim.git\",\n  \"terminaltables\", \"nim c src/terminaltables.nim\",\n  \"termstyle\", \"nim c -r termstyle.nim\",\n  \"timeit\",\n  \"timezones\",\n  \"tiny_sqlite\",\n  \"unicodedb\", \"nim c -d:release -r tests/tests.nim\",\n  \"unicodeplus\", \"nim c -d:release -r tests/tests.nim\",\n  \"unpack\",\n  \"websocket\", \"nim c websocket.nim\",\n  \"ws\",\n  \"yaml\", \"nim build\",\n  \"zero_functional\", \"nim c -r -d:nimworkaround14447 test.nim\"\n#END 2020-11-01T00:11:16\n\nversion     = \"2020.11.01\"\nauthor      = \"Juan Carlos\"\ndescription = \"important_packages with 0 dependencies and all unittests passing\"\nlicense     = \"MIT\"\n",
"https://raw.githubusercontent.com/Yardanico/nim-libvlc/master/libvlc.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yardanico\"\ndescription   = \"libvlc bindings for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"nimterop\"\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\": buildDocs(@[\"src/libvlc.nim\"], \"build/htmldocs\")\nelse:\n  task docs, \"Do nothing\": discard",
"https://raw.githubusercontent.com/Senketsu/nshout/master/nshout.nimble": "[Package]\nname = \"nshout\"\nversion = \"0.1.1\"\nauthor = \"Senketsu\"\ndescription = \"libshout wrapper for Nim\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://github.com/euantorano/sysrandom.nim": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"Euan T\"\ndescription   = \"A simple library to create random strings of data.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc2 --index:on -o:docs/sysrandom.html src/sysrandom.nim\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/main.nim\"\n",
"https://raw.githubusercontent.com/jiro4989/termnovel/master/termnovel.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"jiro4989\"\ndescription   = \"A command that to read novel on terminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"termnovel\"]\ninstallDirs   = @[\"novels\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\nrequires \"cligen >= 0.9.32\"\nrequires \"markdown >= 0.8.0\"\nrequires \"nimquery >= 1.2.2\"\nrequires \"eastasianwidth >= 1.1.0\"\nrequires \"alignment >= 1.0.0\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble check\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble build -d:release -Y\"\n  exec \"./bin/termnovel -h\"\n",
"https://github.com/genotrance/nimgen": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"genotrance\"\ndescription   = \"c2nim helper to simplify and automate the wrapping of C libraries\"\nlicense       = \"MIT\"\n\nbin = @[\"nimgen\"]\nsrcDir = \"src\"\nskipDirs = @[\"nimgen\", \"tests\", \"web\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"c2nim >= 0.9.14\", \"regex >= 0.12.0\"\n\ntask test, \"Test nimgen\":\n    exec \"nim c -r tests/rununittests.nim\"\n    exec \"nim e tests/nimgentest.nims\"\n",
"https://github.com/khchen/winim": "# Package\n\nversion       = \"3.6.0\"\nauthor        = \"Ward\"\ndescription   = \"Winim - Nim\\'s Windows API and COM Library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"tests\", \"docs\", \"tcclib\"]\nbin           = @[\"winim/winimx\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Tests\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/variant_test\"\n  exec \"nim c -r tests/winstr_test\"\n  exec \"nim c -r tests/com_test\"\n  exec \"nim c -r tests/clr_test\"\n\n# Examples\n\ntask example, \"Build all the examples\":\n  exec \"nim c examples/fileopendialog\"\n  exec \"nim c examples/getopenfilename\"\n  exec \"nim c examples/hellomsg\"\n  exec \"nim c examples/hellowin\"\n  exec \"nim c examples/hellowinimx\"\n  exec \"nim c examples/linedemo\"\n  exec \"nim c examples/scrnsize\"\n  exec \"nim c examples/shortcut\"\n  exec \"nim c examples/uiautomation\"\n\n# COM Examples\n\ntask comexample, \"Build all the COM examples\":\n  exec \"nim c examples/com/binary\"\n  exec \"nim c examples/com/constants\"\n  exec \"nim c examples/com/diskinfo\"\n  exec \"nim c examples/com/Excel_Application1\"\n  exec \"nim c examples/com/Excel_Application2\"\n  exec \"nim c examples/com/InternetExplorer_Application\"\n  exec \"nim c examples/com/MSXML_DOMDocument\"\n  exec \"nim c examples/com/SAPI_SpVoice\"\n  exec \"nim c examples/com/Scriptlet_TypeLib\"\n  exec \"nim c examples/com/Shell_Application\"\n  exec \"nim c examples/com/VBScript_RegExp\"\n  exec \"nim c examples/com/WinHttp_WinHttpRequest\"\n  exec \"nim c examples/com/winmgmts\"\n  exec \"nim c examples/com/WScript\"\n  exec \"nim c examples/com/nimDispatch/client\"\n  exec \"nim c examples/com/nimDispatch/server\"\n  exec \"nim c examples/com/threads/thread1\"\n  exec \"nim c examples/com/threads/thread2\"\n  exec \"nim c examples/com/threads/thread3\"\n  exec \"nim c examples/com/threads/thread4\"\n\n# CLR Examples\n\ntask clrexample, \"Build all the CLR examples\":\n  exec \"nim c examples/clr/code_compiler.nim\"\n  exec \"nim c examples/clr/misc_examples.nim\"\n  exec \"nim c examples/clr/simple_gui.nim\"\n  exec \"nim c examples/clr/splitter.nim\"\n  exec \"nim c examples/clr/usage_demo1.nim\"\n  exec \"nim c examples/clr/usage_demo2.nim\"\n  exec \"nim c examples/clr/wpf.nim\"\n\n# Clean\n\ntask clean, \"Delete all the executable files\":\n  exec \"cmd /c IF EXIST tests\\\\*.exe del tests\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\*.exe del examples\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\com\\\\*.exe del examples\\\\com\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\com\\\\nimDispatch\\\\*.exe del examples\\\\com\\\\nimDispatch\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\com\\\\threads\\\\*.exe del examples\\\\com\\\\threads\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\clr\\\\*.exe del examples\\\\clr\\\\*.exe\"\n  exec \"cmd /c IF EXIST winim\\\\*.exe del winim\\\\*.exe\"\n",
"https://github.com/nim-lang/x11": "version = \"1.1\"\nauthor =\"Andreas Rumpf\"\ndescription = \"Wrapper for X11\"\nlicense = \"MIT\"\n\nrequires \"nim > 0.9.2\"\n\ntask test, \"test\":\n  exec \"nim c examples/x11ex.nim\"\n  exec \"nim c examples/xshmex.nim\"\n  exec \"nim c examples/xftex.nim\"\n",
"https://api.github.com/repos/rspeer/wiki2text/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"905ec3ba4b2d8685d0e4db1e43b3119d48b26773\",\"size\":22,\"url\":\"https://api.github.com/repos/rspeer/wiki2text/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/rspeer/wiki2text/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/905ec3ba4b2d8685d0e4db1e43b3119d48b26773\",\"download_url\":\"https://raw.githubusercontent.com/rspeer/wiki2text/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rspeer/wiki2text/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/905ec3ba4b2d8685d0e4db1e43b3119d48b26773\",\"html\":\"https://github.com/rspeer/wiki2text/blob/master/.gitignore\"}},{\"name\":\"LICENSE.txt\",\"path\":\"LICENSE.txt\",\"sha\":\"589f416eade09b9f8b5270160aa64c131abfd03a\",\"size\":1076,\"url\":\"https://api.github.com/repos/rspeer/wiki2text/contents/LICENSE.txt?ref=master\",\"html_url\":\"https://github.com/rspeer/wiki2text/blob/master/LICENSE.txt\",\"git_url\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/589f416eade09b9f8b5270160aa64c131abfd03a\",\"download_url\":\"https://raw.githubusercontent.com/rspeer/wiki2text/master/LICENSE.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rspeer/wiki2text/contents/LICENSE.txt?ref=master\",\"git\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/589f416eade09b9f8b5270160aa64c131abfd03a\",\"html\":\"https://github.com/rspeer/wiki2text/blob/master/LICENSE.txt\"}},{\"name\":\"Makefile\",\"path\":\"Makefile\",\"sha\":\"dfd893d7f2956ea2a7aa5527729e4068633faccc\",\"size\":108,\"url\":\"https://api.github.com/repos/rspeer/wiki2text/contents/Makefile?ref=master\",\"html_url\":\"https://github.com/rspeer/wiki2text/blob/master/Makefile\",\"git_url\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/dfd893d7f2956ea2a7aa5527729e4068633faccc\",\"download_url\":\"https://raw.githubusercontent.com/rspeer/wiki2text/master/Makefile\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rspeer/wiki2text/contents/Makefile?ref=master\",\"git\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/dfd893d7f2956ea2a7aa5527729e4068633faccc\",\"html\":\"https://github.com/rspeer/wiki2text/blob/master/Makefile\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"bf62668910ad54e205e6e852005fab679d25d921\",\"size\":7191,\"url\":\"https://api.github.com/repos/rspeer/wiki2text/contents/README.md?ref=master\",\"html_url\":\"https://github.com/rspeer/wiki2text/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/bf62668910ad54e205e6e852005fab679d25d921\",\"download_url\":\"https://raw.githubusercontent.com/rspeer/wiki2text/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rspeer/wiki2text/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/bf62668910ad54e205e6e852005fab679d25d921\",\"html\":\"https://github.com/rspeer/wiki2text/blob/master/README.md\"}},{\"name\":\"wiki2text.nim\",\"path\":\"wiki2text.nim\",\"sha\":\"b1e4f61d757c8337a530c5a917f64f8336853e1d\",\"size\":12984,\"url\":\"https://api.github.com/repos/rspeer/wiki2text/contents/wiki2text.nim?ref=master\",\"html_url\":\"https://github.com/rspeer/wiki2text/blob/master/wiki2text.nim\",\"git_url\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/b1e4f61d757c8337a530c5a917f64f8336853e1d\",\"download_url\":\"https://raw.githubusercontent.com/rspeer/wiki2text/master/wiki2text.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rspeer/wiki2text/contents/wiki2text.nim?ref=master\",\"git\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/b1e4f61d757c8337a530c5a917f64f8336853e1d\",\"html\":\"https://github.com/rspeer/wiki2text/blob/master/wiki2text.nim\"}},{\"name\":\"wiki2text.nimble\",\"path\":\"wiki2text.nimble\",\"sha\":\"92377ad75d9809ae2693ab3ca953faacfa01649b\",\"size\":305,\"url\":\"https://api.github.com/repos/rspeer/wiki2text/contents/wiki2text.nimble?ref=master\",\"html_url\":\"https://github.com/rspeer/wiki2text/blob/master/wiki2text.nimble\",\"git_url\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/92377ad75d9809ae2693ab3ca953faacfa01649b\",\"download_url\":\"https://raw.githubusercontent.com/rspeer/wiki2text/master/wiki2text.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rspeer/wiki2text/contents/wiki2text.nimble?ref=master\",\"git\":\"https://api.github.com/repos/rspeer/wiki2text/git/blobs/92377ad75d9809ae2693ab3ca953faacfa01649b\",\"html\":\"https://github.com/rspeer/wiki2text/blob/master/wiki2text.nimble\"}}]",
"https://raw.githubusercontent.com/codehz/xmlio/master/xmlio.nimble": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"CodeHz\"\ndescription   = \"Nim xml mapper\"\nlicense       = \"LGPL-3.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"vtable >= 0.3.2\"\n",
"https://raw.githubusercontent.com/zer0-star/nim-curry/master/nim_curry.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zer0-star\"\ndescription   = \"Provides a macro to curry function\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nimics/master/nimics.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"Create ICS files for email invites, eg. invite.ics\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/dfdeshom/nimsnappy.git": "[Package]\nname          = \"nimsnappy\"\nversion       = \"0.1.1\"\nauthor        = \"didier deshommes\"\ndescription   = \"Snappy lib wrapper for Nim\"\nlicense       = \"BSD-3\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/zevv/nmqtt/master/nmqtt.nimble": "# Package\nversion       = \"1.0.4\"\nauthor        = \"zevv & ThomasTJdev\"\ndescription   = \"Native MQTT library and binaries for publishing, subscribing and broker\"\nlicense       = \"MIT\"\nbin           = @[\"nmqtt/nmqtt\", \"nmqtt/nmqtt_password\", \"nmqtt/nmqtt_pub\", \"nmqtt/nmqtt_sub\"]\nbinDir        = \"bin\"\ninstallFiles  = @[\"nmqtt.nim\"]\ninstallDirs   = @[\"config\"]\nskipDirs      = @[\"tests\", \"nmqtt\"]\n\n# Dependencies\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 0.9.45\"\nwhen not defined(Windows):\n  requires \"bcrypt >= 0.2.1\"\n\n\nfrom strutils import format\n\n\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r tests/tester\"\n\n\ntask setup, \"Generate default nmqtt configuration file\":\n  var path: string\n\n  echo \"\\nGenerate default nmqtt.conf? (y/N)\"\n  let genConf = readLineFromStdin()\n  if genConf == \"y\" or genConf == \"Y\":\n    let confPath = \"/home/\" & getEnv(\"USER\") & \"/.nmqtt\"\n    echo \"\\nSpecify the absolute path to the nmqtt config folder.\\nPress enter to use default path: \" & confPath\n\n    path = readLineFromStdin()\n    if path == \"\":\n      path = confPath\n\n    if not dirExists(path):\n      mkDir(path)\n\n    cpFile(\"config/nmqtt.conf\", path & \"/nmqtt.conf\")\n\n    echo \"\"\"\n___________________________________________________________\n\nnmqtt v$1\n\nThe brokers configuration has been saved at:\n  $2/nmqtt.conf\n\nYou can now run the broker with:\n  nmqtt -c $2/nmqtt.conf\n\n___________________________________________________________\n\n\"\"\".format(version, path)",
"https://raw.githubusercontent.com/foliant-docs/foliant-nim/master/foliant.nimble": "version       = \"0.2.2\"\nauthor        = \"Konstantin Molchanov\"\ndescription   = \"Documentation generator that produces pdf and docx from Markdown. Uses Pandoc and LaTeX behind the scenes.\"\nlicense       = \"MIT\"\n\nbin = @[\"foliant\"]\nsrcDir = \"src\"\n\nwhen defined(Windows):\n  binDir = \"bin/windows\"\nelif defined(MacOSX):\n  binDir = \"bin/mac\"\nelif defined(Linux):\n  binDir = \"bin/linux\"\n\nrequires \"nim >= 0.15.0\", \"docopt#head\", \"yaml\"\n\n",
"https://github.com/Ethosa/saya_nim": "[Package]\r\nname = \"saya\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.5\"\r\ndescription = \"Nim framework for VK\"\r\nlicense = \"LGPLv3\"\r\nsrcDir = \"src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.19.0\"\r\n",
"https://github.com/jiro4989/svgo": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"jiro4989\"\ndescription   = \"SVG output from a shell.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"svgo\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 0.9.32\"\n\nimport os, strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"svgo\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/yglukhov/variant.git": "# Package\n\nversion       = \"0.2.11\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Variant type and type matching\"\nlicense       = \"MIT\"\n\ntask test, \"Run tests\":\n    exec \"nim c -r variant\"\n    exec \"nim c -r -d:variantDebugTypes variant\"\n    exec \"nim c -r --gc:arc variant\"\n    exec \"nim c -r --gc:arc -d:variantDebugTypes variant\"\n    exec \"nim js -r variant\"\n    exec \"nim js -r -d:variantDebugTypes variant\"\n    # exec \"nim cpp -r variant\"\n    # exec \"nim cpp -r -d:variantDebugTypes variant\"\n",
"https://github.com/JesterOrNot/Nim-Tac-Toe": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Sean Hellum\"\ndescription   = \"A TicTacToe game written in nim!\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"NimTacToe\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/rxi/gifwriter": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rxi\"\ndescription   = \"GIF writing library based on jo_gif\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://github.com/skyforce77/ctrulib-nim.git": "[Package]\nname          = \"ctrulib\"\nversion       = \"0.1.0\"\nauthor        = \"Skyforce77\"\ndescription   = \"Nintendo 3ds ctrulib wrapper\"\nlicense       = \"GPLv2\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/c0ffeeartc/nim-sections/master/sections.nimble": "[Package]\nname          = \"sections\"\nversion       = \"0.1\"\nauthor        = \"c0ffeeartc and Serhii Sokoliuk https://github.com/cmgc\"\ndescription   = \"`Section` macro with BDD aliases for testing\"\nlicense       = \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.12\"\n",
"https://raw.githubusercontent.com/olliNiinivaara/SQLiteral/master/sqliteral.nimble": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"Olli\"\ndescription   = \"A high level SQLite API for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/alaviss/dnsstamps/master/dnsstamps.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Leorize\"\ndescription   = \"An implementation of DNS server stamps in Nim\"\nlicense       = \"MPL-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/juancarlospaco/nim-seriesdetiempoar": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Series de Tiempo de Argentina Government MultiSync API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/ithkuil/bcryptnim/": "[Package]\nname          = \"bcrypt\"\nversion       = \"0.2.1\"\nauthor        = \"Jason Livesay\"\ndescription   = \"Wraps the bcrypt (blowfish) library for creating encrypted hashes (useful for passwords)\"\nlicense       = \"BSD\"\ninstallExt    = \"c,h\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.2\"\n",
"https://raw.githubusercontent.com/samdmarshall/plugin-manager/master/pluginmanager.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"Simple plugin implementation\"\nlicense       = \"BSD 3-Clause\"\nsrcDir        = \"src\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n\ntask test, \"Runs the test suite\":\n  exec \"nim c tests/plugin/plugin.nim\"\n  exec \"nim c -r tests/test\"\n",
"https://raw.githubusercontent.com/GULPF/systimes/master/systimes.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"An alternative DateTime implementation for Nim\"\nlicense       = \"MIT\"\n\nskipFiles = @[\"tests.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\ntask docs, \"Generate docs\":\n    exec \"nim doc -o:docs/systimes.html systimes.nim\"",
"https://github.com/Skrylar/nfltk": "# Package\n\nversion       = \"1.3.4\"\nauthor        = \"Skrylar\"\ndescription   = \"Fast Light Toolkit.\"\nlicense       = \"LGPL\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/matkuki/chipmunk7_demos/": "# Package\nversion = \"1.1\"\nauthor = \"Matic Kukovec\"\ndescription = \"Demos for Chipmunk7 physics library\"\nlicense = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.18.0\", \"sdl2 >= 1.1\", \"opengl >= 1.1.0\"\n",
"https://github.com/jamesalbert/grafanim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"jamesalbert\"\ndescription   = \"Grafana module for nim\"\nlicense       = \"GPL\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\nskipDirs = @[\"tests\"]\nsrcDir = \"src\"\n",
"https://github.com/juancarlospaco/nim-printdebug": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Print Debug for Nim, tiny 3 lines Lib, C Target\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/flaviut/nre/master/nre.nimble": "[Package]\nname        = \"nre\"\nauthor      = \"Flaviu Tamas\"\nversion     = \"2.0.2\"\ndescription = \"Yet another PCRE library\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-sdnotify/master/sdnotify.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Systemd service notification helper\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\n",
"https://github.com/CORDEA/sha1ext": "# Package\n\nversion     = \"0.1.1\"\nauthor      = \"Yoshihiro Tanaka\"\ndescription = \"std / sha1 extension\"\nlicense     = \"Apache License 2.0\"\nsrcDir      = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.17.3\"\n",
"https://raw.githubusercontent.com/KingDarBoja/Iridium/master/iridium.nimble": "# Package\n\n\nversion       = \"0.3.2\"\nauthor        = \"KingDarBoja\"\ndescription   = \"The International Standard for country codes and codes for their subdivisions on Nim (ISO-3166)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/tests\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-itchio/master/itchio.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"itch.io API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/bung87/fastText/master/fasttext.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"bung87\"\ndescription   = \"fastText porting in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\n# import distros\n# import ospaths\n\n# var cmd = \"\"\n# if detectOs(Windows):\n#   cmd = \"cmd /c \"\n\n# task test, \"Run tests\":\n#   withDir(\"tests\"):\n#     exec \"nim cpp -r testfast\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nimlibxlsxwriter/master/nimlibxlsxwriter.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"KeepCoolWithCoolidge\"\ndescription   = \"libxslxwriter wrapper for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"nimgen >= 0.5.2\"\nrequires \"c2nim >= 0.9.14\"\n\nimport distros\n\nvar cmd = \"\"\nif detectOs(Windows):\n    cmd = \"cmd /c \"\n\ntask setup, \"Checkout and generate\":\n    exec cmd & \"nimgen nimlibxlsxwriter.cfg\"\n\nbefore install:\n    setupTask()\n\ntask test, \"Run tests\":\n    withDir(\"tests\"):\n        exec \"nim c -r anatomy.nim\"\n        exec \"nim c -r array_formula.nim\"\n        exec \"nim c -r autofilter.nim\"\n        exec \"nim c -r chart_area.nim\"\n        exec \"nim c -r chart_bar.nim\"\n        exec \"nim c -r chart_clustered.nim\"\n        exec \"nim c -r chart_column.nim\"\n        exec \"nim c -r chart_data_table.nim\"\n        exec \"nim c -r chart_data_tools.nim\"\n        exec \"nim c -r chart_test.nim\"\n        exec \"nim c -r date_and_times.nim\"\n        exec \"nim c -r date_and_times_2.nim\"\n        exec \"nim c -r date_and_times_3.nim\"\n",
"https://api.github.com/repos/idlewan/nim-uuid/contents": "[{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"d20d04be1238de61f1983a5069b27401c8ec57a8\",\"size\":1078,\"url\":\"https://api.github.com/repos/idlewan/nim-uuid/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/idlewan/nim-uuid/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/idlewan/nim-uuid/git/blobs/d20d04be1238de61f1983a5069b27401c8ec57a8\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/nim-uuid/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/nim-uuid/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/nim-uuid/git/blobs/d20d04be1238de61f1983a5069b27401c8ec57a8\",\"html\":\"https://github.com/idlewan/nim-uuid/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"073929d73b4a308b2aa210241212b3a33bb50e9c\",\"size\":115,\"url\":\"https://api.github.com/repos/idlewan/nim-uuid/contents/README.md?ref=master\",\"html_url\":\"https://github.com/idlewan/nim-uuid/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/idlewan/nim-uuid/git/blobs/073929d73b4a308b2aa210241212b3a33bb50e9c\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/nim-uuid/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/nim-uuid/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/nim-uuid/git/blobs/073929d73b4a308b2aa210241212b3a33bb50e9c\",\"html\":\"https://github.com/idlewan/nim-uuid/blob/master/README.md\"}},{\"name\":\"uuid.babel\",\"path\":\"uuid.babel\",\"sha\":\"94d411ac75ceca5c21758a45d2edb741a56e8267\",\"size\":163,\"url\":\"https://api.github.com/repos/idlewan/nim-uuid/contents/uuid.babel?ref=master\",\"html_url\":\"https://github.com/idlewan/nim-uuid/blob/master/uuid.babel\",\"git_url\":\"https://api.github.com/repos/idlewan/nim-uuid/git/blobs/94d411ac75ceca5c21758a45d2edb741a56e8267\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/nim-uuid/master/uuid.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/nim-uuid/contents/uuid.babel?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/nim-uuid/git/blobs/94d411ac75ceca5c21758a45d2edb741a56e8267\",\"html\":\"https://github.com/idlewan/nim-uuid/blob/master/uuid.babel\"}},{\"name\":\"uuid.nim\",\"path\":\"uuid.nim\",\"sha\":\"7d3110997a065276ba2b633840ea1c06100342b7\",\"size\":4304,\"url\":\"https://api.github.com/repos/idlewan/nim-uuid/contents/uuid.nim?ref=master\",\"html_url\":\"https://github.com/idlewan/nim-uuid/blob/master/uuid.nim\",\"git_url\":\"https://api.github.com/repos/idlewan/nim-uuid/git/blobs/7d3110997a065276ba2b633840ea1c06100342b7\",\"download_url\":\"https://raw.githubusercontent.com/idlewan/nim-uuid/master/uuid.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/idlewan/nim-uuid/contents/uuid.nim?ref=master\",\"git\":\"https://api.github.com/repos/idlewan/nim-uuid/git/blobs/7d3110997a065276ba2b633840ea1c06100342b7\",\"html\":\"https://github.com/idlewan/nim-uuid/blob/master/uuid.nim\"}}]",
"https://github.com/kdheepak/github-release": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dheepak Krishnamurthy\"\ndescription   = \"github-release package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"github_release\"]\nskipExt       = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"cligen#head\"\n\nwhen defined(nimdistros):\n    import distros\n    if detectOs(Ubuntu):\n        foreignDep \"libssl-dev\"\n    else:\n        foreignDep \"openssl\"\n\ntask run, \"run\":\n\n    exec(\"nimble build\")\n    exec(\"./bin/github_release --version\")\n\n",
"https://github.com/ba0f3/telebot.nim": "version       = \"1.0.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"Async Telegram Bot API Client\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\nsrcDir        = \"src\"\n\nrequires        \"nim >= 1.0.4\", \"sam >= 0.1.15\"\n",
"https://github.com/jxy/metatools": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Xiao-Yong Jin\"\ndescription   = \"Metaprogramming tools for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"test\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\n\n",
"https://github.com/Senketsu/nim-db-ex": "[Package]\nname = \"ndbex\"\nversion = \"0.2.1\"\nauthor = \"Senketsu\"\ndescription = \"small extension for Nim's database modules (db_*)\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n[Deps]\nRequires: \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_nimble_gui/master/nimblegui.nimble": "# Package\nversion       = \"0.2.2\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Nimble with GUI\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"nimblegui\"]\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\nrequires \"webgui >= 0.1.0\"\n",
"https://github.com/erhlee-bird/simple_graph": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Eric Lee\"\ndescription   = \"Simple Graph Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n",
"https://github.com/wolfadex/arksys": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Wolfgang Schuster\"\ndescription   = \"An entity component system package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/oliversandli/clapfn": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Oliver Sandli\"\ndescription   = \"A fast and simple command line argument parser inspired by Python's argparse.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/achesak/nim-pastebin": "[Package]\nname          = \"pastebin\"\nversion       = \"0.2\"\nauthor        = \"Adam Chesak\"\ndescription   = \"Pastebin API wrapper\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/mattaylor/elvis": "# Package\nversion       = \"0.2.0\"\nauthor        = \"Mat Taylor\"\ndescription   = \"truthy, elvis, ternary and conditional assignment operators for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.17.0\"\n\n# Tasks\ntask test, \"run tests\": exec \"nim c -r tests.nim\"\n",
"https://github.com/juancarlospaco/nim-osutil": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"OS Utils for Nim, simple tiny but useful procs for OS. Turn Display OFF, set Process Name, set Process CPU Usage Limit cap from 5% to 100% on global percentage.\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/JohnAD/decimal128": "# Package\n\nversion      = \"0.1.2\"\nauthor       = \"John Dupuy\"\ndescription  = \"Decimal number type based on IEEE 754-2008\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/drygdryg/wpspin-nim/master/wpspin.nimble": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"Victor Golovanenko (drygdryg)\"\ndescription   = \"Full-featured WPS PIN generator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"wpspin\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"argparse >= 2.0.0\"\n",
"https://github.com/FedericoCeratto/nim-libsodium": "# Package\n\nversion       = \"0.6.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"libsodium wrapper\"\nlicense       = \"MPL-2.0\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\n",
"https://github.com/Clonkk/bytesequtils": "# Package\n\nversion       = \"1.1.2\"\nauthor        = \"rcaillaud\"\ndescription   = \"Nim package to manipulate buffer as either seq[byte] or string\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\ntask gendoc, \"gen doc\":\n  exec(\"nimble doc --project src/bytesequtils.nim --out:docs/\")\n",
"https://raw.githubusercontent.com/ethosa/shizuka/master/shizuka.nimble": "[Package]\r\nname = \"shizuka\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.2.4\"\r\ndescription = \"The Nim framework for VK.\"\r\nlicense = \"MIT\"\r\nsrcDir = \"shizuka\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://github.com/treeform/dumpincludes": "version     = \"0.0.1\"\nauthor      = \"treeform\"\ndescription = \"See where your exe size comes from.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nbin = @[\"dumpincludes\"]\n\nrequires \"nim >= 1.2.2\"\nrequires \"cligen >= 1.3.2\"\n",
"https://raw.githubusercontent.com/andreaferretti/memo/master/memo.nimble": "version       = \"0.3.0\"\nauthor        = \"wiffel\"\ndescription   = \"Memoize Nim functions\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"test\", \"test.nim\"]\n\nrequires \"nim >= 0.17.3\"\n\ntask test, \"run memo tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  --define:memoDebug\n  setCommand \"c\", \"test.nim\"\n\ntask tests, \"run memo tests\":\n  setCommand \"test\"",
"https://github.com/irskep/rexpaint_nim": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Steve Landey (irskep)\"\ndescription   = \"REXPaint .xp parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"zip >= 0.2.1\"\n",
"https://github.com/Araq/number_files/": "[Package]\nname          = \"number_files\"\nversion       = \"0.2.3\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Command to add counter suffix/prefix to a list of files.\"\"\"\nlicense       = \"MIT\"\nbin           = \"number_files\"\nInstallFiles = \"\"\"\n\ndocindex.rst\ndocs/changes.rst\ndocs/release_steps.rst\nlicense.rst\nnakefile.nim\nnakefile.nimrod.cfg\nnumber_files.nim\nreadme.rst\n\n\"\"\"\n\nInstallDirs = \"\"\"\n\nexternal/quicklook-rest-with-nimrod\nworkflow_template_dir\n\n\"\"\"\n\n[Deps]\nRequires: \"nake >= 1.2, argument_parser >= 0.2.0\"\n",
"https://raw.githubusercontent.com/fallingduck/linenoise-nim/master/linenoise.nimble": "[Package]\nname          = \"linenoise\"\nversion       = \"0.1.0\"\nauthor        = \"Jack VanDrunen\"\ndescription   = \"Wrapper for linenoise, a free, self-contained alternative to GNU readline.\"\nlicense       = \"BSD\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/JohnAD/webterminal/master/webterminal.nimble": "# Package\n\nversion       = \"0.0.2\"\nauthor        = \"John Dupuy\"\ndescription   = \"Simple HTML5/Javascript text terminal for embedding an nim app on a web page.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"f15cca063328414bc7b8fab8b607a392d22db646\",\"size\":34,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/f15cca063328414bc7b8fab8b607a392d22db646\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-sfml/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/f15cca063328414bc7b8fab8b607a392d22db646\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/.gitignore\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"1a4ac2b8fe6e679b8aa5e5afc4e5472da5c4c003\",\"size\":785,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/README.md?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/1a4ac2b8fe6e679b8aa5e5afc4e5472da5c4c003\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-sfml/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/1a4ac2b8fe6e679b8aa5e5afc4e5472da5c4c003\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/README.md\"}},{\"name\":\"csfml.nim\",\"path\":\"csfml.nim\",\"sha\":\"c6b01657cdacb2c5526711312ff06b3fd1b77116\",\"size\":65430,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/csfml.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/csfml.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/c6b01657cdacb2c5526711312ff06b3fd1b77116\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-sfml/master/csfml.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/csfml.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/c6b01657cdacb2c5526711312ff06b3fd1b77116\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/csfml.nim\"}},{\"name\":\"csfml_audio.nim\",\"path\":\"csfml_audio.nim\",\"sha\":\"86333155f1ae381abe6ecb68b71070f6bbf323de\",\"size\":40204,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/csfml_audio.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/csfml_audio.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/86333155f1ae381abe6ecb68b71070f6bbf323de\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-sfml/master/csfml_audio.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/csfml_audio.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/86333155f1ae381abe6ecb68b71070f6bbf323de\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/csfml_audio.nim\"}},{\"name\":\"csfml_colors.nim\",\"path\":\"csfml_colors.nim\",\"sha\":\"66515d80b2c3f3a986d9cb35149d8e05f281038c\",\"size\":469,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/csfml_colors.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/csfml_colors.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/66515d80b2c3f3a986d9cb35149d8e05f281038c\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-sfml/master/csfml_colors.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/csfml_colors.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/66515d80b2c3f3a986d9cb35149d8e05f281038c\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/csfml_colors.nim\"}},{\"name\":\"doc\",\"path\":\"doc\",\"sha\":\"cd174ac564bfa16cc8e30b3c7ca87319ce5f74b8\",\"size\":0,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/doc?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/tree/master/doc\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/trees/cd174ac564bfa16cc8e30b3c7ca87319ce5f74b8\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/doc?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/trees/cd174ac564bfa16cc8e30b3c7ca87319ce5f74b8\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/tree/master/doc\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"fb3c5821512cb6583d290921611cdf6275958db4\",\"size\":0,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/examples?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/trees/fb3c5821512cb6583d290921611cdf6275958db4\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/trees/fb3c5821512cb6583d290921611cdf6275958db4\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/tree/master/examples\"}},{\"name\":\"sfml.babel\",\"path\":\"sfml.babel\",\"sha\":\"b313f01444e476c5efce0c9709b51a9eabadae84\",\"size\":145,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/sfml.babel?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/sfml.babel\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/b313f01444e476c5efce0c9709b51a9eabadae84\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-sfml/master/sfml.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/sfml.babel?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/b313f01444e476c5efce0c9709b51a9eabadae84\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/sfml.babel\"}},{\"name\":\"sfml.nim\",\"path\":\"sfml.nim\",\"sha\":\"58f6ea535c08e55db2867b255794cda1f5c7ec54\",\"size\":22501,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/sfml.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/sfml.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/58f6ea535c08e55db2867b255794cda1f5c7ec54\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-sfml/master/sfml.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/sfml.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/58f6ea535c08e55db2867b255794cda1f5c7ec54\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/sfml.nim\"}},{\"name\":\"sfml2.nim\",\"path\":\"sfml2.nim\",\"sha\":\"e62f8740f18bf5b33442603c330595621632ccfa\",\"size\":4568,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/sfml2.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/sfml2.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/e62f8740f18bf5b33442603c330595621632ccfa\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-sfml/master/sfml2.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/contents/sfml2.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-sfml/git/blobs/e62f8740f18bf5b33442603c330595621632ccfa\",\"html\":\"https://github.com/fowlmouth/nimrod-sfml/blob/master/sfml2.nim\"}}]",
"https://github.com/rominf/nim-hostname": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Roman Inflianskas\"\ndescription   = \"Nim library to get/set a hostname\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n",
"https://raw.githubusercontent.com/juancarlospaco/redneck-translator/master/redneck_translator.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Redneck Translator for Y'all\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/gmshiba/replim/master/replim.nimble": "# Package\n\nversion       = \"0.2.3\"\nauthor        = \"mtshiba\"\ndescription   = \"most quick REPL of nim\"\nlicense       = \"MIT\"\nbinDir        = \"bin\"\nsrcDir        = \"src\"\nbin           = @[\"replim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/Clonkk/bytesequtils/master/bytesequtils.nimble": "# Package\n\nversion       = \"1.1.2\"\nauthor        = \"rcaillaud\"\ndescription   = \"Nim package to manipulate buffer as either seq[byte] or string\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\ntask gendoc, \"gen doc\":\n  exec(\"nimble doc --project src/bytesequtils.nim --out:docs/\")\n",
"https://raw.githubusercontent.com/c-blake/adix/master/adix.nimble": "# Package\nversion     = \"0.1\"\nauthor      = \"Charles Blake\"\ndescription = \"An Adaptive Index Library for Nim\"\nlicense     = \"MIT/ISC\"\n\n# Deps\nrequires    \"nim >= 0.19.2\"\nskipDirs    = @[ \"tests\" ]\n",
"https://github.com/muxueqz/skybook": "# Package\n\nversion       = \"1.0.3\"\nauthor        = \"muxueqz\"\ndescription   = \"Light weight bookmark manager(delicious alternative)\"\nlicense       = \"GPL-2.0\"\nsrcDir        = \"src\"\nbin           = @[\"skybook\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"jester >= 0.4.1\"\n",
"https://raw.githubusercontent.com/ba0f3/ngxcmod.nim/master/ngxcmod.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Huy Doan\"\ndescription   = \"High level wrapper for build nginx module w/ nginx-c-function\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/bunkford/ffpass/master/ffpass.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"ffpass - Api Calls for Ford vehicles equipped with the fordpass app.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"docs\"]\n\n# Dependencies\n\nrequires: \"nim >= 1.0.0\"",
"https://raw.githubusercontent.com/ziotom78/nimcfitsio/master/nimcfitsio.nimble": "[Package]\nname          = \"nimcfitsio\"\nversion       = \"0.1.1\"\nauthor        = \"Maurizio Tomasi <ziotom78 .at. gmail.com>\"\ndescription   = \"Bindings for the CFITSIO library\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://api.github.com/repos/fowlmouth/allegro5/contents": "[{\"name\":\"allegro5.babel\",\"path\":\"allegro5.babel\",\"sha\":\"711cfbe39dd39c77a7178e068eadd3056798a253\",\"size\":162,\"url\":\"https://api.github.com/repos/fowlmouth/allegro5/contents/allegro5.babel?ref=master\",\"html_url\":\"https://github.com/fowlmouth/allegro5/blob/master/allegro5.babel\",\"git_url\":\"https://api.github.com/repos/fowlmouth/allegro5/git/blobs/711cfbe39dd39c77a7178e068eadd3056798a253\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/allegro5/master/allegro5.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/allegro5/contents/allegro5.babel?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/allegro5/git/blobs/711cfbe39dd39c77a7178e068eadd3056798a253\",\"html\":\"https://github.com/fowlmouth/allegro5/blob/master/allegro5.babel\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"67525a3f4c79bfdda792cef30e8bdbf9ef0be1ba\",\"size\":0,\"url\":\"https://api.github.com/repos/fowlmouth/allegro5/contents/examples?ref=master\",\"html_url\":\"https://github.com/fowlmouth/allegro5/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/fowlmouth/allegro5/git/trees/67525a3f4c79bfdda792cef30e8bdbf9ef0be1ba\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/allegro5/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/allegro5/git/trees/67525a3f4c79bfdda792cef30e8bdbf9ef0be1ba\",\"html\":\"https://github.com/fowlmouth/allegro5/tree/master/examples\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"8d6538b9db1d3d06b8559063a653d6b422f68113\",\"size\":0,\"url\":\"https://api.github.com/repos/fowlmouth/allegro5/contents/src?ref=master\",\"html_url\":\"https://github.com/fowlmouth/allegro5/tree/master/src\",\"git_url\":\"https://api.github.com/repos/fowlmouth/allegro5/git/trees/8d6538b9db1d3d06b8559063a653d6b422f68113\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/allegro5/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/allegro5/git/trees/8d6538b9db1d3d06b8559063a653d6b422f68113\",\"html\":\"https://github.com/fowlmouth/allegro5/tree/master/src\"}}]",
"https://raw.githubusercontent.com/greencardamom/awk/master/awk.nimble": "# Package\n\nversion       = \"1.0\"\nauthor        = \"Green Cardamom\"\ndescription   = \"A library of awk functions in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.1\"\nrequires \"nre >= 1.0.0\"\n\n",
"https://github.com/idlewan/jade-nim": "[package]\nname = \"jade-nim\"\nversion = \"0.1.0\"\nauthor = \"Erwan Ameil\"\ndescription = \"Port of the Jade temlate engine for usage with Nimrod programs\"\nlicense = \"MIT\"\n\n[deps]\nrequires = \"nimrod >= 0.9.4\"\n",
"https://github.com/dom96/ipsumgenera": "version       = \"0.1.1\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A static blog generator.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"ipsum\"]\n\nrequires \"nim >= 0.19.4\"\n",
"https://api.github.com/repos/NimParsers/parsetoml/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"42f11791c7b621c06830110823bc0ebbd5df0110\",\"size\":49,\"url\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/NimParsers/parsetoml/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/42f11791c7b621c06830110823bc0ebbd5df0110\",\"download_url\":\"https://raw.githubusercontent.com/NimParsers/parsetoml/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/42f11791c7b621c06830110823bc0ebbd5df0110\",\"html\":\"https://github.com/NimParsers/parsetoml/blob/master/.gitignore\"}},{\"name\":\".travis.yml\",\"path\":\".travis.yml\",\"sha\":\"ea86724c4cdd35cbf695948b1ef47d56bb1781f3\",\"size\":1849,\"url\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/.travis.yml?ref=master\",\"html_url\":\"https://github.com/NimParsers/parsetoml/blob/master/.travis.yml\",\"git_url\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/ea86724c4cdd35cbf695948b1ef47d56bb1781f3\",\"download_url\":\"https://raw.githubusercontent.com/NimParsers/parsetoml/master/.travis.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/.travis.yml?ref=master\",\"git\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/ea86724c4cdd35cbf695948b1ef47d56bb1781f3\",\"html\":\"https://github.com/NimParsers/parsetoml/blob/master/.travis.yml\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"753362ebfb7e88785834d35074242830643a9e42\",\"size\":1076,\"url\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/NimParsers/parsetoml/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/753362ebfb7e88785834d35074242830643a9e42\",\"download_url\":\"https://raw.githubusercontent.com/NimParsers/parsetoml/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/753362ebfb7e88785834d35074242830643a9e42\",\"html\":\"https://github.com/NimParsers/parsetoml/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"8320081811db987052afc4a77a60e68df8f9613f\",\"size\":2534,\"url\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/README.md?ref=master\",\"html_url\":\"https://github.com/NimParsers/parsetoml/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/8320081811db987052afc4a77a60e68df8f9613f\",\"download_url\":\"https://raw.githubusercontent.com/NimParsers/parsetoml/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/8320081811db987052afc4a77a60e68df8f9613f\",\"html\":\"https://github.com/NimParsers/parsetoml/blob/master/README.md\"}},{\"name\":\"decoder\",\"path\":\"decoder\",\"sha\":\"d64ac0548b3592c13f5429b690f3e52bcadcf49f\",\"size\":0,\"url\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/decoder?ref=master\",\"html_url\":\"https://github.com/NimParsers/parsetoml/tree/master/decoder\",\"git_url\":\"https://api.github.com/repos/NimParsers/parsetoml/git/trees/d64ac0548b3592c13f5429b690f3e52bcadcf49f\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/decoder?ref=master\",\"git\":\"https://api.github.com/repos/NimParsers/parsetoml/git/trees/d64ac0548b3592c13f5429b690f3e52bcadcf49f\",\"html\":\"https://github.com/NimParsers/parsetoml/tree/master/decoder\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"f7dcef72c301bc0ddbdb9634e6e7045300266dde\",\"size\":0,\"url\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/docs?ref=master\",\"html_url\":\"https://github.com/NimParsers/parsetoml/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/NimParsers/parsetoml/git/trees/f7dcef72c301bc0ddbdb9634e6e7045300266dde\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/NimParsers/parsetoml/git/trees/f7dcef72c301bc0ddbdb9634e6e7045300266dde\",\"html\":\"https://github.com/NimParsers/parsetoml/tree/master/docs\"}},{\"name\":\"parsetoml.nimble\",\"path\":\"parsetoml.nimble\",\"sha\":\"d152defe57398dbdc7ece511ac974a0574195751\",\"size\":1293,\"url\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/parsetoml.nimble?ref=master\",\"html_url\":\"https://github.com/NimParsers/parsetoml/blob/master/parsetoml.nimble\",\"git_url\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/d152defe57398dbdc7ece511ac974a0574195751\",\"download_url\":\"https://raw.githubusercontent.com/NimParsers/parsetoml/master/parsetoml.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/parsetoml.nimble?ref=master\",\"git\":\"https://api.github.com/repos/NimParsers/parsetoml/git/blobs/d152defe57398dbdc7ece511ac974a0574195751\",\"html\":\"https://github.com/NimParsers/parsetoml/blob/master/parsetoml.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"ad3610f67fa3ca3dcb8fe34d38867e91ed92aa2e\",\"size\":0,\"url\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/src?ref=master\",\"html_url\":\"https://github.com/NimParsers/parsetoml/tree/master/src\",\"git_url\":\"https://api.github.com/repos/NimParsers/parsetoml/git/trees/ad3610f67fa3ca3dcb8fe34d38867e91ed92aa2e\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/NimParsers/parsetoml/git/trees/ad3610f67fa3ca3dcb8fe34d38867e91ed92aa2e\",\"html\":\"https://github.com/NimParsers/parsetoml/tree/master/src\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"51917c37d236586fe5870d255cc391c4fa3d2f21\",\"size\":0,\"url\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/tests?ref=master\",\"html_url\":\"https://github.com/NimParsers/parsetoml/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/NimParsers/parsetoml/git/trees/51917c37d236586fe5870d255cc391c4fa3d2f21\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/NimParsers/parsetoml/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/NimParsers/parsetoml/git/trees/51917c37d236586fe5870d255cc391c4fa3d2f21\",\"html\":\"https://github.com/NimParsers/parsetoml/tree/master/tests\"}}]",
"https://github.com/joachimschmidt557/nimmm": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"joachimschmidt557\"\ndescription   = \"A terminal file manager written in nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"nimmm\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\nrequires \"noise >= 0.1.3\"\nrequires \"nimbox >= 0.1.0\"\nrequires \"lscolors >= 0.3.3\"",
"https://raw.githubusercontent.com/JohnAD/decimal128/master/decimal128.nimble": "# Package\n\nversion      = \"0.1.2\"\nauthor       = \"John Dupuy\"\ndescription  = \"Decimal number type based on IEEE 754-2008\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/jangko/msgpack4nim": "# Package\nversion       = \"0.3.1\"\nauthor        = \"Andri Lim\"\ndescription   = \"MessagePack serializer/deserializer implementation in nim\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.18.0\"\n\ninstallFiles = @[\"msgpack4nim.nim\", \"msgpack4collection.nim\", \"msgpack2any.nim\", \"msgpack2json.nim\"]\n\n# Examples and Tests\nskipDirs = @[\"examples\", \"tests\"]\n\ntemplate exec(cmd) =\n  echo cmd\n  system.exec(cmd)\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  when defined(macosx):\n    let specific = if lang == \"cpp\":\n                     \" --passC:\\\"-Wno-c++11-narrowing\\\" \"\n                   else:\n                     \"\"\n  else:\n    const specific = \"\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env & specific &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"-d:debug\", \"examples/test\"\n  test \"-d:msgpack_obj_to_map\", \"tests/test_any\"\n  # because uses `getAppDir()`, see https://github.com/nim-lang/Nim/pull/13382\n  test \"-d:debug --outdir:tests\", \"tests/test_json\"\n  test \"-d:debug\", \"tests/test_codec\"\n  test \"-d:debug\", \"tests/test_spec\"\n  test \"-d:debug\", \"tests/test_suite\"\n\n  test \"-d:release\", \"examples/test\"\n  test \"-d:release -d:msgpack_obj_to_map\", \"tests/test_any\"\n  # ditto\n  test \"-d:release --outdir:tests\", \"tests/test_json\"\n\n  test \"-d:release\", \"tests/test_codec\"\n  test \"-d:release\", \"tests/test_spec\"\n  test \"-d:release\", \"tests/test_suite\"\n",
"https://github.com/Tangdongle/nimobserver": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Tangdongle\"\ndescription   = \"An implementation of the observer pattern\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Run the tests\":\n    exec(\"mkdir -p tests/bin\")\n    exec(\"nim c -r --threads:on --gc:boehm --out:tests/bin/nimobserver_tests tests/nimobserver_tests\")\n",
"https://raw.githubusercontent.com/rsirres/NimMarc/master/NimMarc.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Raphael\"\ndescription   = \"Marc21 parser for Nimlang\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/iourinski/porter": "[Package]\n\nversion       = \"0.1.0\"\nauthor        = \"dmitri.iourinski\"\ndescription   = \"nim implementation of Porter\\'s stemmer, with a possibility to add new languagess\"\nlicense       = \"MIT\"\nbin           = \"porter\"\n[Dependencies]\nRequires: \"mutableseqs >= 0.1.0\"\nRequires: \"nim >= 0.15.2\"\n\n",
"https://github.com/genotrance/plugins": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"Plugin system for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n\nimport os, strformat, strutils\n\nlet\n  flags = \"--threads:on -o:html/ --project --index:on\"\n  expected = \"\"\"Plugin 'plg1' dependency 'plg2' not loaded\nPlugin 'plg2' loaded (plg1unload, plg2test)\nPlugin1 loaded\nplg2test: test1param\nPlugin1: test2return\nPlugin 'plg1' loaded (plg1test)\nPlugin1 ready\nPlugin2 ready\nplg1test: test2param\nPlugin2: test1return\nnotify: testmain\nplist: plg1 plg2\nPlugin 'plg1' unloaded\nPlugin1 loaded\nplg2test: test1param\nPlugin1: test2return\nPlugin 'plg1' loaded (plg1test)\nplg2test: testmain\nMain: test2return\nPlugin 'plg1' unloaded\nplg1unload: plg1\nPlugin 'plg2' unloaded\"\"\"\n\ntask docs, \"Doc generation\":\n  exec &\"nim doc {flags} src/plugins.nim\"\n  exec &\"nim doc {flags} src/plugins/api.nim\"\n  exec &\"nim buildIndex -o:html/theindex.html html/\"\n\ntask docsPublish, \"Doc generation and publish\":\n  docsTask()\n  exec \"ghp-import --no-jekyll -fp html\"\n\ntask clean, \"Clean up\":\n  rmFile(\"tests/tmain\" & ExeExt)\n  let\n    dlext = DynlibFormat.splitFile().ext\n  for file in listFiles(\"tests/test1\"):\n    if file.splitFile().ext == dlext:\n      rmFile(file)\n  rmDir(\"html\")\n\ntask test, \"Test all\":\n  for build in [\"\", \"-d:release\"]:\n    cleanTask()\n    for mode in [\"\", \"-d:binary\"]:\n      exec &\"nim c {build} {mode} tests/tmain\"\n      exec \"ls -l tests\"\n      let (outp, errC) = gorgeEx(\"./tests/tmain quit\")\n      exec \"ls -l tests/test1\"\n      doAssert outp.strip() == expected and errC == 0, &\"\"\"\n\nExpected:\n{expected}\n\nOutput:\n{outp}\n\nError: {errC}\n\"\"\"\n\n  docsTask()",
"https://raw.githubusercontent.com/treeform/steganography/master/steganography.nimble": "# Package\n\nversion      = \"0.1.0\"\nauthor       = \"Andre von Houck\"\ndescription  = \"Steganography - hide data inside an image.\"\nlicense      = \"MIT\"\n\nsrcDir       = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.20.0\"\nrequires \"flippy >= 0.2.1\"\n",
"https://github.com/inv2004/kdb_nim": "# Package\n\nversion       = \"0.7.0\"\nauthor        = \"inv2004\"\ndescription   = \"Nim structs to work with Kdb in type-safe manner and low-level Nim to Kdb bindings\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n# bin           = @[\"main\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"terminaltables >= 0.1.1\"\nrequires \"uuids >= 0.1.10\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nimi3status/master/nimi3status.nimble": "[Package]\nname          = \"nimi3status\"\nversion       = \"0.2.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"\"\"Lightweight i3 status bar.\"\"\"\nlicense       = \"GPLv3\"\n\nbin           = \"nimi3status\"\n\nInstallFiles = \"\"\"\nLICENSE\nexample.conf.json\nREADME.adoc\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\ncolorsys >= 0.1\nnim >= 0.12.0\n\"\"\"\n",
"https://raw.githubusercontent.com/rominf/nim-hostname/master/hostname.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Roman Inflianskas\"\ndescription   = \"Nim library to get/set a hostname\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n",
"https://raw.githubusercontent.com/nim-lang/graphics/master/graphics.nimble": "[Package]\r\nname          = \"graphics\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf, Dominik Picheta\"\r\ndescription   = \"Graphics module for Nim.\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0, sdl1 >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/haxscramper/nimtrs/master/nimtrs.nimble": "version       = \"0.2.13\"\nauthor        = \"haxscramper\"\ndescription   = \"Nim term rewriting system\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.4\"\nrequires \"hmisc\", \"hdrawing\", \"hpprint\", \"hnimast\"\n",
"https://github.com/ThomasTJdev/nimtomd": "# Package\nversion       = \"0.3.1\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"Convert Nim files to markdown\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimtomd\"]\n\n\n# Dependencies\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/treeform/slappy": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"treeform\"\ndescription   = \"3d sound API\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"openal >= 0.1.0\"\nrequires \"vmath >= 0.3.1\"\nrequires \"supersnappy >= 1.0.0\"\n",
"https://raw.githubusercontent.com/unimorg/unimcli/master/unimcli.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"sovlookup\"\ndescription   = \"User-friendly nimcli.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\",\"cfg\"]\nbin           = @[\"unimcli\"]\n# skipDirs      = @[\"tests\"]\nnamedBin      = {\"unimcli\": \"unim\"}.toTable()\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"cligen >= 1.3.2\"\nrequires \"nimble\"\n",
"https://github.com/zielmicha/nim-dbus": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription   = \"dbus bindings for Nim\"\nlicense       = \"MIT\"\n\n# Dependecies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/fowlmouth/nimrod-enet/": "[Package]\nname = \"enet\"\nversion = \"1.0.3\"\nauthor = \"fowl\"\ndescription = \"Wrapper for ENet UDP networking library\"\nlicense = \"MIT\"",
"https://github.com/cowboy-coders/nim-openssl-evp": "[Package]\nname          = \"openssl_evp\"\nversion       = \"0.1.2\"\nauthor        = \"Will Szumski\"\ndescription   = \"Wrapper for OpenSSL's EVP interface\"\nlicense       = \"OpenSSL License and SSLeay License\"\nsrcDir        = \"src\"\nInstallExt    = \"nim\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.4\"\n",
"https://raw.githubusercontent.com/dom96/prometheus/master/prometheus.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A prometheus instrumentation library for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/itsumura-h/nim-allographer": "# Package\n\nversion       = \"0.15.0\"\nauthor        = \"Hidenobu Itsumura @dumblepytech1 as 'medy'\"\ndescription   = \"A Nim query builder library inspired by Laravel/PHP and Orator/Python\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbackend       = \"c\"\nbin           = @[\"allographer/cli/dbtool\"]\nbinDir        = \"src/bin\"\ninstallExt    = @[\"nim\"]\nskipDirs      = @[\"allographer/cli\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"cligen >= 0.9.38\"\nrequires \"progress >= 1.1.1\"\n\nimport strformat\nfrom os import `/`\n\ntask docs, \"Generate API documents\":\n  let\n    deployDir = \"deploy\" / \"docs\"\n    pkgDir = srcDir / \"allographer\"\n    srcFiles = @[\n      \"query_builder\",\n      \"schema_builder\",\n    ]\n\n  if existsDir(deployDir):\n    rmDir deployDir\n  for f in srcFiles:\n    let srcFile = pkgDir / f & \".nim\"\n    exec &\"nim doc --hints:off --project --out:{deployDir} --index:on {srcFile}\"\n\nlet toolImage = \"basolato:tool\"\n\ntask setupTool, \"Setup tool docker image\":\n  exec &\"docker build -t {toolImage} -f tool_Dockerfile .\"\n\nproc generateToc(dir: string) =\n  let cwd = getCurrentDir()\n  for f in listFiles(dir):\n    if 3 < f.len:\n      let ext = f[^3..^1]\n      if ext == \".md\":\n        exec &\"docker run --rm -v {cwd}:/work -it {toolImage} --insert --no-backup {f}\"\n\ntask toc, \"Generate TOC\":\n  generateToc(\".\")\n  generateToc(\"./documents\")\n",
"https://raw.githubusercontent.com/Yardanico/nimpylib/master/pylib.nimble": "version       = \"0.3.0\"\nauthor        = \"Danil Yarantsev (Yardanico), Juan Carlos (juancarlospaco)\"\ndescription   = \"Nim library with python-like functions and operators\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim r --experimental:strictFuncs --gc:orc tests/tester\"\n  # Test all runnableExamples\n  exec \"nim doc --project --outdir:docs src/pylib.nim\"\n",
"https://github.com/juancarlospaco/nim-openweathermap": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"OpenWeatherMap API Lib for Nim, Free world wide Creative Commons & Open Data Licensed Weather data\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/nitely/nregex": "# Package\n\nversion = \"0.0.4\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"A DFA based regex engine\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipDirs = @[\"tests\", \"docs\"]\n\nrequires \"nim >= 1.0.4\"\nrequires \"unicodedb >= 0.7.2\"\nrequires \"unicodeplus >= 0.5.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r -o:bin/nregex src/nregex.nim\"\n  exec \"nim c -r tests/tests.nim\"\n  exec \"nim c -r -d:forceRegexAtRuntime tests/tests.nim\"\n  #when (NimMajor, NimMinor) >= (1, 1):\n  #  exec \"nim c -d:runTestAtCT --maxLoopIterationsVM:1000000000 tests/tests.nim\"\n  exec \"nim js -r -o:bin/nregex.js --styleCheck:off src/nregex.nim\"\n  exec \"nim js -r --styleCheck:off tests/tests.nim\"\n  exec \"nim js -r --styleCheck:off -d:forceRegexAtRuntime tests/tests.nim\"\n\n  # Test runnable examples\n  exec \"nim doc -o:./docs/ugh/ugh.html ./src/nregex.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/nregex.nim\"\n",
"https://github.com/status-im/nim-ranges": "mode = ScriptMode.Verbose\n\npackageName   = \"ranges\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Exploration of various implementations of memory range types\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.17.0\"\n\nproc configForTests() =\n  --hints: off\n  --debuginfo\n  --path: \".\"\n  --run\n  --threads: on\n\ntask test, \"run CPU tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n\n",
"https://raw.githubusercontent.com/krux02/ast-pattern-matching/master/ast_pattern_matching.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Arne Döring\"\ndescription   = \"a general ast pattern matching library with a focus on correctness and good error messages\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://raw.githubusercontent.com/Quelklef/nim-finals/master/finals.nimble": "# Package\nversion       = \"1.0.5\"\nauthor        = \"Eli Maynard\"\ndescription   = \"Transparently declare single-set attributes.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n",
"https://github.com/saratchandra92/nim-geocoding": "[Package]\nname = \"nim-geocoding\"\nversion = \"0.1.0\"\nauthor = \"Sarat Chandra <saratchandra.outlook.com>\"\ndescription = \"Library for Google Maps geocoding API.\"\nlicense = \"MIT\"\nbin = \"geocoding\"\n[Deps]\nRequires: \"nim >=0.10.0\"\n",
"https://github.com/olliNiinivaara/GuildenStern": "version       = \"1.0.0\"\nauthor        = \"Olli\"\ndescription   = \"Modular multithreading Linux HTTP server\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipDirs = @[\".github\", \"bench\", \"e2e-tests\"]\n\nrequires \"nim >= 1.4.2\"\n\ntask test, \"run all tests\":\n  cd(\"tests\")\n  exec \"nim c -r --threads:on --d:threadsafe test_ctxheader.nim\"\n  exec \"nim c --d:release --threads:on --d:threadsafe test_wrk.nim\"\n  exec \"./test_wrk &\"\n  cd(\"../bench/\")\n  let outStr = gorge(getCurrentDir() & \"/wrkbin -t8 -c8 -d10s --latency http://127.0.0.1:5050\")\n  exec \"curl http://127.0.0.1:5050/shutdown\"\n  echo outStr\n  if outStr.contains(\"Socket errors\") and not outStr.contains(\"read 0, write 0, timeout 0\"): quit(-1)\n",
"https://raw.githubusercontent.com/jiro4989/wave/master/wave.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"wave is a tiny WAV sound module\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/jasonk000/nimpmda/master/nimpmda.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jason Koch\"\ndescription   = \"PCP PMDA module bindings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/rolandgg/nimTiingo": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Roland Grein\"\ndescription   = \"Tiingo\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/Araq/libffi/master/libffi.nimble": "# Package\nversion       = \"1.0.5\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"libffi wrapper for Nim.\"\nlicense       = \"MIT\"\n\nwhen defined(windows):\n  installExt     = @[\"nim\", \"c\", \"h\", \"s\"]\n\n# Dependencies\nrequires \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/johnnovak/nim-glfw/master/glfw.nimble": "#[ Package ]#\n\nversion     = \"3.3.2.1\"\nauthor      = \"Erik Johansson Andersson\"\ndescription = \"GLFW 3 wrapper for Nim\"\nlicense     = \"MIT\"\n\nskipDirs = @[\"examples\"]\n\nrequires \"nim >= 1.4.2\"\n\ntask examples, \"Compiles the examples with dynamic linking\":\n  exec \"nim c examples/boing\"\n  exec \"nim c examples/events\"\n  exec \"nim c examples/gears\"\n  exec \"nim c examples/minimal\"\n  exec \"nim c examples/splitview\"\n  exec \"nim c examples/triangle\"\n  exec \"nim c examples/wave\"\n\ntask examplesStatic, \"Compiles the examples with static linking\":\n  exec \"nim c -d:glfwStaticLib examples/boing\"\n  exec \"nim c -d:glfwStaticLib examples/events\"\n  exec \"nim c -d:glfwStaticLib examples/gears\"\n  exec \"nim c -d:glfwStaticLib examples/minimal\"\n  exec \"nim c -d:glfwStaticLib examples/splitview\"\n  exec \"nim c -d:glfwStaticLib examples/triangle\"\n  exec \"nim c -d:glfwStaticLib examples/wave\"\n",
"https://raw.githubusercontent.com/erhlee-bird/simple_graph/master/simple_graph.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Eric Lee\"\ndescription   = \"Simple Graph Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n",
"https://github.com/bluenote10/oop_utils": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Fabian Keller\"\ndescription   = \"Macro for building OOP class hierarchies based on closure methods.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.19.9\"\n\nimport ospaths\nimport oswalkdir\n\nimport algorithm\nimport sequtils\nimport sugar\nimport strutils\nimport strformat\n\ntype\n  Mode = enum\n    ModeC, ModeJS\n\n  File = string\n\nproc getFiles(baseDir: File): seq[File] =\n  result = newSeq[File]()\n  for file in oswalkdir.walkDirRec(baseDir):\n    let (_, name, ext) = file.splitFile()\n    if ext == \".nim\" and (name.contains(\"test\") or name.contains(\"error\")):\n      result.add(file)\n  result.sort((a, b) => cmp(a, b))\n\n\nproc deleteRunnable(file: File, mode: Mode) =\n  let binFileName =\n    if mode == ModeC:\n      file.changeFileExt(ExeExt)\n    else:\n      file.changeFileExt(\"js\")\n  rmFile(binFileName)\n\nproc relativeTo(path: File, base: File): File =\n  let baseSuffixed = base & \"/\"\n  if path.len > baseSuffixed.len:\n    path[baseSuffixed.len..^1]\n  else:\n    path\n\nlet colRed = \"\\e[1;31m\"\nlet colGreen = \"\\e[1;32m\"\nlet colYellow = \"\\e[1;33m\"\nlet colBlue = \"\\e[1;34m\"\nlet colWhite = \"\\e[1;37m\"\nlet colReset = \"\\e[00m\"\n\nhint(\"QuitCalled\", false)\n\nproc printPassed() =\n  echo &\"   {colGreen}[passed]{colReset}\"\n\nproc printFailed(output: string, suffix = \"\") =\n  echo &\"   {colRed}[failed] {suffix}{colReset}\"\n  echo &\"{colRed}------------------------------------------------{colReset}\"\n  echo output\n  echo &\"{colRed}------------------------------------------------{colReset}\"\n\ntask test, \"Runs the test suite\":\n  ## Executes all tests.\n  let baseDir = system.getCurrentDir() / \"tests\"\n  var files = getFiles(baseDir)\n\n  if files.len < 1:\n    echo &\"{colRed}Warning{colReset}: No tests found!\"\n    quit(\"\", 1)\n\n  let mode = ModeC\n  let compiler = if mode == ModeC: \"c\" else: \"js\"\n\n  var numPassed = 0\n  var numFailed = 0\n\n  for file in files:\n    let (_, name, _) = file.splitFile()\n    let expectedError = name.contains(\"error\")\n\n    let relativePath = file.relativeTo(baseDir)\n    echo &\" * {colYellow}{relativePath}{colReset}\"\n    let ret = gorgeEx &\"nim -r -d:release --colors:on {compiler} {file}\"\n    deleteRunnable(file, mode)\n\n    if not expectedError:\n      if ret.exitCode == 0:\n        printPassed()\n        numPassed += 1\n      else:\n        numFailed += 1\n        printFailed(ret.output)\n    else:\n      if ret.exitCode == 0:\n        printFailed(ret.output, \"test expected to fail, but passed\")\n        numFailed += 1\n      else:\n        var expectedMessage: string\n        var i = 0\n        for line in staticRead(file).splitLines():\n          if i == 1:\n            expectedMessage = line.strip()\n          inc i\n        if ret.output.contains(expectedMessage):\n          numPassed += 1\n          printPassed()\n        else:\n          numFailed += 1\n          printFailed(ret.output, &\"missing error message '{expectedMessage}'\")\n\n  if numFailed == 0:\n    echo &\"\\n{colGreen}Success{colReset}: All {numPassed} tests passed.\"\n  else:\n    echo &\"\\n{colRed}Failed{colReset}: {numFailed} out of {numFailed+numPassed} tests failed.\"\n    quit(\"\", 1)\n\n",
"https://raw.githubusercontent.com/disruptek/bluu/master/bluu.nimble": "version = \"0.0.6\"\nauthor = \"disruptek\"\ndescription = \"Microsoft Azure Cloud Computing Platform and Services (MAC) APIs\"\nlicense = \"MIT\"\nrequires \"nim >= 0.20.0\"\nrequires \"https://github.com/disruptek/rest.git >= 1.0.0\"\nrequires \"https://github.com/disruptek/openapi.git >= 3.1.3\"\nrequires \"npeg >= 0.22.2\"\n\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/Vladar4/FastStack/master/faststack.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Vladar4\"\ndescription   = \"Dynamically resizable data structure optimized for fast iteration.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.3\"\n\n",
"https://raw.githubusercontent.com/brentp/nim-kmer/master/kmer.nimble": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Brent Pedersen\"\ndescription   = \"dna kmer ops for nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\" #, \"nim-lang/c2nim>=0.9.13\"\n\nskipDirs = @[\"tests\"]\n\ntask test, \"run the tests\":\n  exec \"nim c -d:release --lineDir:on --debuginfo -r kmer\"\n",
"https://github.com/treeform/print": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"treeform\"\ndescription   = \"Print is a set of pretty print macros, useful for print-debugging.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/andreaferretti/nimlapack": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Nim binding for LAPACK\"\nlicense       = \"Apache2\"\nskipFiles     = @[\"lapacke.h\", \"lapack.h\", \"lapack.c2nim\", \"nimlapack.html\"]\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.16.0\"\n\nimport strutils\n\ntask header, \"generate bindings from header\":\n  let\n    libPath = \"lapack.h\"\n    patchPath = \"lapack.c2nim\"\n    headerPath = \"lapack-tmp.h\"\n    libContent = readFile(libPath)\n    patchContent = readFile(patchPath)\n  writeFile(headerPath, patchContent & libContent)\n  exec(\"c2nim \" & headerPath & \" -o:nimlapack.nim\")\n  exec(\"rm \" & headerPath)\n\ntask check, \"check that generated bindings do compile\":\n  exec(\"nim c -c nimlapack.nim\")\n\ntask docs, \"generate documentation\":\n  exec(\"nim doc2 nimlapack.nim\")\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\ntask test, \"run NimLAPACK tests\":\n  configForTests()\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testopenblas, \"run NimLAPACK tests on OpenBLAS\":\n  configForTests()\n  --define:\"lapack=openblas\"\n  setCommand \"c\", \"tests/test.nim\"",
"https://api.github.com/repos/nimious/io-myo/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"a1d4137e55cca4c5e06d58b182629a01fc2bd78b\",\"size\":93,\"url\":\"https://api.github.com/repos/nimious/myo/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nimious/myo/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nimious/myo/git/blobs/a1d4137e55cca4c5e06d58b182629a01fc2bd78b\",\"download_url\":\"https://raw.githubusercontent.com/nimious/myo/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/myo/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nimious/myo/git/blobs/a1d4137e55cca4c5e06d58b182629a01fc2bd78b\",\"html\":\"https://github.com/nimious/myo/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"size\":1076,\"url\":\"https://api.github.com/repos/nimious/myo/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nimious/myo/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nimious/myo/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"download_url\":\"https://raw.githubusercontent.com/nimious/myo/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/myo/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nimious/myo/git/blobs/efcc725f80b3ffaa320ebcc55fd6e5c3367f0f35\",\"html\":\"https://github.com/nimious/myo/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"dea250896853864a6c70c9361b9b96c0dee5ea18\",\"size\":2458,\"url\":\"https://api.github.com/repos/nimious/myo/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nimious/myo/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nimious/myo/git/blobs/dea250896853864a6c70c9361b9b96c0dee5ea18\",\"download_url\":\"https://raw.githubusercontent.com/nimious/myo/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/myo/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nimious/myo/git/blobs/dea250896853864a6c70c9361b9b96c0dee5ea18\",\"html\":\"https://github.com/nimious/myo/blob/master/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"1b728e0460c80f1d9dcfd7dc11ae6dd1628a3693\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/myo/contents/docs?ref=master\",\"html_url\":\"https://github.com/nimious/myo/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/nimious/myo/git/trees/1b728e0460c80f1d9dcfd7dc11ae6dd1628a3693\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/myo/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/nimious/myo/git/trees/1b728e0460c80f1d9dcfd7dc11ae6dd1628a3693\",\"html\":\"https://github.com/nimious/myo/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"0a73f315a135199924d304cd7d81baf2ef977101\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/myo/contents/examples?ref=master\",\"html_url\":\"https://github.com/nimious/myo/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/nimious/myo/git/trees/0a73f315a135199924d304cd7d81baf2ef977101\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/myo/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/nimious/myo/git/trees/0a73f315a135199924d304cd7d81baf2ef977101\",\"html\":\"https://github.com/nimious/myo/tree/master/examples\"}},{\"name\":\"myo.nimble\",\"path\":\"myo.nimble\",\"sha\":\"8bb12c506c967156200f2820dddf9e654437b010\",\"size\":225,\"url\":\"https://api.github.com/repos/nimious/myo/contents/myo.nimble?ref=master\",\"html_url\":\"https://github.com/nimious/myo/blob/master/myo.nimble\",\"git_url\":\"https://api.github.com/repos/nimious/myo/git/blobs/8bb12c506c967156200f2820dddf9e654437b010\",\"download_url\":\"https://raw.githubusercontent.com/nimious/myo/master/myo.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/myo/contents/myo.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nimious/myo/git/blobs/8bb12c506c967156200f2820dddf9e654437b010\",\"html\":\"https://github.com/nimious/myo/blob/master/myo.nimble\"}},{\"name\":\"nim.cfg\",\"path\":\"nim.cfg\",\"sha\":\"42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"size\":13,\"url\":\"https://api.github.com/repos/nimious/myo/contents/nim.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/myo/blob/master/nim.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/myo/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"download_url\":\"https://raw.githubusercontent.com/nimious/myo/master/nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/myo/contents/nim.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/myo/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"html\":\"https://github.com/nimious/myo/blob/master/nim.cfg\"}},{\"name\":\"nimdoc.cfg\",\"path\":\"nimdoc.cfg\",\"sha\":\"77270d742e413899ac59edfa784d6c30f510af12\",\"size\":96,\"url\":\"https://api.github.com/repos/nimious/myo/contents/nimdoc.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/myo/blob/master/nimdoc.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/myo/git/blobs/77270d742e413899ac59edfa784d6c30f510af12\",\"download_url\":\"https://raw.githubusercontent.com/nimious/myo/master/nimdoc.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/myo/contents/nimdoc.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/myo/git/blobs/77270d742e413899ac59edfa784d6c30f510af12\",\"html\":\"https://github.com/nimious/myo/blob/master/nimdoc.cfg\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"ca872556ac3b222756fafeb798bb024148b7701a\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/myo/contents/src?ref=master\",\"html_url\":\"https://github.com/nimious/myo/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nimious/myo/git/trees/ca872556ac3b222756fafeb798bb024148b7701a\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/myo/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nimious/myo/git/trees/ca872556ac3b222756fafeb798bb024148b7701a\",\"html\":\"https://github.com/nimious/myo/tree/master/src\"}}]",
"https://raw.githubusercontent.com/nimious/sixense/master/sixense.nimble": "[Package]\nname: \"sixense\"\nversion: \"0.1\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for the Sixense Core API\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://github.com/andreaferretti/nimcuda": "# Package\n\nversion       = \"0.1.7\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Nim binding for CUDA\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"headers\", \"include\", \"c2nim\", \"examples\", \"htmldocs\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\nimport os, strutils\n\nproc patch(libName: string): string =\n  when defined(windows):\n    let libpath = getEnv(\"CUDA_PATH\") / \"include\" / libName\n  else:\n    let libpath = \"/usr/local/cuda/include\" / libName\n\n  let\n    simpleLibPath = \"include\" / libName\n    patchPath = \"c2nim\" / libName\n    outPath = \"headers\" / libName\n    libContent =\n      if fileExists(simpleLibPath): readFile(simpleLibPath)\n      else: readFile(libPath) #.replace(\"#if defined(__cplusplus)\", \"#ifdef __cplusplus\")\n    patchContent = readFile(patchPath)\n  writeFile(outPath, patchContent & libContent)\n  return outPath\n\nproc process(libName: string) =\n  let\n    headerName = libName.addFileExt(\"h\")\n    outPath = \"nimcuda\" / libName.addFileExt(\"nim\")\n    headerPath = patch(headerName)\n  exec(\"c2nim \" & headerPath & \" -o:\" & outPath)\n\nproc compile(libName: string) =\n  let libPath = \"nimcuda\" / libName.addFileExt(\"nim\")\n  exec(\"nim c -c \" & libPath)\n\nlet libs = [\n  \"library_types\",\n  \"vector_types\",\n  # \"driver_types\", # do not decomment - the nim file is manually adjusted\n  \"surface_types\",\n  \"texture_types\",\n  \"cuda_runtime_api\",\n  # \"cuda_occupancy\", # do not decomment - the nim file is manually adjusted\n  \"cuComplex\",\n  \"cublas_api\",\n  \"cublas_v2\",\n  \"cudnn\",\n  \"cufft\",\n  \"curand\",\n  \"cusolver_common\",\n  \"cusolverDn\",\n  \"cusolverRf\",\n  \"cusolverSp\",\n  \"cusparse\",\n  \"nvblas\",\n  \"nvgraph\"\n]\n\nproc processAll() =\n  exec(\"mkdir -p nimcuda\")\n  exec(\"mkdir -p headers\")\n  for lib in libs:\n    process(lib)\n  exec(\"rm headers/*\")\n\nproc compileAll() =\n  compile(\"nimcuda\")\n  for lib in libs:\n    compile(lib)\n\ntask headers, \"generate bindings from headers\":\n  processAll()\n\ntask check, \"check that generated bindings do compile\":\n  compileAll()\n\ntask docs, \"generate documentation\":\n  exec(\"nim doc2 --project nimcuda/nimcuda.nim\")\n\nproc exampleConfig() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  when defined(windows):\n    switch(\"cincludes\", getenv(\"CUDA_PATH\") / \"include\")\n    switch(\"clibdir\", getenv(\"CUDA_PATH\") / \"lib/x64\")\n  else:\n    --cincludes: \"/usr/local/cuda/include\"\n    --clibdir: \"/usr/local/cuda/lib64\"\n  --path: \".\"\n  --run\n\ntask pagerank, \"run pagerank example\":\n  exampleConfig()\n  setCommand \"c\", \"examples/pagerank.nim\"\n\ntask fft, \"run fft example\":\n  exampleConfig()\n  setCommand \"c\", \"examples/fft.nim\"\n\ntask sparse, \"run sparse example\":\n  exampleConfig()\n  setCommand \"c\", \"examples/sparse.nim\"\n\ntask random, \"run random example\":\n  exampleConfig()\n  setCommand \"c\", \"examples/random.nim\"\n",
"https://github.com/PMunch/SDLGamelib": "[Package]\nname\t\t= \"gamelib\"\nversion\t\t= \"0.0.1\"\nauthor\t\t= \"Peter Munch-Ellingsen\"\ndescription\t= \"\"\"A library of functions to make creating games using Nim and SDL2 easier.\nThis does not intend to be a full blown engine and tries to keep all the components loosly coupled so that individual parts can be used separately.\"\"\"\nlicense\t\t= \"MIT\"\n\nSkipFiles\t= \"\"\"\nalite.html\nLICENSE\n.gitignore\nREADME.md\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\nnim  >= 0.14.0\nsdl2 >= 1.1\n\"\"\"\n",
"https://github.com/quelklef/nim-finals": "# Package\nversion       = \"1.0.5\"\nauthor        = \"Eli Maynard\"\ndescription   = \"Transparently declare single-set attributes.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n",
"https://raw.githubusercontent.com/JohnAD/bson/master/bson.nimble": "# Package\n\nversion      = \"1.1.2\"\nauthor       = \"John Dupuy\"\ndescription  = \"BSON (Binary Json) serialization\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/JohnAD/negamax/master/negamax.nimble": "# Package\n\nversion       = \"0.0.3\"\nauthor        = \"John Dupuy\"\ndescription   = \"Negamax AI algorithm for turn based games\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"turn_based_game >= 1.0.0\"\n",
"https://raw.githubusercontent.com/Araq/midnight_dynamite/master/midnight_dynamite.nimble": "[Package]\nname         = \"midnight_dynamite\"\nversion      = \"1.0.1\"\nauthor       = \"Grzegorz Adam Hankiewicz\"\ndescription  = \"Wrapper for the markdown rendering hoedown library.\"\nlicense      = \"MIT\"\nbin = \"midnight_dynamite_badger.exe\"\n\nInstallFiles = \"\"\"\n\nLICENSE.md\nREADME.md\ndocs/changes.md\ndocs/syntax.md\nmidnight_dynamite.nim\nmidnight_dynamite_pkg/autolink.c\nmidnight_dynamite_pkg/autolink.h\nmidnight_dynamite_pkg/buffer.c\nmidnight_dynamite_pkg/buffer.h\nmidnight_dynamite_pkg/document.c\nmidnight_dynamite_pkg/document.h\nmidnight_dynamite_pkg/escape.c\nmidnight_dynamite_pkg/escape.h\nmidnight_dynamite_pkg/hoedown.nim\nmidnight_dynamite_pkg/html.c\nmidnight_dynamite_pkg/html.h\nmidnight_dynamite_pkg/html_blocks.c\nmidnight_dynamite_pkg/html_smartypants.c\nmidnight_dynamite_pkg/stack.c\nmidnight_dynamite_pkg/stack.h\nmidnight_dynamite_pkg/version.c\nmidnight_dynamite_pkg/version.h\nnakefile.nim\nnimdoc.cfg\n\n\"\"\"\n\n[Deps]\nRequires: \"\"\"\n\nnake >= 1.4\nargument_parser >= 0.2\nhttps://github.com/gradha/badger_bits.git >= 0.2.2\n\"\"\"\n",
"https://github.com/achesak/nim-csv": "[Package]\nname = \"csv\"\nversion = \"0.3\"\nauthor = \"Adam Chesak\"\ndescription = \"procedures for reading, writing, parsing, and stringifying CSV (comma separated value) files\"\nlicense = \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.18\"\n",
"https://github.com/nim-lang/irc": "# Package\n\nversion = \"0.3.0\"\nauthor = \"Dominik Picheta\"\ndescription = \"IRC client module\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.9.5\"\n",
"https://github.com/walkre-niboshi/nim-ncurses": "# Package\nversion       = \"1.0.2\"\nauthor        = \"Raymond Nowley\"\ndescription   = \"A wrapper for NCurses\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/nimious/io-sixense.git": "[Package]\nname: \"sixense\"\nversion: \"0.1\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for the Sixense Core API\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://github.com/juancarlospaco/nim-html-tools": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"HTML5 Tools for Nim, all Templates, No CSS, No Libs, No JS Framework\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\nrequires \"contra\"\n",
"https://raw.githubusercontent.com/tulayang/mysqlparser/master/mysqlparser.nimble": "# Package\nversion = \"0.2.1\"\nauthor = \"Wang Tong\"\ndescription = \"An efficient packet parser for MySQL Client/Server Protocol. Help you to write Mysql communication in either BLOCKIONG-IO or NON-BLOCKING-IO.\"\nlicense = \"MIT\"\nskipFiles = @[\"TODO.md\", \"test.nim\"]\n\n# Dependencies\nrequires \"nim >= 0.19\"",
"https://github.com/Sann0/Nimem": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Meow\"\ndescription   = \"Library for external memory manipulation on a windows process\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"winim >= 3.6.0\"\nrequires \"regex >= 0.19.0\"",
"https://github.com/johnnovak/nim-nanovg": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"John Novak <john@johnnovak.net>\"\ndescription   = \"Nim wrapper for the NanoVG antialiased vector graphics rendering library for OpenGL\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"doc\", \"examples\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n\ntask examplesGL2, \"Compiles the examples\":\n  exec \"nim c -d:release -D:glfwStaticLib -D:demoMSAA -D:nvgGL2 examples/example_gl2.nim\"\n  exec \"nim c -d:release -D:glfwStaticLib -D:demoMSAA -D:nvgGL2 examples/simple_gl2.nim\"\n\ntask examplesGL3, \"Compiles the examples\":\n  exec \"nim c -d:release -D:glfwStaticLib -D:demoMSAA -D:nvgGL3 examples/example_gl3.nim\"\n  exec \"nim c -d:release -D:glfwStaticLib -D:demoMSAA -D:nvgGL3 examples/simple_gl3.nim\"\n  exec \"nim c -d:release -D:glfwStaticLib -D:nvgGL3 examples/example_fbo.nim\"\n\ntask docgen, \"Generate HTML documentation\":\n  exec \"nim doc -D:nvgGL3 -o:doc/nanovg.html nanovg\"\n  exec \"nim doc -D:nvgGL3 -o:doc/wrapper.html nanovg/wrapper\"\n",
"https://raw.githubusercontent.com/jlp765/tnim/master/tnim.nimble": "[Package]\nname        = \"tnim\"\nversion     = \"2.0.6\"\nauthor      = \"James Parkinson\"\ndescription = \"Nim REPL - a sandbox for testing Nim code\"\nlicense     = \"MIT\"\n\nbin         = \"tnim\"\nbinDir      = \"bin\"\n\n[Deps]\nrequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/nitely/nim-strunicode/master/strunicode.nimble": "# Package\n\nversion = \"0.9.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Swift-like unicode string handling\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"normalize >= 0.6.0\"\nrequires \"graphemes >= 0.7.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/strunicode.nim\"\n  # Test runnable examples\n  exec \"nim doc -o:./docs/ugh/ugh.html ./src/strunicode.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs/ ./src/strunicode.nim\"\n",
"https://github.com/ziotom78/nimcfitsio.git": "[Package]\nname          = \"nimcfitsio\"\nversion       = \"0.1.1\"\nauthor        = \"Maurizio Tomasi <ziotom78 .at. gmail.com>\"\ndescription   = \"Bindings for the CFITSIO library\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://raw.githubusercontent.com/pragmagic/names/master/names.nimble": "version     = \"0.1.0\"\nauthor      = \"Ruslan Mustakov\"\ndescription = \"String interning library\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n",
"https://github.com/FedericoCeratto/nim-pop3": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"POP3 client library\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n",
"https://raw.githubusercontent.com/ethosa/anime/master/anime.nimble": "[Package]\r\nname = \"anime\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.6\"\r\ndescription = \"The Nim wrapper for tracemoe.\"\r\nlicense = \"AGPLv3\"\r\nsrcDir = \"src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-libnotify/master/libnotify.nimble": "# Package\nversion       = \"0.0.2\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Minimalistic libnotify wrapper.\"\nlicense       = \"LGPLv3\"\nskipFiles     = @[\"test_libnotify.nim\"]\n\n# Dependencies\nrequires \"nim >= 0.12\", \"gtk2 >= 1.3\"\n",
"https://raw.githubusercontent.com/adam-mcdaniel/calendar/master/calendar.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Adam McDaniel\"\ndescription   = \"A tiny calendar program\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"cal\"]\n\n# Dependencies\nrequires \"nim >= 1.2.4\"\n",
"https://raw.githubusercontent.com/cjxgm/barbarus/master/barbarus.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Giumo Clanjor (哆啦比猫/兰威举)\"\ndescription   = \"A simple extensible i18n engine.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.2\"\n\n",
"https://github.com/juancarlospaco/nim-georefar": "version       = \"0.2.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"GeoRef Argentina Government MultiSync API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.4\"\n",
"https://raw.githubusercontent.com/jxy/MDevolve/master/mdevolve.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Xiao-Yong Jin\"\ndescription   = \"Integrator framework for Molecular Dynamic evolutions\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_qr/master/qr.nimble": "# Package\n\nversion       = \"1.3.0\"\nauthor        = \"Thomas T. Jarløv\"\ndescription   = \"QR-code tools. Generate SVG-files with QR-codes, get QR-code sizes, etc.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires: \"nim >= 1.4.0\"\n\n\nimport os\n\ntask setup, \"Generating C-code\":\n  const ext = when defined(windows): \".dll\" elif defined(macosx): \".dylib\" else: \".so\"\n  const path = when defined(windows): \"C:\\\\Windows\\\\System32\" else: \"/usr/lib\"\n  doAssert dirExists(path), \"Error directory not found: \" & path # Extremely unlikely\n\n  if not fileExists(path / \"qrcodegen\" & ext):\n    exec \"gcc -c -fPIC -o src/qr/qrcodegen.o src/qr/qrcodegen.c\"\n    exec \"gcc -shared -fPIC src/qr/qrcodegen.o -o src/qr/qrcodegen\" & ext\n    # ERROR: /usr/bin/ld: qrcodegen.o: relocation R_X86_64_PC32 against qrcodegen_encodeSegmentsAdvanced cant be used making shared object; recompile with -fPIC\n    try:\n      cpFile \"src/qr/qrcodegen\" & ext, path / \"qrcodegen\" & ext\n    except:\n      echo \"Failed to install dynamic library: \" & path / \"qrcodegen\" & ext\n      echo \"Please copy the file src/qr/qrcodegen\" & ext & \" to \" & path / \"qrcodegen\" & ext\n      when defined(windows):\n        echo \"and reboot the computer before using the qr module.\"\n  else:\n    echo \"Dynamic library already exists: \" & path / \"qrcodegen\" & ext\n\n\nbefore install:\n  setupTask()\n",
"https://github.com/calebwin/pipelines": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"calebwin\"\ndescription   = \"A tiny framework & language for crafting massively parallel data pipelines\"\nlicense       = \"MIT\"\nbin           = @[\"pipelines/pipelines\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"python >= 0.0.0\"\n",
"https://github.com/genotrance/cmake": "version     = \"0.1.1\"\nauthor      = \"genotrance\"\ndescription = \"CMake for Nimble\"\nlicense     = \"MIT\"\n\nbin = @[\"cmake\"]\ninstallDirs = @[\"cmake\"]\n\nrequires \"nim >= 0.19.2\", \"nimterop >= 0.5.0\"",
"https://github.com/yglukhov/jnim": "# Package\n\nversion       = \"0.5.2\"\nauthor        = \"Anatoly Galiulin, Yuriy Glukhov\"\ndescription   = \"Java bridge for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.19\"\n\nfrom os import `/`\n\nconst BIN_DIR = \"bin\"\nconst BUILD_DIR = \"build\"\n\nproc compileJava() =\n  BUILD_DIR.mkDir\n  var cmd = \"javac\".toExe & \" -d \" & BUILD_DIR\n  for f in [\n      \"TestClass\",\n      \"ConstructorTestClass\",\n      \"MethodTestClass\",\n      \"PropsTestClass\",\n      \"InnerTestClass\",\n      \"ExceptionTestClass\",\n      \"GenericsTestClass\",\n      \"BaseClass\",\n      \"ChildClass\",\n      \"ExportTestClass\" ]:\n    cmd &= \" tests/java/\" & f & \".java\"\n\n  if fileExists(\"Jnim.java\"):\n    cmd &= \" Jnim.java\"\n  cmd &= \" jnim/support/io/github/vegansk/jnim/NativeInvocationHandler.java\"\n  exec cmd\n\nproc test(name: string) =\n  let outFile = BIN_DIR / \"test_\" & name\n  rmFile(\"Jnim.java\")\n  exec \"nim c --passC:-g --threads:on -d:nimEmulateOverflowChecks -d:jnimGlue=Jnim.java --out:\" & outFile & \" tests/test_\" & name\n  compileJava()\n  exec outFile\n\ntask test, \"Run all tests\":\n  test \"all\"\n\ntask test_jvm_finder, \"Run jvm_finder test\":\n  test \"jvm_finder\"\n\ntask test_jni_wrapper, \"Run jni_wrapper test\":\n  test \"jni_wrapper\"\n\ntask test_jni_api, \"Run jni_api test\":\n  test \"jni_api\"\n\ntask test_jni_generator, \"Run jni_api test\":\n  test \"jni_generator\"\n\ntask test_jni_export, \"Run jni_export test\":\n  test \"jni_export\"\n\ntask test_jni_export_old, \"Run jni_export_old test\":\n  test \"jni_export_old\"\n\ntask test_java_lang, \"Run java.lang test\":\n  test \"java_lang\"\n\ntask test_java_util, \"Run java.util test\":\n  test \"java_util\"\n\ntask example, \"Run example\":\n  test \"example\"\n",
"https://raw.githubusercontent.com/RaimundHuebel/nimhighlight/master/highlight.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Raimund Hübel\"\ndescription   = \"Tool/Lib to highlight text in CLI by using regular expressions.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"highlight\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/jabbalaci/nimpykot/master/pykot.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Laszlo Szathmary (Jabba Laci)\"\ndescription   = \"Porting some Python / Kotlin features to Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/M4RC3L05/redux-nim": "# Package\n\nversion       = \"1.0.3\"\nauthor        = \"M4RC3L0\"\ndescription   = \"Redux Implementation in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://raw.githubusercontent.com/liquid600pgm/euwren/master/euwren.nimble": "#--\n# Package\n#--\n\nversion       = \"0.13.3\"\nauthor        = \"liquid600pgm\"\ndescription   = \"High-level Wren wrapper\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n#--\n# Dependencies\n#--\n\nrequires \"nim >= 1.0.0\"\nrequires \"nimterop >= 0.3.6\"\n",
"https://github.com/vegansk/nimboost": "# [Package]\nversion       = \"0.5.6\"\nauthor        = \"Anatoly Galiulin <galiulin.anatoly@gmail.com>\"\ndescription   = \"Additions to the Nim's standard library, like boost for C++\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# [Deps]\nrequires \"nim >= 0.19.0\", \"patty >= 0.3.3\"\n",
"https://github.com/surf1nb1rd/nim-prompt": "mode = ScriptMode.Verbose\n\npackageName   = \"prompt\"\nversion       = \"0.0.1\"\nauthor        = \"Surf1nb1rd\"\ndescription   = \"Feature-rich readline replacement\"\nlicense       = \"BSD2\"\n\nrequires \"nim >= 0.18.0\",\n         \"unicodedb >= 0.3.2\"\n",
"https://github.com/Senketsu/nshout": "[Package]\nname = \"nshout\"\nversion = \"0.1.1\"\nauthor = \"Senketsu\"\ndescription = \"libshout wrapper for Nim\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://raw.githubusercontent.com/yglukhov/plists/master/plists.nimble": "# Package\nversion       = \"0.2.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Generate and parse Mac OS X .plist files\"\nlicense       = \"MIT\"\n\nrequires \"darwin\"\n",
"https://github.com/OrgTangle/ntangle": "# Package\n\nversion       = \"0.6.6\"\nauthor        = \"Kaushal Modi\"\ndescription   = \"Command-line utility for Tangling of Org mode documents\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"ntangle\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.6\", \"cligen >= 0.9.31\"\n",
"https://github.com/stavenko/nim-glm": "#[ Package ]#\n\nversion       = \"1.1.1\"\nauthor        = \"Arne Döring\"\ndescription   = \"Nim port of the OpenGL Mathematics (GLM) library\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\", \"examples\"]\n\nrequires(\"nim >= 0.17.2\")\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/testrunner.nim\"\n",
"https://github.com/niv/ed25519.nim": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"niv\"\ndescription   = \"ed25519 key crypto bindings\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests/\"]\n\n# Dependencies\n\nrequires \"nim >= 0.13.0\"\n\n",
"https://github.com/barcharcraz/libgit2-nim": "# Package\n\nversion       = \"0.26.0\"\nauthor        = \"Charles Barto\"\ndescription   = \"Libgit2 low level wrapper\"\nlicense       = \"MIT\"\nsrcDir = \"src\"\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\n",
"https://raw.githubusercontent.com/theAkito/nim-quickcrypt/master/quickcrypt.nimble": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Akito <the@akito.ooo>\"\ndescription   = \"A library for quickly and easily encrypting strings and text file content.\"\nlicense       = \"GPL-3.0-or-later\"\nskipDirs      = @[\"tasks\"]\nskipFiles     = @[\"README.md\"]\n\n\n# Dependencies\n\nrequires \"nim     >= 1.4.0\"\nrequires \"nimAES  >= 0.1.2\"\nrequires \"neoid   >= 0.3.0\"\n\n\n# Tasks\n\ntask intro, \"Initialize project. Run only once at first pull.\":\n  exec \"git submodule add https://github.com/theAkito/nim-tools.git tasks || true\"\n  exec \"git submodule update --init --recursive\"\n  exec \"git submodule update --recursive --remote\"\n  exec \"nimble configure\"\ntask configure, \"Configure project. Run whenever you continue contributing to this project.\":\n  exec \"git fetch --all\"\n  exec \"nimble check\"\n  exec \"nimble --silent refresh\"\n  exec \"nimble install --accept --depsOnly\"\n  exec \"git status\"\ntask fbuild, \"Build project.\":\n  exec \"\"\"nim c \\\n            --define:danger \\\n            --opt:speed \\\n            --out:quickcrypt \\\n            quickcrypt\n       \"\"\"\ntask dbuild, \"Debug Build project.\":\n  exec \"\"\"nim c \\\n            --define:debug:true \\\n            --debuginfo:on \\\n            --out:quickcrypt_debug \\\n            quickcrypt\n       \"\"\"\ntask makecfg, \"Create nim.cfg for optimized builds.\":\n  exec \"nim tasks/cfg_optimized.nims\"\ntask clean, \"Removes nim.cfg.\":\n  exec \"nim tasks/cfg_clean.nims\"\n",
"https://raw.githubusercontent.com/dom96/jester/master/jester.nimble": "# Package\n\nversion       = \"0.5.0\" # Be sure to update jester.jesterVer too!\nauthor        = \"Dominik Picheta\"\ndescription   = \"A sinatra-like web framework for Nim.\"\nlicense       = \"MIT\"\n\nskipFiles = @[\"todo.markdown\"]\nskipDirs = @[\"tests\"]\n\n# Deps\n\nrequires \"nim >= 1.0.0\"\n\nwhen not defined(windows):\n  requires \"httpbeast >= 0.2.2\"\n\n# For tests\nrequires \"https://github.com/timotheecour/asynctools#pr_fix_compilation\"\n\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r tests/tester\"",
"https://raw.githubusercontent.com/soasme/nim-markdown/master/markdown.nimble": "# Package\n\nversion       = \"0.8.0\"\nauthor        = \"Ju Lin\"\ndescription   = \"A Markdown Parser in Nim World.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"markdown\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask watch, \"run test cases whenever modified the code.\":\n  exec \"watchmedo shell-command --patterns='*.nim' --recursive --command='nimble test' .\"\n",
"https://github.com/nimlibs/simdX86": "import ospaths\n\nversion       = \"0.1.0\"\nauthor        = \"James C. Osborn\"\ndescription   = \"Wrappers for X86 SIMD intrinsics\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.17.0\"\n\nvar nimcmd = \"nim c -r -p:. -t:-march=native \"\n\ntask test, \"runs basic tests\":\n  exec nimcmd & \"simdX86\"/\"simdX86Test\"\n\ntask testSse, \"runs SSE tests\":\n  exec nimcmd & \"simdX86\"/\"simdSse\"\n\ntask testAvx, \"runs AVX tests\":\n  exec nimcmd & \"simdX86\"/\"simdAvx\"\n\ntask testAvx512, \"runs AVX512 tests\":\n  exec nimcmd & \"simdX86\"/\"simdAvx512\"\n\ntask clean, \"removes test artifacts\":\n  rmdir \"simdX86\"/\"nimcache\"\n  rmfile \"simdX86\"/\"simdX86Test\"\n  rmfile \"simdX86\"/\"simdSse\"\n  rmfile \"simdX86\"/\"simdAvx\"\n  rmfile \"simdX86\"/\"simdAvx512\"\n",
"https://github.com/fragcolor-xyz/fragments": "# Package\nversion     = \"0.1.39\"\nauthor      = \"Fragcolor Inc.\"\ndescription = \"Our very personal collection of utilities\"\nlicense     = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.19.2\"\n",
"https://github.com/narimiran/sorta": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"narimiran\"\ndescription   = \"Sorted Tables based on B-Trees\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-lmdb/master/lmdb.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"LMDB wrapper\"\nlicense       = \"OpenLDAP Public license\"\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask tests_functional, \"Functional tests\":\n  exec \"nim c -p:. -d:release -r tests/functional.nim\"\n\n",
"https://raw.githubusercontent.com/onionhammer/sha1/master/sha1.nimble": "[Package]\nname = \"sha1\"\nversion = \"1.1\"\nauthor = \"Erik O'Leary\"\ndescription = \"SHA-1 produces a 160-bit (20-byte) hash value from arbitrary input\"\nlicense = \"BSD\"\n",
"https://github.com/nnahito/nim_searched": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"nnahito\"\ndescription   = \"search algorithms\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/treeform/bumpy/master/bumpy.nimble": "version     = \"1.0.1\"\nauthor      = \"Andre von Houck\"\ndescription = \"2d collision library.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\nrequires \"vmath >= 0.4.0\"\n",
"https://raw.githubusercontent.com/c-blake/procs/master/procs.nimble": "# Package\nversion     = \"0.3.0\"\nauthor      = \"Charles Blake\"\ndescription = \"Unix process&system query&formatting library&multi-command CLI in Nim\"\nlicense     = \"MIT/ISC\"\nbin         = @[ \"procs\" ]\n\n# Dependencies\nrequires \"nim >= 0.20.0\", \"cligen >= 1.2.0\"\nskipDirs = @[\"configs\"]\n",
"https://github.com/wltsmrz/nimler": "mode = ScriptMode.Silent\nversion = \"4.6.0\"\nauthor = \"wltsmrz\"\ndescription = \"Erlang/Elixir NIFs\"\nlicense = \"MIT\"\nskipDirs = @[\"tests\", \"docs\", \"examples\"]\nskipFiles = @[\"README.md\"]\ninstallDirs = @[\"nimler\", \"scripts\"]\ninstallFiles = @[\"nimler.nim\"]\nrequires \"nim >= 1.2.0\"\n\nproc configTest() =\n  if getEnv(\"NIMLER_BUILD_RELEASE\") == \"1\":\n    --define:release\n\n  if getEnv(\"NIMLER_BUILD_ARM64\") == \"1\":\n    --gcc.exe:\"aarch64-linux-gnu-gcc\"\n    --gcc.linkerexe:\"aarch64-linux-gnu-ld\"\n    --cpu:arm64\n    --os:linux\n\ntask test, \"dummy\":\n  quit(0)\n\ntask build_all, \"build\":\n  exec(\"nimble build_init_api\")\n  exec(\"nimble build_dirty_nif\")\n  exec(\"nimble build_integration\")\n  exec(\"nimble build_codec\")\n  exec(\"nimble build_resource\")\n  exec(\"nimble build_init_resource\")\n  exec(\"nimble build_timeslice\")\n  exec(\"nimble build_message\")\n  exec(\"nimble build_positional\")\n\ntask test_all, \"run tests\":\n  exec(\"elixir test_all.exs\")\n\ntask build_init_api, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/init_api/nif.so\")\n  switch(\"define\", \"nimlerWrapperLoadInfo=123\")\n  setCommand(\"compile\", \"tests/init_api/nif\")\n\ntask test_init_api, \"run test\":\n  exec(\"elixir -r tests/init_api/NimlerWrapper.ex tests/init_api/test.exs\")\n\ntask build_integration, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/integration/nif.so\")\n  setCommand(\"compile\", \"tests/integration/nif\")\n\ntask test_integration, \"run test\":\n  exec(\"elixir -r tests/integration/NimlerWrapper.ex tests/integration/test.exs\")\n\ntask build_codec, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/codec/nif.so\")\n  setCommand(\"compile\", \"tests/codec/nif\")\n\ntask test_codec, \"run test\":\n  exec(\"elixir -r tests/codec/NimlerWrapper.ex tests/codec/test.exs\")\n\ntask build_resource, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/resource/nif.so\")\n  setCommand(\"compile\", \"tests/resource/nif\")\n\ntask test_resource, \"run test\":\n  exec(\"elixir -r tests/resource/NimlerWrapper.ex tests/resource/test.exs\")\n\ntask build_init_resource, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/init_resource/nif.so\")\n  setCommand(\"compile\", \"tests/init_resource/nif\")\n\ntask test_init_resource, \"run test\":\n  exec(\"elixir -r tests/init_resource/NimlerWrapper.ex tests/init_resource/test.exs\")\n\ntask build_dirty_nif, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/dirty_nif/nif.so\")\n  setCommand(\"compile\", \"tests/dirty_nif/nif\")\n\ntask test_dirty_nif, \"run test\":\n  exec(\"elixir -r tests/dirty_nif/NimlerWrapper.ex tests/dirty_nif/test.exs\")\n\ntask build_timeslice, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/timeslice/nif.so\")\n  setCommand(\"compile\", \"tests/timeslice/nif\")\n\ntask test_timeslice, \"run test\":\n  exec(\"elixir -r tests/timeslice/NimlerWrapper.ex tests/timeslice/test.exs\")\n\ntask build_message, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/message/nif.so\")\n  setCommand(\"compile\", \"tests/message/nif\")\n\ntask test_message, \"run test\":\n  exec(\"elixir -r tests/message/NimlerWrapper.ex tests/message/test.exs\")\n\ntask build_positional, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/positional/nif.so\")\n  setCommand(\"compile\", \"tests/positional/nif\")\n\ntask test_positional, \"run test\":\n  exec(\"elixir -r tests/positional/NimlerWrapper.ex tests/positional/test.exs\")\n\ntask run_init_api, \"run test\":\n  exec(\"nimble build_init_api\")\n  exec(\"nimble test_init_api\")\ntask run_integration, \"run test\":\n  exec(\"nimble build_integration\")\n  exec(\"nimble test_integration\")\ntask run_codec, \"run test\":\n  exec(\"nimble build_codec\")\n  exec(\"nimble test_codec\")\ntask run_dirty_nif, \"run test\":\n  exec(\"nimble build_dirty_nif\")\n  exec(\"nimble test_dirty_nif\")\ntask run_init_resource, \"run test\":\n  exec(\"nimble build_init_resource\")\n  exec(\"nimble test_init_resource\")\ntask run_resource, \"run test\":\n  exec(\"nimble build_resource\")\n  exec(\"nimble test_resource\")\ntask run_timeslice, \"run test\":\n  exec(\"nimble build_timeslice\")\n  exec(\"nimble test_timeslice\")\ntask run_message, \"run test\":\n  exec(\"nimble build_message\")\n  exec(\"nimble test_message\")\ntask run_positional, \"run test\":\n  exec(\"nimble build_positional\")\n  exec(\"nimble test_positional\")\n",
"https://raw.githubusercontent.com/iffy/nim-keyring/master/keyring.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Matt Haggard\"\ndescription   = \"Cross-platform OS keyring interface\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nwhen defined(windows):\n  requires \"winim >= 3.2.4\"\nwhen defined(linux):\n  requires \"dbus >= 0.0.1\"\n",
"https://github.com/tormund/news": "# Package\n\nversion       = \"0.5\"\nauthor        = \"Andre von Houck, Volodymyr Melnychuk\"\ndescription   = \"Simple WebSocket library for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/2KAbhishek/nimfcuk/master/nimfcuk.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Abhishek Keshri\"\ndescription   = \"A brainfuck interpreter & compiler implemented in nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"nimfcuk\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"docopt >= 0.6.8\"\n",
"https://github.com/superfunc/maybe": "# Package\n\nversion = \"2.2\"\nauthor = \"superfunc\"\ndescription = \"A maybe type for nim.\"\nlicense = \"BSD\"\nsrcDir = \"src\"\nskipDirs = @[\"examples\", \"tests\"]\n\n# Deps\n\nrequires \"nim >= 0.9.6\"\n",
"https://github.com/lmariscal/owo": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Leonardo Mariscal\"\ndescription   = \"OwO text convewtew fow Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/PMunch/strslice/master/strslice.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Efficient string slices that works on a shared underlying string instead of copying\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/PMunch/jsonschema": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Schema verification of JSON data\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"ast_pattern_matching\"\n",
"https://github.com/SolitudeSF/masterpassword": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Master Password algorithm implementation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"nimcrypto#a065c1741836462762d18d2fced1fedd46095b02\"\n",
"https://raw.githubusercontent.com/yglukhov/sound/master/sound.nimble": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Cross-platform sound mixer\"\nlicense       = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.10.0\"\nrequires \"jnim\"\nrequires \"https://github.com/yglukhov/async_http_request\"\nrequires \"jsbind\"\nrequires \"https://github.com/yglukhov/android\"\n",
"https://raw.githubusercontent.com/inv2004/kdb_nim/master/kdb.nimble": "# Package\n\nversion       = \"0.7.0\"\nauthor        = \"inv2004\"\ndescription   = \"Nim structs to work with Kdb in type-safe manner and low-level Nim to Kdb bindings\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n# bin           = @[\"main\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"terminaltables >= 0.1.1\"\nrequires \"uuids >= 0.1.10\"\n",
"https://github.com/genotrance/nimdeps": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"genotrance\"\ndescription   = \"Nim library to bundle dependency files into executable\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\ntask docs, \"Generate docs\":\n  exec \"nim doc -o:build --project --index:on nimdeps.nim\"\n  if \"--publish\" in commandLineParams:\n    exec \"cd build && ghp-import --no-jekyll -fp .\"\n",
"https://raw.githubusercontent.com/treeform/slappy/master/slappy.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"treeform\"\ndescription   = \"3d sound API\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"openal >= 0.1.0\"\nrequires \"vmath >= 0.3.1\"\nrequires \"supersnappy >= 1.0.0\"\n",
"https://github.com/FedericoCeratto/nim-fswatch": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"fswatch library wrapper\"\nlicense       = \"GPL-3.0\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/genotrance/nimzbar": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"genotrance\"\ndescription   = \"zbar wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.5.0\"\n\nvar\n  name = \"nimzbar\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif defined(MacOSX):\n  raise newException(Exception, \"Install failed, package is not supported on MacOSX\")\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/genotrance/snip/master/snip.nimble": "# Package\n\nversion     = \"0.2.3\"\nauthor      = \"genotrance\"\ndescription = \"Text editor to speed up testing code snippets\"\nlicense     = \"MIT\"\n\nbin = @[\"snip\"]\nsrcDir = \"src\"\nskipDirs = @[\"snip\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.3\"\n\ntask release, \"Build release binary\":\n  exec \"nim c -d:release -o:snip -d:VERSION=v\" & version & \" --opt:size src/snip.nim\"\n  exec \"sleep 1\"\n  exec \"strip -s snip.exe\"\n  exec \"upx --best snip.exe\"\n\ntask key, \"Build key\":\n  exec \"nim c -o:key src/snip/key.nim\"\n\ntask buildmap, \"Build buildmap\":\n  exec \"nim c -o:buildmap src/snip/buildmap.nim\"\n\ntask test, \"Test snip\":\n  exec \"nim c tests/sniptest.nim\"\n",
"https://github.com/KeepCoolWithCoolidge/asciigraph": "# Package\n\nversion = \"0.1.0\"\nauthor = \"KeepCoolWithCoolidge\"\ndescription = \"Console ascii line charts in pure nim\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\ntask test, \"run tests\":\n  configForTests()\n  setCommand \"c\", \"tests/test.nim\"\n",
"https://github.com/treeform/chrono": "# Package\nversion       = \"0.2.0\"\nauthor        = \"Andre von Houck\"\ndescription   = \"Calendars, Timestamps and Timezones utilities.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\nskipDirs = @[\"tests\", \"tools\"]\n\ntask generate, \"Generate timezone bins from raw data\":\n  exec \"nim c -r tools/generate all\"\n\ntask docs, \"Generate docs\":\n  exec \"nim doc -o:docs/index.html src/chrono.nim\"\n",
"https://github.com/apense/nimfuzz": "[Package]\nname          = \"nimfuzz\"\nversion       = \"1.3.0\"\nauthor        = \"Jonathan Edwards\"\ndescription   = \"Simple and compact Nim fuzzing library\"\nlicense       = \"Apache License 2.0\"\nbin = \"nimfuzz\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/PMunch/getmac/master/getmac.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"PMunch\"\ndescription   = \"A package to get the MAC address of a local IP address\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"optionsutils >= 1.0.0\"\n",
"https://raw.githubusercontent.com/nim-lang/iup/master/iup.nimble": "[Package]\nname          = \"iup\"\nversion       = \"3.0.0\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"Nim wrapper for IUP\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"",
"https://github.com/rspeer/wiki2text.git": "[Package]\nname          = \"wiki2text\"\nversion       = \"0.2.1\"\nauthor        = \"Rob Speer\"\ndescription   = \"Quickly extracts natural-language text from a MediaWiki XML file.\"\nlicense       = \"MIT\"\nbin           = \"wiki2text\"\nSkipExt       = \"nim\"\nSkipFiles     = \"Makefile\"\n\n[Deps]\nRequires: \"nim >= 0.11\"\n",
"https://github.com/halonium/halonium": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"A browser automation library written in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"halonium\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"tempfile >= 0.1.7\"\nrequires \"uuids >= 0.1.10\"\nrequires \"zip >= 0.3.1\"\nrequires \"fusion >= 1.0.0\"\n",
"https://raw.githubusercontent.com/irskep/BearLibTerminal-Nim/master/bearlibterminal.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Steve Landey (irskep)\"\ndescription   = \"Wrapper for the C[++] library BearLibTerminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-unsplash/master/unsplash.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Unsplash API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/JeffersonLab/serializetools": "# Package\nversion       = \"1.16.2\"\nauthor        = \"Robert Edwards\"\ndescription   = \"Support for serialization of objects\"\nlicense       = \"MIT\"\n#srcDir        = \"serializetools\"\n#installDirs   = @[\"src\", \"tests\", \"docs\"]\nskipDirs = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\n# Builds\ntask test, \"Run the test suite\":\n  exec \"nim c -r tests/test_xml\"\n  exec \"nim c -r tests/test_binary\"\n\ntask docgen, \"Generate the documentation\":\n  exec \"nim doc2 --out:docs/serializexml.html serializetools/serializexml.nim\"\n  exec \"nim doc2 --out:docs/serializebin.html serializetools/serializebin.nim\"\n\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-usagov/master/usagov.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"USA Code.Gov MultiSync API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/ruivieira/nim-slimdown/master/slimdown.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Rui Vieira\"\ndescription   = \"Nim module that converts Markdown text to HTML using only regular expressions. Based on jbroadway's Slimdown.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.3\"\n\nbin = @[\"slimdown\"]\n",
"https://raw.githubusercontent.com/bunkford/barcode/master/barcode.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"Nim barcode library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires: \"nim >= 1.0.0\"",
"https://raw.githubusercontent.com/Skrylar/skEasing/master/skEasing.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Skrylar\"\ndescription   = \"A collection of easing curves for animation purposes.\"\nlicense       = \"BSD\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n",
"https://raw.githubusercontent.com/status-im/nim-serialization/master/serialization.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"serialization\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A modern and extensible serialization framework for Nim\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"faststreams\",\n         \"stew\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r --threads:off tests/test_all\"\n  exec \"nim c -r --threads:on tests/test_all\"\n",
"https://github.com/BarrOff/roots": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"BarrOff\"\ndescription   = \"Root finding functions for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/genotrance/tissue/master/tissue.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"genotrance\"\ndescription   = \"Test failing snippets from Nim's issues\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\nbin = @[\"tissue\"]\n",
"https://github.com/xflywind/ioselectors": "# Package\n\nversion       = \"0.1.8\"\nauthor        = \"flywind\"\ndescription   = \"Selectors extension.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"wepoll >= 0.1.0\"\n\ntask tests, \"Tests all\":\n  exec \"testament all\"\n",
"https://github.com/2vg/mofuw": "# Package\n\nversion       = \"2.0.0\"\nauthor        = \"2vg\"\ndescription   = \"more faster, ultra performance webserver\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"images\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"https://github.com/2vg/mofuparser\"\nrequires \"https://github.com/2vg/mofuhttputils\"",
"https://raw.githubusercontent.com/halonium/halonium/master/halonium.nimble": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"A browser automation library written in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"halonium\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"tempfile >= 0.1.7\"\nrequires \"uuids >= 0.1.10\"\nrequires \"zip >= 0.3.1\"\nrequires \"fusion >= 1.0.0\"\n",
"https://github.com/nim-lang/expat": "[Package]\r\nname          = \"expat\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Expat wrapper for Nim\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://github.com/icyphox/fab": "# Package\n\nversion       = \"0.4.3\"\nauthor        = \"Anirudh\"\ndescription   = \"Print fabulously in your terminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/genotrance/shared": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"genotrance\"\ndescription   = \"Nim library for shared types\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\nimport strformat\n\nconst htmldocsDir = \"build/htmldocs\"\n\nwhen (NimMajor, NimMinor, NimPatch) >= (0, 19, 9):\n  import os\n  proc getNimRootDir(): string =\n    fmt\"{currentSourcePath}\".parentDir.parentDir.parentDir\n\nproc runNimDoc() =\n  exec &\"nim doc --path:. -o:{htmldocsDir} --project --index:on shared/seq.nim\"\n  exec &\"nim doc --path:. -o:{htmldocsDir} --project --index:on shared/string.nim\"\n  exec &\"nim buildIndex -o:{htmldocsDir}/theindex.html {htmldocsDir}\"\n  when declared(getNimRootDir):\n    exec &\"nim js -o:{htmldocsDir}/dochack.js {getNimRootDir()}/tools/dochack/dochack.nim\"\n\ntask docs, \"Generate docs\":\n  runNimDoc()\n\ntask docsPublish, \"Generate and publish docs\":\n  # Uses: pip install ghp-import\n  runNimDoc()\n  exec &\"ghp-import --no-jekyll -fp {htmldocsDir}\"",
"https://github.com/planetis-m/jscanvas": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Antonis\"\ndescription   = \"A Nim wrapper for the Canvas API\"\nlicense       = \"MIT\"\n# srcDir        = \"src\"\n\nbackend       = \"js\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.9\"\n",
"https://github.com/disruptek/bump": "version = \"1.8.28\"\nauthor = \"disruptek\"\ndescription = \"a tiny tool to bump nimble versions\"\nlicense = \"MIT\"\n\nrequires \"https://github.com/disruptek/cutelog >= 1.1.2 & < 2.0.0\"\nwhen not defined(release):\n  requires \"https://github.com/disruptek/balls >= 2.0.0 & < 3.0.0\"\n\nbin = @[\"bump\"]\n\nwhen (NimMajor, NimMinor) >= (1, 3):\n  requires \"cligen >= 1.2.2 & < 2.0.0\"\nelse:\n  requires \"cligen >= 0.9.46 & < 2.0.0\"\n\ntask test, \"run tests for ci\":\n  when defined(windows):\n    exec \"balls.cmd\"\n  else:\n    exec findExe\"balls\"\n",
"https://github.com/ThomasTJdev/nim_homeassistant": "# Package\nversion       = \"0.4.5\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Nim Home Assistant\"\nlicense       = \"GPLv3\"\nbin           = @[\"nimha\"]\nskipDirs      = @[\"private\"]\ninstallDirs   = @[\"config\", \"public\", \"nimhapkg\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.0.4\"\nrequires \"jester 0.4.3\"\nrequires \"httpbeast 0.2.2\"\nrequires \"recaptcha >= 1.0.2\"\nrequires \"bcrypt >= 0.2.1\"\nrequires \"multicast 0.1.4\"\nrequires \"websocket 0.4.1\"\nrequires \"wiringPiNim >= 0.1.0\"\nrequires \"xiaomi >= 0.1.4\"\n\n\nimport distros\n\ntask setup, \"Setup started\":\n  if detectOs(Windows):\n    echo \"Cannot run on Windows\"\n    quit()\n\nbefore install:\n  setupTask()\n\nafter install:\n  echo \"Development: Copy config/nimha_default.cfg to config/nimha_dev.cfg\\n\"\n  echo \"Production:  Copy config/nimha_default.cfg to /etc/nimha/nimha.cfg\\n\"",
"https://github.com/andreaferretti/lda": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Latent Dirichlet allocation\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"run tests\":\n  --path: \".\"\n  --run\n  setCommand \"c\", \"tests/test.nim\"\n\ntask benchmark, \"run benchmarks\":\n  --path: \".\"\n  --run\n  --define: release\n  setCommand \"c\", \"tests/benchmark.nim\"\n\ntask toy, \"run toy example\":\n  --path: \".\"\n  --run\n  --define: release\n  --gc: markAndSweep\n  setCommand \"c\", \"examples/toy.nim\"\n\ntask pubmed, \"run pubmed example\":\n  --path: \".\"\n  --run\n  --define: release\n  setCommand \"c\", \"examples/pubmed.nim\"",
"https://api.github.com/repos/rnentjes/nim-ludens/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"ed6ac16a63a69f3c2e7ee6fbfb209ce64c75f4c1\",\"size\":49,\"url\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/rnentjes/nim-ludens/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/blobs/ed6ac16a63a69f3c2e7ee6fbfb209ce64c75f4c1\",\"download_url\":\"https://raw.githubusercontent.com/rnentjes/nim-ludens/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/blobs/ed6ac16a63a69f3c2e7ee6fbfb209ce64c75f4c1\",\"html\":\"https://github.com/rnentjes/nim-ludens/blob/master/.gitignore\"}},{\"name\":\".idea\",\"path\":\".idea\",\"sha\":\"8fca1e385a3b8d243cc4ca4288f814eb3acbc20d\",\"size\":0,\"url\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/.idea?ref=master\",\"html_url\":\"https://github.com/rnentjes/nim-ludens/tree/master/.idea\",\"git_url\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/trees/8fca1e385a3b8d243cc4ca4288f814eb3acbc20d\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/.idea?ref=master\",\"git\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/trees/8fca1e385a3b8d243cc4ca4288f814eb3acbc20d\",\"html\":\"https://github.com/rnentjes/nim-ludens/tree/master/.idea\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"420f78696fbc3d7cfee991e1092eaf9aba5c70e7\",\"size\":510,\"url\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/README.md?ref=master\",\"html_url\":\"https://github.com/rnentjes/nim-ludens/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/blobs/420f78696fbc3d7cfee991e1092eaf9aba5c70e7\",\"download_url\":\"https://raw.githubusercontent.com/rnentjes/nim-ludens/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/blobs/420f78696fbc3d7cfee991e1092eaf9aba5c70e7\",\"html\":\"https://github.com/rnentjes/nim-ludens/blob/master/README.md\"}},{\"name\":\"dlls\",\"path\":\"dlls\",\"sha\":\"16b611d94ea8a8cc9cbb532e35606e295444b235\",\"size\":0,\"url\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/dlls?ref=master\",\"html_url\":\"https://github.com/rnentjes/nim-ludens/tree/master/dlls\",\"git_url\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/trees/16b611d94ea8a8cc9cbb532e35606e295444b235\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/dlls?ref=master\",\"git\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/trees/16b611d94ea8a8cc9cbb532e35606e295444b235\",\"html\":\"https://github.com/rnentjes/nim-ludens/tree/master/dlls\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"fab22311d43d801915d36ae6c263863d76c57152\",\"size\":0,\"url\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/examples?ref=master\",\"html_url\":\"https://github.com/rnentjes/nim-ludens/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/trees/fab22311d43d801915d36ae6c263863d76c57152\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/trees/fab22311d43d801915d36ae6c263863d76c57152\",\"html\":\"https://github.com/rnentjes/nim-ludens/tree/master/examples\"}},{\"name\":\"lib\",\"path\":\"lib\",\"sha\":\"13c1ffe96207165db4885b9499b73eb3a673c5cc\",\"size\":0,\"url\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/lib?ref=master\",\"html_url\":\"https://github.com/rnentjes/nim-ludens/tree/master/lib\",\"git_url\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/trees/13c1ffe96207165db4885b9499b73eb3a673c5cc\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/lib?ref=master\",\"git\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/trees/13c1ffe96207165db4885b9499b73eb3a673c5cc\",\"html\":\"https://github.com/rnentjes/nim-ludens/tree/master/lib\"}},{\"name\":\"nim-ludens.babel\",\"path\":\"nim-ludens.babel\",\"sha\":\"f2978cb4b127541889b15411cbdf495446cdfef4\",\"size\":162,\"url\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/nim-ludens.babel?ref=master\",\"html_url\":\"https://github.com/rnentjes/nim-ludens/blob/master/nim-ludens.babel\",\"git_url\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/blobs/f2978cb4b127541889b15411cbdf495446cdfef4\",\"download_url\":\"https://raw.githubusercontent.com/rnentjes/nim-ludens/master/nim-ludens.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/nim-ludens.babel?ref=master\",\"git\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/blobs/f2978cb4b127541889b15411cbdf495446cdfef4\",\"html\":\"https://github.com/rnentjes/nim-ludens/blob/master/nim-ludens.babel\"}},{\"name\":\"nim-ludens.iml\",\"path\":\"nim-ludens.iml\",\"sha\":\"906263ee55bb75e66375178967a92ccfdd6cee87\",\"size\":425,\"url\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/nim-ludens.iml?ref=master\",\"html_url\":\"https://github.com/rnentjes/nim-ludens/blob/master/nim-ludens.iml\",\"git_url\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/blobs/906263ee55bb75e66375178967a92ccfdd6cee87\",\"download_url\":\"https://raw.githubusercontent.com/rnentjes/nim-ludens/master/nim-ludens.iml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rnentjes/nim-ludens/contents/nim-ludens.iml?ref=master\",\"git\":\"https://api.github.com/repos/rnentjes/nim-ludens/git/blobs/906263ee55bb75e66375178967a92ccfdd6cee87\",\"html\":\"https://github.com/rnentjes/nim-ludens/blob/master/nim-ludens.iml\"}}]",
"https://raw.githubusercontent.com/Skrylar/skInterpolate/master/skinterpolate.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joshua Cearley\"\ndescription   = \"Interpolation routines for data processing and animation.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/luked99/libevdev.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Luke Diamand\"\ndescription   = \"Wrapper for <linux/fb.h> framebuffer ioctls\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\"\n\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/tester\"\n",
"https://github.com/status-im/nim-blscurve": "packageName   = \"blscurve\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"BLS381-12 Curve implementation\"\nlicense       = \"Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 1.0.4\",\n         \"nimcrypto\",\n         \"stew\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by BLS_TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"BLS_TEST_LANG\":\n    lang = getEnv\"BLS_TEST_LANG\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --outdir:build -r --hints:off --warnings:off \" & path\n\n### tasks\ntask test, \"Run all tests\":\n  # Debug - test intermediate computations\n  # test \"\", \"blscurve/miracl/hkdf.nim\"\n  # test \"\", \"blscurve/miracl/draft_v5/hash_to_curve_draft_v5.nim\"\n  # test \"\", \"blscurve/miracl/hash_to_curve.nim\"\n\n  # Internal BLS API - IETF standard\n  # test \"\", \"tests/hash_to_curve_v7.nim\"\n\n  # Public BLS API - IETF standard / Ethereum2.0 v1.0.0\n  test \"-d:BLS_FORCE_BACKEND=miracl\", \"tests/eth2_vectors.nim\"\n  # key Derivation - EIP 2333\n  test \"-d:BLS_FORCE_BACKEND=miracl\", \"tests/eip2333_key_derivation.nim\"\n  # Secret key to pubkey\n  test \"-d:BLS_FORCE_BACKEND=miracl\", \"tests/priv_to_pub.nim\"\n\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/eth2_vectors.nim\"\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/eip2333_key_derivation.nim\"\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/priv_to_pub.nim\"\n\n  # Internal SHA256\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/blst_sha256.nim\"\n\n  # batch verification\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/t_batch_verifier.nim\"\n\n  # No OpenMP in default Clang on Mac\n  when not defined(macosx):\n    # Parallel batch verification\n    test \"-d:openmp -d:BLS_FORCE_BACKEND=blst\", \"tests/t_batch_verifier.nim\"\n\n  # Ensure benchmarks stay relevant.\n  # TODO, solve \"inconsistent operand constraints\"\n  # on 32-bit for asm volatile, this might be due to\n  # incorrect RDTSC call in benchmark\n  when defined(arm64) or defined(amd64):\n    when not defined(macosx):\n      exec \"nim c -d:openmp -d:BLS_FORCE_BACKEND=miracl -d:danger --outdir:build -r\" &\n            \" --verbosity:0 --hints:off --warnings:off\" &\n            \" benchmarks/bench_all.nim\"\n\n      exec \"nim c -d:openmp -d:BLS_FORCE_BACKEND=blst -d:danger --outdir:build -r\" &\n            \" --verbosity:0 --hints:off --warnings:off\" &\n            \" benchmarks/bench_all.nim\"\n    else:\n      exec \"nim c -d:BLS_FORCE_BACKEND=miracl -d:danger --outdir:build -r\" &\n            \" --verbosity:0 --hints:off --warnings:off\" &\n            \" benchmarks/bench_all.nim\"\n\n      exec \"nim c -d:BLS_FORCE_BACKEND=blst -d:danger --outdir:build -r\" &\n            \" --verbosity:0 --hints:off --warnings:off\" &\n            \" benchmarks/bench_all.nim\"\n\ntask bench, \"Run benchmarks\":\n  if not dirExists \"build\":\n    mkDir \"build\"\n\n  exec \"nim c -d:openmp -d:danger --outdir:build -r\" &\n         \" --verbosity:0 --hints:off --warnings:off\" &\n         \" benchmarks/bench_all.nim\"\n",
"https://raw.githubusercontent.com/PMunch/notifishower/master/notifishower.nimble": "# Package\n\nversion       = \"0.7.0\"\nauthor        = \"PMunch\"\ndescription   = \"Simple program to show notifications with images and actions around the screen\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"notifishower\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"imlib2\"\nrequires \"https://github.com/PMunch/x11#monitors\"\nrequires \"npeg\"\nrequires \"kiwi\"\nrequires \"termstyle\"\n#requires \"x11\"\n",
"https://raw.githubusercontent.com/liquid600pgm/rapid/master/rapid.nimble": "#~~\n# Package\n#~~\n\nversion =\n  \"2020.1\"\nauthor =\n  \"iLiquid\"\ndescription =\n  \"A game engine for rapid development and easy prototyping\"\nlicense =\n  \"MIT\"\nsrcDir =\n  \"src\"\n\n#~~\n# Dependencies\n#~~\n\nrequires \"nim >= 0.20.0\"\nrequires \"aglet >= 0.4.2\"\nrequires \"stbimage >= 2.5\"\n",
"https://raw.githubusercontent.com/tulayang/httpkit/master/httpkit.nimble": "# Package\nversion = \"0.1.1\"\nauthor = \"Wang Tong\"\ndescription = \"An efficient HTTP parser written in pure nim. Help you to write HTTP services or clients via TCP, UDP, or even Unix Domain socket, etc.\"\nlicense = \"MIT\"\nskipFiles = @[\"TODO.md\"]\n\n# Dependencies\nrequires \"nim >= 0.17.0\"",
"https://raw.githubusercontent.com/jasonlu7/pokereval/master/pokereval.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"jasonlu7\"\ndescription   = \"A poker hand evaluator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/andreaferretti/nimblas": "version       = \"0.2.2\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"BLAS interface for Nim\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.19.9\"\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\ntask test, \"run NimBLAS tests\":\n  configForTests()\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testopenblas, \"run NimBLAS tests with openBLAS\":\n  configForTests()\n  --define:\"blas=openblas\"\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testatlas, \"run NimBLAS tests with ATLAS\":\n  configForTests()\n  --define:\"blas=cblas\"\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testmkl, \"run NimBLAS tests with MKL\":\n  configForTests()\n  --define:\"blas=mkl_intel_lp64\"\n  --clibdir: \"/opt/intel/mkl/lib/intel64\"\n  --passl: \"/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  --passl: \"-lmkl_core\"\n  --passl: \"-lmkl_sequential\"\n  --passl: \"-lpthread\"\n  --passl: \"-lm\"\n  --dynlibOverride:mkl_intel_lp64\n  setCommand \"c\", \"tests/test.nim\"\n\ntask testmklthreaded, \"run NimBLAS tests with MKL threaded\":\n  configForTests()\n  --define: \"blas=mkl_intel_lp64\"\n  --clibdir: \"/opt/intel/mkl/lib/intel64\"\n  --passl: \"/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  --passl: \"-lmkl_core\"\n  --passl: \"-lmkl_gnu_thread\"\n  --passl: \"-lgomp\"\n  --passl: \"-lm\"\n  --dynlibOverride:mkl_intel_lp64\n  setCommand \"c\", \"tests/test.nim\"\n\ntask tests, \"run tests with all BLAS versions\":\n  exec(\"nimble test\")\n  exec(\"nimble testopenblas\")\n  exec(\"nimble testatlas\")\n  exec(\"nimble testmkl\")\n  exec(\"nimble testmklthreaded\")",
"https://github.com/guzba/noisy": "version     = \"0.4.4\"\nauthor      = \"Ryan Oldenburg\"\ndescription = \"Nim implementation of various noise types.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.1.0\"\nrequires \"nimsimd >= 0.4.3\"\n",
"https://raw.githubusercontent.com/jiro4989/ski/master/ski.nimble": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"jiro4989\"\ndescription   = \"ski is library for SKI combinator.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\ntask docs, \"Generate documents\":\n  exec \"nimble doc src/ski.nim -o:docs/ski.html\"\n\ntask examples, \"Run example programs\":\n  withDir \"examples/calc_args\":\n    exec \"nim c -r main.nim Sxyz\"\n  exec \"echo ---------------------\"\n  withDir \"examples/read_file\":\n    exec \"nim c -r main.nim\"\n\ntask ci, \"Run CI tasks\":\n  exec \"nimble test\"\n  exec \"nimble docs\"\n  exec \"nimble examples\"\n\ntask buildjs, \"Build JS library\":\n  exec \"nimble js -o:docs/js/ski_js.js src/ski_js.nim\"\n",
"https://github.com/ethosa/nimage": "[Package]\r\nname = \"nimage\"\r\nversion = \"0.0.5\"\r\ndescription = \"The image management library written in Nim.\"\r\nlicense = \"MIT\"\r\nauthor = \"Ethosa\"\r\nsrcDir = \"scr\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/juancarlospaco/ballena-itcher/master/ballena_itcher.nimble": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Flash ISO images to SD cards & USB drives, safely and easily.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"ballena_itcher\"]\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/status-im/nim-ngtcp2/master/ngtcp2.nimble": "packageName = \"ngtcp2\"\nversion = \"0.32.0\"\nauthor = \"Status Research & Development GmbH\"\ndescription = \"Nim wrapper around the ngtcp2 library\"\nlicense = \"MIT\"\ninstallDirs = @[\"sources\", \"build\"]\ninstallFiles = @[\"ngtcp2.nim\"]\n\nrequires \"nim >= 1.2.6\"\n",
"https://github.com/euantorano/tempdir.nim": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Euan T\"\ndescription   = \"A Nim library to create and manage temporary directories.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc --index:on -o:docs/tempdir.html src/tempdir.nim\"\n",
"https://github.com/Carpall/nobject": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"Carpall\"\ndescription   = \"A partially compile and runtime evaluated object, inspired to .net object\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n",
"https://github.com/Parashurama/fontconfig": "[Package]\nname = \"fontconfig\"\nversion = \"0.1.0\"\nauthor = \"Parashurama\"\ndescription = \"Low level wrapper for the fontconfig library.\"\nlicense = \"Fontconfig Licence.\"\n\nInstallFiles = \"fontconfig.nim\"\n\n",
"https://raw.githubusercontent.com/gabbhack/deser_json/master/deser_json.nimble": "import strformat\n\n# Package\n\nversion       = \"0.2.1\"\nauthor        = \"gabbhack\"\ndescription   = \"JSON-Binding for deser\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 1.4.2, jsmn >= 0.2, deser >= 0.1.3\"\n\n# Tasks\nimport strformat, strutils, sequtils\n\nproc recursiveListFiles(dir: string, l: var seq[string]) =\n  for i in listDirs(dir):\n    recursiveListFiles(i, l)\n\n  for i in listFiles(dir):\n    if i.endsWith(\".nim\"):\n      l.add(i)\n\nproc recursiveListFiles(dir: string): seq[string] =\n  recursiveListFiles(dir, result)\n\ntask pretty, \"Pretty source code\":\n  echo \"Pretty deser_json.nim\"\n  exec \"nimpretty deser_json --indent:2\"\n  for i in concat(recursiveListFiles(\"deser_json\"), recursiveListFiles(\"tests\")):\n    echo fmt\"Pretty {i}\"\n    exec fmt\"nimpretty {i} --indent:2\"\n\ntask test, \"Run tests\":\n  exec \"\"\"testament p \"tests/*.nim\"\"\"\"\n\ntask docs, \"Generate docs\":\n  rmDir \"docs\"\n  exec \"nimble doc2 --outdir:docs --project --git.url:https://github.com/gabbhack/deser_json --git.commit:master --index:on deser_json\"\n  exec \"testament html\"\n  mvFile(\"testresults.html\", \"docs/testresults.html\")\n",
"https://github.com/juancarlospaco/nim-chonker": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Arch Linux Pacman Optimizer\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"chonker\"]\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/SolitudeSF/notification/master/notification.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Desktop notifications\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\", \"https://github.com/SolitudeSF/nim-dbus#537dee6dd70bbe5a85014b9293e3c0389e35f150\", \"imageman >= 0.7.4\"\n",
"https://github.com/nim-lang/redis": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Official redis client for Nim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.11.0\"\n\ntask docs, \"Build documentation\":\n  exec \"nim doc --index:on -o:docs/redis.html src/redis.nim\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/main.nim\"\n",
"https://github.com/elddy/SMB-Nim": "# Package\n\nversion     = \"1.0.0\"\nauthor      = \"elddy, kevrool\"\ndescription = \"Nim-SMBExec - SMBExec implementation in Nim\"\nlicense     = \"GPL-3.0\"\nskipDirs    = @[\"Examples\"]\n\n# Deps\nrequires \"nim >= 1.2.0\", \"hashlib\", \"hmac\", \"regex\"",
"https://github.com/xflywind/fsnotify": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"A file system monitor in Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"timerwheel >= 0.1.2\"\nrequires \"xio >= 0.1.0\"\n\ntask tests, \"Run all tests\":\n  exec \"testament all\"\n",
"https://github.com/j-a-s-d/webrod": "version     = \"0.3.0\"\nauthor      = \"Javier Santo Domingo\"\ndescription = \"webrod\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 1.0.6\"\nrequires \"xam >= 0.1.0\"\n\n",
"https://raw.githubusercontent.com/Cu7ious/nim-battery-widget/master/battery_widget.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"sergii.garkusha\"\ndescription   = \"Battery widget for command prompt. Written in Nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"battery_widget\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/twist-vector/nim-stopwatch/master/nimstopwatch.nimble": "[Package]\nname          = \"nimstopwatch\"\nversion       = \"0.1.0\"\nauthor        = \"Tom Krauss\"\ndescription   = \"Command line stopwatch written in Nim with split / lap support\"\nlicense       = \"Apache2\"\nbin           = \"stopwatch\"\n\n[Deps]\nRequires: \"nim >= 0.12.0\"\n",
"https://github.com/apahl/csvtable": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Axel Pahl\"\ndescription   = \"Nim tools for handling CSV files with an API similar to Python\\'s CSVDictReader and -Writer\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n\nconst\n  module = \"csvtable\"\n\ntask gendoc, \"build the documentation\":\n  echo \"\\nBuilding documentation in doc/\"\n  mkDir \"doc\"\n  let taskCmd = \"nim -o:doc/\" & module & \".html doc \" & module & \".nim\"\n  exec taskCmd\n\ntask test, \"run the tests\":\n  echo \"\\nRunning tests...\"\n  let taskCmd = \"nim -r --verbosity:0 --hints:off c \" & module & \".nim\"\n  exec taskCmd\n  rmFile toExe(module)",
"https://github.com/ba0f3/libssh2.nim": "[Package]\nname          = \"libssh2\"\nversion       = \"0.1.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"Nim wraper for libssh2\"\nlicense       = \"MIT\"\n\nskipDirs      = \"examples\"\n\n[Deps]\nRequires: \"nim >= 1.0.6\"\n",
"https://raw.githubusercontent.com/subsetpark/nim-gmp/master/gmp.nimble": "[Package]\nname          = \"gmp\"\nversion       = \"0.2.5\"\nauthor        = \"Will Szumski\"\ndescription   = \"Wrapper for the GNU Multiple Precision Arithmetic Library (GMP)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nInstallExt    = \"nim\"\n\n[Deps]\nRequires: \"nimrod >= 0.9.4\"\n",
"https://github.com/Vindaar/nimnlopt": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Sebastian Schmidt\"\ndescription   = \"A wrapper of the C library NLOPT for non-linear optimization\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"examples, c_headers\"]\nskipExt       = @[\"nim~\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Runs all tests\":\n  exec \"nim c -r tests/tsimple.nim\"\n",
"https://raw.githubusercontent.com/enthus1ast/nimDbg/master/dbg.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"enthus1ast\"\ndescription   = \"\\\"dbg\\\" template; in debug echo\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.1\"\n\n",
"https://github.com/alehander42/gara": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Alexander Ivanov\"\ndescription   = \"Macro-based pattern matching library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://raw.githubusercontent.com/narimiran/itertools/master/itertools.nimble": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"narimiran\"\ndescription   = \"Itertools for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/MnlPhlp/nimagehide/master/nimagehide.nimble": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"MnlPhlp\"\ndescription   = \"A library to hide data in images. Usable as library or cli tool.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimagehide\"]\n\nbackend       = \"c\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"stb_image >= 2.3\"\nrequires \"cligen >= 0.9.40\"\nrequires \"cli_menu >= 0.2.5\" \n\n# Tasks\nimport os\ntask docs,\"generate docs\":\n  selfExec \"doc2 --project --git.url:https://github.com/MnlPhlp/nimagehide --git.commit:master src/nimagehide.nim\"\n  rmDir(\"docs\")\n  mvDir(\"src/htmldocs\",\"docs\")\n  mvFile(\"docs/nimagehide.html\",\"docs/index.html\")\n",
"https://github.com/andreaferretti/nimcl": "version       = \"0.1.3\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"OpenCL utilities\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"examples\"]\nskipFiles     = @[\"points.json\"]\n\nrequires \"nim >= 0.15.0\", \"opencl >= 1.0\"\n\n\ntemplate dependsOn*(task: untyped): typed =\n  exec \"nimble \" & astToStr(task)\n\nproc addDefaults() =\n  switch(\"cincludes\", \"/usr/local/cuda/targets/x86_64-linux/include\")\n  switch(\"clibdir\", \"/usr/local/cuda/targets/x86_64-linux/lib\")\n  --define: release\n  --path: \".\"\n\ntask info, \"OpenCL info\":\n  addDefaults()\n  --run\n  setCommand \"c\", \"examples/info.nim\"\n\ntask clcompile, \"OpenCL compiler\":\n  addDefaults()\n  setCommand \"c\", \"examples/compile.nim\"\n\ntask vadd, \"run vector add example\":\n  addDefaults()\n  --run\n  setCommand \"c\", \"examples/vadd.nim\"\n\ntask headers, \"compile headers with c2nim\":\n  exec \"c2nim examples/point.h\"\n\ntask kmeans, \"run kmeans example\":\n  dependsOn headers\n  addDefaults()\n  --run\n  setCommand \"c\", \"examples/kmeans.nim\"",
"https://raw.githubusercontent.com/jiro4989/envconfig/master/envconfig.nimble": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"jiro4989\"\ndescription   = \"envconfig provides a function to get config objects from environment variables.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"regex >= 0.13.0\"\n\ntask docs, \"Generate API documents\":\n  exec \"nimble doc -Y --index:on --project --out:docs --hints:off src/envconfig.nim\"\n",
"https://github.com/genotrance/nimtess2": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"genotrance\"\ndescription   = \"Nim wrapper for libtess2\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimtess2\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://github.com/johnnovak/nim-osdialog": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"John Novak <john@johnnovak.net>\"\ndescription   = \"Nim wrapper for the osdialog library\"\nlicense       = \"WTFPL\"\n\nskipDirs = @[\"examples\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n\ntask examples, \"Compiles the examples\":\n  exec \"nim c examples/test.nim\"\n",
"https://raw.githubusercontent.com/skyforce77/ctrulib-nim/master/ctrulib.nimble": "[Package]\nname          = \"ctrulib\"\nversion       = \"0.1.0\"\nauthor        = \"Skyforce77\"\ndescription   = \"Nintendo 3ds ctrulib wrapper\"\nlicense       = \"GPLv2\"\n\n[Deps]\nRequires: \"nim >= 0.10.0\"\n",
"https://github.com/treeform/vmath": "version       = \"0.4.1\"\nauthor        = \"treeform\"\ndescription   = \"Math vector library for graphical things.\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/haxscramper/nimtrs": "version       = \"0.2.13\"\nauthor        = \"haxscramper\"\ndescription   = \"Nim term rewriting system\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.4\"\nrequires \"hmisc\", \"hdrawing\", \"hpprint\", \"hnimast\"\n",
"https://github.com/Hydra820/NimpleHTTPServer": "# Package\n\nversion     = \"1.0.0\"\nauthor      = \"Eldar David\"\ndescription = \"SimpleHTTPServer module based on net sockets\"\nlicense     = \"HYDRA\"\n\n# Deps\nrequires \"nim >= 1.0.0\"",
"https://github.com/isthisnagee/hsluv-nim": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"isthisnagee\"\ndescription   = \"A port of HSLuv, a human friendly alternative to HSL.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/andreaferretti/cello": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"String algorithms with succinct data structures\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\", \"benchmarks\", \"img\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\", \"spills >= 0.1.3\"\n\ntask test, \"run cello tests\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"tests/test.nim\"\n\ntask tests, \"run cello tests\":\n  setCommand \"test\"\n\ntask benchmarkRRR, \"benchmark RRR bit array\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkRRR\"\n\ntask benchmarkWT, \"benchmark wavelet tree\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkWT\"\n\ntask benchmarkBW, \"benchmark Burrows-Wheeler transform\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkBW\"\n\ntask benchmarkFM, \"benchmark FM indices\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkFM\"\n\ntask benchmarkRO, \"benchmark Ratcliff-Obershelp similarity\":\n  withDir \"benchmarks\":\n    exec \"nimble benchmarkRO\"\n\ntask spaceRRR, \"benchmark the space of RRR bit array\":\n  withDir \"benchmarks\":\n    exec \"nimble spaceRRR\"\n\ntask spaceWT, \"benchmark the space of wavelet tree\":\n  withDir \"benchmarks\":\n    exec \"nimble spaceWT\"",
"https://github.com/olliNiinivaara/SQLiteral": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"Olli\"\ndescription   = \"A high level SQLite API for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/xflywind/timeit": "# Package\n\nversion       = \"0.3.6\"\nauthor        = \"flywind\"\ndescription   = \"measuring execution times written in nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"timeit\"]\n\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask tests, \"Run tests\":\n  exec \"nim c -r tests/examples.nim\"\n",
"https://github.com/samdmarshall/libclang-nim": "# Package\nversion       = \"0.59\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"Wrapper for libclang C headers\"\nlicense       = \"BSD 3-Clause\"\n\nsrcDir        = \"src/\"\n\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/danielecook/til-tool": "# Package\n\nversion       = \"0.0.3\"\nauthor        = \"Daniel E. Cook\"\ndescription   = \"til-tool: Today I Learned tool\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"colorize\"\nrequires \"argparse\"\n\nbin = @[\"til\"]\n",
"https://github.com/yglukhov/nimx": "# Package\n\nversion     = \"0.1\"\nauthor      = \"Yuriy Glukhov\"\ndescription = \"GUI framework\"\nlicense     = \"MIT\"\n\n# Directory configuration\ninstallDirs = @[\"nimx\", \"assets\"]\n\n# Dependencies\n\nrequires \"sdl2\"\nrequires \"opengl#head\"\nrequires \"nimsl >= 0.3\"\nrequires \"jnim\" # For android target\nrequires \"nake\"\nrequires \"closure_compiler >= 0.3.1\"\nrequires \"plists\"\nrequires \"variant >= 0.2 & < 0.3\"\nrequires \"kiwi\"\nrequires \"https://github.com/yglukhov/ttf >= 0.2.9 & < 0.3\"\nrequires \"https://github.com/yglukhov/async_http_request\"\nrequires \"jsbind\"\nrequires \"rect_packer\"\nrequires \"https://github.com/yglukhov/android\"\nrequires \"https://github.com/yglukhov/darwin\"\nrequires \"os_files\"\nrequires \"https://github.com/tormund/nester\"\nrequires \"nimwebp\"\n",
"https://github.com/alex-laskin/nim-taglib": "[Package]\nname          = \"taglib\"\nversion       = \"0.1.0\"\nauthor        = \"Alex Laskin\"\ndescription   = \"Thin wrapper over https://taglib.github.io/\"\nlicense       = \"MIT\"\n\n[Deps]\nrequires: \"nim >= 0.14\"\n",
"https://github.com/dom96/httpbeast": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A super-fast epoll-backed and parallel HTTP server.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\n# Test dependencies\n# When https://github.com/cheatfate/asynctools/pull/28 is fixed,\n# change this back to normal asynctools\nrequires \"https://github.com/iffy/asynctools#pr_fix_for_latest\"\n\ntask helloworld, \"Compiles and executes the hello world server.\":\n  exec \"nim c -d:release --gc:boehm -r tests/helloworld\"\n\ntask dispatcher, \"Compiles and executes the dispatcher test server.\":\n  exec \"nim c -d:release --gc:boehm -r tests/dispatcher\"\n\ntask test, \"Runs the test suite.\":\n  exec \"nimble c -y -r tests/tester\"\n",
"https://github.com/Nycto/RBTreeNim": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"Nycto\"\ndescription   = \"Red/Black Tree\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[]\n\n# Deps\n\nrequires \"nim >= 0.11.2\"\n\n",
"https://raw.githubusercontent.com/c-blake/nimp/master/nimp.nimble": "# Package\nversion     = \"0.1.0\"\nauthor      = \"Charles Blake\"\ndescription = \"A package manager that delegates to package authors\"\nlicense     = \"MIT/ISC\"\n\n# Dependencies\nrequires \"nim >= 1.3.7\"\n",
"https://raw.githubusercontent.com/status-im/nim-chronicles/master/chronicles.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"chronicles\"\nversion       = \"0.10.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A crafty implementation of structured logging for Nim\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\"\nrequires \"testutils\"\nrequires \"json_serialization\"\n\ntask test, \"run CPU tests\":\n  when defined(windows):\n    # exec \"cmd.exe /C ntu.cmd test tests\"\n    echo \"`ntu` doesn't work on Windows\"\n  else:\n    exec \"ntu test tests\"\n",
"https://github.com/ba0f3/vmprotect.nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Huy Doan\"\ndescription   = \"Wrapper for VMProtect SDK\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://github.com/PMunch/wxnim": "# Package\r\nversion       = \"0.9\"\r\nauthor        = \"Andreas Rumpf and Peter Munch-Ellingsen\"\r\ndescription   = \"Nim wrapper for wxWidgets\"\r\nlicense       = \"MIT\"\r\n\r\n# Deps\r\nrequires \"nim >= 0.17.0\"\r\n",
"https://github.com/idlewan/nim-uuid": "[package]\nname = \"uuid\"\nversion = \"0.1.0\"\nauthor = \"Erwan Ameil\"\ndescription = \"Wrapper for the UUID library\"\nlicense = \"MIT\"\n\n[deps]\nrequires = \"nimrod >= 0.9.3\"\n",
"https://github.com/yglukhov/gplay": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Upload APK to Google Play\"\nlicense       = \"MIT\"\n\nbin = @[\"gplay\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"jwt\"\nrequires \"cligen\"\n",
"https://raw.githubusercontent.com/misebox/pdba/master/pdba.nimble": "# Package\n\nversion       = \"0.2.4\"\nauthor        = \"misebox\"\ndescription   = \"A postgres DB adapter for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipdirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 1.1.1\"\nrequires \"yaml >= 0.13.1\"\nrequires \"ndb >= 0.19.8\"\n\ntask examples, \"compile and run examples\":\n  exec \"cd examples && docker-compose up -d\"\n  exec \"nim c -r examples/sample_conn.nim\"\n  exec \"nim c -r examples/sample_ddl.nim\"\n  exec \"nim c -r examples/sample_dml.nim\"\n  exec \"cd examples && docker-compose down\"\n",
"https://github.com/stisa/snail": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Stisa\"\ndescription   = \"Simple Naive Algebra for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"docs\",\"tests\"]\n# Dependencies\nrequires \"nim >= 0.17.0\"\n\nrequires \"nimblas\" # Require it even if we may not use it, as nimble doesn't have optional deps for now.\n\nimport ospaths,strutils\n\ntask bench, \"TODO\":\n  echo \"TODO\"\n\ntask tests, \"Runs tests\":\n  withdir \"tests\":\n    for file in listfiles(\".\"):\n      if splitfile(file).ext == \".nim\":\n        exec \"nim c -r --verbosity:0 --hints:off \" & file\n\ntask jstests, \"Builds js tests\":\n  withdir \"tests\":\n    let jsrc = \"<script src=\\\"$1\\\"></script>\"\n    var jslist = \"\"\n    for file in listfiles(\".\"):\n      if splitfile(file).ext == \".nim\":\n        exec \"nim js --verbosity:0 --hints:off -o:\" & file.changefileext(\"js\") & \" \" & file\n        jslist.add(jsrc % [file.changefileext(\"js\")])\n    writefile(\"index.html\", \"<html><body>$1</body></html>\" % [jslist])\n  echo \"DONE - serve /tests with some webserver and load index.html to run.\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"snail\")\n  exec \"nim doc2 --verbosity:0 --hints:off -o:docs/index.html  snail.nim\"\n  for file in listfiles(\"snail\"):\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\") & \" \" & file\n  echo \"DONE - Look inside /docs, possibly serve it to a browser.\"\n\ntask prepublish,\"Run tests, then build docs\":\n  exec \"nimble tests\"\n  exec \"nimble docs\"",
"https://raw.githubusercontent.com/nitely/nregex/master/nregex.nimble": "# Package\n\nversion = \"0.0.4\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"A DFA based regex engine\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipDirs = @[\"tests\", \"docs\"]\n\nrequires \"nim >= 1.0.4\"\nrequires \"unicodedb >= 0.7.2\"\nrequires \"unicodeplus >= 0.5.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r -o:bin/nregex src/nregex.nim\"\n  exec \"nim c -r tests/tests.nim\"\n  exec \"nim c -r -d:forceRegexAtRuntime tests/tests.nim\"\n  #when (NimMajor, NimMinor) >= (1, 1):\n  #  exec \"nim c -d:runTestAtCT --maxLoopIterationsVM:1000000000 tests/tests.nim\"\n  exec \"nim js -r -o:bin/nregex.js --styleCheck:off src/nregex.nim\"\n  exec \"nim js -r --styleCheck:off tests/tests.nim\"\n  exec \"nim js -r --styleCheck:off -d:forceRegexAtRuntime tests/tests.nim\"\n\n  # Test runnable examples\n  exec \"nim doc -o:./docs/ugh/ugh.html ./src/nregex.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc --project -o:./docs ./src/nregex.nim\"\n",
"https://github.com/twist-vector/nim-bped.git": "[Package]\nname          = \"bped\"\nversion       = \"0.2.0\"\nauthor        = \"Tom Krauss\"\ndescription   = \"Nim implementation of the Bittorrent ascii protocol, encodes/decodes data into the Bittorrent ASCII protocol\"\nlicense       = \"Apache2\"\n\n[Deps]\nRequires: \"nim >= 0.12.0\"\n",
"https://raw.githubusercontent.com/dariolah/libssh-nim/master/libssh.nimble": "# Package\n\nversion       = \"0.90.0\"\nauthor        = \"Dario Lah\"\ndescription   = \"libssh FFI bindings\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Linux):\n    foreignDep \"libssh.so\"\n\n  elif detectOs(Windows):\n    foreignDep \"ssh.dll\"\n  else:\n    foreignDep \"libssh.dylib\"\n",
"https://raw.githubusercontent.com/iffy/nim-argparse/master/argparse.nimble": "# Package\n\nversion       = \"2.0.0\"\nauthor        = \"Matt Haggard\"\ndescription   = \"A command line argument parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.10\"\n",
"https://raw.githubusercontent.com/zero-functional/zero-functional/master/zero_functional.nimble": "version         = \"1.2.1\"\npackageName     = \"zero_functional\"\nauthor          = \"Alexander Ivanov / Michael Schulte\"\ndescription     = \"a library providing zero-cost for chaining functional abstractions in Nim.\"\nlicense         = \"MIT\"\nskipFiles       = @[\"test.nim\"]\nskipDirs        = @[\"benchmarks\"]\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/Vindaar/nimnlopt/master/nlopt.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Sebastian Schmidt\"\ndescription   = \"A wrapper of the C library NLOPT for non-linear optimization\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"examples, c_headers\"]\nskipExt       = @[\"nim~\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Runs all tests\":\n  exec \"nim c -r tests/tsimple.nim\"\n",
"https://github.com/andreas-wilm/nimreadfq": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Andreas Wilm\"\ndescription   = \"Wrapper for Heng Li's kseq\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.19, zip >= 0.2.1\"\n\nskipDirs = @[\"tests\"]\n\ntask test, \"run the tests\":\n  exec \"nim c -r tests/tester\"\n",
"https://raw.githubusercontent.com/nortero-code/denim-ui/master/denim_ui.nimble": "version       = \"0.1.0\"\nauthor        = \"Kristian Fjeld Hasselknippe\"\ndescription   = \"The Denim UI library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"itertools\"\nrequires \"macroutils\"\nrequires \"rx_nim\"\n",
"https://github.com/ThomasTJdev/nimics": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"ThomasTJdev\"\ndescription   = \"Create ICS files for email invites, eg. invite.ics\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://api.github.com/repos/nim-lang/Nim/contents": "[{\"name\":\".builds\",\"path\":\".builds\",\"sha\":\"33fec7d07654d8cfb028ca3a62f6442173c85d48\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/.builds?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/.builds\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/33fec7d07654d8cfb028ca3a62f6442173c85d48\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/.builds?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/33fec7d07654d8cfb028ca3a62f6442173c85d48\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/.builds\"}},{\"name\":\".gitattributes\",\"path\":\".gitattributes\",\"sha\":\"674da793982511fb03d11e86151bd1b08ead7c7c\",\"size\":329,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/.gitattributes?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/.gitattributes\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/674da793982511fb03d11e86151bd1b08ead7c7c\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/.gitattributes\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/.gitattributes?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/674da793982511fb03d11e86151bd1b08ead7c7c\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/.gitattributes\"}},{\"name\":\".github\",\"path\":\".github\",\"sha\":\"efae243c6866ee1308f82eab7983410d537b5770\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/.github?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/.github\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/efae243c6866ee1308f82eab7983410d537b5770\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/.github?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/efae243c6866ee1308f82eab7983410d537b5770\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/.github\"}},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"f66716bd6fb4e83fd14e7a185e2617e10d387d88\",\"size\":1272,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/.gitignore?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/.gitignore\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/f66716bd6fb4e83fd14e7a185e2617e10d387d88\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/.gitignore?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/f66716bd6fb4e83fd14e7a185e2617e10d387d88\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/.gitignore\"}},{\"name\":\".gitlab-ci.yml\",\"path\":\".gitlab-ci.yml\",\"sha\":\"ad9e565a6c23807f20c8b183df7f15fc5f8fd772\",\"size\":881,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/.gitlab-ci.yml?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/.gitlab-ci.yml\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/ad9e565a6c23807f20c8b183df7f15fc5f8fd772\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/.gitlab-ci.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/.gitlab-ci.yml?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/ad9e565a6c23807f20c8b183df7f15fc5f8fd772\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/.gitlab-ci.yml\"}},{\"name\":\".travis.yml\",\"path\":\".travis.yml\",\"sha\":\"4c4c35334b6d7e0a8aa3f99d646f372e105cb294\",\"size\":1237,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/.travis.yml?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/.travis.yml\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/4c4c35334b6d7e0a8aa3f99d646f372e105cb294\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/.travis.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/.travis.yml?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/4c4c35334b6d7e0a8aa3f99d646f372e105cb294\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/.travis.yml\"}},{\"name\":\"appveyor.yml.disabled\",\"path\":\"appveyor.yml.disabled\",\"sha\":\"5468ac88af36afe5fb2c6bd09eb2759f148d5c78\",\"size\":988,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/appveyor.yml.disabled?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/appveyor.yml.disabled\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/5468ac88af36afe5fb2c6bd09eb2759f148d5c78\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/appveyor.yml.disabled\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/appveyor.yml.disabled?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/5468ac88af36afe5fb2c6bd09eb2759f148d5c78\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/appveyor.yml.disabled\"}},{\"name\":\"azure-pipelines.yml\",\"path\":\"azure-pipelines.yml\",\"sha\":\"109efc6e1241754319a2b5953f0ef5c2078f7e89\",\"size\":5262,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/azure-pipelines.yml?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/azure-pipelines.yml\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/109efc6e1241754319a2b5953f0ef5c2078f7e89\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/azure-pipelines.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/azure-pipelines.yml?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/109efc6e1241754319a2b5953f0ef5c2078f7e89\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/azure-pipelines.yml\"}},{\"name\":\"bin\",\"path\":\"bin\",\"sha\":\"7c6cd513ffdb6f49a8b8e476c93ee3d2cb172e03\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/bin?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/bin\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/7c6cd513ffdb6f49a8b8e476c93ee3d2cb172e03\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/bin?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/7c6cd513ffdb6f49a8b8e476c93ee3d2cb172e03\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/bin\"}},{\"name\":\"build\",\"path\":\"build\",\"sha\":\"1b2baf986fc69783e2879ee85fb23bf5dbc99c5b\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/build?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/build\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/1b2baf986fc69783e2879ee85fb23bf5dbc99c5b\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/build?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/1b2baf986fc69783e2879ee85fb23bf5dbc99c5b\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/build\"}},{\"name\":\"build_all.bat\",\"path\":\"build_all.bat\",\"sha\":\"7967e2584d056b78b888b09456a47d9e4acca4b1\",\"size\":443,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/build_all.bat?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/build_all.bat\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/7967e2584d056b78b888b09456a47d9e4acca4b1\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/build_all.bat\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/build_all.bat?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/7967e2584d056b78b888b09456a47d9e4acca4b1\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/build_all.bat\"}},{\"name\":\"build_all.sh\",\"path\":\"build_all.sh\",\"sha\":\"e66980e569a441bcd60ce5fe93d26fe07fb59090\",\"size\":1560,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/build_all.sh?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/build_all.sh\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/e66980e569a441bcd60ce5fe93d26fe07fb59090\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/build_all.sh\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/build_all.sh?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/e66980e569a441bcd60ce5fe93d26fe07fb59090\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/build_all.sh\"}},{\"name\":\"changelog.md\",\"path\":\"changelog.md\",\"sha\":\"e48e38dd6dca05b77de64e7cc44af3653839946f\",\"size\":7807,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/changelog.md?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/changelog.md\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/e48e38dd6dca05b77de64e7cc44af3653839946f\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/changelog.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/changelog.md?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/e48e38dd6dca05b77de64e7cc44af3653839946f\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/changelog.md\"}},{\"name\":\"changelogs\",\"path\":\"changelogs\",\"sha\":\"dc40a90b3063df719ae32fa7d1c60c4e1674a543\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/changelogs?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/changelogs\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/dc40a90b3063df719ae32fa7d1c60c4e1674a543\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/changelogs?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/dc40a90b3063df719ae32fa7d1c60c4e1674a543\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/changelogs\"}},{\"name\":\"ci\",\"path\":\"ci\",\"sha\":\"91f5e528087125ec85eb149312c7b7742836bde9\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/ci?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/ci\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/91f5e528087125ec85eb149312c7b7742836bde9\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/ci?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/91f5e528087125ec85eb149312c7b7742836bde9\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/ci\"}},{\"name\":\"compiler.nimble\",\"path\":\"compiler.nimble\",\"sha\":\"f4da45519d82540d457b20b14d8842bdc08321d0\",\"size\":217,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/compiler.nimble?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/compiler.nimble\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/f4da45519d82540d457b20b14d8842bdc08321d0\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/compiler.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/compiler.nimble?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/f4da45519d82540d457b20b14d8842bdc08321d0\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/compiler.nimble\"}},{\"name\":\"compiler\",\"path\":\"compiler\",\"sha\":\"ae9207f39be80dd949b624873ba6be041f4e23cb\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/compiler?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/compiler\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/ae9207f39be80dd949b624873ba6be041f4e23cb\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/compiler?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/ae9207f39be80dd949b624873ba6be041f4e23cb\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/compiler\"}},{\"name\":\"config\",\"path\":\"config\",\"sha\":\"c2994dd19d787ca82bea1b07977cda899d6f2f1d\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/config?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/config\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/c2994dd19d787ca82bea1b07977cda899d6f2f1d\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/config?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/c2994dd19d787ca82bea1b07977cda899d6f2f1d\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/config\"}},{\"name\":\"copying.txt\",\"path\":\"copying.txt\",\"sha\":\"a498a95253402cd4ec5be60fb2b6cde32a0c0ab5\",\"size\":1257,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/copying.txt?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/copying.txt\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/a498a95253402cd4ec5be60fb2b6cde32a0c0ab5\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/copying.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/copying.txt?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/a498a95253402cd4ec5be60fb2b6cde32a0c0ab5\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/copying.txt\"}},{\"name\":\"doc\",\"path\":\"doc\",\"sha\":\"cf0eda76d2dd13e7c5d58e0435184417380b0605\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/doc?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/doc\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/cf0eda76d2dd13e7c5d58e0435184417380b0605\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/doc?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/cf0eda76d2dd13e7c5d58e0435184417380b0605\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/doc\"}},{\"name\":\"drnim\",\"path\":\"drnim\",\"sha\":\"fb630bb69c6b34da2a663541c3195d2fe6018e09\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/drnim?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/drnim\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/fb630bb69c6b34da2a663541c3195d2fe6018e09\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/drnim?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/fb630bb69c6b34da2a663541c3195d2fe6018e09\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/drnim\"}},{\"name\":\"icons\",\"path\":\"icons\",\"sha\":\"9f866e8306a3c2295e229700d7a4609572706894\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/icons?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/icons\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/9f866e8306a3c2295e229700d7a4609572706894\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/icons?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/9f866e8306a3c2295e229700d7a4609572706894\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/icons\"}},{\"name\":\"koch.nim\",\"path\":\"koch.nim\",\"sha\":\"6057f8cff2667f4f1de7e66ab229234abf02d9ba\",\"size\":27268,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/koch.nim?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/koch.nim\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/6057f8cff2667f4f1de7e66ab229234abf02d9ba\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/koch.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/koch.nim?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/6057f8cff2667f4f1de7e66ab229234abf02d9ba\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/koch.nim\"}},{\"name\":\"koch.nim.cfg\",\"path\":\"koch.nim.cfg\",\"sha\":\"c624b957732b2b3e454990f5d1d77e240a559496\",\"size\":161,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/koch.nim.cfg?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/koch.nim.cfg\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/c624b957732b2b3e454990f5d1d77e240a559496\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/koch.nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/koch.nim.cfg?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/c624b957732b2b3e454990f5d1d77e240a559496\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/koch.nim.cfg\"}},{\"name\":\"lib\",\"path\":\"lib\",\"sha\":\"9d651d145149765bf9febcd40c29426ccc0c7da2\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/lib?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/lib\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/9d651d145149765bf9febcd40c29426ccc0c7da2\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/lib?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/9d651d145149765bf9febcd40c29426ccc0c7da2\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/lib\"}},{\"name\":\"nimdoc\",\"path\":\"nimdoc\",\"sha\":\"74b6a475fb0347d7b9f407c88058d31f1d73f465\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/nimdoc?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/nimdoc\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/74b6a475fb0347d7b9f407c88058d31f1d73f465\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/nimdoc?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/74b6a475fb0347d7b9f407c88058d31f1d73f465\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/nimdoc\"}},{\"name\":\"nimpretty\",\"path\":\"nimpretty\",\"sha\":\"a7144b93771e561c198d06b068c32f4f49b4a44b\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/nimpretty?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/nimpretty\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/a7144b93771e561c198d06b068c32f4f49b4a44b\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/nimpretty?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/a7144b93771e561c198d06b068c32f4f49b4a44b\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/nimpretty\"}},{\"name\":\"nimsuggest\",\"path\":\"nimsuggest\",\"sha\":\"ca6c6828b28a8f6cfe4a59466b00b44cc3811123\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/nimsuggest?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/nimsuggest\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/ca6c6828b28a8f6cfe4a59466b00b44cc3811123\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/nimsuggest?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/ca6c6828b28a8f6cfe4a59466b00b44cc3811123\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/nimsuggest\"}},{\"name\":\"readme.md\",\"path\":\"readme.md\",\"sha\":\"fa7a2d86d53c2a26e902e8cfe4ee66782d166fe1\",\"size\":12815,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/readme.md?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/readme.md\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/fa7a2d86d53c2a26e902e8cfe4ee66782d166fe1\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/readme.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/readme.md?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/fa7a2d86d53c2a26e902e8cfe4ee66782d166fe1\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/readme.md\"}},{\"name\":\"security.md\",\"path\":\"security.md\",\"sha\":\"e8d31b1b937ff393dbb6c571b4ab38872fd87107\",\"size\":492,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/security.md?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/blob/devel/security.md\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/e8d31b1b937ff393dbb6c571b4ab38872fd87107\",\"download_url\":\"https://raw.githubusercontent.com/nim-lang/Nim/devel/security.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/security.md?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/blobs/e8d31b1b937ff393dbb6c571b4ab38872fd87107\",\"html\":\"https://github.com/nim-lang/Nim/blob/devel/security.md\"}},{\"name\":\"testament\",\"path\":\"testament\",\"sha\":\"3ea6054c6ccbda64307efa59fd0a0c5a7881bdc8\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/testament?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/testament\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/3ea6054c6ccbda64307efa59fd0a0c5a7881bdc8\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/testament?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/3ea6054c6ccbda64307efa59fd0a0c5a7881bdc8\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/testament\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"af13ba948ffd7de44d4e1f438933eb41383e4a11\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/tests?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/tests\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/af13ba948ffd7de44d4e1f438933eb41383e4a11\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/tests?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/af13ba948ffd7de44d4e1f438933eb41383e4a11\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/tests\"}},{\"name\":\"tools\",\"path\":\"tools\",\"sha\":\"4b3057ff53173d1d3effa4bdcb5ee2be5e470093\",\"size\":0,\"url\":\"https://api.github.com/repos/nim-lang/Nim/contents/tools?ref=devel\",\"html_url\":\"https://github.com/nim-lang/Nim/tree/devel/tools\",\"git_url\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/4b3057ff53173d1d3effa4bdcb5ee2be5e470093\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nim-lang/Nim/contents/tools?ref=devel\",\"git\":\"https://api.github.com/repos/nim-lang/Nim/git/trees/4b3057ff53173d1d3effa4bdcb5ee2be5e470093\",\"html\":\"https://github.com/nim-lang/Nim/tree/devel/tools\"}}]",
"https://github.com/ba0f3/uibuilder.nim": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Huy Doan\"\ndescription   = \"UI building with Gnome\\'s Glade\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"tests\"]\nbin           = @[\"uibuilder\"]\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\nrequires \"ui >= 0.9.2\"\nrequires \"xml#devel\"\n",
"https://raw.githubusercontent.com/nigredo-tori/classy/master/classy.nimble": "# Package\n\nversion       = \"0.0.4\"\nauthor        = \"nigredo-tori\"\ndescription   = \"typeclasses for Nim\"\nlicense       = \"Unlicense\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\n# Layout\n\ninstallFiles = @[\"classy.nim\"]\nbinDir = \"bin\"\n",
"https://raw.githubusercontent.com/pdrb/nim-fwrite/master/fwrite.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Pedro Buteri Gonring\"\ndescription   = \"Create files of the desired size\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"fwrite\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://github.com/juancarlospaco/nim-espeak": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Nim Espeak NG wrapper, for super easy Voice and Text-To-Speech\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/zendbit/nim.zfplugs": "# Package\nversion     = \"0.1.4\"\nauthor      = \"Amru Rosyada\"\ndescription = \"This is the plugins for the zfcore framework https://github.com/zendbit/nim.zfcore\"\nlicense     = \"BSD\"\n\n# Deps\nrequires \"nim >= 1.4.0\"\nrequires \"zfcore >= 1.1.2\"\n",
"https://github.com/toshikiohnogi/nimga": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Toshiki Ohnogi\"\ndescription   = \"Genetic Algorithm Library for Nim.\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/angus-lherrou/hayaa": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Angus L'Herrou\"\ndescription   = \"Conway's Game of Life implemented in Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"hayaa\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\", \"illwill >= 0.2.0\"\n",
"https://github.com/ThomasTJdev/nim_websitecreator": "# Package\nversion       = \"6.0.6\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev) & Juan Carlos (https://github.com/juancarlospaco)\"\ndescription   = \"Generate and host a website. Run the package and access your new webpage.\"\nlicense       = \"PPL\"\nbin           = @[\"nimwc\"]\nskipDirs      = @[\"private\", \"tmp\", \"devops\", \"docs\"]\ninstallDirs   = @[\"config\", \"nimwcpkg\", \"plugins\", \"public\"]\n\n\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\nrequires \"jester >= 0.4.3\"\nrequires \"bcrypt >= 0.2.1\"\nrequires \"contra >= 0.2.5\"\nrequires \"datetime2human >= 0.2.5\"\nrequires \"firejail >= 0.5.0\"\nrequires \"libravatar >= 0.5.0\"\nrequires \"otp >= 0.1.1\"\nrequires \"recaptcha >= 1.0.3\"\nrequires \"webp >= 0.2.5\"\nrequires \"packedjson >= 0.1.0\"\n\n\nimport distros\n\ntask setup, \"Generating executable\":\n  if detectOs(Windows):\n    quit(\"Cannot run on Windows, but you can try Docker for Windows: http://docs.docker.com/docker-for-windows\")\n\n  if not fileExists(\"config/config.cfg\"):\n    cpFile(\"config/config_default.cfg\", \"config/config.cfg\")\n    echo \"Config file created. Please update the file: config/config.cfg.\"\n\n  if defined(webp):\n    foreignDep \"libwebp\"\n\n  if defined(firejail):\n    foreignDep \"firejail\"\n\n  if defined(demo):\n    echo \"Demo Mode: Database will reset each hour with the standard data.\"\n\n  if not defined(ssl):\n    echo \"SSL not defined: SSL is disabled, running unsecure.\"\n\n  if not defined(firejail):\n    echo \"Firejail not defined: Firejail is disabled, running unsecure.\"\n\n\nbefore install:\n  setupTask()\n",
"https://github.com/treeform/jsony": "version     = \"0.0.5\"\nauthor      = \"Andre von Houck\"\ndescription = \"A loose direct to object json parser with hooks.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://raw.githubusercontent.com/Imperator26/binance/master/binance.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Federico A. Corazza\"\ndescription   = \"A library to access the Binance API.\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\", \"nimSHA2 >= 0.1.1\"\n",
"https://raw.githubusercontent.com/zedeus/redpool/master/redpool.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zedeus\"\ndescription   = \"Redis connection pool\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\nrequires \"https://github.com/zedeus/redis#94bcbf1\"\n",
"https://github.com/status-im/nim-eth-trie": "mode = ScriptMode.Verbose\n\npackageName   = \"eth_trie\"\nversion       = \"1.0.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Merkle Patricia Tries as specified by Ethereum\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.18.1\",\n         \"rlp\",\n         \"nimcrypto\",\n         \"ranges\",\n         \"rocksdb\"\n\ntask test, \"test debug mode\":\n  --hints: off\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testRelease, \"test release mode\":\n  switch(\"define\", \"release\")\n  testTask()\n",
"https://github.com/trustable-code/NiGui": "# Package\n\nversion = \"0.2.5\"\nauthor = \"Simon Krauter\"\ndescription = \"Cross-platform, desktop GUI toolkit using native widgets.\"\nlicense = \"MIT\"\n\n# Deps\nrequires \"nim >= 0.19.0\"\n\nsrcDir = \"src\"\n",
"https://github.com/pdrb/nim-randpw": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Pedro Buteri Gonring\"\ndescription   = \"Random password and passphrase generator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"randpw\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/alaviss/kmod/master/kmod.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Leorize\"\ndescription   = \"High-level wrapper for Linux's kmod library\"\nlicense       = \"ISC\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"nimterop >= 0.1.0\"\n",
"https://raw.githubusercontent.com/arnetheduck/nim-sqlite3-abi/master/sqlite3_abi.nimble": "packageName   = \"sqlite3_abi\"\nversion       = \"3.34.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for SQLite\"\nlicense       = \"Apache License 2.0 or MIT\"\ninstallFiles  = @[\"sqlite3_abi.nim\", \"sqlite3_gen.nim\", \"sqlite3.c\", \"sqlite3.h\"]\n\n### Dependencies\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/xbello/notify-nim": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Xabi Bello\"\ndescription   = \"A wrapper to notification libraries\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"notify\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Linux):\n    foreignDep \"libnotify\"\n",
"https://raw.githubusercontent.com/pragmagic/isaac/master//isaac.nimble": "[Package]\nname: \"isaac\"\nversion: \"0.1.3\"\nauthor: \"Xored Software, Inc.\"\ndescription: \"ISAAC PRNG implementation\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n",
"https://github.com/cheatfate/nimcrypto": "# Package\n\nversion       = \"0.5.4\"\nauthor        = \"Eugene Kabanov\"\ndescription   = \"Nim cryptographic library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"examples\", \"Nim\", \"docs\"]\n\n# Dependencies\n\nrequires \"nim > 0.18.0\"\n\n# Tests\n\ntask test, \"Runs the test suite\":\n  let testCommands = @[\n    \"nim c -f -r tests/\",\n    \"nim c -f -d:danger -r tests/\",\n    \"nim c -f -d:danger --threads:on -r tests/\",\n  ]\n  let exampleFiles = @[\n    \"ecb\", \"cbc\", \"ofb\", \"cfb\", \"ctr\", \"gcm\"\n  ]\n  let exampleCommands = @[\n      \"nim c -f -r --threads:on examples/\",\n  ]\n\n  for cmd in testCommands:\n    echo \"\\n\" & cmd & \"testall\"\n    exec cmd & \"testall\"\n    rmFile(\"tests/testall\".toExe())\n\n  for efile in exampleFiles:\n    for cmd in exampleCommands:\n      echo \"\\n\" & cmd & efile\n      exec cmd & efile\n      rmFile(\"examples/\" & efile.toExe())\n\n  exec(\"nim c -f -r -d:nimcryptoLowercase tests/testapi\")\n  exec(\"nim c -f -r -d:nimcrypto0xPrefix tests/testapi\")\n  exec(\"nim c -f -r -d:nimcrypto0xPrefix -d:nimcryptoLowercase tests/testapi\")\n",
"https://github.com/genotrance/nimarchive": "# Package\n\nversion       = \"0.5.4\"\nauthor        = \"genotrance\"\ndescription   = \"libarchive wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.6.6\"\n\nvar\n  name = \"nimarchive\"\n\nwhen gorgeEx(\"nimble path nimterop\").exitCode == 0:\n  import nimterop/docs\n  task docs, \"Generate docs\": buildDocs(@[\"nimarchive.nim\"], \"build/htmldocs\")\nelse:\n  task docs, \"Do nothing\": discard\n\ntask test, \"Run tests\":\n  exec \"nim c --path:.. -f -d:release -r tests/t\" & name & \".nim\"\n  exec \"nim c --path:.. -d:release -r tests/t\" & name & \"_extract.nim\"\n  docsTask()\n",
"https://github.com/rustomax/nim-stacks": "# Package\n\nversion       = \"0.4.2\"\nauthor        = \"Max Skybin\"\ndescription   = \"Pure Nim stack implementation based on sequences.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\"\n",
"https://raw.githubusercontent.com/nimious/serialport/master/serialport.nimble": "[Package]\nname: \"serialport\"\nversion: \"1.0\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for libserialport, the cross-platform serial communication library.\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.12.0\"\n",
"https://raw.githubusercontent.com/andreaferretti/alea/master/alea.nimble": "import os\n\n# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"A library to work with random variables\"\nlicense       = \"Apache2\"\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\", \"random >= 0.5.6\"\n\ntask test, \"run alea tests\":\n  withDir \"tests\":\n    exec \"nimble test\"",
"https://github.com/jangko/nimBMP": "packageName   = \"nimBMP\"\nversion       = \"0.1.8\"\nauthor        = \"Andri Lim\"\ndescription   = \"BMP encoder and decoder\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"manual\"]\n\nrequires: \"nim >= 1.0.2\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run tests\":\n  test \"-d:debug\", \"tests/test_codec.nim\"\n  test \"-d:debug\", \"tests/test_suite.nim\"\n  test \"-d:debug\", \"tests/test_misc.nim\"\n\n  test \"-d:release\", \"tests/test_codec.nim\"\n  test \"-d:release\", \"tests/test_suite.nim\"\n  test \"-d:release\", \"tests/test_misc.nim\"\n\n  test \"-d:release --gc:arc\", \"tests/test_codec.nim\"\n  test \"-d:release --gc:arc\", \"tests/test_suite.nim\"\n  test \"-d:release --gc:arc\", \"tests/test_misc.nim\"\n\ntask testvcc, \"Run tests with vcc compiler\":\n  test \"--cc:vcc -d:release\", \"tests/test_codec.nim\"\n  test \"--cc:vcc -d:release\", \"tests/test_suite.nim\"\n  test \"--cc:vcc -d:release\", \"tests/test_misc.nim\"\n",
"https://github.com/jyapayne/nim-glew": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"Autogenerated glew bindings for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\", \"https://github.com/jyapayne/nimterop#head\", \"https://github.com/jyapayne/nim-glfw#head\"\n",
"https://github.com/Yardanico/nimvkapi": "# Package\n\nversion       = \"1.3.1\"\nauthor        = \"TiberiumN (Daniil Yarancev)\"\ndescription   = \"Wrapper for vk.com API\"\nlicense       = \"MIT\"\n\ninstallFiles  = @[\"methods.txt\"]\nskipDirs      = @[\"docs\"]\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n\ntask updateApi, \"Update API method names\":\n  exec \"nim c -r utils/getmethods\"\n\ntask makeDocs, \"Update the .html doc file\":\n  exec \"nim doc -o=docs/index.html vkapi\"\n",
"https://raw.githubusercontent.com/Druage/sling/master/sling.nimble": "[Package]\nname: \"sling\"\nversion: \"0.1\"\nauthor: \"Lee Lazarecky\"\ndescription: \"A signal and slot implementation for Nim\"\nlicense: \"unlicense\"\n\n[Deps]\nrequires: \"nimrod >= 0.13.0\"\n",
"https://github.com/Skrylar/skInterpolate": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joshua Cearley\"\ndescription   = \"Interpolation routines for data processing and animation.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/lzoz/nauthy/master/nauthy.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lzoz\"\ndescription   = \"Nim library for One Time Password verification and generation.\"\nlicense       = \"MIT\"\nsrcDir        = \"nauthy\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"nimSHA2 >= 0.1.1\"\n",
"https://github.com/julienaubert/nim-sndfile": "[Package]\nname: \"sndfile\"\nversion: \"0.1.0\"\nauthor: \"Julien Aubert\"\ndescription: \"Wrapper for libsndfile\"\nlicense: \"MIT\"\n\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n\n",
"https://github.com/Double-oxygeN/z3nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Double-oxygeN\"\ndescription   = \"Z3 binding for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n\n\n# Tasks\n\ntask docgen, \"Generate documentation\":\n  exec \"nim doc --outDir:docs --git.url:https://github.com/Double-oxygeN/z3nim --git.commit:master src/z3nim\"\n  exec \"find docs -name '*.html' -exec sed \\\"s/-webkit-filter: \\\\([^;][^;]*\\\\)/-webkit-filter: \\\\1;\\\\n  filter: \\\\1/\\\" -i '{}' \\\\;\"\n",
"https://github.com/treeform/useragents": "# Package\n\nversion     = \"0.1.1\"\nauthor      = \"Andre von Houck\"\ndescription = \"Parses users agents in nim.\"\nlicense     = \"MIT\"\n\n# Deps\n\nrequires \"nim >= 0.20.0\"\n\nskipDirs = @[\"tests\", \"build\"]",
"https://github.com/aleandros/about": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Edgar Cabrera\"\ndescription   = \"Executable for finding information about programs in PATH\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"about\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"docopt\"\n",
"https://github.com/pigmej/fuzzy": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jedrzej Nowak\"\ndescription   = \"Pure nim fuzzy search implementation. Supports substrings etc\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.8\"\n",
"https://github.com/foliant-docs/foliant-nim": "version       = \"0.2.2\"\nauthor        = \"Konstantin Molchanov\"\ndescription   = \"Documentation generator that produces pdf and docx from Markdown. Uses Pandoc and LaTeX behind the scenes.\"\nlicense       = \"MIT\"\n\nbin = @[\"foliant\"]\nsrcDir = \"src\"\n\nwhen defined(Windows):\n  binDir = \"bin/windows\"\nelif defined(MacOSX):\n  binDir = \"bin/mac\"\nelif defined(Linux):\n  binDir = \"bin/linux\"\n\nrequires \"nim >= 0.15.0\", \"docopt#head\", \"yaml\"\n\n",
"https://raw.githubusercontent.com/madprops/nap/master/nap.nimble": "# Package\n\nversion       = \"1.5.1\"\nauthor        = \"madprops\"\ndescription   = \"Argument parser\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/genotrance/libsvm": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance\"\ndescription   = \"libsvm wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.1.0\"\n\nimport strformat\n\ntask test, \"Run tests\":\n  exec \"nim cpp --path:. -r tests/tlibsvm.nim\"\n\ntask docs, \"Generate docs\":\n  exec &\"nim doc -o:build/htmldocs/ libsvm.nim\"\n\ntask docsPublish, \"Generate and publish docs\":\n  # Uses: pip install ghp-import\n  docsTask()\n  exec &\"ghp-import --no-jekyll -fp build/htmldocs\"\n",
"https://raw.githubusercontent.com/lihf8515/parseini/master/parseini.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Lihaifeng <lihaifeng@wxm.com>\"\ndescription   = \"A high-performance ini parse library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/Araq/packedjson": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Araq\"\ndescription   = \"packedjson is an alternative Nim implementation for JSON. The JSON is essentially kept as a single string in order to save memory over a more traditional tree representation.\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"bench\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/OpenSystemsLab/q.nim": "[Package]\nname          = \"q\"\nversion       = \"0.0.7\"\nauthor        = \"Huy Doan\"\ndescription   = \"Simple CSS3 selectors for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = \"tests\"\n\n[Deps]\nRequires: \"nim >= 0.19.0\"\n",
"https://github.com/luisacosta828/pgxcrown": "# Package\n\nversion       = \"0.1.12\"\nauthor        = \"luisacosta828\"\ndescription   = \"Build Postgres extensions in Nim.\"\nsrcDir        = \"src\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.12.0\"",
"https://raw.githubusercontent.com/PMunch/termstyle/master/termstyle.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Easy to use colours for terminal applications\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://api.github.com/repos/fowlmouth/horde3d/contents": "[{\"name\":\"horde3d.babel\",\"path\":\"horde3d.babel\",\"sha\":\"28e6b249b64fd09f21345a04fb2f93741ffa07fa\",\"size\":190,\"url\":\"https://api.github.com/repos/fowlmouth/horde3d/contents/horde3d.babel?ref=master\",\"html_url\":\"https://github.com/fowlmouth/horde3d/blob/master/horde3d.babel\",\"git_url\":\"https://api.github.com/repos/fowlmouth/horde3d/git/blobs/28e6b249b64fd09f21345a04fb2f93741ffa07fa\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/horde3d/master/horde3d.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/horde3d/contents/horde3d.babel?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/horde3d/git/blobs/28e6b249b64fd09f21345a04fb2f93741ffa07fa\",\"html\":\"https://github.com/fowlmouth/horde3d/blob/master/horde3d.babel\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"e57b23384665222701e3dc738bc539847bbb3bf3\",\"size\":0,\"url\":\"https://api.github.com/repos/fowlmouth/horde3d/contents/src?ref=master\",\"html_url\":\"https://github.com/fowlmouth/horde3d/tree/master/src\",\"git_url\":\"https://api.github.com/repos/fowlmouth/horde3d/git/trees/e57b23384665222701e3dc738bc539847bbb3bf3\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/horde3d/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/horde3d/git/trees/e57b23384665222701e3dc738bc539847bbb3bf3\",\"html\":\"https://github.com/fowlmouth/horde3d/tree/master/src\"}}]",
"https://raw.githubusercontent.com/genotrance/nim7z/master/nim7z.nimble": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"genotrance\"\ndescription   = \"7z extraction for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nim7z\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://github.com/nimious/io-oculus.git": "[Package]\nname: \"oculus\"\nversion: \"1.0\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for the Oculus VR SDK\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.13.0\"\n",
"https://raw.githubusercontent.com/liquid600pgm/aglet/master/aglet.nimble": "# Package\n\nversion       = \"0.4.4\"\nauthor        = \"liquid600pgm\"\ndescription   = \"A safe, high-level, optimized OpenGL wrapper\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"https://github.com/liquid600pgm/nim-glm >= 1.1.1\"\nrequires \"https://github.com/nimgl/glfw >= 3.3.4\"\n\n\n# Tasks\n\nfrom os import walkDirRec, splitFile\n\ntask buildDocs, \"rebuilds documentation to the docs/ folder for GitHub Pages\":\n  echo \"-- creating doc directory\"\n  rmDir \"docs\"\n  mkDir \"docs\"\n\n  echo \"-- building docs for aglet.nim\"\n  selfExec \"doc \" &\n    \"--project --index:on -o:docs/ \" &\n    \"--git.url:https://github.com/liquid600pgm/aglet \" &\n    \"--git.commit:\" & version & \" \" &\n    \"src/aglet.nim\"\n\n  echo \"-- creating index.html\"\n  cpFile \"docs/aglet.html\", \"docs/index.html\"\n\n  echo \"-- removing leftover .idx files\"\n  for name in walkDirRec \"docs\":\n    let (_, _, ext) = name.splitFile\n    if ext == \".idx\":\n      echo \" : \", name\n      rmFile name\n\n  echo \"-- done!\"\n",
"https://github.com/markspanbroek/nim-lazyseq": "version = \"0.1.0\"\nauthor = \"lazyseq authors\"\ndescription = \"Lazy evaluated sequences\"\nlicense = \"MIT\"\n\nrequires \"nim >= 1.4.2 & < 2.0.0\"\n",
"https://raw.githubusercontent.com/status-im/nim-eth-trie/master/eth_trie.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"eth_trie\"\nversion       = \"1.0.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Merkle Patricia Tries as specified by Ethereum\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.18.1\",\n         \"rlp\",\n         \"nimcrypto\",\n         \"ranges\",\n         \"rocksdb\"\n\ntask test, \"test debug mode\":\n  --hints: off\n  --debuginfo\n  --path: \".\"\n  --run\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testRelease, \"test release mode\":\n  switch(\"define\", \"release\")\n  testTask()\n",
"https://raw.githubusercontent.com/momeemt/base64_cui/master/base64_decoder.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Momeemt\"\ndescription   = \"base64 cui\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"base64_cui\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://github.com/planetis-m/eminim": "# Package\n\nversion       = \"2.8.2\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"JSON serialization framework for Nim\"\nlicense       = \"MIT\"\nskipDirs = @[\"tests\",\"examples\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/status-im/nim-eth-keys/master/eth_keys.nimble": "packageName   = \"eth_keys\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A reimplementation in pure Nim of eth-keys, the common API for Ethereum key operations.\"\nlicense       = \"Apache License 2.0 or MIT\"\n# srcDir        = \"src\"\nskipDirs      = @[\"src\", \"tests\", \"Nim\", \"old_api\"]\n\n### Dependencies\n\nrequires \"nim > 0.18.0\",\n         \"nimcrypto\",\n         \"secp256k1\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  if not dirExists \"nimcache\":\n    mkDir \"nimcache\"\n  --run\n  --nimcache: \"nimcache\"\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Run all tests - C only & libsecp256k1 backend\":\n  test \"tests\"\n\n# task test_cpp, \"Run all tests - C++ only & libsecp256k1 backend\":\n#   test \"all_tests\", \"cpp\"\n\n# task test, \"Run all tests - C and C++ & libsecp256k1 backend\":\n#   exec \"nimble test_c\"\n#   exec \"rm ./nimcache/*\"\n#   exec \"nimble test_cpp\"\n\n# task test_backend_native, \"Run all tests - pure Nim backend\":\n#   switch(\"define\", \"backend_native\")\n#   test \"all_tests\", \"cpp\"\n",
"https://raw.githubusercontent.com/genotrance/nimssh2/master/nimssh2.nimble": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"genotrance\"\ndescription   = \"libssl2 wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimssh2\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n\n",
"https://github.com/Vladar4/FastStack": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Vladar4\"\ndescription   = \"Dynamically resizable data structure optimized for fast iteration.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.3\"\n\n",
"https://raw.githubusercontent.com/zengxs/nim-cmark/master/cmark.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"zengxs\"\ndescription   = \"libcmark wrapper for Nim\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"a\", \"nim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nwhen defined(nimdistros):\n  import distros\n  foreignDep \"cmake\"\n\n\n# Tasks\n\ntask prebuild, \"Generate required headers for libcmark\":\n  withDir \"libcmark\":\n    exec \"make\"\n\n  cpFile \"./libcmark/build/src/libcmark.a\", \"./src/libcmark.a\"\n\nbefore install:\n  exec \"nimble prebuild\"\n\nbefore test:\n  exec \"nimble prebuild\"\n",
"https://github.com/edubart/arraymancer-vision": "### Package\nversion       = \"0.0.3\"\nauthor        = \"Eduardo Barthel\"\ndescription   = \"Image transformation and visualization utilities for arraymancer\"\nlicense       = \"Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 0.17.2\", \"arraymancer >= 0.2.0\", \"stb_image >= 1.6\"\n\n## Install files\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/dom96/untar/master/untar.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Library for decompressing tar.gz files.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://github.com/achesak/nim-colorsys": "[Package]\nname = \"colorsys\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Convert between RGB, YIQ, HLS, and HSV color systems.\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://raw.githubusercontent.com/capocasa/scnim/master/scnim.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Carlo Capocasa\"\ndescription   = \"Develop SuperCollider UGens in Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"example\", \"dev\"]\n",
"https://github.com/andreaferretti/neo": "mode = ScriptMode.Verbose\n\npackageName   = \"neo\"\nversion       = \"0.3.1\"\nauthor        = \"Andrea Ferretti\"\ndescription   = \"Linear Algebra for Nim\"\nlicense       = \"Apache2\"\nskipDirs      = @[\"tests\", \"benchmarks\", \"htmldocs\"]\nskipFiles     = @[\"_config.yml\"]\n\nrequires \"nim >= 0.18.0\", \"nimblas >= 0.2.0\", \"nimcuda >= 0.1.6\",\n  \"nimlapack >= 0.1.1\"\n\n--forceBuild\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Ubuntu) or detectOs(Debian):\n    foreignDep \"libblas-dev\"\n    foreignDep \"libopenblas-dev\"\n    foreignDep \"liblapack-dev\"\n  elif detectOs(MacOsX):\n    foreignDep \"liblas\"\n    foreignDep \"lapack\"\n  else:\n    foreignDep \"libblas\"\n    foreignDep \"liblapack\"\n\nproc configForTests() =\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --run\n\nproc configForBenchmarks() =\n  --define: release\n  --path: \".\"\n  --run\n\ntask test, \"run CPU tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testdense, \"run CPU dense tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tdense.nim\"\n\ntask testsparse, \"run CPU sparse tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tsparse.nim\"\n\ntask teststatic, \"run CPU static tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tstatics.nim\"\n\ntask testshared, \"run CPU shared heap tests\":\n  configForTests()\n  --threads:on\n  setCommand \"c\", \"tests/tshared.nim\"\n\ntask testopenblas, \"run CPU tests on openblas\":\n  configForTests()\n  --define:\"blas=openblas\"\n  --define:\"lapack=openblas\"\n  setCommand \"c\", \"tests/all.nim\"\n\ntask testmkl, \"run CPU tests on mkl\":\n  configForTests()\n  --define:\"blas=mkl_intel_lp64\"\n  --clibdir: \"/opt/intel/mkl/lib/intel64\"\n  --passl: \"/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.a\"\n  --passl: \"-lmkl_core\"\n  --passl: \"-lmkl_sequential\"\n  --passl: \"-lpthread\"\n  --passl: \"-lm\"\n  --dynlibOverride:mkl_intel_lp64\n  setCommand \"c\", \"tests/all.nim\"\n\ntask compilecuda, \"only compile GPU tests (when not having a GPU)\":\n  --hints: off\n  --linedir: on\n  --stacktrace: on\n  --linetrace: on\n  --debuginfo\n  --path: \".\"\n  --compileOnly\n  setCommand \"c\", \"tests/allcuda.nim\"\n\ntask testcuda, \"run GPU tests\":\n  configForTests()\n  --gc:markAndSweep # TODO: remove temporary workaround\n  setCommand \"c\", \"tests/allcuda.nim\"\n\ntask testcudadense, \"run GPU dense tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tcudadense.nim\"\n\ntask testcudasparse, \"run GPU sparse tests\":\n  configForTests()\n  setCommand \"c\", \"tests/tcudasparse.nim\"\n\ntask testrw, \"run tests for rewrite macros\":\n  configForTests()\n  --define:neoCountRewrites\n  setCommand \"c\", \"tests/rewrites.nim\"\n\ntask benchmark, \"run CPU benchmarks\":\n  configForBenchmarks()\n  setCommand \"c\", \"benchmarks/bench_cpu.nim\"\n\ntask benchmarkcuda, \"run GPU benchmarks\":\n  configForBenchmarks()\n  setCommand \"c\", \"benchmarks/bench_gpu.nim\"\n\ntask docs, \"generate documentation\":\n  exec(\"mkdir -p htmldocs/neo\")\n  --project\n  --git.url: \"https://github.com/andreaferretti/neo\"\n  --git.commit: master\n  setCommand \"doc\", \"neo.nim\"",
"https://github.com/Yardanico/nim-strenc": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Danil Yarantsev (Yardanico)\"\ndescription   = \"A library to automatically encrypt all string constants in your programs\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-libu2f/master/libu2f.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Wrapper for the libu2f server and client\"\nlicense       = \"LGPLv3\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.0\"\n\n",
"https://github.com/Skrylar/rfc3339": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Joshua Cearley\"\ndescription   = \"RFC3339 (dates and times) implementation for Nim.\"\nlicense       = \"BSD\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\n",
"https://raw.githubusercontent.com/muxueqz/nim_cjson/master/nim_cjson.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"muxueqz\"\ndescription   = \"cjson wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.1.4\"\n\nimport distros\n\nvar cmd = \"\"\nif detectOs(Windows):\n    cmd = \"cmd /c \"\n\ntask setup, \"Download and generate\":\n    exec cmd & \"nimgen nim_cjson.cfg\"\n\nbefore install:\n    setupTask()\n\ntask test, \"Test nim_cjson\":\n    exec \"nim c -r tests/test_cjson.nim\"\n",
"https://github.com/fowlmouth/glossolalia": "[Package]\nname: \"glossolalia\"\nversion: \"1.0\"\nauthor: \"fowl\"\ndescription: \"A DSL to quickly write parsers\"\nlicense: \"CC0\"\n\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2, fowltek >= 0.9.3\"\n",
"https://raw.githubusercontent.com/markspanbroek/nim-arduino/master/arduino.nimble": "version = \"0.2.0\"\nauthor = \"nim-arduino authors\"\ndescription = \"Arduino bindings for Nim\"\nlicense = \"MIT\"\n\nrequires \"nim >= 1.4.2 & < 2.0.0\"",
"https://raw.githubusercontent.com/Kashiwara0205/soundex/master/soundex.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"KASHIWARA FUKI\"\ndescription   = \"soundex algorithm\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://raw.githubusercontent.com/nimious/libusb/master/libusb.nimble": "# Package\n\nversion     = \"1.1\"\nauthor      = \"Gerke Max Preussner <info@nimio.us>\"\ndescription = \"Bindings for libusb, the cross-platform user library to access USB devices.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/dom96/ipsumgenera/master/ipsumgenera.nimble": "version       = \"0.1.1\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A static blog generator.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"ipsum\"]\n\nrequires \"nim >= 0.19.4\"\n",
"https://raw.githubusercontent.com/jangko/nim-noise/master/noise.nimble": "# packageName   = \"noise\"\nversion       = \"0.1.4\"\nauthor        = \"Andri Lim\"\ndescription   = \"noise is a Nim implementation of linenoise\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\n\nrequires: \"nim >= 0.18.1\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  test \"-d:prompt_no_history\", \"examples/test\"\n  test \"-d:prompt_no_kill\", \"examples/test\"\n  test \"-d:prompt_no_completion\", \"examples/test\"\n  test \"-d:prompt_no_word_editing\", \"examples/test\"\n  test \"-d:prompt_no_preload_buffer\", \"examples/test\"\n  test \"-d:prompt_no_incremental_history_search\", \"examples/test\"\n\n  test \"-d:release -d:prompt_no_history\", \"examples/test\"\n  test \"-d:release -d:prompt_no_kill\", \"examples/test\"\n  test \"-d:release -d:prompt_no_completion\", \"examples/test\"\n  test \"-d:release -d:prompt_no_word_editing\", \"examples/test\"\n  test \"-d:release -d:prompt_no_preload_buffer\", \"examples/test\"\n  test \"-d:release -d:prompt_no_incremental_history_search\", \"examples/test\"\n\n  test \"-d:release -d:prompt_no_basic\", \"examples/primitives\"\n  test \"-d:prompt_no_basic\", \"examples/primitives\"\n",
"https://github.com/ire4ever1190/nim-opentmdb": "# Package\n\nversion       = \"1.0.2\"\nauthor        = \"Jake Leahy\"\ndescription   = \"Wrapper around the open trivia db api\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\ntask genDoc, \"Generates the doc\":\n    rmDir(\"docs\")\n    exec(\"nim doc2 --outdir:docs --git.url:https://github.com/ire4ever1190/nim-opentmdb --git.commit:master --index:on --project src/opentdb.nim\")\n    exec(\"nim buildIndex -o:docs/theindex.html docs\")\n    writeFile(\"docs/index.html\", \"\"\"\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta http-equiv=\"Refresh\" content=\"0; url=opentdb.html\" />\n      </head>\n      <body>\n        <p>Click <a href=\"opentdb.html\">this link</a> if this does not redirect you.</p>\n      </body>\n    </html>\n    \"\"\")\n",
"https://github.com/vegansk/nimshell": "# Package\nversion       = \"0.0.3\"\nauthor        = \"Anatoly Galiulin\"\ndescription   = \"Library for shell scripting in nim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.17.2\"\n",
"https://raw.githubusercontent.com/jxy/metatools/master/metatools.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Xiao-Yong Jin\"\ndescription   = \"Metaprogramming tools for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"test\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\n\n",
"https://github.com/paranim/paravim": "# Package\n\nversion       = \"0.18.2\"\nauthor        = \"oakes\"\ndescription   = \"A parasitic editor\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\ninstallExt    = @[\n  \"nim\", \"txt\", \"ttf\", \"glsl\", \"c\", \"h\",\n  when defined(windows):\n    \"dll\"\n  elif defined(macosx):\n    \"dylib\"\n  elif defined(linux):\n    \"so\"\n]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"paranim >= 0.10.0\"\nrequires \"pararules >= 0.14.0\"\nrequires \"paratext >= 0.9.0\"\nrequires \"illwill >= 0.2.0\"\n",
"https://raw.githubusercontent.com/treeform/pg/master/pg.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Andre von Houck\"\ndescription   = \"Very simple PostgreSQL async api for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.1\"\n",
"https://raw.githubusercontent.com/Araq/sphinx/master/sphinx.nimble": "[Package]\r\nname          = \"sphinx\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf\"\r\ndescription   = \"Sphinx wrapper for Nim\"\r\nlicense       = \"LGPL\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://raw.githubusercontent.com/moigagoo/norman/master/norman.nimble": "# Package\n\nversion       = \"2.1.7\"\nauthor        = \"Constantine Molchanov\"\ndescription   = \"Scaffolder and migration manager for Norm.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"nims\"]\nbinDir        = \"bin\"\nbin           = @[\"norman\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"norm >= 2.2.1\", \"cligen >= 1.1.0\", \"dotenv >= 1.1.1\"\n\ntask docs, \"Generate docs\":\n  rmDir \"htmldocs\"\n  exec \"nimble doc --outdir:htmldocs --project --index:on src/norman\"\n  exec \"nim rst2html -o:htmldocs/index.html README.rst\"\n  cpFile(\"CNAME\", \"htmldocs/CNAME\")\n",
"https://raw.githubusercontent.com/zevv/nimcmaes/master/nimcmaes.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Ico Doornekamp\"\ndescription   = \"Nim CMAES library\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/RainbowAsteroids/host": "import os\n\n# Package\n\nversion       = \"1.2.1\"\nauthor        = \"Rainbow Asteroids\"\ndescription   = \"A program to staticlly host files or directories over HTTP\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"host\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\n\n# Tasks\n\ntask release, \"Builds the release version of host and puts it a output/ directory\":\n  mkDir(\"output\")\n  exec(\"nim c -d:release --outdir:output src/host\")\n\nafter install:\n  if system.hostOS == \"linux\":\n    echo \"Adding man pages to ~/.nimble/man...\"\n\n    if not dirExists($getHomeDir() & \"/.nimble/man\"):\n      cpDir(\"man\", $getHomeDir() & \"/.nimble/man\")\n    echo \"Man page installed!\"\n\n    if not staticExec(\"manpath\").contains(\".nimble/man\"):\n      echo \"~/.nimble/man isn't in your manpath! Be sure fix that for access to the host man page.\"\n",
"https://github.com/achesak/nim-gravatar": "[Package]\nname = \"gravatar\"\nversion = \"0.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Gravatar API wrapper\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://api.github.com/repos/blamestross/nimrod-vectors/contents": "[{\"name\":\"readme.md\",\"path\":\"readme.md\",\"sha\":\"22cd9315315968f8b5a9e9d490bd0cc0fb705a88\",\"size\":1483,\"url\":\"https://api.github.com/repos/blamestross/nimrod-vectors/contents/readme.md?ref=master\",\"html_url\":\"https://github.com/blamestross/nimrod-vectors/blob/master/readme.md\",\"git_url\":\"https://api.github.com/repos/blamestross/nimrod-vectors/git/blobs/22cd9315315968f8b5a9e9d490bd0cc0fb705a88\",\"download_url\":\"https://raw.githubusercontent.com/blamestross/nimrod-vectors/master/readme.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/blamestross/nimrod-vectors/contents/readme.md?ref=master\",\"git\":\"https://api.github.com/repos/blamestross/nimrod-vectors/git/blobs/22cd9315315968f8b5a9e9d490bd0cc0fb705a88\",\"html\":\"https://github.com/blamestross/nimrod-vectors/blob/master/readme.md\"}},{\"name\":\"vectors.babel\",\"path\":\"vectors.babel\",\"sha\":\"877d8a0784667e3b63538fc5911a4780d3962cb9\",\"size\":206,\"url\":\"https://api.github.com/repos/blamestross/nimrod-vectors/contents/vectors.babel?ref=master\",\"html_url\":\"https://github.com/blamestross/nimrod-vectors/blob/master/vectors.babel\",\"git_url\":\"https://api.github.com/repos/blamestross/nimrod-vectors/git/blobs/877d8a0784667e3b63538fc5911a4780d3962cb9\",\"download_url\":\"https://raw.githubusercontent.com/blamestross/nimrod-vectors/master/vectors.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/blamestross/nimrod-vectors/contents/vectors.babel?ref=master\",\"git\":\"https://api.github.com/repos/blamestross/nimrod-vectors/git/blobs/877d8a0784667e3b63538fc5911a4780d3962cb9\",\"html\":\"https://github.com/blamestross/nimrod-vectors/blob/master/vectors.babel\"}},{\"name\":\"vectors.nim\",\"path\":\"vectors.nim\",\"sha\":\"142456163c3e677801f46539ab901aa0aa3b4aeb\",\"size\":1984,\"url\":\"https://api.github.com/repos/blamestross/nimrod-vectors/contents/vectors.nim?ref=master\",\"html_url\":\"https://github.com/blamestross/nimrod-vectors/blob/master/vectors.nim\",\"git_url\":\"https://api.github.com/repos/blamestross/nimrod-vectors/git/blobs/142456163c3e677801f46539ab901aa0aa3b4aeb\",\"download_url\":\"https://raw.githubusercontent.com/blamestross/nimrod-vectors/master/vectors.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/blamestross/nimrod-vectors/contents/vectors.nim?ref=master\",\"git\":\"https://api.github.com/repos/blamestross/nimrod-vectors/git/blobs/142456163c3e677801f46539ab901aa0aa3b4aeb\",\"html\":\"https://github.com/blamestross/nimrod-vectors/blob/master/vectors.nim\"}}]",
"https://raw.githubusercontent.com/c-blake/hldiff/master/hldiff.nimble": "# Package\nversion     = \"0.4\"\nauthor      = \"Charles Blake\"\ndescription = \"A port of Python difflib to compute & (re)highlight diff output intraline\"\nlicense     = \"MIT/ISC\"\ninstallExt  = @[ \"nim\" ]\nbin         = @[ \"hldiff\", \"hldiffpkg/edits\" ]\n\n# Dependencies\nrequires \"nim >= 0.20.2\", \"cligen >= 1.2.0\"\n",
"https://github.com/status-im/nim-http-utils": "packageName   = \"httputils\"\nversion       = \"0.2.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"HTTP request/response helpers & parsing procedures\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\", \"Nim\"]\n\n### Dependencies\nrequires \"nim >= 0.17.3\"\n\ntask test, \"run tests\":\n  exec \"nim c -r -d:useSysAssert -d:useGcAssert tests/tvectors\"\n  exec \"nim c -r tests/tvectors\"\n  exec \"nim c -r -d:release --threads:on tests/tvectors\"\n",
"https://raw.githubusercontent.com/thebigbaron/rainbow/master/rainbow.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"BigBaron\"\ndescription   = \"256 colors for shell\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/Riderfighter/binio/master/binio.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Riderfighter\"\ndescription   = \"Package for packing and unpacking byte data\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\", \"struct >= 0.1.0\"\n",
"https://github.com/genotrance/nimclipboard": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"Nim wrapper for libclipboard\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.4.0\"\n\nvar\n  name = \"nimclipboard\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nmkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/achesak/nim-pwd/master/pwd.nimble": "[Package]\nname = \"pwd\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with the UNIX password file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://raw.githubusercontent.com/gokr/spry/master/spry.nimble": "# Package\nversion       = \"0.9.0\"\nauthor        = \"Göran Krampe\"\ndescription   = \"Homoiconic dynamic language in Nim\"\nlicense       = \"MIT\"\nbin           = @[\"spry\",\"ispry\"]\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nskipExt       = @[\"nim\"]\n\n# Deps\nrequires \"spryvm\"\n\n",
"https://raw.githubusercontent.com/khchen/hashlib/master/hashlib.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Ward\"\ndescription   = \"Hash Library for Nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"nimcrypto >= 0.4.11\"\n\n# Tests\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/api_test\"\n\ntask md5_bench, \"Runs the md5 benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/md5_bench\"\n\ntask sha1_bench, \"Runs the sha1 benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/sha1_bench\"\n\ntask sha2_bench, \"Runs the sha2 benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/sha2_bench\"\n\ntask sha3_bench, \"Runs the sha3 benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/sha3_bench\"\n\ntask all_bench, \"Runs the all benchmark\":\n  exec \"nim c -r -d:release --opt:speed tests/all_bench\"\n\n# Clean\n\ntask clean, \"Delete all the executable files\":\n  exec \"cmd /c IF EXIST tests\\\\*.exe del tests\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\*.exe del examples\\\\*.exe\"\n",
"https://github.com/achesak/nim-spwd": "[Package]\nname = \"spwd\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"module for working with the UNIX shadow password file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.15\"\n",
"https://github.com/zendbit/nim.nwatchdog": "# Package\n\nversion       = \"0.0.6\"\nauthor        = \"Amru Rosyada\"\ndescription   = \"Simple watchdog (watch file changes modified, deleted, created) in nim lang.\"\nlicense       = \"BSD\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/jyapayne/mort": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"A dead code locator for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/Nycto/RBTreeNim/master/rbtree.nimble": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"Nycto\"\ndescription   = \"Red/Black Tree\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[]\n\n# Deps\n\nrequires \"nim >= 0.11.2\"\n\n",
"https://github.com/markspanbroek/mnemonic": "# Package\n\nversion     = \"0.1.3\"\nauthor      = \"Mark Spanbroek\"\ndescription = \"Create memorable sentences from byte sequences.\"\nlicense     = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.6 & < 2.0.0\"\nrequires \"nimsha2 >= 0.1.1 & < 0.2.0\"\n",
"https://raw.githubusercontent.com/miere43/autome/master/autome.nimble": "packageName           = \"autome\"\nversion               = \"0.1.2\"\nauthor                = \"Vladislav Vorobiev\"\ndescription           = \"Write GUI automation scripts with Nim\"\nlicense               = \"MIT\"\nskipFiles             = @[\"autome.html\"]\n\nrequires \"nim >= 0.11.2\"\n",
"https://github.com/FedericoCeratto/nim-testrunner": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Test runner\"\nlicense       = \"GPLv3\"\nbin           = @[\"testrunner\"]\n\n# Dependencies\n\nwhen defined(Linux):\n  requires \"nim >= 0.16.0\", \"libnotify\", \"fswatch\"\nelse:\n  requires \"nim >= 0.16.0\"\n\n",
"https://raw.githubusercontent.com/achesak/extmath.nim/master/extmath.nimble": "[Package]\nname = \"extmath\"\nversion = \"1.2.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Nimrod math library\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.2\"\n",
"https://raw.githubusercontent.com/paranim/paranim/master/paranim.nimble": "# Package\n\nversion       = \"0.10.0\"\nauthor        = \"oakes\"\ndescription   = \"A game library for nim\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"nimgl >= 1.1.1\"\nrequires \"glm >= 1.1.1\"\n",
"https://github.com/treeform/chroma": "# Package\nversion = \"0.2.1\"\nauthor = \"Andre von Houck\"\ndescription = \"Everything you want to do with colors\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/vegansk/xmltools/master/xmltools.nimble": "# Package\n\nversion       = \"0.1.6\"\nauthor        = \"Anatoly Galiulin <galiulin.anatoly@gmail.com>\"\ndescription   = \"High level xml library for Nim\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"nimfp >= 0.4.4\", \"nimboost >= 0.5.5\"\n",
"https://github.com/onionhammer/nim-templates.git": "version = \"0.5\"\nauthor = \"Erik O'Leary\"\ndescription = \"a compile-time templating engine for nim\"\nlicense = \"BSD\"\nskipDirs = @[\"tests\"]\ntask test, \"Runs the test suite\":\n  exec \"nim c --outdir:bin -r tests/annotate_tests.nim\"\n  exec \"nim c --outdir:bin -r tests/templates_tests.nim\"\n  exec \"nim js --outdir:bin -r tests/js_target.nim\"\n",
"https://raw.githubusercontent.com/yglukhov/darwin/master/darwin.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Collection of bindings to MacOS and iOS APIs\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n",
"https://raw.githubusercontent.com/euantorano/spdx_licenses.nim/master/spdx_licenses.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Euan T\"\ndescription   = \"A library to retrieve the list of commonly used licenses from the SPDX License List.\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask docs, \"Create documentation\":\n  exec \"nim doc --index:on -o:docs/spdx_licenses.html src/spdx_licenses.nim\"\n\ntask test, \"Run the tests\":\n  withDir \"tests\":\n    exec \"nim c -r main\"\n",
"https://raw.githubusercontent.com/treeform/pixie/master/pixie.nimble": "version     = \"0.0.20\"\nauthor      = \"Andre von Houck and Ryan Oldenburg\"\ndescription = \"Full-featured 2d graphics library for Nim.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.6\"\nrequires \"vmath >= 0.4.0\"\nrequires \"chroma >= 0.2.1\"\nrequires \"zippy >= 0.3.5\"\nrequires \"flatty >= 0.1.3\"\nrequires \"nimsimd >= 1.0.0\"\nrequires \"bumpy >= 1.0.1\"\n",
"https://raw.githubusercontent.com/6A/Keystone.nim/master/keystone.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Grégoire Geis\"\ndescription   = \"Bindings to the Keystone Assembler.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.8\"\n",
"https://raw.githubusercontent.com/planety/Prologue/master/prologue.nimble": "# Package\n\nversion       = \"0.4.4\"\nauthor        = \"flywind\"\ndescription   = \"Prologue is an elegant and high performance web framework\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\nrequires \"nim >= 1.4.0\"\nrequires \"regex >= 0.16.2\"\nrequires \"nimcrypto >= 0.5.4\"\nrequires \"cookiejar >= 0.2.0\"\nrequires \"httpx >= 0.2.0\"\nrequires \"logue >= 0.2.0\"\n\n\n# tests\ntask tests, \"Run all tests\":\n  exec \"testament all\"\n\ntask tstdbackend, \"Test asynchttpserver backend\":\n  exec \"nim c -r -d:release -d:usestd tests/server/tserver_application.nim\"\n\ntask texamples, \"Test examples\":\n  exec \"nim c -d:release tests/compile/test_examples/examples.nim\"\n  exec \"nim c -d:release -d:usestd tests/compile/test_examples/examples.nim\"\n\ntask treadme, \"Test Readme\":\n  exec \"nim c -d:release tests/compile/test_readme/readme.nim\"\n\ntask tcompile, \"Test Compile\":\n  exec \"nim c -r -d:release tests/compile/test_compile/test_compile.nim\"\n\ntask docs, \"Only for gh-pages, not for users\":\n  exec \"mkdocs build\"\n  exec \"mkdocs gh-deploy\"\n\ntask apis, \"Only for api\":\n  exec \"nim doc --verbosity:0 --warnings:off --project --index:on \" &\n    \"--git.url:https://github.com/planety/prologue \" &\n    \"--git.commit:devel \" &\n    \"-o:docs/coreapi \" &\n    \"src/prologue/core/application.nim\"\n\n  exec \"nim buildIndex -o:docs/coreapi/theindex.html docs/coreapi\"\n\n  exec \"nim doc --verbosity:0 --warnings:off --project --index:on \" &\n    \"--git.url:https://github.com/planety/prologue \" &\n    \"--git.commit:devel \" &\n    \"-o:docs/plugin \" &\n    \"src/prologue/plugin.nim\"\n\n  exec \"nim buildIndex -o:docs/plugin/theindex.html docs/plugin\"\n\ntask redis, \"Install redis\":\n  exec \"nimble install redis@#c02d404 -y\"\n\ntask karax, \"Install karax\":\n  exec \"\"\"nimble install karax@\">= 1.1.2\" -y\"\"\"\n\ntask websocketx, \"Install websocketx\":\n  exec \"\"\"nimble install websocketx@\">= 0.1.2\" -y\"\"\"\n\ntask extension, \"Install all extensions\":\n  exec \"nimble redis\"\n  exec \"nimble karax\"\n  exec \"nimble websocketx\"\n",
"https://github.com/HugoGranstrom/numericalnim/": "# Package Information\nversion = \"0.6.1\"\nauthor = \"Hugo Granström\"\ndescription = \"A collection of numerical methods written in Nim. Current features: integration, ode, optimization.\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.20.0\", \"arraymancer >= 0.5.0\"\n",
"https://raw.githubusercontent.com/xflywind/timeit/master/timeit.nimble": "# Package\n\nversion       = \"0.3.6\"\nauthor        = \"flywind\"\ndescription   = \"measuring execution times written in nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"timeit\"]\n\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask tests, \"Run tests\":\n  exec \"nim c -r tests/examples.nim\"\n",
"https://github.com/paul-nameless/nimbler": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Paul Nameless\"\ndescription   = \"A new awesome nimble package\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nskipFiles = @[\"run.nim\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0\"\n",
"https://github.com/xmonader/nim-servy": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"a down to earth webframework in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"servy\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"terminaltables\"\nrequires \"ws\"\n",
"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents": "[{\"name\":\"LICENSE.md\",\"path\":\"LICENSE.md\",\"sha\":\"323903292f501c48d584d38af29c4b9da31b2524\",\"size\":1077,\"url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/LICENSE.md?ref=master\",\"html_url\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/LICENSE.md\",\"git_url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/323903292f501c48d584d38af29c4b9da31b2524\",\"download_url\":\"https://raw.githubusercontent.com/rafaelvasco/nimrod-glfw/master/LICENSE.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/LICENSE.md?ref=master\",\"git\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/323903292f501c48d584d38af29c4b9da31b2524\",\"html\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/LICENSE.md\"}},{\"name\":\"gitignore.txt\",\"path\":\"gitignore.txt\",\"sha\":\"aea9e1e590cebe607c7f6882ec1b23c97d14e5ca\",\"size\":16,\"url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/gitignore.txt?ref=master\",\"html_url\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/gitignore.txt\",\"git_url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/aea9e1e590cebe607c7f6882ec1b23c97d14e5ca\",\"download_url\":\"https://raw.githubusercontent.com/rafaelvasco/nimrod-glfw/master/gitignore.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/gitignore.txt?ref=master\",\"git\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/aea9e1e590cebe607c7f6882ec1b23c97d14e5ca\",\"html\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/gitignore.txt\"}},{\"name\":\"glfw.nimble\",\"path\":\"glfw.nimble\",\"sha\":\"cb1066422e42e37088407e29463d8703015aac01\",\"size\":411,\"url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/glfw.nimble?ref=master\",\"html_url\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/glfw.nimble\",\"git_url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/cb1066422e42e37088407e29463d8703015aac01\",\"download_url\":\"https://raw.githubusercontent.com/rafaelvasco/nimrod-glfw/master/glfw.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/glfw.nimble?ref=master\",\"git\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/cb1066422e42e37088407e29463d8703015aac01\",\"html\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/glfw.nimble\"}},{\"name\":\"glfw3.nim\",\"path\":\"glfw3.nim\",\"sha\":\"878651116de3162de93843aa367a475cc9cbc95b\",\"size\":20565,\"url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/glfw3.nim?ref=master\",\"html_url\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/glfw3.nim\",\"git_url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/878651116de3162de93843aa367a475cc9cbc95b\",\"download_url\":\"https://raw.githubusercontent.com/rafaelvasco/nimrod-glfw/master/glfw3.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/glfw3.nim?ref=master\",\"git\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/878651116de3162de93843aa367a475cc9cbc95b\",\"html\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/glfw3.nim\"}},{\"name\":\"glfw3native\",\"path\":\"glfw3native\",\"sha\":\"0dd1484ce6c490afee00708bbca1e99dd6027b25\",\"size\":0,\"url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/glfw3native?ref=master\",\"html_url\":\"https://github.com/rafaelvasco/nimrod-glfw/tree/master/glfw3native\",\"git_url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/trees/0dd1484ce6c490afee00708bbca1e99dd6027b25\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/glfw3native?ref=master\",\"git\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/trees/0dd1484ce6c490afee00708bbca1e99dd6027b25\",\"html\":\"https://github.com/rafaelvasco/nimrod-glfw/tree/master/glfw3native\"}},{\"name\":\"readme.md\",\"path\":\"readme.md\",\"sha\":\"1a1388c02edd2792afde421b7cb943b38f287d2b\",\"size\":447,\"url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/readme.md?ref=master\",\"html_url\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/readme.md\",\"git_url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/1a1388c02edd2792afde421b7cb943b38f287d2b\",\"download_url\":\"https://raw.githubusercontent.com/rafaelvasco/nimrod-glfw/master/readme.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/readme.md?ref=master\",\"git\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/blobs/1a1388c02edd2792afde421b7cb943b38f287d2b\",\"html\":\"https://github.com/rafaelvasco/nimrod-glfw/blob/master/readme.md\"}},{\"name\":\"test\",\"path\":\"test\",\"sha\":\"fef2fa3ac984c74ac40202a224a360604dade639\",\"size\":0,\"url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/test?ref=master\",\"html_url\":\"https://github.com/rafaelvasco/nimrod-glfw/tree/master/test\",\"git_url\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/trees/fef2fa3ac984c74ac40202a224a360604dade639\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/contents/test?ref=master\",\"git\":\"https://api.github.com/repos/rafaelvasco/nimrod-glfw/git/trees/fef2fa3ac984c74ac40202a224a360604dade639\",\"html\":\"https://github.com/rafaelvasco/nimrod-glfw/tree/master/test\"}}]",
"https://raw.githubusercontent.com/SolitudeSF/blurhash/master/blurhash.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Encoder/decoder for blurhash algorithm\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"imageman >= 0.7.4\"\n",
"https://github.com/ThomasTJdev/choosenim_gui": "# Package\nversion       = \"0.1.0\"\nauthor        = \"Thomas T. Jarløv (https://github.com/ThomasTJdev)\"\ndescription   = \"Choosenim with GUI\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"choosenimgui\"]\n\n# Dependencies\nrequires \"nim >= 1.2.0\"\nrequires \"webgui >= 0.1.0\"\n",
"https://raw.githubusercontent.com/tulayang/asyncdocker/master/asyncdocker.nimble": "[Package]\nname        = \"asyncdocker\"\nversion     = \"0.3.0\"\nauthor      = \"Wang Tong\"\ndescription = \"Asynchronous docker client written by Nim-lang\"\nlicense     = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13.0\"\n",
"https://github.com/oprypin/nim-random": "packageName   = \"random\"\nversion       = \"0.5.7\"\nauthor        = \"Oleh Prypin\"\ndescription   = \"Pseudo-random number generation library inspired by Python\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"test\"]\n\nrequires \"nim >= 0.12.0\"\n\ntask test, \"test nim-random\":\n  --define: test\n  --run\n  setCommand \"c\", \"test/test.nim\"\n",
"https://github.com/nimious/io-serialport.git": "[Package]\nname: \"serialport\"\nversion: \"1.0\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for libserialport, the cross-platform serial communication library.\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.12.0\"\n",
"https://github.com/keyme/nim_intel_hex": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"Intel hex file utility library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/YesDrX/numnim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"YesDrX\"\ndescription   = \"A numpy like ndarray and dataframe library for nim-lang.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\nskipDirs      = @[\"core/parallel\"]\n# Dependencies\nrequires \"nim >= 1.0.0\", \"nimblas >= 0.2.2\", \"nimlapack >= 0.2.0\", \"nimpy >= 0.1.0\"\n\ntask test, \"Run the tests\":\n    exec \"nim c -r tests/incltests.nim\"\n    rmFile \"tests/incltests\"\n",
"https://github.com/treeform/openal": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"treeform\"\ndescription   = \"An OpenAL wrapper for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/disruptek/gcplat/master/gcplat.nimble": "version = \"3.0.1\"\nauthor = \"disruptek\"\ndescription = \"Google Cloud Platform (GCP) APIs\"\nlicense = \"MIT\"\nrequires \"nim >= 0.20.0\"\nrequires \"https://github.com/yglukhov/nim-jwt.git#de8fcd3b6646807c9b27708d793b1dd9245f530a\"\nrequires \"https://github.com/disruptek/rest.git >= 1.0.0\"\nrequires \"https://github.com/disruptek/openapi.git >= 3.1.3\"\nrequires \"npeg >= 0.22.2\"\n\nsrcDir = \"src\"\n",
"https://github.com/dom96/choosenim": "# Package\n\nversion       = \"0.7.5\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"The Nim toolchain installer.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\nbinDir = \"bin\"\nbin = @[\"choosenim\"]\n\nskipExt = @[\"nim\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\", \"nimble#8f7af86\"\nrequires \"nimterop >= 0.6.12\", \"nimarchive >= 0.5.3\"\n#requires \"libcurl >= 1.0.0\" - OSX now uses httpclient\nrequires \"analytics >= 0.2.0\"\nrequires \"osinfo >= 0.3.0\"\n",
"https://raw.githubusercontent.com/alehander42/breeze/master/breeze.nimble": "version         = \"0.0.5\"\npackageName     = \"breeze\"\nauthor          = \"Alexander Ivanov\"\ndescription     = \"macro dsl\"\nlicense         = \"MIT\"\n\nrequires \"nim >= 0.16.1\"\n",
"https://github.com/samdmarshall/notmuch.nim": "# Package\n\nversion       = \"5.2.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"wrapper for the notmuch 0.28.0 mail library\"\nlicense       = \"BSD 3-Clause\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://raw.githubusercontent.com/lambci/awslambda.nim/master/awslambda.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Michael Hart\"\ndescription   = \"A package to compile nim functions for AWS Lambda\"\nlicense       = \"MIT\"\nsrcDir        = \".\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/stefansalewski/minmaxheap": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Stefan Salewski\"\ndescription   = \"MinMaxHeap\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\n",
"https://raw.githubusercontent.com/Araq/libcurl/master/libcurl.nimble": "# Package\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf, Dominik Picheta\"\r\ndescription   = \"Nim wrapper for libcurl.\"\r\nlicense       = \"MIT\"\r\n\r\n# Deps\r\nrequires \"nim >= 0.10.0\"\r\n",
"https://github.com/jlp765/seqmath": "# Package\n\nversion     = \"0.1.2\"\nauthor      = \"James Parkinson\"\ndescription = \"math for sequences and nested sequences\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/tall.nim\"\n",
"https://github.com/jyapayne/nim-extensions": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"Nim extensions. Includes an object oriented programming (oop, class) macro\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.1\"\n",
"https://github.com/fowlmouth/nim-termbox": "[package]\nname: \"termbox\"\nversion: \"1.0\"\nauthor: \"fowl\"\ndescription: \"Wrapper for Termbox, it beats the hell out of curses. (https://github.com/nsf/termbox)\"\nlicense: \"MIT\"\n\n[deps]\nrequires: \"nimrod >= 0.9.2\"\n\n",
"https://raw.githubusercontent.com/markspanbroek/nimpc/master/NiMPC.nimble": "# Package\n\nversion       = \"0.4.1\"\nauthor        = \"Mark Spanbroek\"\ndescription   = \"Secure multi-party computation\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0 & < 1.3.0\"\nrequires \"sysrandom >= 1.1.0 & < 2.0.0\"\nrequires \"simpleot >= 0.5.1 & < 0.6.0\"\nrequires \"monocypher >= 0.2.0 & < 0.3.0\"\n",
"https://github.com/docopt/docopt.nim": "version = \"0.6.8\"\nauthor = \"Oleh Prypin\"\ndescription = \"Command line option parser that will make you smile\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\nrequires \"nim >= 0.15.0\"\nrequires \"regex >= 0.11.1\"\n\ntask test, \"Test\":\n  exec \"nimble c --verbosity:0 -r -y test/test\"\n  for f in listFiles(\"examples\"):\n    if f[^4..^1] == \".nim\": exec \"nim compile --verbosity:0 --hints:off \" & f\n",
"https://api.github.com/repos/ziotom78/nimcfitsio/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"de2a9485c9094c60a0032b58f8618cbb89b5a93e\",\"size\":38,\"url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/ziotom78/nimcfitsio/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/de2a9485c9094c60a0032b58f8618cbb89b5a93e\",\"download_url\":\"https://raw.githubusercontent.com/ziotom78/nimcfitsio/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/de2a9485c9094c60a0032b58f8618cbb89b5a93e\",\"html\":\"https://github.com/ziotom78/nimcfitsio/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"d0c53594db0ad983a43ca0cd8906fd01655cd58b\",\"size\":1083,\"url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/ziotom78/nimcfitsio/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/d0c53594db0ad983a43ca0cd8906fd01655cd58b\",\"download_url\":\"https://raw.githubusercontent.com/ziotom78/nimcfitsio/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/d0c53594db0ad983a43ca0cd8906fd01655cd58b\",\"html\":\"https://github.com/ziotom78/nimcfitsio/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"071f140d48a7a271a5d03a8489f65ce901dc46eb\",\"size\":149,\"url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/README.md?ref=master\",\"html_url\":\"https://github.com/ziotom78/nimcfitsio/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/071f140d48a7a271a5d03a8489f65ce901dc46eb\",\"download_url\":\"https://raw.githubusercontent.com/ziotom78/nimcfitsio/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/071f140d48a7a271a5d03a8489f65ce901dc46eb\",\"html\":\"https://github.com/ziotom78/nimcfitsio/blob/master/README.md\"}},{\"name\":\"cfitsio.nim\",\"path\":\"cfitsio.nim\",\"sha\":\"b168e382971a7885c7ed7f793c5016d77fef67ba\",\"size\":67125,\"url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/cfitsio.nim?ref=master\",\"html_url\":\"https://github.com/ziotom78/nimcfitsio/blob/master/cfitsio.nim\",\"git_url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/b168e382971a7885c7ed7f793c5016d77fef67ba\",\"download_url\":\"https://raw.githubusercontent.com/ziotom78/nimcfitsio/master/cfitsio.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/cfitsio.nim?ref=master\",\"git\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/b168e382971a7885c7ed7f793c5016d77fef67ba\",\"html\":\"https://github.com/ziotom78/nimcfitsio/blob/master/cfitsio.nim\"}},{\"name\":\"data\",\"path\":\"data\",\"sha\":\"b3416b84b9e2d0b2ad150681fd0a6d4aa10ccb9d\",\"size\":0,\"url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/data?ref=master\",\"html_url\":\"https://github.com/ziotom78/nimcfitsio/tree/master/data\",\"git_url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/trees/b3416b84b9e2d0b2ad150681fd0a6d4aa10ccb9d\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/data?ref=master\",\"git\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/trees/b3416b84b9e2d0b2ad150681fd0a6d4aa10ccb9d\",\"html\":\"https://github.com/ziotom78/nimcfitsio/tree/master/data\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"d91ef18fd3c1cd767c421c02683d8874579fe420\",\"size\":0,\"url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/docs?ref=master\",\"html_url\":\"https://github.com/ziotom78/nimcfitsio/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/trees/d91ef18fd3c1cd767c421c02683d8874579fe420\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/trees/d91ef18fd3c1cd767c421c02683d8874579fe420\",\"html\":\"https://github.com/ziotom78/nimcfitsio/tree/master/docs\"}},{\"name\":\"nimcfitsio.nimble\",\"path\":\"nimcfitsio.nimble\",\"sha\":\"543685f3d9a89719504b90938b337f5a4aa48b5e\",\"size\":230,\"url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/nimcfitsio.nimble?ref=master\",\"html_url\":\"https://github.com/ziotom78/nimcfitsio/blob/master/nimcfitsio.nimble\",\"git_url\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/543685f3d9a89719504b90938b337f5a4aa48b5e\",\"download_url\":\"https://raw.githubusercontent.com/ziotom78/nimcfitsio/master/nimcfitsio.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/ziotom78/nimcfitsio/contents/nimcfitsio.nimble?ref=master\",\"git\":\"https://api.github.com/repos/ziotom78/nimcfitsio/git/blobs/543685f3d9a89719504b90938b337f5a4aa48b5e\",\"html\":\"https://github.com/ziotom78/nimcfitsio/blob/master/nimcfitsio.nimble\"}}]",
"https://github.com/status-im/nim-daemon": "packageName   = \"daemon\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Cross-platform process daemonization\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\", \"Nim\", \"nim\"]\n\n### Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/testdaemon\"\n  exec \"nim c -r -d:release tests/testdaemon\"\n",
"https://github.com/fenekku/moustachu.git": "# Package\n\nversion     = \"0.14.0\"\nauthor      = \"Guillaume Viger\"\ndescription = \"Mustache templating for Nim\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\ninstallExt  = @[\"nim\"]\nbin         = @[\"moustachu\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"commandeer >= 0.10.4\"\n\n# Tasks\ntask tests, \"Run the Moustachu tester\":\n  exec \"nim compile --run runTests\"\n\ntask benchmarks, \"Run the Moustachu benchmarks\":\n  exec \"nim compile --run runBenchmarks\"",
"https://raw.githubusercontent.com/lcrees/romans/master/romans.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lcrees\"\ndescription   = \"Conversion between integers and Roman numerals\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n\ntask tests, \"Run tests\":\n    exec \"nim c -r tests/test_romans.nim\"",
"https://raw.githubusercontent.com/genotrance/plugins/master/plugins.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"genotrance\"\ndescription   = \"Plugin system for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n\nimport os, strformat, strutils\n\nlet\n  flags = \"--threads:on -o:html/ --project --index:on\"\n  expected = \"\"\"Plugin 'plg1' dependency 'plg2' not loaded\nPlugin 'plg2' loaded (plg1unload, plg2test)\nPlugin1 loaded\nplg2test: test1param\nPlugin1: test2return\nPlugin 'plg1' loaded (plg1test)\nPlugin1 ready\nPlugin2 ready\nplg1test: test2param\nPlugin2: test1return\nnotify: testmain\nplist: plg1 plg2\nPlugin 'plg1' unloaded\nPlugin1 loaded\nplg2test: test1param\nPlugin1: test2return\nPlugin 'plg1' loaded (plg1test)\nplg2test: testmain\nMain: test2return\nPlugin 'plg1' unloaded\nplg1unload: plg1\nPlugin 'plg2' unloaded\"\"\"\n\ntask docs, \"Doc generation\":\n  exec &\"nim doc {flags} src/plugins.nim\"\n  exec &\"nim doc {flags} src/plugins/api.nim\"\n  exec &\"nim buildIndex -o:html/theindex.html html/\"\n\ntask docsPublish, \"Doc generation and publish\":\n  docsTask()\n  exec \"ghp-import --no-jekyll -fp html\"\n\ntask clean, \"Clean up\":\n  rmFile(\"tests/tmain\" & ExeExt)\n  let\n    dlext = DynlibFormat.splitFile().ext\n  for file in listFiles(\"tests/test1\"):\n    if file.splitFile().ext == dlext:\n      rmFile(file)\n  rmDir(\"html\")\n\ntask test, \"Test all\":\n  for build in [\"\", \"-d:release\"]:\n    cleanTask()\n    for mode in [\"\", \"-d:binary\"]:\n      exec &\"nim c {build} {mode} tests/tmain\"\n      exec \"ls -l tests\"\n      let (outp, errC) = gorgeEx(\"./tests/tmain quit\")\n      exec \"ls -l tests/test1\"\n      doAssert outp.strip() == expected and errC == 0, &\"\"\"\n\nExpected:\n{expected}\n\nOutput:\n{outp}\n\nError: {errC}\n\"\"\"\n\n  docsTask()",
"https://raw.githubusercontent.com/lmariscal/nimgl/master/nimgl.nimble": "# Package\n\nversion     = \"1.1.0\"\nauthor      = \"Leonardo Mariscal\"\ndescription = \"Nim Game Library\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nskipDirs    = @[\".github\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Tasks\n\nimport\n  strutils\n\nconst\n  docDir = \"docs\"\n\nproc nimExt(file: string): bool =\n  file[file.len - 4 ..< file.len] == \".nim\"\n\nproc genDocs(pathr: string, output: string) =\n  let path = pathr.replace(r\"\\\", \"/\")\n  var src = path[path.rfind(\"/\") + 1 .. path.len - 5]\n  echo \"\\n[info] generating \" & src & \".nim\"\n  if src == \"nimgl\":\n    src = \"index\"\n  exec(\"nim doc -d:vulkan -o:\" & output & \"/\" & src & \".html\" & \" \" & path)\n\nproc walkRecursive(dir: string) =\n  for f in listFiles(dir):\n    if f.nimExt: genDocs(f, docDir)\n  for od in listDirs(dir):\n    walkRecursive(od)\n\ntask test, \"Run files under examples dir\":\n  exec(\"nimble install -y glm\")\n  for file in listFiles(\"examples\"):\n    if file[6] == 't' and file.nimExt:\n      echo \"\\n[info] testing \" & file[6..<file.len]\n      exec(\"nim c -d:opengl_debug \" & file)\n\ntask docs, \"Generate documentation for all of the library\":\n  walkRecursive(srcDir)\n",
"https://raw.githubusercontent.com/Skrylar/skyhash/master/skyhash.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Joshua Cearley\"\ndescription   = \"Computes the hashes of various things.\"\nlicense       = \"MPL-2\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/awr1/cpuwhat": "# Package\nversion     = \"0.1.1\"\nauthor      = \"A. W. Rohan\"\ndescription = \"Nim utilities for advanced CPU operations: CPU identification, bindings to assorted intrinsics\"\nlicense     = \"ISC\"\nsrcDir      = \"source\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\nrequires \"nimterop >= 0.4.4\"\n",
"https://raw.githubusercontent.com/dariolah/niup/master/niup.nimble": "# Package\n\nversion       = \"3.30.0\"\nauthor        = \"Dario Lah\"\ndescription   = \"IUP FFI bindings\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Linux):\n    foreignDep \"libiup.so\"\n    foreignDep \"libiupcd.so\"\n    foreignDep \"libiupcontrols.so\"\n    foreignDep \"libiupglcontrols.so\"\n    foreignDep \"libiupgl.so\"\n    foreignDep \"libiupimglib.so\"\n    foreignDep \"libiupim.so\"\n    foreignDep \"libiup_mglplot.so\"\n    foreignDep \"libiup_plot.so\"\n    foreignDep \"libiup_scintilla.so\"\n    foreignDep \"libiuptuio.so\"\n    foreignDep \"libiupweb.so\"\n\n  elif detectOs(Windows):\n    foreignDep \"libiup.dll\"\n    foreignDep \"libiupcd.dll\"\n    foreignDep \"libiupcontrols.dll\"\n    foreignDep \"libiupglcontrols.dll\"\n    foreignDep \"libiupgl.dll\"\n    foreignDep \"libiupimglib.dll\"\n    foreignDep \"libiupim.dll\"\n    foreignDep \"libiup_mglplot.dll\"\n    foreignDep \"libiup_plot.dll\"\n    foreignDep \"libiup_scintilla.dll\"\n    foreignDep \"libiuptuio.dll\"\n    foreignDep \"libiupweb.dll\"\n  else:\n    foreignDep \"libiup.dylib\"\n    foreignDep \"libiupcd.dylib\"\n    foreignDep \"libiupcontrols.dylib\"\n    foreignDep \"libiupglcontrols.dylib\"\n    foreignDep \"libiupgl.dylib\"\n    foreignDep \"libiupimglib.dylib\"\n    foreignDep \"libiupim.dylib\"\n    foreignDep \"libiup_mglplot.dylib\"\n    foreignDep \"libiup_plot.dylib\"\n    foreignDep \"libiup_scintilla.dylib\"\n    foreignDep \"libiuptuio.dylib\"\n    foreignDep \"libiupweb.dylib\"\n",
"https://raw.githubusercontent.com/haxscramper/ngspice/master/ngspice.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"haxscramper\"\ndescription   = \"Analog electronic circuit simiulator library\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.4\", \"sorta\", \"hmisc\"\n",
"https://raw.githubusercontent.com/sigmapie8/luhny/master/luhny.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Manav Garg (sigmapie8)\"\ndescription   = \"Luhn\\'s Algorithm implementation in Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://github.com/FedericoCeratto/tsundoku": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"OPDS ebook server\"\nlicense       = \"GPLv3\"\nbin           = @[\"tsundoku\"]\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\", \"jester\"\n",
"https://github.com/exelotl/trick": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"exelotl\"\ndescription   = \"GBA image conversion library and more\"\nlicense       = \"zlib\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"nimPNG >= 0.2.5\"\n",
"https://github.com/OpenSystemsLab/daemonize.nim": "[Package]\nname          = \"daemonize\"\nversion       = \"0.0.5\"\nauthor        = \"Huy Doan\"\ndescription   = \"This library makes your code run as a daemon process on Unix-like systems\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.20.0\"\n",
"https://github.com/planety/cookiejar": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"flywind\"\ndescription   = \"HTTP Cookies for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n\ntask tests, \"Run all tests\":\n  exec \"testament r test.nim\"\n",
"https://raw.githubusercontent.com/not-lum/imgcat/master/imgcat.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"not-lum\"\ndescription   = \"See pictures in your console\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"imgcat\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"flippy 0.4.5\"\nrequires \"cligen 1.2.2\"",
"https://github.com/status-im/nim-metrics": "mode = ScriptMode.Verbose\n\npackageName   = \"metrics\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Metrics client library supporting Prometheus\"\nlicense       = \"MIT or Apache License 2.0\"\nskipDirs      = @[\"tests\", \"benchmarks\"]\n\n### Dependencies\nrequires \"nim >= 0.18.0\"\n\n### Helper functions\nproc buildBinary(name: string, srcDir = \"./\", params = \"\", lang = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  var extra_params = params\n  if paramStr(1) != \"e\":\n    # we're under Nim, not Nimble\n    for i in 2..<paramCount():\n      extra_params &= \" \" & paramStr(i)\n  exec \"nim \" & lang & \" --out:./build/\" & name & \" -f --skipParentCfg \" & extra_params & \" \" & srcDir & name & \".nim\"\n\nproc test(name: string) =\n  buildBinary name, \"tests/\", \"-r -d:metrics --threads:on\"\n\nproc bench(name: string) =\n  buildBinary name, \"benchmarks/\", \"-r -d:metrics --threads:on -d:release\"\n\n### tasks\ntask test, \"Main tests\":\n  # build it with metrics disabled, first\n  buildBinary \"main_tests\", \"tests/\"\n  buildBinary \"main_tests\", \"tests/\", \"--threads:on\"\n  test \"main_tests\"\n  buildBinary \"bench_collectors\", \"benchmarks/\"\n  buildBinary \"bench_collectors\", \"benchmarks/\", \"-d:metrics --threads:on\"\n\ntask test_chronicles, \"Chronicles tests\":\n  buildBinary \"chronicles_tests\", \"tests/\"\n  test \"chronicles_tests\"\n\ntask benchmark, \"Run benchmarks\":\n  bench \"bench_collectors\"\n\n",
"https://github.com/genotrance/nimssl": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"genotrance et al.\"\ndescription   = \"OpenSSL wrapper for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.6\"\nrequires \"nimterop >= 0.3.5\"\n",
"https://raw.githubusercontent.com/PMunch/gtkgenui/master/gtkgenui.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Genui is a DSL macro for creating graphical user interfaces. This version is for the Gtk toolkit.\"\nlicense       = \"MIT\"\nsrcDir        = \"gtkgenui\"\n\n# Dependencies\n\nrequires      \"nim >= 0.19.0\"\nrequires      \"gtk2 >= 1.0\"\n\n# Skip examples from nimble installation\n\nskipFiles     = @[\"example.nim\"]\n\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-tor/master/tor.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Federico Ceratto and KittyTechno\"\ndescription   = \"Tor helper library\"\nlicense       = \"MPL-2.0\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/xmonader/nim-redisclient/master/redisclient.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"xmonader\"\ndescription   = \"Redis client for Nim\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.18.0\", \"redisparser >= 0.1.1\"\n\n\n\ntask genDocs, \"Create code documentation for redisclient\":\n    exec \"nim doc --threads:on --project src/redisclient.nim && rm -rf docs/api; mkdir -p docs && mv src/htmldocs docs/api \"\n",
"https://raw.githubusercontent.com/lcrees/pdcurses/master/pdcurses.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"lcrees\"\ndescription   = \"Nim wrapper for PDCurses\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"oldwinapi >= 2.0.0\"\n\n",
"https://raw.githubusercontent.com/PMunch/nim-persistent-vector/master/persvector.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Implementation of Clojures persistent vector in Nim for easy immutable lists.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires      \"nim >= 0.17.1\"\n\n# Skip examples from nimble installation\n\nskipFiles     = @[\"example.nim\"]\n\n",
"https://raw.githubusercontent.com/xmonader/nim-sonic-client/master/sonic.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"client for sonic search backend\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\ntask genDocs, \"Create code documentation for sonic\":\n    exec \"nim doc --threads:on --project src/sonic.nim && rm -rf docs/api; mkdir -p docs && mv src/htmldocs docs/api \"",
"https://api.github.com/repos/nimious/io-oculus/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"847ef2c2fcf30d2c8a434abc95f7875e6659a5c2\",\"size\":126,\"url\":\"https://api.github.com/repos/nimious/oculus/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/nimious/oculus/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/nimious/oculus/git/blobs/847ef2c2fcf30d2c8a434abc95f7875e6659a5c2\",\"download_url\":\"https://raw.githubusercontent.com/nimious/oculus/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/oculus/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/nimious/oculus/git/blobs/847ef2c2fcf30d2c8a434abc95f7875e6659a5c2\",\"html\":\"https://github.com/nimious/oculus/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"d0fd0d3cda1d249e9034568fe4e73250c4689f29\",\"size\":1092,\"url\":\"https://api.github.com/repos/nimious/oculus/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/nimious/oculus/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/nimious/oculus/git/blobs/d0fd0d3cda1d249e9034568fe4e73250c4689f29\",\"download_url\":\"https://raw.githubusercontent.com/nimious/oculus/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/oculus/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/nimious/oculus/git/blobs/d0fd0d3cda1d249e9034568fe4e73250c4689f29\",\"html\":\"https://github.com/nimious/oculus/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"4c2da77108e084ecbdcbcff6e2dad9a919d5f524\",\"size\":3732,\"url\":\"https://api.github.com/repos/nimious/oculus/contents/README.md?ref=master\",\"html_url\":\"https://github.com/nimious/oculus/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/nimious/oculus/git/blobs/4c2da77108e084ecbdcbcff6e2dad9a919d5f524\",\"download_url\":\"https://raw.githubusercontent.com/nimious/oculus/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/oculus/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/nimious/oculus/git/blobs/4c2da77108e084ecbdcbcff6e2dad9a919d5f524\",\"html\":\"https://github.com/nimious/oculus/blob/master/README.md\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"a0441bd511a5e864ac46c0eeef0aeae6d446ee06\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/oculus/contents/docs?ref=master\",\"html_url\":\"https://github.com/nimious/oculus/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/nimious/oculus/git/trees/a0441bd511a5e864ac46c0eeef0aeae6d446ee06\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/oculus/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/nimious/oculus/git/trees/a0441bd511a5e864ac46c0eeef0aeae6d446ee06\",\"html\":\"https://github.com/nimious/oculus/tree/master/docs\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"2b19c1b258fb403426687dd612a2cd9cc2539849\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/oculus/contents/examples?ref=master\",\"html_url\":\"https://github.com/nimious/oculus/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/nimious/oculus/git/trees/2b19c1b258fb403426687dd612a2cd9cc2539849\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/oculus/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/nimious/oculus/git/trees/2b19c1b258fb403426687dd612a2cd9cc2539849\",\"html\":\"https://github.com/nimious/oculus/tree/master/examples\"}},{\"name\":\"nim.cfg\",\"path\":\"nim.cfg\",\"sha\":\"42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"size\":13,\"url\":\"https://api.github.com/repos/nimious/oculus/contents/nim.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/oculus/blob/master/nim.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/oculus/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"download_url\":\"https://raw.githubusercontent.com/nimious/oculus/master/nim.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/oculus/contents/nim.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/oculus/git/blobs/42160c149fc96042e6fd96e44e2a62ea467e8d4c\",\"html\":\"https://github.com/nimious/oculus/blob/master/nim.cfg\"}},{\"name\":\"nimdoc.cfg\",\"path\":\"nimdoc.cfg\",\"sha\":\"16eac3b58304a510211b71deaf1fad0904bc7380\",\"size\":102,\"url\":\"https://api.github.com/repos/nimious/oculus/contents/nimdoc.cfg?ref=master\",\"html_url\":\"https://github.com/nimious/oculus/blob/master/nimdoc.cfg\",\"git_url\":\"https://api.github.com/repos/nimious/oculus/git/blobs/16eac3b58304a510211b71deaf1fad0904bc7380\",\"download_url\":\"https://raw.githubusercontent.com/nimious/oculus/master/nimdoc.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/oculus/contents/nimdoc.cfg?ref=master\",\"git\":\"https://api.github.com/repos/nimious/oculus/git/blobs/16eac3b58304a510211b71deaf1fad0904bc7380\",\"html\":\"https://github.com/nimious/oculus/blob/master/nimdoc.cfg\"}},{\"name\":\"oculus.nimble\",\"path\":\"oculus.nimble\",\"sha\":\"43ef750104c6f95ade448c5db1dbfa753bc9a358\",\"size\":197,\"url\":\"https://api.github.com/repos/nimious/oculus/contents/oculus.nimble?ref=master\",\"html_url\":\"https://github.com/nimious/oculus/blob/master/oculus.nimble\",\"git_url\":\"https://api.github.com/repos/nimious/oculus/git/blobs/43ef750104c6f95ade448c5db1dbfa753bc9a358\",\"download_url\":\"https://raw.githubusercontent.com/nimious/oculus/master/oculus.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/oculus/contents/oculus.nimble?ref=master\",\"git\":\"https://api.github.com/repos/nimious/oculus/git/blobs/43ef750104c6f95ade448c5db1dbfa753bc9a358\",\"html\":\"https://github.com/nimious/oculus/blob/master/oculus.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"e92bde369b1647cc93f5414e392a2a148dd85963\",\"size\":0,\"url\":\"https://api.github.com/repos/nimious/oculus/contents/src?ref=master\",\"html_url\":\"https://github.com/nimious/oculus/tree/master/src\",\"git_url\":\"https://api.github.com/repos/nimious/oculus/git/trees/e92bde369b1647cc93f5414e392a2a148dd85963\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/nimious/oculus/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/nimious/oculus/git/trees/e92bde369b1647cc93f5414e392a2a148dd85963\",\"html\":\"https://github.com/nimious/oculus/tree/master/src\"}}]",
"https://raw.githubusercontent.com/mikra01/timerpool/master/timerpool.nimble": "# Package\nversion = \"0.1.0\"\nauthor = \"Michael Krauter\"\ndescription = \"single thread Timerpool implementation in Nim for event purpose\"\nlicense = \"MIT\"\nskipDirs = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 0.17.0\"\n\ntask test, \"running tests\":\n  exec \"nim timerpool_tests\"",
"https://raw.githubusercontent.com/treeform/openal/master/openal.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"treeform\"\ndescription   = \"An OpenAL wrapper for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/linksplatform/Data.Triplets": "[Package]\r\nname = \"triplets\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.0.8\"\r\ndescription = \"The Nim bindings for linksplatform/Data.Triplets.Kernel.\"\r\nlicense = \"AGPLv3\"\r\nsrcDir = \"nim/src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://raw.githubusercontent.com/planety/kview/master/kview.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"flywind\"\ndescription   = \"For karax html preview.\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"karax\"\n\n\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/test.nim\"\n",
"https://raw.githubusercontent.com/lcrees/libuv/master/libuv.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"lcrees\"\ndescription   = \"libuv bindings for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://github.com/juancarlospaco/redneck-translator": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Redneck Translator for Y'all\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-crosscompile/master/crosscompile.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"juancarlospaco\"\ndescription   = \"Crosscompile Nim source code into multiple targets on Linux with this proc.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"zip\"\n",
"https://raw.githubusercontent.com/nim-lang/sdl2/master/sdl2.nimble": "# Package\nversion = \"2.0.3\"\nauthor = \"fowl\"\ndescription = \"Wrapper for SDL 2.x\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 0.12.0\"\n\n",
"https://raw.githubusercontent.com/brentp/falas/master/falas.nimble": "import ospaths\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/falas.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/falaspkg/version as _\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import falaspkg/version as _\n\n# Package\n\nversion       = falasVersion\nauthor        = \"Brent Pedersen\"\ndescription   = \"fragment-aware local assembler for short reads\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nsrcDir = \"src\"\ninstallExt = @[\"nim\"]\nbin = @[\"falas\"]\n\nskipDirs = @[\"tests\"]\n\nimport ospaths,strutils\n\ntask test, \"run the tests\":\n  exec \"nim c --lineDir:on --debuginfo -r --threads:on tests/all\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"falas\")\n  for file in listfiles(\"src/\"):\n    if file.endswith(\"value.nim\"): continue\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\").split(\"/\", 1)[1] & \" \" & file\n\n",
"https://github.com/jabbalaci/NimCliHelper": "# Package\n\nversion       = \"0.1.9\"\nauthor        = \"Laszlo Szathmary (Jabba Laci)\"\ndescription   = \"making Nim development easier in the command-line\"\nlicense       = \"MIT\"\nskipExt       = @[\"nim\"]\nbin           = @[\"rodcli\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/metacontainer/sctp.nim": "version     = \"0.1.0\"\nauthor      = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription = \"High-level Nim bindings for userspace SCTP implementation\"\nlicense     = \"BSD\"\nskipDirs = @[\"tests\"]\n\n# Deps\n\nrequires \"nim >= 0.17.3\"\nrequires \"reactor >= 0.4.6\"\n\n",
"https://api.github.com/repos/fowlmouth/nimrod-enet/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"cd8d123fcccb7a5f566eaddab8b95c3a0bad2ee6\",\"size\":31,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-enet/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/blobs/cd8d123fcccb7a5f566eaddab8b95c3a0bad2ee6\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-enet/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/blobs/cd8d123fcccb7a5f566eaddab8b95c3a0bad2ee6\",\"html\":\"https://github.com/fowlmouth/nimrod-enet/blob/master/.gitignore\"}},{\"name\":\"enet.babel\",\"path\":\"enet.babel\",\"sha\":\"b45544a1aef5e191256a2fe600443485c3701839\",\"size\":129,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/enet.babel?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-enet/blob/master/enet.babel\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/blobs/b45544a1aef5e191256a2fe600443485c3701839\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-enet/master/enet.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/enet.babel?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/blobs/b45544a1aef5e191256a2fe600443485c3701839\",\"html\":\"https://github.com/fowlmouth/nimrod-enet/blob/master/enet.babel\"}},{\"name\":\"enet.nim\",\"path\":\"enet.nim\",\"sha\":\"ca05d84ca429dd7889f6eb050efb75876dde142f\",\"size\":25309,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/enet.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-enet/blob/master/enet.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/blobs/ca05d84ca429dd7889f6eb050efb75876dde142f\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-enet/master/enet.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/enet.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/blobs/ca05d84ca429dd7889f6eb050efb75876dde142f\",\"html\":\"https://github.com/fowlmouth/nimrod-enet/blob/master/enet.nim\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"e64786e10df1b867410ade92f9ea413e8efab2d1\",\"size\":0,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/examples?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-enet/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/trees/e64786e10df1b867410ade92f9ea413e8efab2d1\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/trees/e64786e10df1b867410ade92f9ea413e8efab2d1\",\"html\":\"https://github.com/fowlmouth/nimrod-enet/tree/master/examples\"}},{\"name\":\"pkt_tools.nim\",\"path\":\"pkt_tools.nim\",\"sha\":\"ccb08b7295971cbd7f277556589ab81178d00fc2\",\"size\":3840,\"url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/pkt_tools.nim?ref=master\",\"html_url\":\"https://github.com/fowlmouth/nimrod-enet/blob/master/pkt_tools.nim\",\"git_url\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/blobs/ccb08b7295971cbd7f277556589ab81178d00fc2\",\"download_url\":\"https://raw.githubusercontent.com/fowlmouth/nimrod-enet/master/pkt_tools.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/contents/pkt_tools.nim?ref=master\",\"git\":\"https://api.github.com/repos/fowlmouth/nimrod-enet/git/blobs/ccb08b7295971cbd7f277556589ab81178d00fc2\",\"html\":\"https://github.com/fowlmouth/nimrod-enet/blob/master/pkt_tools.nim\"}}]",
"https://raw.githubusercontent.com/stisa/snail/master/snail.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Stisa\"\ndescription   = \"Simple Naive Algebra for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"docs\",\"tests\"]\n# Dependencies\nrequires \"nim >= 0.17.0\"\n\nrequires \"nimblas\" # Require it even if we may not use it, as nimble doesn't have optional deps for now.\n\nimport ospaths,strutils\n\ntask bench, \"TODO\":\n  echo \"TODO\"\n\ntask tests, \"Runs tests\":\n  withdir \"tests\":\n    for file in listfiles(\".\"):\n      if splitfile(file).ext == \".nim\":\n        exec \"nim c -r --verbosity:0 --hints:off \" & file\n\ntask jstests, \"Builds js tests\":\n  withdir \"tests\":\n    let jsrc = \"<script src=\\\"$1\\\"></script>\"\n    var jslist = \"\"\n    for file in listfiles(\".\"):\n      if splitfile(file).ext == \".nim\":\n        exec \"nim js --verbosity:0 --hints:off -o:\" & file.changefileext(\"js\") & \" \" & file\n        jslist.add(jsrc % [file.changefileext(\"js\")])\n    writefile(\"index.html\", \"<html><body>$1</body></html>\" % [jslist])\n  echo \"DONE - serve /tests with some webserver and load index.html to run.\"\n\ntask docs, \"Builds documentation\":\n  mkDir(\"docs\"/\"snail\")\n  exec \"nim doc2 --verbosity:0 --hints:off -o:docs/index.html  snail.nim\"\n  for file in listfiles(\"snail\"):\n    if splitfile(file).ext == \".nim\":\n      exec \"nim doc2 --verbosity:0 --hints:off -o:\" & \"docs\" /../ file.changefileext(\"html\") & \" \" & file\n  echo \"DONE - Look inside /docs, possibly serve it to a browser.\"\n\ntask prepublish,\"Run tests, then build docs\":\n  exec \"nimble tests\"\n  exec \"nimble docs\"",
"https://github.com/yglukhov/rect_packer": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Pack rects into bigger rect\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n",
"https://github.com/juancarlospaco/nim-bcra": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Central Bank of Argentina Gov API Client with debtor corporations info\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.4\"\nrequires \"zip >= 0.2.0\"\n",
"https://raw.githubusercontent.com/planetis-m/jscanvas/master/jscanvas.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Antonis\"\ndescription   = \"A Nim wrapper for the Canvas API\"\nlicense       = \"MIT\"\n# srcDir        = \"src\"\n\nbackend       = \"js\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.9\"\n",
"https://github.com/ImVexed/quickjs4nim": "# Package\nversion     = \"0.0.1\"\nauthor      = \"ImVexed\"\ndescription = \"QuickJS wrapper for Nim\"\nlicense     = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.19.2\"",
"https://raw.githubusercontent.com/fowlmouth/nake/master/nake.nimble": "version = \"1.9.4\"\nauthor = \"fowl\"\ndescription = \"make-like for Nim. Describe your builds as tasks!\"\nlicense = \"MIT\"\n\ninstallFiles = @[\n    \"LICENSE.rst\",\n    \"README.rst\",\n    \"nake.nim\",\n    \"nakefile.nim\",\n    \"nakelib.nim\"\n    ]\n\nbin = @[\"nake\"]\n\n# Deps\nrequires \"nim >= 0.10.2\"\n",
"https://raw.githubusercontent.com/status-im/nim-eth-p2p/master/eth_p2p.nimble": "mode = ScriptMode.Verbose\n\npackageName   = \"eth_p2p\"\nversion       = \"1.0.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Ethereum P2P library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"Nim\"]\n\nrequires \"nim > 0.18.0\",\n         \"rlp >= 1.0.1\",\n         \"nimcrypto\",\n         \"secp256k1 >= 0.1.0\",\n         \"eth_keys\",\n         \"ranges\",\n         \"stint\",\n         \"byteutils\",\n         \"chronicles\",\n         \"asyncdispatch2\",\n         \"eth_common\",\n         \"snappy\",\n         \"package_visible_types\",\n         \"serialization\",\n         \"json_serialization\"\n\nproc runTest(name: string, defs = \"\", lang = \"c\") =\n  exec \"nim \" & lang & \" \" & defs & \" -d:testing --threads:on --experimental:ForLoopMacros -r tests/\" & name\n\ntask test, \"Runs the test suite\":\n  runTest \"all_tests\"\n  runTest \"testenode\"\n  runTest \"tdiscovery\"\n  runTest \"tserver\"\n  runTest \"tserver\", \"-d:useSnappy\"\n  runTest \"tshh_connect\"\n  runTest \"tshh_connect_mocked\"\n",
"https://raw.githubusercontent.com/nortero-code/denim-ui-canvas/master/denim_ui_canvas.nimble": "version       = \"0.1.0\"\nauthor        = \"Kristian Fjeld Hasselknippe\"\ndescription   = \"HTML Canvas backend for the denim ui engine\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"denim_ui\"\n",
"https://api.github.com/repos/achesak/nim-pythonpathlib/contents": "[{\"name\":\"LICENSE.md\",\"path\":\"LICENSE.md\",\"sha\":\"a8a8c8bcbac4c439f9585d65ce56453aad82d622\",\"size\":1060,\"url\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/contents/LICENSE.md?ref=master\",\"html_url\":\"https://github.com/achesak/nim-pythonpathlib/blob/master/LICENSE.md\",\"git_url\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/git/blobs/a8a8c8bcbac4c439f9585d65ce56453aad82d622\",\"download_url\":\"https://raw.githubusercontent.com/achesak/nim-pythonpathlib/master/LICENSE.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/contents/LICENSE.md?ref=master\",\"git\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/git/blobs/a8a8c8bcbac4c439f9585d65ce56453aad82d622\",\"html\":\"https://github.com/achesak/nim-pythonpathlib/blob/master/LICENSE.md\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"b292d430ac118f09849ff73bde9430c46f92f3d1\",\"size\":2409,\"url\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/contents/README.md?ref=master\",\"html_url\":\"https://github.com/achesak/nim-pythonpathlib/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/git/blobs/b292d430ac118f09849ff73bde9430c46f92f3d1\",\"download_url\":\"https://raw.githubusercontent.com/achesak/nim-pythonpathlib/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/git/blobs/b292d430ac118f09849ff73bde9430c46f92f3d1\",\"html\":\"https://github.com/achesak/nim-pythonpathlib/blob/master/README.md\"}},{\"name\":\"pythonpathlib.nim\",\"path\":\"pythonpathlib.nim\",\"sha\":\"ba928935b1de4e60b96930d5c68ff76b9fb6a1fb\",\"size\":12526,\"url\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/contents/pythonpathlib.nim?ref=master\",\"html_url\":\"https://github.com/achesak/nim-pythonpathlib/blob/master/pythonpathlib.nim\",\"git_url\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/git/blobs/ba928935b1de4e60b96930d5c68ff76b9fb6a1fb\",\"download_url\":\"https://raw.githubusercontent.com/achesak/nim-pythonpathlib/master/pythonpathlib.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/contents/pythonpathlib.nim?ref=master\",\"git\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/git/blobs/ba928935b1de4e60b96930d5c68ff76b9fb6a1fb\",\"html\":\"https://github.com/achesak/nim-pythonpathlib/blob/master/pythonpathlib.nim\"}},{\"name\":\"pythonpathlib.nimble\",\"path\":\"pythonpathlib.nimble\",\"sha\":\"9d4c114e694308b5af461c245cb2121fe97697c9\",\"size\":217,\"url\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/contents/pythonpathlib.nimble?ref=master\",\"html_url\":\"https://github.com/achesak/nim-pythonpathlib/blob/master/pythonpathlib.nimble\",\"git_url\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/git/blobs/9d4c114e694308b5af461c245cb2121fe97697c9\",\"download_url\":\"https://raw.githubusercontent.com/achesak/nim-pythonpathlib/master/pythonpathlib.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/contents/pythonpathlib.nimble?ref=master\",\"git\":\"https://api.github.com/repos/achesak/nim-pythonpathlib/git/blobs/9d4c114e694308b5af461c245cb2121fe97697c9\",\"html\":\"https://github.com/achesak/nim-pythonpathlib/blob/master/pythonpathlib.nimble\"}}]",
"https://github.com/Cirru/parser.nim": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"jiyinyiyong\"\ndescription   = \"Parser for Cirru syntax\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n\n# Tasks\n\ntask t, \"Runs the test suite\":\n  exec \"nim c --hints:off -r tests/test_iterator\"\n  exec \"nim c --hints:off -r tests/test_parser\"\n  exec \"nim c --hints:off -r tests/test_lexer\"\n  exec \"nim c --hints:off -r tests/test_types\"\n\ntask perf, \"try large file\":\n  exec \"nim compile --verbosity:0 --profiler:on --stackTrace:on --hints:off -r tests/parse_cost\"\n",
"https://raw.githubusercontent.com/nim-lang/c2nim/master/c2nim.nimble": "version       = \"0.9.14\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"c2nim is a tool to translate Ansi C code to Nim.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"doc\"]\n\nskipExt = @[\"nim\"]\n\nbin = @[\"c2nim\"]\n\nrequires \"nim >= 0.19.0\"\n\nimport strutils\n\ntask test, \"runs c2nim tests\":\n  exec \"nimble build\"\n  exec \"nim c --run testsuite/tester.nim\"\n\ntask docs, \"build c2nim's docs\":\n  exec \"nim rst2html --putenv:c2nimversion=$1 doc/c2nim.rst\" % version\n",
"https://raw.githubusercontent.com/ftsf/gifenc/master/gifenc.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Jez Kabanov\"\ndescription   = \"Gif Encoder\"\nlicense       = \"Public Domain\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://github.com/ba0f3/pfring.nim": "[Package]\nname          = \"pfring\"\nversion       = \"0.0.3\"\nauthor        = \"Huy Doan\"\ndescription   = \"PF_RING wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipFiles     = \"test.nim\"\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/pdrb/tcping/master/tcping.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Pedro Buteri Gonring\"\ndescription   = \"Ping hosts using tcp packets\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"tcping\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://github.com/juancarlospaco/nim-contra": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Lightweight Self-Documenting Design by Contract Programming and Security Hardened mode and Immutable Programming, NimScript, JavaScript, compile-time.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/mildred/nimnews/master/nimnews.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Mildred Ki'Lya\"\ndescription   = \"Nim newsgroup NNTP server\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimnews\", \"web/newsweb\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n\n# NimNews\n\nrequires \"docopt\"\nrequires \"nuuid\"\nrequires \"scram\"\nrequires \"passgen\"\nrequires \"npeg\"\n\n# NewsWeb\n\nrequires \"nimassets\" # dev only\nrequires \"prologue\"\nrequires \"templates\"\nrequires \"asynctools\"\n\n",
"https://github.com/LemonBoy/cassette": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"LemonBoy\"\ndescription   = \"Record and replay your HTTP sessions!\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.2\"\n",
"https://raw.githubusercontent.com/treeform/fidget/master/fidget.nimble": "# Package\n\nversion       = \"0.7.1\"\nauthor        = \"treeform\"\ndescription   = \"Fidget - UI Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"chroma >= 0.1.3\"\nrequires \"typography 0.7.4\"\nrequires \"pixie 0.0.16\"\nrequires \"vmath >= 0.4.0\"\nrequires \"print >= 0.1.0\"\nrequires \"opengl >= 1.2.3\"\nrequires \"html5_canvas >= 1.3\"\nrequires \"staticglfw >= 4.1.2\"\nrequires \"cligen >= 1.0.0\"\nrequires \"supersnappy >= 1.0.0\"\nrequires \"bumpy >= 1.0.0\"\n",
"https://github.com/hlaaftana/sliceutils": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"hlaaftana\"\ndescription   = \"utils for Slice/HSlice\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/disruptek/atoz/master/atoz.nimble": "version = \"2626.1.0\"\nauthor = \"disruptek\"\ndescription = \"Amazon Web Services (AWS) APIs\"\nlicense = \"MIT\"\nrequires \"nim >= 0.20.0\"\nrequires \"sigv4 >= 1.0.4\"\nrequires \"https://github.com/disruptek/rest >= 1.0.0\"\nrequires \"https://github.com/disruptek/openapi >= 3.1.3\"\nrequires \"npeg >= 0.22.2\"\n\nsrcDir = \"src\"\n",
"https://github.com/dizzyliam/inumon": "# Package\nversion     = \"0.3.2\"\nauthor      = \"Liam Scaife\"\ndescription = \"A high-level image I/O library for Nim \"\nlicense     = \"MPL 2.0\"\n\n# Deps\nrequires \"nim >= 1.0.0\",\n    \"nimterop >= 0.5.0\",\n    \"arraymancer >= 0.5.0\",\n    \"nigui >= 0.2.0\"\n",
"https://github.com/euantorano/pledge.nim": "# Package\n\nversion       = \"2.0.1\"\nauthor        = \"Euan T\"\ndescription   = \"A wrapper around OpenBSD's pledge(2) systemcall for Nim.\"\nlicense       = \"BSD3\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask test, \"Runs the test suite\":\n    exec \"nim c -r tests/main\"\n",
"https://api.github.com/repos/MasonMcGill/tuples/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"e7ce4f9ea83ec86c9633597e2eab2fefea113eb7\",\"size\":44,\"url\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/tuples/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/e7ce4f9ea83ec86c9633597e2eab2fefea113eb7\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/tuples/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/e7ce4f9ea83ec86c9633597e2eab2fefea113eb7\",\"html\":\"https://github.com/MasonMcGill/tuples/blob/master/.gitignore\"}},{\"name\":\"license.txt\",\"path\":\"license.txt\",\"sha\":\"3f6096c69b723343b7bfd25753a1a2906b69da0e\",\"size\":1056,\"url\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/license.txt?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/tuples/blob/master/license.txt\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/3f6096c69b723343b7bfd25753a1a2906b69da0e\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/tuples/master/license.txt\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/license.txt?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/3f6096c69b723343b7bfd25753a1a2906b69da0e\",\"html\":\"https://github.com/MasonMcGill/tuples/blob/master/license.txt\"}},{\"name\":\"project\",\"path\":\"project\",\"sha\":\"064ce4d1a64302cb4204b9aab466f1731f7c3b97\",\"size\":3061,\"url\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/project?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/tuples/blob/master/project\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/064ce4d1a64302cb4204b9aab466f1731f7c3b97\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/tuples/master/project\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/project?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/064ce4d1a64302cb4204b9aab466f1731f7c3b97\",\"html\":\"https://github.com/MasonMcGill/tuples/blob/master/project\"}},{\"name\":\"readme.md\",\"path\":\"readme.md\",\"sha\":\"4d05e50b62bbac8f72643d00ab1aa6cd7e6a379f\",\"size\":470,\"url\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/readme.md?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/tuples/blob/master/readme.md\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/4d05e50b62bbac8f72643d00ab1aa6cd7e6a379f\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/tuples/master/readme.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/readme.md?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/4d05e50b62bbac8f72643d00ab1aa6cd7e6a379f\",\"html\":\"https://github.com/MasonMcGill/tuples/blob/master/readme.md\"}},{\"name\":\"source\",\"path\":\"source\",\"sha\":\"58c3af119cdab1dc1cabcedade762d86fdcdaff9\",\"size\":0,\"url\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/source?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/tuples/tree/master/source\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/tuples/git/trees/58c3af119cdab1dc1cabcedade762d86fdcdaff9\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/source?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/tuples/git/trees/58c3af119cdab1dc1cabcedade762d86fdcdaff9\",\"html\":\"https://github.com/MasonMcGill/tuples/tree/master/source\"}},{\"name\":\"tests\",\"path\":\"tests\",\"sha\":\"2634eb1537464df796cf5ffd4e5a0fc0021fe6dc\",\"size\":0,\"url\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/tests?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/tuples/tree/master/tests\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/tuples/git/trees/2634eb1537464df796cf5ffd4e5a0fc0021fe6dc\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/tests?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/tuples/git/trees/2634eb1537464df796cf5ffd4e5a0fc0021fe6dc\",\"html\":\"https://github.com/MasonMcGill/tuples/tree/master/tests\"}},{\"name\":\"tuples.nimble\",\"path\":\"tuples.nimble\",\"sha\":\"8f991340ebc8b5cf84260654ea26d2f1f54050dc\",\"size\":221,\"url\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/tuples.nimble?ref=master\",\"html_url\":\"https://github.com/MasonMcGill/tuples/blob/master/tuples.nimble\",\"git_url\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/8f991340ebc8b5cf84260654ea26d2f1f54050dc\",\"download_url\":\"https://raw.githubusercontent.com/MasonMcGill/tuples/master/tuples.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/MasonMcGill/tuples/contents/tuples.nimble?ref=master\",\"git\":\"https://api.github.com/repos/MasonMcGill/tuples/git/blobs/8f991340ebc8b5cf84260654ea26d2f1f54050dc\",\"html\":\"https://github.com/MasonMcGill/tuples/blob/master/tuples.nimble\"}}]",
"https://raw.githubusercontent.com/ReneSac/c_alikes/master/c_alikes.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"ReneSac\"\ndescription   = \"Operators, commands and functions more c-like, plus a few other utilities\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.14.0\"\n\n",
"https://raw.githubusercontent.com/nimious/oculus/master/oculus.nimble": "[Package]\nname: \"oculus\"\nversion: \"1.0\"\nauthor: \"Gerke Max Preussner <info@nimio.us>\"\ndescription: \"Bindings for the Oculus VR SDK\"\nlicense: \"MIT\"\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nimrod > 0.13.0\"\n",
"https://github.com/rxi/cmixer-nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rxi\"\ndescription   = \"Lightweight audio mixer for games\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n",
"https://raw.githubusercontent.com/theAkito/nim-couchdb/master/couchdb.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Akito <the@akito.ooo>\"\ndescription   = \"Easily and comfortably access your CouchDB.\"\nlicense       = \"GPL-3.0-or-later\"\nskipDirs      = @[\"tasks\"]\nskipFiles     = @[\"README.md\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n\n\n# Tasks\n\ntask intro, \"Initialize project. Run only once at first pull.\":\n  exec \"git submodule add https://github.com/theAkito/nim-tools.git tasks || true\"\n  exec \"git submodule update --init --recursive\"\n  exec \"git submodule update --recursive --remote\"\n  exec \"nimble configure\"\ntask configure, \"Configure project. Run whenever you continue contributing to this project.\":\n  exec \"git fetch --all\"\n  exec \"nimble check\"\n  exec \"nimble --silent refresh\"\n  exec \"nimble install --accept --depsOnly\"\n  exec \"git status\"\ntask fbuild, \"Build project.\":\n  exec \"\"\"nim c \\\n            --define:danger \\\n            --opt:speed \\\n            --out:couchdb \\\n            couchdb\n       \"\"\"\ntask dbuild, \"Debug Build project.\":\n  exec \"\"\"nim c \\\n            --define:mode_debug \\\n            --debuginfo:on \\\n            --out:couchdb \\\n            couchdb\n       \"\"\"\ntask makecfg, \"Create nim.cfg for optimized builds.\":\n  exec \"nim tasks/cfg_optimized.nims\"\ntask clean, \"Removes nim.cfg.\":\n  exec \"nim tasks/cfg_clean.nims\"\n",
"https://github.com/stefansalewski/RTree": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Stefan Salewski\"\ndescription   = \"R-Tree\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\nskipFiles = @[\"drawingarea.nim\"]\n",
"https://github.com/xzfc/ndb.nim": "version       = \"0.19.9\"\nauthor        = \"Albert Safin <xzfcpw@gmail.com>\"\ndescription   = \"A db_sqlite fork with a proper typing\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.19.0\"\n\nskipDirs = @[\"tests\"]\n\ntask test_sqlite, \"Run the test suite (sqlite)\":\n  exec \"nim c -r tests/tsqlite.nim\"\n\ntask test_postgres, \"Run the test suite (postgres)\":\n  exec \"nim c -r tests/tpostgres.nim\"\n\ntask test, \"Run the test suite (all)\":\n  testSqliteTask()\n  testPostgresTask()\n\ntask benchmark, \"Compile the benchmark\":\n  exec \"nim c -d:mode=0 -d:release -o:tests/bsqlite.0 tests/bsqlite.nim\"\n  exec \"nim c -d:mode=1 -d:release -o:tests/bsqlite.1 tests/bsqlite.nim\"\n",
"https://github.com/aquilax/sparkline-nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"aquilax\"\ndescription   = \"Sparkline library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/c6h4clch3/NimSuite/master/nimsuite.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"c6h4clch3\"\ndescription   = \"a simple test framework for nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"nimsuite\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\ntask start, \"an alias for `nimble run nest`.\":\n  exec(\"nimble run nimsuite\")\n",
"https://github.com/treeform/bumpy": "version     = \"1.0.1\"\nauthor      = \"Andre von Houck\"\ndescription = \"2d collision library.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\nrequires \"vmath >= 0.4.0\"\n",
"https://api.github.com/repos/yglukhov/variant/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"size\":10,\"url\":\"https://api.github.com/repos/yglukhov/variant/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/yglukhov/variant/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/variant/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/variant/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/67d9b34c6cecad82ad17197ffa5db4860caf9037\",\"html\":\"https://github.com/yglukhov/variant/blob/master/.gitignore\"}},{\"name\":\".travis.yml\",\"path\":\".travis.yml\",\"sha\":\"2e223f743f9d35e4f750fc87d3c29893bf29b480\",\"size\":297,\"url\":\"https://api.github.com/repos/yglukhov/variant/contents/.travis.yml?ref=master\",\"html_url\":\"https://github.com/yglukhov/variant/blob/master/.travis.yml\",\"git_url\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/2e223f743f9d35e4f750fc87d3c29893bf29b480\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/variant/master/.travis.yml\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/variant/contents/.travis.yml?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/2e223f743f9d35e4f750fc87d3c29893bf29b480\",\"html\":\"https://github.com/yglukhov/variant/blob/master/.travis.yml\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"49f711a09f8883d18c12f3528a9a46af02c90c80\",\"size\":1081,\"url\":\"https://api.github.com/repos/yglukhov/variant/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/yglukhov/variant/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/49f711a09f8883d18c12f3528a9a46af02c90c80\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/variant/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/variant/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/49f711a09f8883d18c12f3528a9a46af02c90c80\",\"html\":\"https://github.com/yglukhov/variant/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"d596a293e6b461d4fe43b398aff5eb76694bdaa0\",\"size\":807,\"url\":\"https://api.github.com/repos/yglukhov/variant/contents/README.md?ref=master\",\"html_url\":\"https://github.com/yglukhov/variant/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/d596a293e6b461d4fe43b398aff5eb76694bdaa0\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/variant/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/variant/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/d596a293e6b461d4fe43b398aff5eb76694bdaa0\",\"html\":\"https://github.com/yglukhov/variant/blob/master/README.md\"}},{\"name\":\"variant.nim\",\"path\":\"variant.nim\",\"sha\":\"2196ccb3ad61d735a6942e220f11dcb738f93d96\",\"size\":13443,\"url\":\"https://api.github.com/repos/yglukhov/variant/contents/variant.nim?ref=master\",\"html_url\":\"https://github.com/yglukhov/variant/blob/master/variant.nim\",\"git_url\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/2196ccb3ad61d735a6942e220f11dcb738f93d96\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/variant/master/variant.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/variant/contents/variant.nim?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/2196ccb3ad61d735a6942e220f11dcb738f93d96\",\"html\":\"https://github.com/yglukhov/variant/blob/master/variant.nim\"}},{\"name\":\"variant.nimble\",\"path\":\"variant.nimble\",\"sha\":\"3e71db5c985cb079568e69939dd7a589dfac79dc\",\"size\":500,\"url\":\"https://api.github.com/repos/yglukhov/variant/contents/variant.nimble?ref=master\",\"html_url\":\"https://github.com/yglukhov/variant/blob/master/variant.nimble\",\"git_url\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/3e71db5c985cb079568e69939dd7a589dfac79dc\",\"download_url\":\"https://raw.githubusercontent.com/yglukhov/variant/master/variant.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/yglukhov/variant/contents/variant.nimble?ref=master\",\"git\":\"https://api.github.com/repos/yglukhov/variant/git/blobs/3e71db5c985cb079568e69939dd7a589dfac79dc\",\"html\":\"https://github.com/yglukhov/variant/blob/master/variant.nimble\"}}]",
"https://github.com/GULPF/tiny_sqlite": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"A thin SQLite wrapper\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask test, \"Run tests\":\n    exec \"nim c -r tests/tests\"\n    rmFile \"tests/tests\"\n\ntask docs, \"Generate docs\":\n    exec \"nim doc -o:docs/tiny_sqlite.html src/tiny_sqlite.nim\"",
"https://github.com/status-im/nim-serialization": "mode = ScriptMode.Verbose\n\npackageName   = \"serialization\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A modern and extensible serialization framework for Nim\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"faststreams\",\n         \"stew\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r --threads:off tests/test_all\"\n  exec \"nim c -r --threads:on tests/test_all\"\n",
"https://raw.githubusercontent.com/Himujjal/asciitextNim/master/asciitext.nimble": "# Package\n\nversion       = \"0.0.1\"\nauthor        = \"Himujjal\"\ndescription   = \"Ascii Text allows you to print large ASCII fonts for the console and for the web\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/RaimundHuebel/nimpathname/master/pathname.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Raimund Hübel\"\ndescription   = \"Library to support work with pathnames in Windows and Posix-based systems. Inspired by Rubies pathname.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\n",
"https://raw.githubusercontent.com/jangko/polyBool/master/polyBool.nimble": "[Package]\nname          = \"polyBool\"\nversion       = \"0.1.0\"\nauthor        = \"Andri Lim\"\ndescription   = \"Polygon Clipping Library\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.16.0\"",
"https://raw.githubusercontent.com/nitely/nim-unicodedb/master/unicodedb.nimble": "# Package\n\nversion = \"0.9.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Unicode Character Database (UCD) access for Nim\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\nskipDirs = @[\"tests\", \"gen\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r tests/tests\"\n\ntask docs, \"Docs\":\n  exec \"nim doc2 -o:./docs/unicodedb --project ./src/unicodedb/segmentation.nim\"\n  exec \"nim doc2 -o:./docs/unicodedb --project ./src/unicodedb/casing.nim\"\n  exec \"nim doc2 -o:./docs/unicodedb --project ./src/unicodedb/scripts.nim\"\n  exec \"nim doc2 -o:./docs/unicodedb --project ./src/unicodedb/widths.nim\"\n  exec \"nim doc2 -o:./docs --project ./src/unicodedb.nim\"\n  exec \"mv ./docs/unicodedb.html ./docs/index.html\"\n  exec \"rm -fr ./docs/*/*_data.html\"\n\ntask gen, \"Gen data\":\n  exec \"nim c -r gen/segmentation.nim\"\n  exec \"nim c -r gen/casing.nim\"\n  exec \"nim c -r gen/scripts.nim\"\n  exec \"nim c -r gen/widths.nim\"\n  exec \"nim c -r gen/types.nim\"\n  exec \"nim c -r gen/compositions.nim\"\n  exec \"nim c -r gen/decompositions.nim\"\n  exec \"nim c -r gen/names.nim\"\n  exec \"nim c -r gen/properties.nim\"\n\ntask gen_tests, \"Gen test data\":\n  exec \"nim c -r gen/test_data.nim\"\n",
"https://github.com/rafaelvasco/nimrod-glfw/": "# Package\n\npackageName   = \"glfw\"\nversion       = \"3.2.1\"\nauthor        = \"Rafael Vasco, Cory Null(Noll) Crimmins - Golden\"\ndescription   = \"Nimrod bindings for GLFW3 library\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"test\"]\n\nwhen defined(Windows):\n  switch(\"GLFW_EXPOSE_NATIVE_WIN32\")\n  switch(\"GLFW_EXPOSE_NATIVE_WGL\")\nelif defined(MacOSX):\n  switch(\"GLFW_EXPOSE_NATIVE_COCOA\")\n  switch(\"GLFW_EXPOSE_NATIVE_NSGL\")\n",
"https://github.com/Nycto/AStarNim": "# Package\n\nversion       = \"0.6.0\"\nauthor        = \"Nycto\"\ndescription   = \"Basic A-Star path finding\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[]\n\n# Deps\n\nrequires \"nim >= 1.2.0\"\nrequires \"binaryheap >= 0.1.0\"\n\n",
"https://github.com/jiro4989/termnovel": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"jiro4989\"\ndescription   = \"A command that to read novel on terminal\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbinDir        = \"bin\"\nbin           = @[\"termnovel\"]\ninstallDirs   = @[\"novels\"]\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\nrequires \"cligen >= 0.9.32\"\nrequires \"markdown >= 0.8.0\"\nrequires \"nimquery >= 1.2.2\"\nrequires \"eastasianwidth >= 1.1.0\"\nrequires \"alignment >= 1.0.0\"\n\ntask ci, \"Run CI\":\n  exec \"nim -v\"\n  exec \"nimble -v\"\n  exec \"nimble check\"\n  exec \"nimble install -Y\"\n  exec \"nimble test -Y\"\n  exec \"nimble build -d:release -Y\"\n  exec \"./bin/termnovel -h\"\n",
"https://github.com/Cu7ious/nim-battery-widget": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"sergii.garkusha\"\ndescription   = \"Battery widget for command prompt. Written in Nim\"\nlicense       = \"GPL-3.0\"\nsrcDir        = \"src\"\nbin           = @[\"battery_widget\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/yglukhov/nimx/master/nimx.nimble": "# Package\n\nversion     = \"0.1\"\nauthor      = \"Yuriy Glukhov\"\ndescription = \"GUI framework\"\nlicense     = \"MIT\"\n\n# Directory configuration\ninstallDirs = @[\"nimx\", \"assets\"]\n\n# Dependencies\n\nrequires \"sdl2\"\nrequires \"opengl#head\"\nrequires \"nimsl >= 0.3\"\nrequires \"jnim\" # For android target\nrequires \"nake\"\nrequires \"closure_compiler >= 0.3.1\"\nrequires \"plists\"\nrequires \"variant >= 0.2 & < 0.3\"\nrequires \"kiwi\"\nrequires \"https://github.com/yglukhov/ttf >= 0.2.9 & < 0.3\"\nrequires \"https://github.com/yglukhov/async_http_request\"\nrequires \"jsbind\"\nrequires \"rect_packer\"\nrequires \"https://github.com/yglukhov/android\"\nrequires \"https://github.com/yglukhov/darwin\"\nrequires \"os_files\"\nrequires \"https://github.com/tormund/nester\"\nrequires \"nimwebp\"\n",
"https://github.com/guzba/nimsimd": "version     = \"1.0.0\"\nauthor      = \"Ryan Oldenburg\"\ndescription = \"Pleasant Nim bindings for SIMD instruction sets.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/cwpearson/nim-murmurhash": "# Package\n\nversion       = \"0.4.0\"\nauthor        = \"Carl Pearson\"\ndescription   = \"Pure nim implementation of murmur hash\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.2\"\n",
"https://github.com/rmt/alut": "# Package\n\nversion       = \"1.1.0.2\"\nauthor        = \"Robert M. Thomson\"\ndescription   = \"OpenAL Utility Toolkit (ALUT)\"\nlicense       = \"LGPL-2.1\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"openal >= 0.1.0\"\n",
"https://github.com/micklat/NimBorg": "[Package]\nname: \"NimBorg\"\nversion: \"0.0.2\"\nauthor: \"Andreas Rumpf & Micky Latowicki\"\ndescription: \"Both low-level and high-level wrappers to interface with foreign languages\"\nlicense: \"MIT\"\n\n[Deps]\nrequires: \"nimrod > 0.9.2\"\n",
"https://github.com/yglukhov/kiwi": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Cassowary constraint solving\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.3\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r tests/common.nim\"\n  exec \"nim js -r tests/common.nim\"\n",
"https://github.com/JohnAD/turn_based_game": "# Package\n\nversion       = \"1.1.6\"\nauthor        = \"John Dupuy\"\ndescription   = \"Game rules framework for turn-based games\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/juancarlospaco/biblioteca-guarrilla": "# Package\n\nversion       = \"0.1.9\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Simple web to share books, Calibre, Jester, Spectre CSS, No JavaScript, WebP & ZIP to reduce bandwidth\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"biblioteca_guarrilla\"]\ninstallDirs   = @[\"static\", \"static/css\"]\ninstallFiles  = @[\"static/css/spectre.min.css\", \"static/css/spectre-exp.min.css\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"jester\"\nrequires \"webp\"\nrequires \"zip\"\n",
"https://github.com/FedericoCeratto/nim-gnutls": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Wrapper for the GnuTLS library\"\nlicense       = \"LGPL-2.1\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/planetis-m/looper": "# Package\n\nversion       = \"0.8.0\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"For loop macros for Nim\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/mikra01/nimodpi/master/nimodpi.nimble": "# Package\nversion = \"0.1.0\"\nauthor = \"Michael Krauter\"\ndescription = \" oracle odpi-c wrapper \"\nlicense = \"MIT\"\nskipDirs = @[\"demo\"]\n\n# Dependencies\nrequires \"nim >= 1.2.6\"\nrequires \"nimterop >= 0.6.11\"\n\n\ntask demo, \"running demo\":\n  exec \"nim odpic_demo\"\n\ntask db_oracle, \"running db_oracle examples \":\n  exec \"nim oracle_demo\"\n\n",
"https://github.com/theAkito/nim-neoid": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"Akito\"\ndescription   = \"Nim implementation of NanoID.\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim    >= 1.4.0\"\nrequires \"random >= 0.5.7\"\nrequires \"winim  >= 3.4.0\"\n\n\n# Tasks\n\ntask configure, \"Configure project.\":\n  exec \"git fetch\"\n  exec \"git pull\"\n  exec \"git checkout master\"\n  exec \"git submodule add git@github.com:theAkito/nim-tools.git tasks\"\n  exec \"git submodule update --init --recursive\"\n  exec \"git submodule update --recursive --remote\"\n  exec \"nimble check\"\n  exec \"nimble install -d\"\ntask dbuild, \"Build test bin.\":\n  exec \"\"\"nim c \\\n            --debuginfo:on \\\n            --define:mingw \\\n            --out:neoid_debug \\\n            neoid\n       \"\"\"\n",
"https://raw.githubusercontent.com/emekoi/suffer/master/suffer.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"emekoi\"\ndescription   = \"a nim library for drawing 2d shapes, text, and images to 32bit software pixel buffers\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"docs\", \"example\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.2\"\n\n# Build Tasks\n\ntask docs, \"generate documentation and place it in the docs folder\":\n  mkDir \"docs\"\n  for file in listFiles(srcDir):\n    if file[^4..<file.len] == \".nim\":\n      exec \"nimble doc2 -o:docs/\" & file[4..^5] & \".html \" & file\n\ntask example, \"runs the (bad) included example\":\n  withDir \"example\":\n    exec \"mkdir -p bin\"\n    exec \"nim c -r example.nim\"\n",
"https://raw.githubusercontent.com/oskca/nim-wstp/master/wstp.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"oskca\"\ndescription   = \"Nim bindings for WSTP\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"c2nim\"\n\nlet MMA_HOME=\"/usr/local/Wolfram/Mathematica/11.3\"\n\nimport strutils\n\nconst\n  t1 = \"\"\"typedef struct MLYieldData{\n union {long l; double d; void * p;} private_data[8];\n} * MLYieldDataPointer;\n\"\"\"\n  r1 = \"\"\"struct MLYieldData{\n union {long l; double d; void * p;} private_data[8];\n};\ntypedef struct MLYieldData * MLYieldDataPointer;\n  \"\"\"\n\n  t2 = \"\"\"typedef WSYielderProcPtr MLYielderUPP, MLDeviceYielderUPP;\"\"\"\n  r2 = \"\"\"typedef WSYielderProcPtr MLYielderUPP; typedef WSYielderProcPtr MLDeviceYielderUPP;\"\"\"\n\n  t3 = \"\"\"typedef WSHandlerProcPtr MLHandlerUPP, MLDeviceHandlerUPP;\"\"\"\n  r3 = \"\"\"typedef WSHandlerProcPtr MLHandlerUPP; typedef MLHandlerUPP MLDeviceHandlerUPP;\"\"\"\n\n  hdrPrefix = \"\"\"\n{.passC:\"-I\" & MMA_HOME & \"/SystemFiles/Links/WSTP/DeveloperKit/Linux-x86-64/CompilerAdditions\".}\n{.passL: MMA_HOME & \"/SystemFiles/Links/WSTP/DeveloperKit/Linux-x86-64/CompilerAdditions/libWSTP64i4.a\".}\nconst\n  wstphdr = \"wstp.h\"\n\"\"\"\n\nproc replace(fn: string) =\n  var s = staticRead(fn)\n  s = s.replace(t1, r1)\n  s = s.replace(t2, r2)\n  s = s.replace(t3, r3)\n  writeFile(fn, s)\n\nproc appendPrefix(fn: string) =\n  var s = staticRead(fn)\n  s = s.replace(\"__\", \"_\")\n  s = hdrPrefix & s\n  writeFile(fn, s)\n\ntask gen, \"Generate wstp.nim\":\n  exec \"gcc -E headers/wstp.h > wstpE.h\"\n  replace \"wstpE.h\"\n  exec \"c2nim --prefix:_ --suffix:_ --o:src/wstp.nim --header:wstphdr wstpE.h\"\n  exec \"rm -rf wstpE.h\"\n  appendPrefix \"src/wstp.nim\"\n",
"https://github.com/FedericoCeratto/nim-statsd-client": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"statsd client\"\nlicense       = \"LGPLv3\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n",
"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"9e5ebc5cf5a33faa8450e23f71633bb072cbc15b\",\"size\":31,\"url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/SSPkrolik/nim-native-dialogs/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/blobs/9e5ebc5cf5a33faa8450e23f71633bb072cbc15b\",\"download_url\":\"https://raw.githubusercontent.com/SSPkrolik/nim-native-dialogs/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/blobs/9e5ebc5cf5a33faa8450e23f71633bb072cbc15b\",\"html\":\"https://github.com/SSPkrolik/nim-native-dialogs/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"89fa6a95749a253b862aacf91430ba506e2041cd\",\"size\":1084,\"url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/SSPkrolik/nim-native-dialogs/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/blobs/89fa6a95749a253b862aacf91430ba506e2041cd\",\"download_url\":\"https://raw.githubusercontent.com/SSPkrolik/nim-native-dialogs/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/blobs/89fa6a95749a253b862aacf91430ba506e2041cd\",\"html\":\"https://github.com/SSPkrolik/nim-native-dialogs/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"4ec4269e33e6a9e2e2e94809ede4216a4dd59928\",\"size\":788,\"url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/README.md?ref=master\",\"html_url\":\"https://github.com/SSPkrolik/nim-native-dialogs/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/blobs/4ec4269e33e6a9e2e2e94809ede4216a4dd59928\",\"download_url\":\"https://raw.githubusercontent.com/SSPkrolik/nim-native-dialogs/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/blobs/4ec4269e33e6a9e2e2e94809ede4216a4dd59928\",\"html\":\"https://github.com/SSPkrolik/nim-native-dialogs/blob/master/README.md\"}},{\"name\":\"native_dialogs.nimble\",\"path\":\"native_dialogs.nimble\",\"sha\":\"e0a20f475410ce9d8f2a1afbfc3b6c5b1fe5eb57\",\"size\":316,\"url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/native_dialogs.nimble?ref=master\",\"html_url\":\"https://github.com/SSPkrolik/nim-native-dialogs/blob/master/native_dialogs.nimble\",\"git_url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/blobs/e0a20f475410ce9d8f2a1afbfc3b6c5b1fe5eb57\",\"download_url\":\"https://raw.githubusercontent.com/SSPkrolik/nim-native-dialogs/master/native_dialogs.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/native_dialogs.nimble?ref=master\",\"git\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/blobs/e0a20f475410ce9d8f2a1afbfc3b6c5b1fe5eb57\",\"html\":\"https://github.com/SSPkrolik/nim-native-dialogs/blob/master/native_dialogs.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"30d4684c4641582455bfcd77ed8b566a68d7fc23\",\"size\":0,\"url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/src?ref=master\",\"html_url\":\"https://github.com/SSPkrolik/nim-native-dialogs/tree/master/src\",\"git_url\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/trees/30d4684c4641582455bfcd77ed8b566a68d7fc23\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/SSPkrolik/nim-native-dialogs/git/trees/30d4684c4641582455bfcd77ed8b566a68d7fc23\",\"html\":\"https://github.com/SSPkrolik/nim-native-dialogs/tree/master/src\"}}]",
"https://github.com/blmvxer/netTest": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"blmvxer\"\ndescription   = \"Connection Test for Nim Web Applications\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/mikra01/timerpool/master//timerpool.nimble": "# Package\nversion = \"0.1.0\"\nauthor = \"Michael Krauter\"\ndescription = \"single thread Timerpool implementation in Nim for event purpose\"\nlicense = \"MIT\"\nskipDirs = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 0.17.0\"\n\ntask test, \"running tests\":\n  exec \"nim timerpool_tests\"",
"https://github.com/blakeanedved/nimnoise": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"blakeanedved\"\ndescription   = \"A port of libnoise into pure nim, heavily inspired by Libnoise.Unity, but true to the original Libnoise\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Tasks\n\ntask \"test\", \"Run the Nimble tester\":\n  withdir \"tests\":\n    exec \"nim c -r tester\"\n",
"https://raw.githubusercontent.com/philip-wernersbach/microasynchttpserver/master/microasynchttpserver.nimble": "[Package]\n\nversion       = \"0.10.2\"\nauthor        = \"Philip Wernersbach\"\ndescription   = \"A thin asynchronous HTTP server library, API compatible with Nim\\'s built-in asynchttpserver.\"\nlicense       = \"MIT\"\n\n[Deps]\n\nRequires: \"picohttpparser >= 0.10.0\"\n",
"https://github.com/narimiran/sha3": "# Package\n\nversion       = \"0.6\"\nauthor        = \"tankfeeder\"\ndescription   = \"sha3 library\"\nlicense       = \"CC0\"\nskipExt       = @[\"rsp\"]\n",
"https://github.com/juancarlospaco/nim-telegram-bot": "version     = \"0.4.5\"\nauthor      = \"Juan Carlos\"\ndescription = \"Generic Configurable Async Telegram Bot for Nim with builtin basic functionality and Plugins.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nskipDirs    = @[\"art\"]\nbin         = @[\"nim_telegram_bot\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\nrequires \"openexchangerates\"\nrequires \"telebot\"\nrequires \"nimpy\"\nrequires \"zip\"\n",
"https://github.com/lcrees/pdcurses": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"lcrees\"\ndescription   = \"Nim wrapper for PDCurses\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"oldwinapi >= 2.0.0\"\n\n",
"https://raw.githubusercontent.com/planetis-m/bingo/master/bingo.nimble": "# Package\n\nversion       = \"0.3.0\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"Binary serialization framework\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://raw.githubusercontent.com/disruptek/foreach/master/foreach.nimble": "version = \"1.0.2\"\nauthor = \"disruptek\"\ndescription = \"A sugary for loop with syntax for typechecking loop variables\"\nlicense = \"MIT\"\nrequires \"nim >= 0.20.0\"\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r foreach.nim\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-dashing/master/dashing.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"Terminal dashboards for Nim\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\nbin       = @[\"dashing\"]\n\ntask functests, \"functional tests\":\n  exec \"nim c tests/functional.nim\"\n  exec \"./tests/functional\"\n",
"https://raw.githubusercontent.com/theAkito/sue/master/sue.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Akito <the@akito.ooo>\"\ndescription   = \"Executes a program as a user different from the user running `sue`. The target program is `exec`'ed which means, that it replaces the `sue` process you are using to run the target program. This simulates native tools like `su` and `sudo` and uses the same low-level POSIX tools to achieve that, but eliminates common issues that usually arise, when using those native tools.\"\nlicense       = \"GPL-3.0-or-later\"\nsrcDir        = \"src\"\nbin           = @[\"sue\"]\nskipDirs      = @[\"tasks\"]\nskipFiles     = @[\"README.md\"]\nskipExt       = @[\"nim\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\nrequires \"regex >= 0.16.2\"\n\n\n# Tasks\n\ntask test, \"Run simple test.\":\n  \"tests/\".cd\n  exec \"nim test.nims $USER\"\ntask xtest, \"Run extended test suite. Requires Docker.\":\n  exec \"\"\"nimble dbuild && \\\n          docker build \\\n            --no-cache \\\n            -t sue:test \\\n            -f Dockerfile \\\n            . && \\\n          docker run \\\n            --rm \\\n            -it \\\n            sue:test\n       \"\"\"\ntask configure, \"Configure project.\":\n  exec \"git fetch\"\n  exec \"git pull\"\n  exec \"git checkout master\"\n  exec \"git submodule add git@github.com:theAkito/nim-tools.git tasks\"\n  exec \"git submodule update --init --recursive\"\n  exec \"git submodule update --recursive --remote\"\ntask fbuild, \"Build project.\":\n  exec \"\"\"nim c \\\n            --define:danger \\\n            --opt:size \\\n            --out:sue \\\n            src/sue\n       \"\"\"\ntask dbuild, \"Debug Build project.\":\n  exec \"\"\"nim c \\\n            --debuginfo:on \\\n            --out:sue \\\n            src/sue\n       \"\"\"\ntask makecfg, \"Create nim.cfg for optimized builds.\":\n  exec \"nim tasks/cfg_optimized.nims\"\ntask clean, \"Removes nim.cfg.\":\n  exec \"nim tasks/cfg_clean.nims\"\n",
"https://raw.githubusercontent.com/fox0430/moe/master/moe.nimble": "# Package\n\nversion       = \"0.2.4.1\"\nauthor        = \"fox0430\"\ndescription   = \"A command lined based text editor\"\nlicense       = \"GPLv3\"\nsrcDir        = \"src\"\nbin           = @[\"moe\"]\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"https://github.com/walkre-niboshi/nim-ncurses >= 1.0.2\"\nrequires \"unicodedb >= 0.9.0\"\nrequires \"parsetoml >= 0.4.0\"\n\ntask release, \"Build for release\":\n  exec \"nim c -o:moe -d:release src/moe\"\n\n",
"https://github.com/nim-lang/opencl": "[Package]\nname: \"opencl\"\nversion: \"1.0\"\nauthor: \"Andreas Rumpf\"\ndescription: \"Low-level wrapper for OpenCL\"\nlicense: \"MIT\"\n\nsrcDir: \"src\"\n\n[Deps]\nrequires: \"nim > 0.9.2\"\n",
"https://raw.githubusercontent.com/ThomasTJdev/nim_slacklib/master/slacklib.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"ThomasTJ (https://github.com/ThomasTJdev)\"\ndescription   = \"Library for working with a slack app or sending messages to a slack channel\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n\n",
"https://github.com/gabbhack/deser_json": "import strformat\n\n# Package\n\nversion       = \"0.2.1\"\nauthor        = \"gabbhack\"\ndescription   = \"JSON-Binding for deser\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\nrequires \"nim >= 1.4.2, jsmn >= 0.2, deser >= 0.1.3\"\n\n# Tasks\nimport strformat, strutils, sequtils\n\nproc recursiveListFiles(dir: string, l: var seq[string]) =\n  for i in listDirs(dir):\n    recursiveListFiles(i, l)\n\n  for i in listFiles(dir):\n    if i.endsWith(\".nim\"):\n      l.add(i)\n\nproc recursiveListFiles(dir: string): seq[string] =\n  recursiveListFiles(dir, result)\n\ntask pretty, \"Pretty source code\":\n  echo \"Pretty deser_json.nim\"\n  exec \"nimpretty deser_json --indent:2\"\n  for i in concat(recursiveListFiles(\"deser_json\"), recursiveListFiles(\"tests\")):\n    echo fmt\"Pretty {i}\"\n    exec fmt\"nimpretty {i} --indent:2\"\n\ntask test, \"Run tests\":\n  exec \"\"\"testament p \"tests/*.nim\"\"\"\"\n\ntask docs, \"Generate docs\":\n  rmDir \"docs\"\n  exec \"nimble doc2 --outdir:docs --project --git.url:https://github.com/gabbhack/deser_json --git.commit:master --index:on deser_json\"\n  exec \"testament html\"\n  mvFile(\"testresults.html\", \"docs/testresults.html\")\n",
"https://github.com/status-im/nim-zxcvbn": "mode = ScriptMode.Verbose\n\npackageName   = \"zxcvbn\"\nversion       = \"0.1.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Nim bindings for the zxcvbn-c password strenght estimator\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.0.0\",\n         \"testutils\"\n\ntask test, \"Run all tests\":\n  exec \"nim c -r --threads:off tests/test_all\"\n  exec \"nim c -r --threads:on tests/test_all\"\n\n",
"https://github.com/GULPF/timezones": "import std / os\nimport timezones / private / tzversion\n\nversion       = \"0.5.4\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"Timezone library compatible with the standard library\"\nlicense       = \"MIT\"\n\nbin = @[\"timezones/fetchjsontimezones\"]\ninstallDirs = @[\"timezones\"]\ninstallFiles = @[TzDbVersion & \".json\", \"timezones.nim\"]\nrequires \"nim >= 0.19.9\"\n\n# Tasks\n\ntask fetch, \"Fetch the timezone database\":\n    exec \"nim c -d:timezonesNoEmbeed -r timezones/fetchjsontimezones \" &\n        TzDbVersion &  \" --out:\" & thisDir() / TzDbVersion & \".json\"\n\ntask test, \"Run the tests\":\n    echo thisDir()\n    let tzdataPath = thisDir() / TzDbVersion & \".json\"\n\n    # Run tests with various backends and options\n\n    echo \"\\nRunning tests (C)\"\n    echo \"===============\"\n    exec \"nim c --hints:off -r tests/tests.nim\"\n\n    echo \"\\nRunning tests (C in release mode)\"\n    echo \"===============\"\n    exec \"nim c --hints:off -r -d:release tests/tests.nim\"\n\n    echo \"\\nRunning tests (JS)\"\n    echo \"================\"\n    exec \"nim js -d:nodejs --hints:off -r tests/tests.nim\"\n\n    echo \"\\nTesting -d:timezonesPath (C)\"\n    echo \"================\"\n    exec \"nim c --hints:off -d:timezonesPath=\\\"\" & tzdataPath &\n        \"\\\" -r tests/tests.nim\"\n\n    echo \"\\nTesting -d:timezonesPath (JS)\"\n    echo \"================\"\n    exec \"nim js -d:nodejs --hints:off -d:timezonesPath=\\\"\" & tzdataPath &\n        \"\\\" -r tests/tests.nim\"\n\n    rmFile \"tests/tests\"\n    rmFile \"tests/tests.js\"\n\n    # Test `fetchjsontimezones`\n\n    when defined(posix):\n        exec \"nim c --hints:off -r timezones/fetchjsontimezones \" &\n            \"2020d --out:testdata.json\"\n        rmFile \"testdata.json\"\n        rmFile \"timezones/fetchjsontimezones\"\n    else:\n        exec \"nim c --hints:off timezones/fetchjsontimezones\"\n\ntask docs, \"Generate docs\":\n    exec \"nim doc -o:docs/timezones.html timezones.nim\"\n    exec \"nim doc -o:docs/posixtimezones.html timezones/posixtimezones.nim\"",
"https://raw.githubusercontent.com/PMunch/libkeepass/master/libkeepass.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Library for reading KeePass files and decrypt the passwords within it\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\", \"nimSHA2 >= 0.1.1\", \"nimAES >= 0.1.1\", \"zip >= 0.1.1\"\n",
"https://raw.githubusercontent.com/nimscale/stor/master/stor.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Khaled Karam\"\ndescription   = \"Super efficient object storage system\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.15.2\"\n\n",
"https://github.com/status-im/nim-secp256k1": "mode = ScriptMode.Verbose\n\npackageName   = \"secp256k1\"\nversion       = \"0.5.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for the libsecp256k1 C library\"\nlicense       = \"Apache License 2.0\"\ninstallDirs   = @[\".\", \"secp256k1_wrapper\"]\n\nrequires \"nim >= 1.2.0\"\nrequires \"stew\"\nrequires \"nimcrypto\"\n\nproc getLang(): string =\n  result = \"c\"\n  if existsEnv\"TEST_LANG\":\n    result = getEnv\"TEST_LANG\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  --threads:on\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test, \"Tests\":\n  test \"all_tests\", getLang()\n",
"https://raw.githubusercontent.com/def-/bigints/master/bigints.nimble": "# Package\n\nversion     = \"0.4.4\"\nauthor      = \"Dennis Felsing\"\ndescription = \"Arbitrary-precision integers implemented in pure Nim\"\nlicense     = \"MIT\"\n\nsrcDir      = \"src\"\n\n# Dependencies\n\nrequires \"nim > 0.10\"\n\ntask tests, \"Test bigints\":\n  exec \"nim c -r tests/tester\"\n",
"https://raw.githubusercontent.com/hyu1996/qeu/master/qeu.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"hyu\"\ndescription   = \"compare two number\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/dom96/texttospeech/master/texttospeech.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"A client for the Google Cloud Text to Speech API.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/nitely/nim-segmentation": "# Package\n\nversion = \"0.1.0\"\nauthor = \"Esteban Castro Borsani (@nitely)\"\ndescription = \"Unicode text segmentation tr29\"\nlicense = \"MIT\"\nsrcDir = \"src\"\nskipDirs = @[\"tests\", \"gen\"]\n\nrequires \"nim >= 0.19.0\"\nrequires \"unicodedb >= 0.8.0\"\n\ntask test, \"Test\":\n  exec \"nim c -r src/segmentation.nim\"\n  exec \"nim c -r tests/tests.nim\"\n\n  # Test runnable examples\n  #exec \"nim doc -o:./docs/ugh/ugh.html ./src/segmentation.nim\"\n\ntask docs, \"Docs\":\n  exec \"nim doc -o:./docs/index.html ./src/segmentation.nim\"\n",
"https://raw.githubusercontent.com/TakeYourFreedom/Additional-Control-Structures-for-Nim/master/controlStructures.nimble": "version = \"0.2.0\"\nauthor = \"TakeYourFreedom\"\ndescription = \"Additional Control Structures\"\nlicense = \"MIT\"\n",
"https://github.com/h3rald/nim-miniz": "# Package\n\nversion       = \"1.1.0\"\nauthor        = \"Fabio Cevasco\"\ndescription   = \"Nim wrapper for miniz\"\nlicense       = \"MIT\"\n\ninstallExt = @[\"nim\", \"c\", \"h\"]\n\nsrcDir = \"src\"\nskipDirs = @[\"tests\"]\n",
"https://raw.githubusercontent.com/citycide/cascade/master/cascade.nimble": "version       = \"1.0.0\"\nauthor        = \"citycide\"\ndescription   = \"Method & assignment cascades for Nim, inspired by Smalltalk & Dart.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.0.0\"\n\ntask test, \"Run tests\":\n  exec \"nim c -r \" & \"tests/tests.nim\"\n",
"https://github.com/rogercloud/nim-rpc": "[Package]\nname        = \"nimrpc\"\nversion     = \"0.1.0\"\nauthor      = \"Roger Shi\"\ndescription = \"RPC implementation for Nim based on msgpack4nim created by @jangko.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n[Deps]\nRequires:   \"\"\"\n\nnim >= 0.11.2\nmsgpack4nim >= 0.1.2\n\n\n\"\"\"\n\n",
"https://github.com/D-Nice/nbaser": "\n# Package\nversion       = \"1.0.1\"\nauthor        = \"D-Nice\"\ndescription   = \"Encoder/decoder for any base alphabet up to 256 with leading zero compression\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.0.0\"\n\n# Nimscript Tasks\nimport sugar, sequtils, strutils\n\nfunc srcPaths: seq[string] =\n  const dirs =\n    @[\n      \"src/\"\n    ]\n  for dir in dirs:\n    result.add(dir.listFiles.filter(x => x[dir.len .. x.high].endsWith(\".nim\")))\n\nfunc testPaths: seq[string] =\n  const dir = \"tests/\"\n  return dir.listFiles.filter(x => x[dir.len .. x.high].startsWith('t'))\n\n## docs\ntask docs, \"Deploy doc html + search index to public/ directory\":\n  let\n    deployDir = projectDir() & \"/public/\"\n    docOutBaseName = \"index\"\n    deployHtmlFile = deployDir & docOutBaseName & \".html\"\n    gitUrl = \"https://github.com/D-Nice/nbaser\"\n    genDocCmd = \"nim doc --out:$1 --index:on --git.url:$2 $3\" % [deployHtmlFile, gitUrl, srcPaths()[0]]\n    genTheIndexCmd = \"nim buildIndex -o:$1/theindex.html $1\" % [deployDir]\n    deployJsFile = deployDir & \"dochack.js\"\n    docHackJsSource = \"https://nim-lang.github.io/Nim/dochack.js\" # devel docs dochack.js\n  mkDir(deployDir)\n  exec(genDocCmd)\n  exec(genTheIndexCmd)\n  if not fileExists(deployJsFile):\n    withDir deployDir:\n      exec(\"curl -LO \" & docHackJsSource)\n\n## checks\nconst checkCmd = \"nim c -cf -w:on --hints:on -o:/dev/null --styleCheck:\"\ntask check_src, \"Compile src with all checks on\":\n  for src in srcPaths():\n    exec checkCmd & \"error \" & src\ntask check_tests, \"Compile tests with all checks on\":\n  for test in testPaths():\n    exec checkCmd & \"hint \" & test\ntask check_all, \"Compile check everything and run tests\":\n  exec \"nimble check_src; nimble check_tests; nimble test -c\"\n\n## benching\ntask benchmark, \"Runs built-in benchmark\":\n  exec \"nim c -f --verbosity:0 --hints:off -d:danger --gc:markAndSweep -o:/tmp/nim/nbaser/bench -r tests/benchmark.nim\"\n\n## fuzzing\ntask fuzz_decoder, \"Runs afl on decoder\":\n  exec \"nim c -f -o:/tmp/nim/nbaser/decoder tests/fuzzer/decoder.nim && afl-fuzz -T \\\"NBaser Decoder fuzzing\\\" -i tests/fuzzer/in-decoder -o tests/fuzzer/out-decoder /tmp/nim/nbaser/decoder\"\ntask fuzz_encoder, \"Runs afl on encoder\":\n  exec \"nim c -f -o:/tmp/nim/nbaser/encoder tests/fuzzer/encoder.nim && afl-fuzz -T \\\"NBaser Encoder fuzzing\\\" -i tests/fuzzer/in-encoder -o tests/fuzzer/out-encoder /tmp/nim/nbaser/encoder\"\n",
"https://raw.githubusercontent.com/nim-lang/nim-zmq/master/zmq.nimble": "# Package\n\nversion       = \"0.3.4\"\nauthor        = \"Andreas Rumpf\"\ndescription   = \"ZeroMQ wrapper\"\nlicense       = \"MIT\"\n\n# Dependencies\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/jasonlu7/pokereval": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"jasonlu7\"\ndescription   = \"A poker hand evaluator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/JeffersonLab/drand48": "# Package\n\nversion       = \"1.1.2\"\nauthor        = \"Robert Edwards\"\ndescription   = \"Nim implementation of standard unix drand48 random number generator\"\nlicense       = \"BSD clause 3\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Builds\ntask test, \"Run the test suite\":\n  exec \"nim c -r drand48\"\n\ntask docgen, \"Generate the documentation\":\n  exec \"nim doc2 --out:docs/drand48.html drand48.nim\"\n\n",
"https://raw.githubusercontent.com/plenarius/layonara_nwn/master/layonara_nwn.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"James Greenhalgh\"\ndescription   = \"Various Layonara related functions for NWN Development\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\nbin           = @[\"layonara_nwn\"]\n\n# Dependencies\nrequires \"nim >= 1.2.6\"\nrequires \"neverwinter >= 1.3.1\"\nrequires \"glob >= 0.9.0\"\nrequires \"docopt >= 0.1.0\"\n",
"https://raw.githubusercontent.com/mark-summerfield/diff/master/diff.nimble": "# Package\n\nversion       = \"0.5.0\"\nauthor        = \"Mark Summerfield\"\ndescription   = \"Library for finding the differences between two sequences\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n",
"https://github.com/juancarlospaco/libarchibi": "version     = \"0.2.0\"\nauthor      = \"Juan Carlos\"\ndescription = \"Libarchive at compile-time, Libarchive Chibi Edition\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\nrequires \"nim >= 1.2.4\"\n",
"https://raw.githubusercontent.com/khchen/winim/master/winim.nimble": "# Package\n\nversion       = \"3.6.0\"\nauthor        = \"Ward\"\ndescription   = \"Winim - Nim\\'s Windows API and COM Library\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\", \"tests\", \"docs\", \"tcclib\"]\nbin           = @[\"winim/winimx\"]\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\n# Tests\n\ntask test, \"Runs the test suite\":\n  exec \"nim c -r tests/variant_test\"\n  exec \"nim c -r tests/winstr_test\"\n  exec \"nim c -r tests/com_test\"\n  exec \"nim c -r tests/clr_test\"\n\n# Examples\n\ntask example, \"Build all the examples\":\n  exec \"nim c examples/fileopendialog\"\n  exec \"nim c examples/getopenfilename\"\n  exec \"nim c examples/hellomsg\"\n  exec \"nim c examples/hellowin\"\n  exec \"nim c examples/hellowinimx\"\n  exec \"nim c examples/linedemo\"\n  exec \"nim c examples/scrnsize\"\n  exec \"nim c examples/shortcut\"\n  exec \"nim c examples/uiautomation\"\n\n# COM Examples\n\ntask comexample, \"Build all the COM examples\":\n  exec \"nim c examples/com/binary\"\n  exec \"nim c examples/com/constants\"\n  exec \"nim c examples/com/diskinfo\"\n  exec \"nim c examples/com/Excel_Application1\"\n  exec \"nim c examples/com/Excel_Application2\"\n  exec \"nim c examples/com/InternetExplorer_Application\"\n  exec \"nim c examples/com/MSXML_DOMDocument\"\n  exec \"nim c examples/com/SAPI_SpVoice\"\n  exec \"nim c examples/com/Scriptlet_TypeLib\"\n  exec \"nim c examples/com/Shell_Application\"\n  exec \"nim c examples/com/VBScript_RegExp\"\n  exec \"nim c examples/com/WinHttp_WinHttpRequest\"\n  exec \"nim c examples/com/winmgmts\"\n  exec \"nim c examples/com/WScript\"\n  exec \"nim c examples/com/nimDispatch/client\"\n  exec \"nim c examples/com/nimDispatch/server\"\n  exec \"nim c examples/com/threads/thread1\"\n  exec \"nim c examples/com/threads/thread2\"\n  exec \"nim c examples/com/threads/thread3\"\n  exec \"nim c examples/com/threads/thread4\"\n\n# CLR Examples\n\ntask clrexample, \"Build all the CLR examples\":\n  exec \"nim c examples/clr/code_compiler.nim\"\n  exec \"nim c examples/clr/misc_examples.nim\"\n  exec \"nim c examples/clr/simple_gui.nim\"\n  exec \"nim c examples/clr/splitter.nim\"\n  exec \"nim c examples/clr/usage_demo1.nim\"\n  exec \"nim c examples/clr/usage_demo2.nim\"\n  exec \"nim c examples/clr/wpf.nim\"\n\n# Clean\n\ntask clean, \"Delete all the executable files\":\n  exec \"cmd /c IF EXIST tests\\\\*.exe del tests\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\*.exe del examples\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\com\\\\*.exe del examples\\\\com\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\com\\\\nimDispatch\\\\*.exe del examples\\\\com\\\\nimDispatch\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\com\\\\threads\\\\*.exe del examples\\\\com\\\\threads\\\\*.exe\"\n  exec \"cmd /c IF EXIST examples\\\\clr\\\\*.exe del examples\\\\clr\\\\*.exe\"\n  exec \"cmd /c IF EXIST winim\\\\*.exe del winim\\\\*.exe\"\n",
"https://github.com/IoTone/huenim": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"David J. Kordsmeier\"\ndescription   = \"Huenim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\nbin = @[\"huenim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"docopt >= 0.6.5\"\n\ntask test, \"Run the huenim tester-er\":\n  withDir \"tests\":\n    exec \"nim c -r runTests\"\n\n",
"https://github.com/SSPkrolik/nim-native-dialogs.git": "# Package `native_dialogs`\n\nversion       = \"0.1.0\"\nauthor        = \"Rostyslav Dzinko (rostislav.dzinko@gmail.com)\"\ndescription   = \"Implements framework-agnostic native operating system dialogs calls\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.10.0\"\nrequires \"oldwinapi\"\nrequires \"gtk2\"",
"https://raw.githubusercontent.com/jangko/snappy/master/snappy.nimble": "packageName   = \"snappy\"\nversion       = \"0.1.0\"\nauthor        = \"Andri Lim\"\ndescription   = \"Nim implementation of snappy compression algorithm\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires: \"nim >= 0.19.0\"\n\ntask test, \"Run all tests\":\n  exec \"nim c --passL:\\\"-lsnappy -L./tests -lstdc++\\\" -r tests/test\"\n  exec \"nim c --passL:\\\"-lsnappy -L./tests -lstdc++\\\" -d:release -r tests/test\"\n  exec \"nim c --passL:\\\"-lsnappy -L./tests -lstdc++\\\" --threads:on -d:release -r tests/test\"\n",
"https://api.github.com/repos/Araq/number_files/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"b3ebf371e94c4b70c30bbe48d37795655dbc6f45\",\"size\":229,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/blobs/b3ebf371e94c4b70c30bbe48d37795655dbc6f45\",\"download_url\":\"https://raw.githubusercontent.com/Araq/number_files/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/blobs/b3ebf371e94c4b70c30bbe48d37795655dbc6f45\",\"html\":\"https://github.com/Araq/number_files/blob/master/.gitignore\"}},{\"name\":\".gitmodules\",\"path\":\".gitmodules\",\"sha\":\"bf74483d50a79a29e61e083250fb287329a31577\",\"size\":154,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/.gitmodules?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/blob/master/.gitmodules\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/blobs/bf74483d50a79a29e61e083250fb287329a31577\",\"download_url\":\"https://raw.githubusercontent.com/Araq/number_files/master/.gitmodules\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/.gitmodules?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/blobs/bf74483d50a79a29e61e083250fb287329a31577\",\"html\":\"https://github.com/Araq/number_files/blob/master/.gitmodules\"}},{\"name\":\"docindex.rst\",\"path\":\"docindex.rst\",\"sha\":\"a994a9eec0fe1209f2080f504b0ffbd2177d2a03\",\"size\":513,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/docindex.rst?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/blob/master/docindex.rst\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/blobs/a994a9eec0fe1209f2080f504b0ffbd2177d2a03\",\"download_url\":\"https://raw.githubusercontent.com/Araq/number_files/master/docindex.rst\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/docindex.rst?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/blobs/a994a9eec0fe1209f2080f504b0ffbd2177d2a03\",\"html\":\"https://github.com/Araq/number_files/blob/master/docindex.rst\"}},{\"name\":\"docs\",\"path\":\"docs\",\"sha\":\"7e13f1b8d5cdcb5e6d9d125fd5faaecbe5404893\",\"size\":0,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/docs?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/tree/master/docs\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/trees/7e13f1b8d5cdcb5e6d9d125fd5faaecbe5404893\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/docs?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/trees/7e13f1b8d5cdcb5e6d9d125fd5faaecbe5404893\",\"html\":\"https://github.com/Araq/number_files/tree/master/docs\"}},{\"name\":\"external\",\"path\":\"external\",\"sha\":\"30a57966dd0176db0a305f1a4171de6f048544b4\",\"size\":0,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/external?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/tree/master/external\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/trees/30a57966dd0176db0a305f1a4171de6f048544b4\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/external?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/trees/30a57966dd0176db0a305f1a4171de6f048544b4\",\"html\":\"https://github.com/Araq/number_files/tree/master/external\"}},{\"name\":\"license.rst\",\"path\":\"license.rst\",\"sha\":\"e8d57b9e1b5d068889fbe6d356363befe0c2a744\",\"size\":1158,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/license.rst?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/blob/master/license.rst\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/blobs/e8d57b9e1b5d068889fbe6d356363befe0c2a744\",\"download_url\":\"https://raw.githubusercontent.com/Araq/number_files/master/license.rst\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/license.rst?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/blobs/e8d57b9e1b5d068889fbe6d356363befe0c2a744\",\"html\":\"https://github.com/Araq/number_files/blob/master/license.rst\"}},{\"name\":\"nakefile.nim\",\"path\":\"nakefile.nim\",\"sha\":\"b74b89f65cfe999f6edc92c4b0f6dba73d8b7da7\",\"size\":8624,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/nakefile.nim?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/blob/master/nakefile.nim\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/blobs/b74b89f65cfe999f6edc92c4b0f6dba73d8b7da7\",\"download_url\":\"https://raw.githubusercontent.com/Araq/number_files/master/nakefile.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/nakefile.nim?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/blobs/b74b89f65cfe999f6edc92c4b0f6dba73d8b7da7\",\"html\":\"https://github.com/Araq/number_files/blob/master/nakefile.nim\"}},{\"name\":\"nakefile.nimrod.cfg\",\"path\":\"nakefile.nimrod.cfg\",\"sha\":\"f2dc1fc4f01e8d411c46c03387a70aa88ef92acd\",\"size\":155,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/nakefile.nimrod.cfg?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/blob/master/nakefile.nimrod.cfg\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/blobs/f2dc1fc4f01e8d411c46c03387a70aa88ef92acd\",\"download_url\":\"https://raw.githubusercontent.com/Araq/number_files/master/nakefile.nimrod.cfg\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/nakefile.nimrod.cfg?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/blobs/f2dc1fc4f01e8d411c46c03387a70aa88ef92acd\",\"html\":\"https://github.com/Araq/number_files/blob/master/nakefile.nimrod.cfg\"}},{\"name\":\"number_files.babel\",\"path\":\"number_files.babel\",\"sha\":\"96903a4798ba1cdb2f1041df3392ec9e5526d844\",\"size\":532,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/number_files.babel?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/blob/master/number_files.babel\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/blobs/96903a4798ba1cdb2f1041df3392ec9e5526d844\",\"download_url\":\"https://raw.githubusercontent.com/Araq/number_files/master/number_files.babel\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/number_files.babel?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/blobs/96903a4798ba1cdb2f1041df3392ec9e5526d844\",\"html\":\"https://github.com/Araq/number_files/blob/master/number_files.babel\"}},{\"name\":\"number_files.nim\",\"path\":\"number_files.nim\",\"sha\":\"db5679dc4a85c09c79fafc6433e983795ef2b68f\",\"size\":4326,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/number_files.nim?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/blob/master/number_files.nim\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/blobs/db5679dc4a85c09c79fafc6433e983795ef2b68f\",\"download_url\":\"https://raw.githubusercontent.com/Araq/number_files/master/number_files.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/number_files.nim?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/blobs/db5679dc4a85c09c79fafc6433e983795ef2b68f\",\"html\":\"https://github.com/Araq/number_files/blob/master/number_files.nim\"}},{\"name\":\"readme.rst\",\"path\":\"readme.rst\",\"sha\":\"c8d08daac25be593b4b8f4894d8164f49a864bfe\",\"size\":4802,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/readme.rst?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/blob/master/readme.rst\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/blobs/c8d08daac25be593b4b8f4894d8164f49a864bfe\",\"download_url\":\"https://raw.githubusercontent.com/Araq/number_files/master/readme.rst\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/readme.rst?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/blobs/c8d08daac25be593b4b8f4894d8164f49a864bfe\",\"html\":\"https://github.com/Araq/number_files/blob/master/readme.rst\"}},{\"name\":\"workflow_template_dir\",\"path\":\"workflow_template_dir\",\"sha\":\"281c83de5edcbc01bec9bfdcb56c148562a29501\",\"size\":0,\"url\":\"https://api.github.com/repos/Araq/number_files/contents/workflow_template_dir?ref=master\",\"html_url\":\"https://github.com/Araq/number_files/tree/master/workflow_template_dir\",\"git_url\":\"https://api.github.com/repos/Araq/number_files/git/trees/281c83de5edcbc01bec9bfdcb56c148562a29501\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/Araq/number_files/contents/workflow_template_dir?ref=master\",\"git\":\"https://api.github.com/repos/Araq/number_files/git/trees/281c83de5edcbc01bec9bfdcb56c148562a29501\",\"html\":\"https://github.com/Araq/number_files/tree/master/workflow_template_dir\"}}]",
"https://raw.githubusercontent.com/planetis-m/gnuplotlib/master/gnuplotlib.nimble": "# mode = ScriptMode.Verbose\n\npackageName   = \"gnuplotlib\"\nversion       = \"2.6.1\"\nauthor        = \"Antonis Geralis\"\ndescription   = \"Nim gnuplot interface\"\nlicense       = \"MIT\"\nskipDirs = @[\"examples\", \"tests\"]\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/onionhammer/clibpp.git": "[Package]\nname = \"clibpp\"\nversion = \"0.1\"\nauthor = \"Erik O'Leary\"\ndescription = \"Easy way to 'Mock' C++ interface\"\nlicense = \"MIT\"",
"https://github.com/ahcm/fastx_reader": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Andreas Hauser\"\ndescription   = \"FastQ and Fasta readers for NIM\"\nlicense       = \"LGPL-3.0\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"fastx_reader\"]\nbinDir        = \"bin\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/tontinton/vector": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Tony Solomonik\"\ndescription   = \"Simple reallocating vector\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\".github\", \"tests\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n",
"https://raw.githubusercontent.com/YesDrX/randgen/master/randgen.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"YesDrX\"\ndescription   = \"A random variable generator library for nim-lang.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n\ntask donothing, \"donothing\":\n    exec \"nim c -r src/randgen.nim\"\n    rmFile \"src/randgen\"\n",
"https://github.com/treeform/fidget": "# Package\n\nversion       = \"0.7.1\"\nauthor        = \"treeform\"\ndescription   = \"Fidget - UI Library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"chroma >= 0.1.3\"\nrequires \"typography 0.7.4\"\nrequires \"pixie 0.0.16\"\nrequires \"vmath >= 0.4.0\"\nrequires \"print >= 0.1.0\"\nrequires \"opengl >= 1.2.3\"\nrequires \"html5_canvas >= 1.3\"\nrequires \"staticglfw >= 4.1.2\"\nrequires \"cligen >= 1.0.0\"\nrequires \"supersnappy >= 1.0.0\"\nrequires \"bumpy >= 1.0.0\"\n",
"https://github.com/SolitudeSF/pinggraph": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Simple terminal ping graph\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"pinggraph\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\", \"cligen >= 0.9.28\"\n",
"https://raw.githubusercontent.com/genotrance/shared/master/shared.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"genotrance\"\ndescription   = \"Nim library for shared types\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\nimport strformat\n\nconst htmldocsDir = \"build/htmldocs\"\n\nwhen (NimMajor, NimMinor, NimPatch) >= (0, 19, 9):\n  import os\n  proc getNimRootDir(): string =\n    fmt\"{currentSourcePath}\".parentDir.parentDir.parentDir\n\nproc runNimDoc() =\n  exec &\"nim doc --path:. -o:{htmldocsDir} --project --index:on shared/seq.nim\"\n  exec &\"nim doc --path:. -o:{htmldocsDir} --project --index:on shared/string.nim\"\n  exec &\"nim buildIndex -o:{htmldocsDir}/theindex.html {htmldocsDir}\"\n  when declared(getNimRootDir):\n    exec &\"nim js -o:{htmldocsDir}/dochack.js {getNimRootDir()}/tools/dochack/dochack.nim\"\n\ntask docs, \"Generate docs\":\n  runNimDoc()\n\ntask docsPublish, \"Generate and publish docs\":\n  # Uses: pip install ghp-import\n  runNimDoc()\n  exec &\"ghp-import --no-jekyll -fp {htmldocsDir}\"",
"https://github.com/jerous86/nim_midi": "# Package\n\nversion       = \"0.1\"\nauthor        = \"jerous\"\ndescription   = \"Read and write midi files\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.0\"\n\ntask docgen, \"generate docs\":\n  exec \"nim doc --out:docs/ --project --index:on  src/nim_midi.nim\"\n\ntask reader, \"Builds a simple midi file reader that displays all midi events\":\n  exec \"nim c --out:nim_midi_reader test/nim_midi_reader.nim\"\n\n",
"https://raw.githubusercontent.com/status-im/nim-blscurve/master/blscurve.nimble": "packageName   = \"blscurve\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"BLS381-12 Curve implementation\"\nlicense       = \"Apache License 2.0\"\n\n### Dependencies\nrequires \"nim >= 1.0.4\",\n         \"nimcrypto\",\n         \"stew\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by BLS_TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"BLS_TEST_LANG\":\n    lang = getEnv\"BLS_TEST_LANG\"\n\n  if not dirExists \"build\":\n    mkDir \"build\"\n  exec \"nim \" & lang & \" \" & env &\n    \" --outdir:build -r --hints:off --warnings:off \" & path\n\n### tasks\ntask test, \"Run all tests\":\n  # Debug - test intermediate computations\n  # test \"\", \"blscurve/miracl/hkdf.nim\"\n  # test \"\", \"blscurve/miracl/draft_v5/hash_to_curve_draft_v5.nim\"\n  # test \"\", \"blscurve/miracl/hash_to_curve.nim\"\n\n  # Internal BLS API - IETF standard\n  # test \"\", \"tests/hash_to_curve_v7.nim\"\n\n  # Public BLS API - IETF standard / Ethereum2.0 v1.0.0\n  test \"-d:BLS_FORCE_BACKEND=miracl\", \"tests/eth2_vectors.nim\"\n  # key Derivation - EIP 2333\n  test \"-d:BLS_FORCE_BACKEND=miracl\", \"tests/eip2333_key_derivation.nim\"\n  # Secret key to pubkey\n  test \"-d:BLS_FORCE_BACKEND=miracl\", \"tests/priv_to_pub.nim\"\n\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/eth2_vectors.nim\"\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/eip2333_key_derivation.nim\"\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/priv_to_pub.nim\"\n\n  # Internal SHA256\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/blst_sha256.nim\"\n\n  # batch verification\n  test \"-d:BLS_FORCE_BACKEND=blst\", \"tests/t_batch_verifier.nim\"\n\n  # No OpenMP in default Clang on Mac\n  when not defined(macosx):\n    # Parallel batch verification\n    test \"-d:openmp -d:BLS_FORCE_BACKEND=blst\", \"tests/t_batch_verifier.nim\"\n\n  # Ensure benchmarks stay relevant.\n  # TODO, solve \"inconsistent operand constraints\"\n  # on 32-bit for asm volatile, this might be due to\n  # incorrect RDTSC call in benchmark\n  when defined(arm64) or defined(amd64):\n    when not defined(macosx):\n      exec \"nim c -d:openmp -d:BLS_FORCE_BACKEND=miracl -d:danger --outdir:build -r\" &\n            \" --verbosity:0 --hints:off --warnings:off\" &\n            \" benchmarks/bench_all.nim\"\n\n      exec \"nim c -d:openmp -d:BLS_FORCE_BACKEND=blst -d:danger --outdir:build -r\" &\n            \" --verbosity:0 --hints:off --warnings:off\" &\n            \" benchmarks/bench_all.nim\"\n    else:\n      exec \"nim c -d:BLS_FORCE_BACKEND=miracl -d:danger --outdir:build -r\" &\n            \" --verbosity:0 --hints:off --warnings:off\" &\n            \" benchmarks/bench_all.nim\"\n\n      exec \"nim c -d:BLS_FORCE_BACKEND=blst -d:danger --outdir:build -r\" &\n            \" --verbosity:0 --hints:off --warnings:off\" &\n            \" benchmarks/bench_all.nim\"\n\ntask bench, \"Run benchmarks\":\n  if not dirExists \"build\":\n    mkDir \"build\"\n\n  exec \"nim c -d:openmp -d:danger --outdir:build -r\" &\n         \" --verbosity:0 --hints:off --warnings:off\" &\n         \" benchmarks/bench_all.nim\"\n",
"https://raw.githubusercontent.com/xflywind/timerwheel/master/timerwheel.nimble": "# Package\n\nversion       = \"0.1.2\"\nauthor        = \"flywind\"\ndescription   = \"A high performance timer based on timerwheel for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.6\"\n\ntask tests, \"Tests all\":\n  exec \"testament all\"\n",
"https://raw.githubusercontent.com/SolitudeSF/shlex/master/shlex.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Split string into shell words\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n",
"https://github.com/dom96/untar": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Dominik Picheta\"\ndescription   = \"Library for decompressing tar.gz files.\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://github.com/c-blake/nimp": "# Package\nversion     = \"0.1.0\"\nauthor      = \"Charles Blake\"\ndescription = \"A package manager that delegates to package authors\"\nlicense     = \"MIT/ISC\"\n\n# Dependencies\nrequires \"nim >= 1.3.7\"\n",
"https://github.com/drygdryg/wpspin-nim": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"Victor Golovanenko (drygdryg)\"\ndescription   = \"Full-featured WPS PIN generator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"wpspin\"]\n\n\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\nrequires \"argparse >= 2.0.0\"\n",
"https://github.com/xzeshen/huffman": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"flywind\"\ndescription   = \"Huffman encode/decode for Nim.\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-bcra/master/bcra.nimble": "version       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Central Bank of Argentina Gov API Client with debtor corporations info\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.0.4\"\nrequires \"zip >= 0.2.0\"\n",
"https://github.com/ethosa/akane": "[Package]\r\nname = \"akane\"\r\nauthor = \"Ethosa\"\r\nversion = \"0.1.7\"\r\ndescription = \"The Nim asynchronous web framework.\"\r\nlicense = \"MIT\"\r\nsrcDir = \"akane\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\n",
"https://github.com/jrfondren/nim-oshostname": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Julian Fondren\"\ndescription   = \"Get the current hostname with gethostname(2)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\n",
"https://github.com/h3rald/hastyscribe": "import\n  ospaths\n\ntemplate thisModuleFile: string = instantiationInfo(fullPaths = true).filename\n\nwhen fileExists(thisModuleFile.parentDir / \"src/hastyscribepkg/config.nim\"):\n  # In the git repository the Nimble sources are in a ``src`` directory.\n  import src/hastyscribepkg/config\nelse:\n  # When the package is installed, the ``src`` directory disappears.\n  import hastyscribepkg/config\n\n# Package\n\nversion       = pkgVersion\nauthor        = pkgAuthor\ndescription   = pkgDescription\nlicense       = \"MIT\"\nbin           = @[\"hastyscribe\"]\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"json\", \"a\", \"css\", \"png\", \"svg\", \"woff\", \"c\", \"h\", \"in\"]\n\nrequires \"nim >= 1.4.0\"\n\nbefore install:\n  exec \"nifty install\"\n\n# Tasks\n\nconst\n  compile = \"nim c -d:release\"\n  linux_x64 = \"--cpu:amd64 --os:linux --passL:-static\"\n  windows_x64 = \"--cpu:amd64 --os:windows\"\n  macosx_x64 = \"\"\n  hs = \"src/hastyscribe\"\n  hs_file = \"src/hastyscribe.nim\"\n  zip = \"zip -X\"\n\nproc shell(command, args: string, dest = \"\") =\n  exec command & \" \" & args & \" \" & dest\n\nproc filename_for(os: string, arch: string): string =\n  return \"hastyscribe\" & \"_v\" & version & \"_\" & os & \"_\" & arch & \".zip\"\n\ntask windows_x64_build, \"Build HastyScribe for Windows (x64)\":\n  shell compile, windows_x64, hs_file\n\ntask linux_x64_build, \"Build HastyScribe for Linux (x64)\":\n  shell compile, linux_x64,  hs_file\n  \ntask macosx_x64_build, \"Build HastyScribe for Mac OS X (x64)\":\n  shell compile, macosx_x64, hs_file\n\ntask release, \"Release HastyScribe\":\n  echo \"\\n\\n\\n WINDOWS - x64:\\n\\n\"\n  windows_x64_buildTask()\n  shell zip, filename_for(\"windows\", \"x64\"), hs & \".exe\"\n  shell \"rm\", hs & \".exe\"\n  echo \"\\n\\n\\n LINUX - x64:\\n\\n\"\n  linux_x64_buildTask()\n  shell zip, filename_for(\"linux\", \"x64\"), hs \n  shell \"rm\", hs \n  echo \"\\n\\n\\n MAC OS X - x64:\\n\\n\"\n  macosx_x64_buildTask()\n  shell zip, filename_for(\"macosx\", \"x64\"), hs \n  shell \"rm\", hs \n  echo \"\\n\\n\\n ALL DONE!\"\n",
"https://raw.githubusercontent.com/guzba/noisy/master/noisy.nimble": "version     = \"0.4.4\"\nauthor      = \"Ryan Oldenburg\"\ndescription = \"Nim implementation of various noise types.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.1.0\"\nrequires \"nimsimd >= 0.4.3\"\n",
"https://api.github.com/repos/twist-vector/nim-bped/contents": "[{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"717c6284fa05e881d01c54bbaf4dee70e085c6f9\",\"size\":4578,\"url\":\"https://api.github.com/repos/twist-vector/nim-bped/contents/README.md?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-bped/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-bped/git/blobs/717c6284fa05e881d01c54bbaf4dee70e085c6f9\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nim-bped/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-bped/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-bped/git/blobs/717c6284fa05e881d01c54bbaf4dee70e085c6f9\",\"html\":\"https://github.com/twist-vector/nim-bped/blob/master/README.md\"}},{\"name\":\"bped.nim\",\"path\":\"bped.nim\",\"sha\":\"1a7fc54b018aa1d5ebc0d1df7ddad3f7bac61233\",\"size\":9958,\"url\":\"https://api.github.com/repos/twist-vector/nim-bped/contents/bped.nim?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-bped/blob/master/bped.nim\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-bped/git/blobs/1a7fc54b018aa1d5ebc0d1df7ddad3f7bac61233\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nim-bped/master/bped.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-bped/contents/bped.nim?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-bped/git/blobs/1a7fc54b018aa1d5ebc0d1df7ddad3f7bac61233\",\"html\":\"https://github.com/twist-vector/nim-bped/blob/master/bped.nim\"}},{\"name\":\"nbped.nimble\",\"path\":\"nbped.nimble\",\"sha\":\"62714f43eb84735e4fad17cc1d56764b5f849fca\",\"size\":273,\"url\":\"https://api.github.com/repos/twist-vector/nim-bped/contents/nbped.nimble?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-bped/blob/master/nbped.nimble\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-bped/git/blobs/62714f43eb84735e4fad17cc1d56764b5f849fca\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nim-bped/master/nbped.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-bped/contents/nbped.nimble?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-bped/git/blobs/62714f43eb84735e4fad17cc1d56764b5f849fca\",\"html\":\"https://github.com/twist-vector/nim-bped/blob/master/nbped.nimble\"}},{\"name\":\"test\",\"path\":\"test\",\"sha\":\"ed7c6b0240f1de4022e6f0e6926efa7ff4a97e37\",\"size\":0,\"url\":\"https://api.github.com/repos/twist-vector/nim-bped/contents/test?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-bped/tree/master/test\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-bped/git/trees/ed7c6b0240f1de4022e6f0e6926efa7ff4a97e37\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-bped/contents/test?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-bped/git/trees/ed7c6b0240f1de4022e6f0e6926efa7ff4a97e37\",\"html\":\"https://github.com/twist-vector/nim-bped/tree/master/test\"}}]",
"https://github.com/jpoirier/XPLM-Nim": "[Package]\nname          = \"xplm\"\nversion       = \"0.2.4\"\nauthor        = \"Joseph Poirier\"\ndescription   = \"X-Plane XPLM SDK bindings.\"\nlicense       = \"BSD\"\n\nsrcDir: \"src\"\n\n[Deps]\nRequires: \"nimrod >= 0.10.2\"\n",
"https://github.com/vegansk/xmltools": "# Package\n\nversion       = \"0.1.6\"\nauthor        = \"Anatoly Galiulin <galiulin.anatoly@gmail.com>\"\ndescription   = \"High level xml library for Nim\"\nlicense       = \"MIT\"\n\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\", \"nimfp >= 0.4.4\", \"nimboost >= 0.5.5\"\n",
"https://github.com/JohnAD/bson": "# Package\n\nversion      = \"1.1.2\"\nauthor       = \"John Dupuy\"\ndescription  = \"BSON (Binary Json) serialization\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/moigagoo/norman": "# Package\n\nversion       = \"2.1.7\"\nauthor        = \"Constantine Molchanov\"\ndescription   = \"Scaffolder and migration manager for Norm.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\", \"nims\"]\nbinDir        = \"bin\"\nbin           = @[\"norman\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"norm >= 2.2.1\", \"cligen >= 1.1.0\", \"dotenv >= 1.1.1\"\n\ntask docs, \"Generate docs\":\n  rmDir \"htmldocs\"\n  exec \"nimble doc --outdir:htmldocs --project --index:on src/norman\"\n  exec \"nim rst2html -o:htmldocs/index.html README.rst\"\n  cpFile(\"CNAME\", \"htmldocs/CNAME\")\n",
"https://raw.githubusercontent.com/metacontainer/sctp.nim/master/sctp.nimble": "version     = \"0.1.0\"\nauthor      = \"Michał Zieliński <michal@zielinscy.org.pl>\"\ndescription = \"High-level Nim bindings for userspace SCTP implementation\"\nlicense     = \"BSD\"\nskipDirs = @[\"tests\"]\n\n# Deps\n\nrequires \"nim >= 0.17.3\"\nrequires \"reactor >= 0.4.6\"\n\n",
"https://raw.githubusercontent.com/juancarlospaco/sweetanitify/master/sweetanitify.nimble": "version       = \"1.2.2\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Sweet_Anita Translator, help spread awareness about Tourettes\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://github.com/disruptek/bluu": "version = \"0.0.6\"\nauthor = \"disruptek\"\ndescription = \"Microsoft Azure Cloud Computing Platform and Services (MAC) APIs\"\nlicense = \"MIT\"\nrequires \"nim >= 0.20.0\"\nrequires \"https://github.com/disruptek/rest.git >= 1.0.0\"\nrequires \"https://github.com/disruptek/openapi.git >= 3.1.3\"\nrequires \"npeg >= 0.22.2\"\n\nsrcDir = \"src\"\n",
"https://raw.githubusercontent.com/momeemt/Unit/master/Unit.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Momeemt\"\ndescription   = \"A library that provides unit types in nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n",
"https://raw.githubusercontent.com/ba0f3/ptrace.nim/master/ptrace.nimble": "version       = \"0.0.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"ptrace wrapper and helpers for Nim\"\nlicense       = \"MIT\"\n\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.10.0\"\n",
"https://raw.githubusercontent.com/keyme/nim_intel_hex/master/intel_hex.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"Intel hex file utility library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://github.com/status-im/nim-libp2p": "mode = ScriptMode.Verbose\n\npackageName   = \"libp2p\"\nversion       = \"0.0.2\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"LibP2P implementation\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\", \"examples\", \"Nim\", \"tools\", \"scripts\", \"docs\"]\n\nrequires \"nim >= 1.2.0\",\n         \"nimcrypto >= 0.4.1\",\n         \"bearssl >= 0.1.4\",\n         \"chronicles >= 0.7.2\",\n         \"chronos >= 2.5.2\",\n         \"metrics\",\n         \"secp256k1\",\n         \"stew#head\"\n\nproc runTest(filename: string, verify: bool = true, sign: bool = true,\n             moreoptions: string = \"\") =\n  var excstr = \"nim c --opt:speed -d:debug --verbosity:0 --hints:off\"\n  excstr.add(\" --warning[CaseTransition]:off --warning[ObservableStores]:off --warning[LockLevel]:off\")\n  excstr.add(\" -d:libp2p_pubsub_sign=\" & $sign)\n  excstr.add(\" -d:libp2p_pubsub_verify=\" & $verify)\n  excstr.add(\" \" & moreoptions & \" \")\n  if verify and sign:\n    # build it with TRACE and JSON logs\n    exec excstr & \" -d:chronicles_log_level=TRACE -d:chronicles_sinks:json\" & \" tests/\" & filename\n  # build it again, to run it with less verbose logs\n  exec excstr & \" -d:chronicles_log_level=INFO -r\" & \" tests/\" & filename\n  rmFile \"tests/\" & filename.toExe\n\nproc buildSample(filename: string) =\n  var excstr = \"nim c --opt:speed --threads:on -d:debug --verbosity:0 --hints:off\"\n  excstr.add(\" --warning[CaseTransition]:off --warning[ObservableStores]:off --warning[LockLevel]:off\")\n  excstr.add(\" examples/\" & filename)\n  exec excstr\n  rmFile \"examples\" & filename.toExe\n\ntask testnative, \"Runs libp2p native tests\":\n  runTest(\"testnative\")\n\ntask testdaemon, \"Runs daemon tests\":\n  runTest(\"testdaemon\")\n\ntask testinterop, \"Runs interop tests\":\n  runTest(\"testinterop\")\n\ntask testpubsub, \"Runs pubsub tests\":\n  runTest(\"pubsub/testgossipinternal\", sign = false, verify = false, moreoptions = \"-d:pubsub_internal_testing\")\n  runTest(\"pubsub/testpubsub\")\n  runTest(\"pubsub/testpubsub\", sign = false, verify = false)\n  runTest(\"pubsub/testpubsub\", sign = false, verify = false, moreoptions = \"-d:libp2p_pubsub_anonymize=true\")\n\ntask testpubsub_slim, \"Runs pubsub tests\":\n  runTest(\"pubsub/testgossipinternal\", sign = false, verify = false, moreoptions = \"-d:pubsub_internal_testing\")\n  runTest(\"pubsub/testpubsub\")\n\ntask testfilter, \"Run PKI filter test\":\n  runTest(\"testpkifilter\",\n           moreoptions = \"-d:libp2p_pki_schemes=\\\"secp256k1\\\"\")\n  runTest(\"testpkifilter\",\n           moreoptions = \"-d:libp2p_pki_schemes=\\\"secp256k1;ed25519\\\"\")\n  runTest(\"testpkifilter\",\n           moreoptions = \"-d:libp2p_pki_schemes=\\\"secp256k1;ed25519;ecnist\\\"\")\n  runTest(\"testpkifilter\",\n           moreoptions = \"-d:libp2p_pki_schemes=\")\n\ntask test, \"Runs the test suite\":\n  exec \"nimble testnative\"\n  exec \"nimble testpubsub\"\n  exec \"nimble testdaemon\"\n  exec \"nimble testinterop\"\n  exec \"nimble testfilter\"\n\ntask test_slim, \"Runs the test suite\":\n  exec \"nimble testnative\"\n  exec \"nimble testpubsub_slim\"\n  exec \"nimble testinterop\"\n  exec \"nimble testfilter\"\n\ntask examples_build, \"Build the samples\":\n  buildSample(\"directchat\")\n",
"https://github.com/status-im/nim-stint": "packageName   = \"stint\"\nversion       = \"0.0.1\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"Efficient stack-based multiprecision int in Nim\"\nlicense       = \"Apache License 2.0 or MIT\"\nskipDirs      = @[\"tests\", \"benchmarks\"]\n### Dependencies\n\n# TODO test only requirements don't work: https://github.com/nim-lang/nimble/issues/482\nrequires \"nim >= 0.19\",\n         \"stew\"\n #, \"https://github.com/alehander42/nim-quicktest >= 0.18.0\", \"https://github.com/status-im/nim-ttmath\"\n\nproc test(name: string, lang: string = \"c\") =\n  if not dirExists \"build\":\n    mkDir \"build\"\n  --run\n  switch(\"out\", (\"./build/\" & name))\n  setCommand lang, \"tests/\" & name & \".nim\"\n\ntask test_internal_debug, \"Run tests for internal procs - test implementation (StUint[64] = 2x uint32\":\n  switch(\"define\", \"stint_test\")\n  test \"internal\"\n\ntask test_internal_release, \"Run tests for internal procs - prod implementation (StUint[64] = uint64\":\n  test \"internal\"\n\ntask test_debug, \"Run all tests - test implementation (StUint[64] = 2x uint32\":\n  switch(\"define\", \"stint_test\")\n  test \"all_tests\"\n\ntask test_release, \"Run all tests - prod implementation (StUint[64] = uint64\":\n  test \"all_tests\"\n\ntask test_property_debug, \"Run random tests (debug mode) - test implementation (StUint[64] = 2x uint32)\":\n  requires \"https://github.com/alehander42/nim-quicktest >= 0.18.0\"\n  switch(\"define\", \"stint_test\")\n  test \"property_based\"\n\ntask test_property_release, \"Run random tests (release mode) - test implementation (StUint[64] = 2x uint32)\":\n  requires \"https://github.com/alehander42/nim-quicktest >= 0.18.0\"\n  switch(\"define\", \"stint_test\")\n  switch(\"define\", \"release\")\n  test \"property_based\"\n\ntask test_property_uint256_debug, \"Run random tests Uint256 (debug mode) vs TTMath (StUint[256] = 8 x uint32)\":\n  # TODO: another reference implementation?\n  requires \"https://github.com/alehander42/nim-quicktest >= 0.18.0\", \"https://github.com/status-im/nim-ttmath\"\n  test \"property_based\", \"cpp\"\n\ntask test_property_uint256_release, \"Run random tests Uint256 (release mode) vs TTMath (StUint[256] = 4 x uint64)\":\n  # TODO: another reference implementation?\n  requires \"https://github.com/alehander42/nim-quicktest >= 0.18.0\", \"https://github.com/status-im/nim-ttmath\"\n  switch(\"define\", \"release\")\n  test \"property_based\", \"cpp\"\n\ntask test, \"Run all tests - test and production implementation\":\n  exec \"nimble test_internal_debug\"\n  exec \"nimble test_internal_release\"\n  exec \"nimble test_debug\"\n  exec \"nimble test_release\"\n  ## TODO test only requirements don't work: https://github.com/nim-lang/nimble/issues/482\n  # exec \"nimble test_property_debug\"\n  # exec \"nimble test_property_release\"\n  # exec \"nimble test_property_uint256_debug\"\n  # exec \"nimble test_property_uint256_release\"\n",
"https://raw.githubusercontent.com/wltsmrz/nimler/master/nimler.nimble": "mode = ScriptMode.Silent\nversion = \"4.6.0\"\nauthor = \"wltsmrz\"\ndescription = \"Erlang/Elixir NIFs\"\nlicense = \"MIT\"\nskipDirs = @[\"tests\", \"docs\", \"examples\"]\nskipFiles = @[\"README.md\"]\ninstallDirs = @[\"nimler\", \"scripts\"]\ninstallFiles = @[\"nimler.nim\"]\nrequires \"nim >= 1.2.0\"\n\nproc configTest() =\n  if getEnv(\"NIMLER_BUILD_RELEASE\") == \"1\":\n    --define:release\n\n  if getEnv(\"NIMLER_BUILD_ARM64\") == \"1\":\n    --gcc.exe:\"aarch64-linux-gnu-gcc\"\n    --gcc.linkerexe:\"aarch64-linux-gnu-ld\"\n    --cpu:arm64\n    --os:linux\n\ntask test, \"dummy\":\n  quit(0)\n\ntask build_all, \"build\":\n  exec(\"nimble build_init_api\")\n  exec(\"nimble build_dirty_nif\")\n  exec(\"nimble build_integration\")\n  exec(\"nimble build_codec\")\n  exec(\"nimble build_resource\")\n  exec(\"nimble build_init_resource\")\n  exec(\"nimble build_timeslice\")\n  exec(\"nimble build_message\")\n  exec(\"nimble build_positional\")\n\ntask test_all, \"run tests\":\n  exec(\"elixir test_all.exs\")\n\ntask build_init_api, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/init_api/nif.so\")\n  switch(\"define\", \"nimlerWrapperLoadInfo=123\")\n  setCommand(\"compile\", \"tests/init_api/nif\")\n\ntask test_init_api, \"run test\":\n  exec(\"elixir -r tests/init_api/NimlerWrapper.ex tests/init_api/test.exs\")\n\ntask build_integration, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/integration/nif.so\")\n  setCommand(\"compile\", \"tests/integration/nif\")\n\ntask test_integration, \"run test\":\n  exec(\"elixir -r tests/integration/NimlerWrapper.ex tests/integration/test.exs\")\n\ntask build_codec, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/codec/nif.so\")\n  setCommand(\"compile\", \"tests/codec/nif\")\n\ntask test_codec, \"run test\":\n  exec(\"elixir -r tests/codec/NimlerWrapper.ex tests/codec/test.exs\")\n\ntask build_resource, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/resource/nif.so\")\n  setCommand(\"compile\", \"tests/resource/nif\")\n\ntask test_resource, \"run test\":\n  exec(\"elixir -r tests/resource/NimlerWrapper.ex tests/resource/test.exs\")\n\ntask build_init_resource, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/init_resource/nif.so\")\n  setCommand(\"compile\", \"tests/init_resource/nif\")\n\ntask test_init_resource, \"run test\":\n  exec(\"elixir -r tests/init_resource/NimlerWrapper.ex tests/init_resource/test.exs\")\n\ntask build_dirty_nif, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/dirty_nif/nif.so\")\n  setCommand(\"compile\", \"tests/dirty_nif/nif\")\n\ntask test_dirty_nif, \"run test\":\n  exec(\"elixir -r tests/dirty_nif/NimlerWrapper.ex tests/dirty_nif/test.exs\")\n\ntask build_timeslice, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/timeslice/nif.so\")\n  setCommand(\"compile\", \"tests/timeslice/nif\")\n\ntask test_timeslice, \"run test\":\n  exec(\"elixir -r tests/timeslice/NimlerWrapper.ex tests/timeslice/test.exs\")\n\ntask build_message, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/message/nif.so\")\n  setCommand(\"compile\", \"tests/message/nif\")\n\ntask test_message, \"run test\":\n  exec(\"elixir -r tests/message/NimlerWrapper.ex tests/message/test.exs\")\n\ntask build_positional, \"build nif\":\n  configTest()\n  switch(\"out\", \"tests/positional/nif.so\")\n  setCommand(\"compile\", \"tests/positional/nif\")\n\ntask test_positional, \"run test\":\n  exec(\"elixir -r tests/positional/NimlerWrapper.ex tests/positional/test.exs\")\n\ntask run_init_api, \"run test\":\n  exec(\"nimble build_init_api\")\n  exec(\"nimble test_init_api\")\ntask run_integration, \"run test\":\n  exec(\"nimble build_integration\")\n  exec(\"nimble test_integration\")\ntask run_codec, \"run test\":\n  exec(\"nimble build_codec\")\n  exec(\"nimble test_codec\")\ntask run_dirty_nif, \"run test\":\n  exec(\"nimble build_dirty_nif\")\n  exec(\"nimble test_dirty_nif\")\ntask run_init_resource, \"run test\":\n  exec(\"nimble build_init_resource\")\n  exec(\"nimble test_init_resource\")\ntask run_resource, \"run test\":\n  exec(\"nimble build_resource\")\n  exec(\"nimble test_resource\")\ntask run_timeslice, \"run test\":\n  exec(\"nimble build_timeslice\")\n  exec(\"nimble test_timeslice\")\ntask run_message, \"run test\":\n  exec(\"nimble build_message\")\n  exec(\"nimble test_message\")\ntask run_positional, \"run test\":\n  exec(\"nimble build_positional\")\n  exec(\"nimble test_positional\")\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-contra/master/contra.nimble": "# Package\n\nversion       = \"0.2.5\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Lightweight Self-Documenting Design by Contract Programming and Security Hardened mode and Immutable Programming, NimScript, JavaScript, compile-time.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/johnnovak/nim-nanovg/master/nanovg.nimble": "# Package\n\nversion       = \"0.3.1\"\nauthor        = \"John Novak <john@johnnovak.net>\"\ndescription   = \"Nim wrapper for the NanoVG antialiased vector graphics rendering library for OpenGL\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"doc\", \"examples\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\n\ntask examplesGL2, \"Compiles the examples\":\n  exec \"nim c -d:release -D:glfwStaticLib -D:demoMSAA -D:nvgGL2 examples/example_gl2.nim\"\n  exec \"nim c -d:release -D:glfwStaticLib -D:demoMSAA -D:nvgGL2 examples/simple_gl2.nim\"\n\ntask examplesGL3, \"Compiles the examples\":\n  exec \"nim c -d:release -D:glfwStaticLib -D:demoMSAA -D:nvgGL3 examples/example_gl3.nim\"\n  exec \"nim c -d:release -D:glfwStaticLib -D:demoMSAA -D:nvgGL3 examples/simple_gl3.nim\"\n  exec \"nim c -d:release -D:glfwStaticLib -D:nvgGL3 examples/example_fbo.nim\"\n\ntask docgen, \"Generate HTML documentation\":\n  exec \"nim doc -D:nvgGL3 -o:doc/nanovg.html nanovg\"\n  exec \"nim doc -D:nvgGL3 -o:doc/wrapper.html nanovg/wrapper\"\n",
"https://raw.githubusercontent.com/soasme/nim-schedules/master/schedules.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Ju Lin\"\ndescription   = \"A Nim scheduler library that lets you kick off jobs at regular intervals.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://github.com/yglukhov/persistent_enums": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Define enums which values preserve their binary representation upon inserting or reordering\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.13.1\"\n\n",
"https://github.com/juancarlospaco/nim-osrm": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"juancarlospaco\"\ndescription   = \"Open Source Routing Machine for OpenStreetMap API Lib and App\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.20.0\"\n",
"https://raw.githubusercontent.com/achesak/nim-ris/master/ris.nimble": "[Package]\nname = \"ris\"\nversion = \"0.2\"\nauthor = \"Adam Chesak\"\ndescription = \"Module for working with RIS citation files\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/GULPF/nimquery": "# Package\n\nversion       = \"1.2.2\"\nauthor        = \"Oscar Nihlgård\"\ndescription   = \"Library for querying HTML using CSS-selectors (like JavaScripts document.querySelector)\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\nrequires \"nim >= 0.20.0\"\n\ntask test, \"Run the tests\":\n    exec \"nim c -r tests/incltests\"\n    rmFile \"tests/incltests\"\n    exec \"nim c -r tests/tests\"\n    rmFile \"tests/tests\"\n",
"https://raw.githubusercontent.com/kaushalmodi/p4ztag_to_json/master/p4ztag_to_json.nimble": "# Package\n\nversion       = \"0.11.1\"\nauthor        = \"Kaushal Modi\"\ndescription   = \"Convert Helix Version Control / Perforce (p4) -ztag output to JSON\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"p4ztag_to_json\"]\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\", \"regex >= 0.11.0\"\n",
"https://raw.githubusercontent.com/juancarlospaco/nim-printdebug/master/printdebug.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Print Debug for Nim, tiny 3 lines Lib, C Target\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/achesak/nim-rss/master/rss.nimble": "# Package\n\nversion = \"1.1\"\nauthor = \"Adam Chesak\"\ndescription = \"Nim RSS parser\"\nlicense = \"MIT\"\nsrcDir = \"src\"\n\n# Deps\n\nrequires \"nim >= 0.18\"\n",
"https://github.com/BigEpsilon/nim-cppstl": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"nouredine\"\ndescription   = \"Bindings for the C++ Standard Template Library (STL)\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.9\"\n\ntask test, \"Run tests\":\n    exec \"\"\"nim cpp -r -o:test --passC:-std=c++11 tests/tvector.nim\"\"\"\n    exec \"\"\"nim cpp -r -o:test --passC:-std=c++11 tests/tstring.nim\"\"\"\n\n\ntask rtest, \"Run tests\":\n    exec \"\"\"nim cpp -r -o:test -d:release --passC:-std=c++11 tests/tvector.nim\"\"\"\n    exec \"\"\"nim cpp -r -o:test -d:release --passC:-std=c++11 tests/tstring.nim\"\"\"\n",
"https://github.com/dariolah/niup": "# Package\n\nversion       = \"3.30.0\"\nauthor        = \"Dario Lah\"\ndescription   = \"IUP FFI bindings\"\nlicense       = \"MIT\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.4\"\n\nwhen defined(nimdistros):\n  import distros\n  if detectOs(Linux):\n    foreignDep \"libiup.so\"\n    foreignDep \"libiupcd.so\"\n    foreignDep \"libiupcontrols.so\"\n    foreignDep \"libiupglcontrols.so\"\n    foreignDep \"libiupgl.so\"\n    foreignDep \"libiupimglib.so\"\n    foreignDep \"libiupim.so\"\n    foreignDep \"libiup_mglplot.so\"\n    foreignDep \"libiup_plot.so\"\n    foreignDep \"libiup_scintilla.so\"\n    foreignDep \"libiuptuio.so\"\n    foreignDep \"libiupweb.so\"\n\n  elif detectOs(Windows):\n    foreignDep \"libiup.dll\"\n    foreignDep \"libiupcd.dll\"\n    foreignDep \"libiupcontrols.dll\"\n    foreignDep \"libiupglcontrols.dll\"\n    foreignDep \"libiupgl.dll\"\n    foreignDep \"libiupimglib.dll\"\n    foreignDep \"libiupim.dll\"\n    foreignDep \"libiup_mglplot.dll\"\n    foreignDep \"libiup_plot.dll\"\n    foreignDep \"libiup_scintilla.dll\"\n    foreignDep \"libiuptuio.dll\"\n    foreignDep \"libiupweb.dll\"\n  else:\n    foreignDep \"libiup.dylib\"\n    foreignDep \"libiupcd.dylib\"\n    foreignDep \"libiupcontrols.dylib\"\n    foreignDep \"libiupglcontrols.dylib\"\n    foreignDep \"libiupgl.dylib\"\n    foreignDep \"libiupimglib.dylib\"\n    foreignDep \"libiupim.dylib\"\n    foreignDep \"libiup_mglplot.dylib\"\n    foreignDep \"libiup_plot.dylib\"\n    foreignDep \"libiup_scintilla.dylib\"\n    foreignDep \"libiuptuio.dylib\"\n    foreignDep \"libiupweb.dylib\"\n",
"https://github.com/ire4ever1190/dimscordCommandHandler": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Jake Leahy\"\ndescription   = \"A command handler for the dimscord discord library\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\"\nrequires \"dimscord >= 1.2.4\"\n\ntask ex, \"Runs the example\":\n    exec \"nim r -d:ssl example\"\n\ntask docs, \"Generates the documentation\":\n    exec \"nimble doc --project --index:on --git.url:https://github.com/ire4ever1190/dimscmd --outdir:docs/ src/dimscmd.nim\"\n",
"https://raw.githubusercontent.com/kijowski/autotyper/master/autotyper.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Michal Kijowski\"\ndescription   = \"Keyboard typing emulator\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\nbin           = @[\"autotyper\"]\nbinDir        = \"bin\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.2\"\nrequires \"cligen\"\n\n# Tasks\n\ntask doc, \"Generate documentation\":\n  rmDir \"docs\"\n  exec \"nim doc --project --index:on --git.url:https://github.com/kijowski/autotyper --git.commit:master --out=docs src/autotyperpkg/typer.nim\"\n  exec \"nim buildIndex -o:docs/theindex.html docs\"",
"https://raw.githubusercontent.com/ba0f3/telebot.nim/master/telebot.nimble": "version       = \"1.0.4\"\nauthor        = \"Huy Doan\"\ndescription   = \"Async Telegram Bot API Client\"\nlicense       = \"MIT\"\nskipDirs      = @[\"examples\"]\nsrcDir        = \"src\"\n\nrequires        \"nim >= 1.0.4\", \"sam >= 0.1.15\"\n",
"https://raw.githubusercontent.com/xzfc/ndb.nim/master/ndb.nimble": "version       = \"0.19.9\"\nauthor        = \"Albert Safin <xzfcpw@gmail.com>\"\ndescription   = \"A db_sqlite fork with a proper typing\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 0.19.0\"\n\nskipDirs = @[\"tests\"]\n\ntask test_sqlite, \"Run the test suite (sqlite)\":\n  exec \"nim c -r tests/tsqlite.nim\"\n\ntask test_postgres, \"Run the test suite (postgres)\":\n  exec \"nim c -r tests/tpostgres.nim\"\n\ntask test, \"Run the test suite (all)\":\n  testSqliteTask()\n  testPostgresTask()\n\ntask benchmark, \"Compile the benchmark\":\n  exec \"nim c -d:mode=0 -d:release -o:tests/bsqlite.0 tests/bsqlite.nim\"\n  exec \"nim c -d:mode=1 -d:release -o:tests/bsqlite.1 tests/bsqlite.nim\"\n",
"https://raw.githubusercontent.com/IoTone/huenim/master/huenim.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"David J. Kordsmeier\"\ndescription   = \"Huenim\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\nbin = @[\"huenim\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\nrequires \"docopt >= 0.6.5\"\n\ntask test, \"Run the huenim tester-er\":\n  withDir \"tests\":\n    exec \"nim c -r runTests\"\n\n",
"https://github.com/esbullington/nimrod-hex": "[Package]\nname          = \"hex\"\nversion       = \"0.1.0\"\nauthor        = \"Eric S. Bullington\"\ndescription   = \"a simple hex package\"\nlicense       = \"MIT\"\n",
"https://raw.githubusercontent.com/tormund/nimwebp/master/nimwebp.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"tormund\"\ndescription   = \"webp bindings\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 1.0.4\"\nrequires \"nimPNG\" #for tests\nrequires \"https://github.com/yglukhov/clurp\"\n",
"https://raw.githubusercontent.com/molnarmark/colorize/master/colorize.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Mark Molnar\"\ndescription   = \"Simple lightweight package to colorize your terminal output\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n",
"https://raw.githubusercontent.com/juancarlospaco/webgui/master/webgui.nimble": "version       = \"0.9.0\"\nauthor        = \"Juan Carlos\"\ndescription   = \"Web Technologies based Crossplatform GUI, modified wrapper for modified webview.h\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nskipDirs      = @[\"examples\", \"docs\"]\n\nrequires \"nim >= 1.2.4\"\n\n\nimport distros\n\ntask setup, \"Setup\":\n  if not defined(ssl):\n    echo \"SSL is required for HTTPS.\"\n\n  if detectOs(Ubuntu):\n    foreignDep \"build-essential\"\n    foreignDep \"gtk+-3.0\"\n    foreignDep \"webkit2gtk-4.0\"\n\nbefore install:\n  setupTask()\n",
"https://api.github.com/repos/twist-vector/nim-stopwatch/contents": "[{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"184223022732e5fa055f85539484f8eaae9140e0\",\"size\":2380,\"url\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/contents/README.md?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-stopwatch/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/git/blobs/184223022732e5fa055f85539484f8eaae9140e0\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nim-stopwatch/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/git/blobs/184223022732e5fa055f85539484f8eaae9140e0\",\"html\":\"https://github.com/twist-vector/nim-stopwatch/blob/master/README.md\"}},{\"name\":\"nimstopwatch.nimble\",\"path\":\"nimstopwatch.nimble\",\"sha\":\"938133d1fe15c629517b4b88fd2d6661115d930c\",\"size\":263,\"url\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/contents/nimstopwatch.nimble?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-stopwatch/blob/master/nimstopwatch.nimble\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/git/blobs/938133d1fe15c629517b4b88fd2d6661115d930c\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nim-stopwatch/master/nimstopwatch.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/contents/nimstopwatch.nimble?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/git/blobs/938133d1fe15c629517b4b88fd2d6661115d930c\",\"html\":\"https://github.com/twist-vector/nim-stopwatch/blob/master/nimstopwatch.nimble\"}},{\"name\":\"stopwatch.nim\",\"path\":\"stopwatch.nim\",\"sha\":\"f8158e2411949dfd4d06d19ead2354114bb05bcf\",\"size\":5407,\"url\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/contents/stopwatch.nim?ref=master\",\"html_url\":\"https://github.com/twist-vector/nim-stopwatch/blob/master/stopwatch.nim\",\"git_url\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/git/blobs/f8158e2411949dfd4d06d19ead2354114bb05bcf\",\"download_url\":\"https://raw.githubusercontent.com/twist-vector/nim-stopwatch/master/stopwatch.nim\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/contents/stopwatch.nim?ref=master\",\"git\":\"https://api.github.com/repos/twist-vector/nim-stopwatch/git/blobs/f8158e2411949dfd4d06d19ead2354114bb05bcf\",\"html\":\"https://github.com/twist-vector/nim-stopwatch/blob/master/stopwatch.nim\"}}]",
"https://github.com/samdmarshall/plugin-manager": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"Simple plugin implementation\"\nlicense       = \"BSD 3-Clause\"\nsrcDir        = \"src\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n\n\ntask test, \"Runs the test suite\":\n  exec \"nim c tests/plugin/plugin.nim\"\n  exec \"nim c -r tests/test\"\n",
"https://github.com/SolitudeSF/colorcol": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"SolitudeSF\"\ndescription   = \"Kakoune plugin for color preview\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"colorcol\"]\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/c-blake/lc": "# Package\nversion     = \"0.9.0\"\nauthor      = \"Charles Blake\"\ndescription = \"A post-modern, \\\"multi-dimensional\\\", configurable, abbreviating, extensible ls/file lister\"\nlicense     = \"MIT/ISC\"\nbin         = @[\"lc\"]\n\n# Dependencies\nrequires \"nim >= 0.20.1\", \"cligen >= 1.2.0\"\nskipDirs = @[\"configs\"]\n",
"https://raw.githubusercontent.com/linksplatform/RegularExpressions.Transformer/master/retranslator.nimble": "[Package]\r\nname = \"retranslator\"\r\nauthor = \"Ethosa, Konard\"\r\nversion = \"0.0.4\"\r\ndescription = \"Transformer\"\r\nlicense = \"LGPLv3\"\r\nsrcDir = \"nim/src\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 1.0.0\"\r\nRequires: \"nre\"\r\n",
"https://raw.githubusercontent.com/status-im/nim-protobuf-serialization/master/protobuf_serialization.nimble": "import os\n\nmode = ScriptMode.Verbose\n\nversion       = \"0.2.0\"\nauthor        = \"Joey Yakimowich-Payne\"\ndescription   = \"Protobuf implementation compatible with the nim-serialization framework.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 1.2.0\",\n         \"stew\",\n         \"faststreams\",\n         \"serialization\",\n         \"combparser\"\n\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  #Explicitly specify the call depth limit in case the default changes in the future.\n  test \"--threads:off\", \"tests/test_all\"\n  test \"--threads:on\", \"tests/test_all\"\n\n  #Also iterate over every test in tests/fail, and verify they fail to compile.\n  echo \"\\r\\n\\x1B[0;94m[Suite]\\x1B[0;37m Test Fail to Compile\"\n  var tests: seq[string] = @[]\n  for path in listFiles(thisDir() / \"tests\" / \"fail\"):\n    if path.split(\".\")[^1] != \"nim\":\n      continue\n\n    if gorgeEx(\"nim c \" & path).exitCode != 0:\n      echo \"  \\x1B[0;92m[OK]\\x1B[0;37m \", path.split(DirSep)[^1]\n    else:\n      echo \"  \\x1B[0;31m[FAILED]\\x1B[0;37m \", path.split(DirSep)[^1]\n      exec \"exit 1\"\n",
"https://github.com/Araq/awesome_rmdir/": "[Package]\nname          = \"awesome_rmdir\"\nversion       = \"0.2.1\"\nauthor        = \"Grzegorz Adam Hankiewicz\"\ndescription   = \"\"\"Command to remove acceptably empty directories.\"\"\"\nlicense       = \"MIT\"\nbin           = \"awesome_rmdir\"\nInstallFiles = \"\"\"\n\nLICENSE.rst\nREADME.rst\nawesome_rmdir.nim\ndocindex.rst\ndocs/CHANGES.rst\nnakefile.nim\nnakefile.nimrod.cfg\n\n\"\"\"\n\n[Deps]\nRequires: \"nake >= 1.0, argument_parser\"\n",
"https://github.com/barcharcraz/nim-freeimage": "[Package]\nname = \"freeimage\"\nversion = \"0.1\"\nauthor = \"Charlie Barto\"\ndescription = \"\"\"wrapper for the FreeImage library for reading and writing image files\"\"\"\nlicense = \"MIT\"\nInstallFiles = \"\"\"\nFreeImage_License.txt\nfreeimage.nim\n\"\"\"\n",
"https://github.com/jiro4989/ski": "# Package\n\nversion       = \"1.2.0\"\nauthor        = \"jiro4989\"\ndescription   = \"ski is library for SKI combinator.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.4\"\n\ntask docs, \"Generate documents\":\n  exec \"nimble doc src/ski.nim -o:docs/ski.html\"\n\ntask examples, \"Run example programs\":\n  withDir \"examples/calc_args\":\n    exec \"nim c -r main.nim Sxyz\"\n  exec \"echo ---------------------\"\n  withDir \"examples/read_file\":\n    exec \"nim c -r main.nim\"\n\ntask ci, \"Run CI tasks\":\n  exec \"nimble test\"\n  exec \"nimble docs\"\n  exec \"nimble examples\"\n\ntask buildjs, \"Build JS library\":\n  exec \"nimble js -o:docs/js/ski_js.js src/ski_js.nim\"\n",
"https://github.com/bunkford/barcode": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"Nim barcode library.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires: \"nim >= 1.0.0\"",
"https://github.com/genotrance/nimpcre": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"genotrance\"\ndescription   = \"PCRE wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimterop >= 0.5.4\"\n\nvar\n  name = \"nimpcre\"\n\ntask test, \"Run tests\":\n  exec \"nim c -f -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/achesak/nim-vidhdr/master/vidhdr.nimble": "[Package]\nname = \"vidhdr\"\nversion = \"1.0\"\nauthor = \"Adam Chesak\"\ndescription = \"Library for determining the format of a video file\"\nlicense = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.13\"\n",
"https://github.com/tormund/os_files": "# Package\nversion = \"0.1.2\"\nauthor = \"Tormund\"\ndescription = \"\"\"Native file dialogs (x11, windows, osx) with extension filters and predefined path.\n    System file icons in any resolution (x11 with theme support, windows, osx).\n    Open file in default application (x11, windows, osx)\"\"\"\n\nlicense = \"MIT\"\n\nwhen defined(windows):\n    requires \"winim >= 3.1.1\"\n\nrequires \"oldgtk3\"\nrequires \"jsbind\"\nrequires \"https://github.com/yglukhov/darwin\"\n",
"https://raw.githubusercontent.com/vegansk/nimboost/master/nimboost.nimble": "# [Package]\nversion       = \"0.5.6\"\nauthor        = \"Anatoly Galiulin <galiulin.anatoly@gmail.com>\"\ndescription   = \"Additions to the Nim's standard library, like boost for C++\"\nlicense       = \"MIT\"\n\nsrcDir = \"src\"\n\n# [Deps]\nrequires \"nim >= 0.19.0\", \"patty >= 0.3.3\"\n",
"https://github.com/philip-wernersbach/nim-picohttpparser": "[Package]\n\nversion       = \"0.10.0\"\nauthor        = \"Philip Wernersbach\"\ndescription   = \"Bindings for picohttpparser.\"\nlicense       = \"MIT\"\n",
"https://github.com/mcilya/nimrcon": "# Package\nversion = \"0.0.1\"\nauthor = \"Ilya Tretyakov\"\ndescription = \"Simple RCON client\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\nrequires \"struct >= 0.2.0\"",
"https://raw.githubusercontent.com/treeform/sysinfo/master/sysinfo.nimble": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"treeform\"\ndescription   = \"System info, CPU, OS, Memory\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 1.1.1\"\n",
"https://github.com/watzon/github-api-nim": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Chris Watson\"\ndescription   = \"Connector for the GitHub API v3\"\nlicense       = \"WTFPL\"\n\nskipDirs      = @[\"test\"]\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://raw.githubusercontent.com/jangko/nimpdf/master/nimPDF.nimble": "packageName   = \"nimPDF\"\nversion       = \"0.4.3\"\nauthor        = \"Andri Lim\"\ndescription   = \"PDF document generation library written in nim\"\nlicense       = \"MIT\"\nskipDirs      = @[\"new feature\", \"demo\", \"docs\"]\n\nrequires: \"nim >= 0.18.1\"\nrequires: \"nimBMP >= 0.1.0\"\nrequires: \"nimPNG >= 0.1.0\"\nrequires: \"nimSHA2 >= 0.1.0\"\nrequires: \"nimAES >= 0.1.0\"\nrequires: \"stb_image >= 2.1\"\n\n### Helper functions\nproc test(env, path: string) =\n  # Compilation language is controlled by TEST_LANG\n  var lang = \"c\"\n  if existsEnv\"TEST_LANG\":\n    lang = getEnv\"TEST_LANG\"\n\n  exec \"nim \" & lang & \" \" & env &\n    \" -r --hints:off --warnings:off \" & path\n\ntask test, \"Run all tests\":\n  withDir(\"demo\"):\n    test \"--warning[LockLevel]:off --path:../nimPDF -d:release\", \"test_all\"\n\ntask testvcc, \"Run all tests\":\n  withDir(\"demo\"):\n    test \"--cc:vcc --warning[LockLevel]:off --path:../nimPDF -d:release\", \"test_all\"\n",
"https://raw.githubusercontent.com/keyme/nim_cobs/master/cobs.nimble": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Jeff Ciesielski\"\ndescription   = \"Consistent Overhead Byte Stuffing for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/vitreo12/omnimax/master/omnimax.nimble": "# MIT License\n# \n# Copyright (c) 2020 Francesco Cameli\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nversion       = \"0.2.3\"\nauthor        = \"Francesco Cameli\"\ndescription   = \"Max wrapper for omni.\"\nlicense       = \"MIT\"\n\nrequires \"nim >= 1.0.0\"\nrequires \"cligen >= 1.0.0\"\nrequires \"omni >= 0.2.3\"\n\n#Ignore omnimax_lang\nskipDirs = @[\"omnimax_lang\"]\n\n#Install omnimaxpkg\nwhen defined(Windows):\n    installDirs = @[\"omnimaxpkg\"]\n\n#nimble bug: can't install JitterAPI.framework and all its symbolic links\n#gotta install just the folder containing all the files (JitterAPI.framework/Versions/A), and rebuild the links in the \"after\" hook\nelse:\n    installDirs  = @[\n        \"omnimaxpkg/JIT\", \n        \"omnimaxpkg/Static\", \n        \"omnimaxpkg/deps/max-api/include\", \n        \"omnimaxpkg/deps/max-api/script\", \n        \"omnimaxpkg/deps/max-api/site\", \n        \"omnimaxpkg/deps/max-api/lib/mac/JitterAPI.framework/Versions/A\", \n    ] \n\n#Compiler executable\nbin = @[\"omnimax\"]\n\n#If using \"nimble install\" instead of \"nimble installOmniMax\", make sure omnimax_lang is still getting installed\nbefore install:\n    #getPkgDir() here points to the current omnimax source folder\n    let package_dir = getPkgDir()\n    \n    withDir(package_dir):\n        exec \"git submodule update --init --recursive\"\n\n    withDir(getPkgDir() & \"/omnimax_lang\"):\n        exec \"nimble install\"\n\n#before/after are BOTH needed for any of the two to work\nafter install:\n    #Nothing to do on Windows\n    when defined(Windows):\n        discard\n    \n    #On MacOS, reconstruct the JitterAPI.framework symbolic links\n    else:\n        #getPkgDir() here points to the one installed in .nimble/pkgs\n        let jitter_api_framework_path = getPkgDir() & \"/omnimaxpkg/deps/max-api/lib/mac/JitterAPI.framework\"\n        exec \"ln -s \" & $jitter_api_framework_path & \"/Versions/A \" & $jitter_api_framework_path & \"/Versions/Current\"\n        exec \"ln -s \" & $jitter_api_framework_path & \"/Versions/Current/Resources \" & $jitter_api_framework_path & \"/Resources\"\n        exec \"ln -s \" & $jitter_api_framework_path & \"/Versions/Current/JitterAPI \" & $jitter_api_framework_path & \"/JitterAPI\"\n\n#As nimble install, but with -d:release, -d:danger and --opt:speed. Also installs omnimax_lang.\ntask installOmniMax, \"Install the omnimax_lang package and the omnimax compiler\":\n    #Build and install the omnimax compiler executable. This will also trigger the \"before install\" to install omnimax_lang\n    exec \"nimble install --passNim:-d:release --passNim:-d:danger --passNim:--opt:speed\"",
"https://github.com/rockcavera/nim-ndns": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"rockcavera\"\ndescription   = \"A pure Nim Domain Name System (DNS) client\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.0\", \"dnsprotocol\", \"stew\"\n",
"https://raw.githubusercontent.com/Udiknedormin/NimUnits/master/units.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"M. Kotwica\"\ndescription   = \"Units of measure.\"\nlicense       = \"MIT\"\nskipDirs      = @[\"tests\"]\n\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n",
"https://github.com/bung87/simhash-nim": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"zhoupeng\"\ndescription   = \"Nim implementation of simhash algoritim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\nrequires \"lc\"\n",
"https://github.com/genotrance/nimfastText": "# Package\n\nversion       = \"0.1.3\"\nauthor        = \"genotrance\"\ndescription   = \"fastText wrapper for Nim\"\nlicense       = \"MIT\"\n\nskipDirs = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nimgen >= 0.5.0\", \"nim >= 0.19.0\"\n\nimport strutils\n\nvar\n  name = \"nimfastText\"\n  cmd = when defined(Windows): \"cmd /c \" else: \"\"\n\nif not defined(MacOSX):\n  let gccver = staticExec(\"gcc --version\").split(\"\\n\")[0].split(\" \")[^1]\n  if gccver < \"5.0.0\":\n    raise newException(Exception, \"Install failed, package not supported on gcc < 5.x\")\n\nif fileExists(name & \".nimble\"):\n  mkDir(name)\n\ntask setup, \"Checkout and generate\":\n  if gorgeEx(cmd & \"nimgen\").exitCode != 0:\n    withDir(\"..\"):\n      exec \"nimble install nimgen -y\"\n  exec cmd & \"nimgen \" & name & \".cfg\"\n\nbefore install:\n  setupTask()\n\ntask test, \"Run tests\":\n  exec \"nim cpp -r tests/t\" & name & \".nim\"\n",
"https://raw.githubusercontent.com/ruivieira/nim-science/master/science.nimble": "# Package\n\nversion       = \"0.2.2\"\nauthor        = \"Rui  Vieira\"\ndescription   = \"science!\"\nlicense       = \"Apache 2.0\"\nskipDirs      = @[\"examples\", \"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n\n",
"https://raw.githubusercontent.com/philip-wernersbach/nim-qt5_qtsql/master/qt5_qtsql.nimble": "[Package]\nname          = \"qt5_qtsql\"\nversion       = \"1.1.1\"\nauthor        = \"Philip Wernersbach <philip.wernersbach@gmail.com>\"\ndescription   = \"Binding for Qt 5's Qt SQL library. Provides a single API for multiple database engines.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim >= 0.10.3\"\n",
"https://api.github.com/repos/jpoirier/nimrtlsdr/contents": "[{\"name\":\".gitignore\",\"path\":\".gitignore\",\"sha\":\"62c4a133034ebdb994947369117a6b880500b4b2\",\"size\":78,\"url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/.gitignore?ref=master\",\"html_url\":\"https://github.com/jpoirier/nimrtlsdr/blob/master/.gitignore\",\"git_url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/blobs/62c4a133034ebdb994947369117a6b880500b4b2\",\"download_url\":\"https://raw.githubusercontent.com/jpoirier/nimrtlsdr/master/.gitignore\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/.gitignore?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/blobs/62c4a133034ebdb994947369117a6b880500b4b2\",\"html\":\"https://github.com/jpoirier/nimrtlsdr/blob/master/.gitignore\"}},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"sha\":\"fcdc5f95f3e5049ca81d8c701b575b8d7b95cac6\",\"size\":1298,\"url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/LICENSE?ref=master\",\"html_url\":\"https://github.com/jpoirier/nimrtlsdr/blob/master/LICENSE\",\"git_url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/blobs/fcdc5f95f3e5049ca81d8c701b575b8d7b95cac6\",\"download_url\":\"https://raw.githubusercontent.com/jpoirier/nimrtlsdr/master/LICENSE\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/LICENSE?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/blobs/fcdc5f95f3e5049ca81d8c701b575b8d7b95cac6\",\"html\":\"https://github.com/jpoirier/nimrtlsdr/blob/master/LICENSE\"}},{\"name\":\"README.md\",\"path\":\"README.md\",\"sha\":\"ed358375717d6b6edb76325468cdd0fae844204d\",\"size\":1903,\"url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/README.md?ref=master\",\"html_url\":\"https://github.com/jpoirier/nimrtlsdr/blob/master/README.md\",\"git_url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/blobs/ed358375717d6b6edb76325468cdd0fae844204d\",\"download_url\":\"https://raw.githubusercontent.com/jpoirier/nimrtlsdr/master/README.md\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/README.md?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/blobs/ed358375717d6b6edb76325468cdd0fae844204d\",\"html\":\"https://github.com/jpoirier/nimrtlsdr/blob/master/README.md\"}},{\"name\":\"examples\",\"path\":\"examples\",\"sha\":\"02f87146e624ec546cacf944b46e8ff29df49a94\",\"size\":0,\"url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/examples?ref=master\",\"html_url\":\"https://github.com/jpoirier/nimrtlsdr/tree/master/examples\",\"git_url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/trees/02f87146e624ec546cacf944b46e8ff29df49a94\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/examples?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/trees/02f87146e624ec546cacf944b46e8ff29df49a94\",\"html\":\"https://github.com/jpoirier/nimrtlsdr/tree/master/examples\"}},{\"name\":\"rtlsdr.nimble\",\"path\":\"rtlsdr.nimble\",\"sha\":\"7659eef6e2c29e131abffa228f655fbf4fc71e8e\",\"size\":214,\"url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/rtlsdr.nimble?ref=master\",\"html_url\":\"https://github.com/jpoirier/nimrtlsdr/blob/master/rtlsdr.nimble\",\"git_url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/blobs/7659eef6e2c29e131abffa228f655fbf4fc71e8e\",\"download_url\":\"https://raw.githubusercontent.com/jpoirier/nimrtlsdr/master/rtlsdr.nimble\",\"type\":\"file\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/rtlsdr.nimble?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/blobs/7659eef6e2c29e131abffa228f655fbf4fc71e8e\",\"html\":\"https://github.com/jpoirier/nimrtlsdr/blob/master/rtlsdr.nimble\"}},{\"name\":\"src\",\"path\":\"src\",\"sha\":\"ad1d971e546838a4604407d0d009aee089b24aa6\",\"size\":0,\"url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/src?ref=master\",\"html_url\":\"https://github.com/jpoirier/nimrtlsdr/tree/master/src\",\"git_url\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/trees/ad1d971e546838a4604407d0d009aee089b24aa6\",\"download_url\":null,\"type\":\"dir\",\"_links\":{\"self\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/contents/src?ref=master\",\"git\":\"https://api.github.com/repos/jpoirier/nimrtlsdr/git/trees/ad1d971e546838a4604407d0d009aee089b24aa6\",\"html\":\"https://github.com/jpoirier/nimrtlsdr/tree/master/src\"}}]",
"https://github.com/barcharcraz/nim-netpbm": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Charles Barto\"\ndescription   = \"Wrapper for libnetpbm\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n\nsrcDir = \"src\"\n",
"https://github.com/jjv360/nim-classes": "# Package\nversion       = \"0.2.0\"\nauthor        = \"jjv360\"\ndescription   = \"Adds class support to Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\ninstallExt    = @[\"nim\"]\n\n# Dependencies\nrequires \"nim >= 1.4.0\"\n\n# Tasks\ntask test, \"Test\": exec \"nim compile --run --d:debugclasses test.nim\"",
"https://github.com/status-im/nim-keccak-tiny": "mode = ScriptMode.Verbose\n\npackageName   = \"keccak_tiny\"\nversion       = \"0.2.0\"\nauthor        = \"Status Research & Development GmbH\"\ndescription   = \"A wrapper for the keccak-tiny C library\"\nlicense       = \"Apache License 2.0\"\nskipDirs      = @[\"tests\"]\n\nrequires \"nim >= 0.17.0\",\n         \"ranges\"\n\nproc configForTests() =\n  --hints: off\n  --debuginfo\n  --path: \".\"\n  --run\n\ntask test, \"run CPU tests\":\n  configForTests()\n  setCommand \"c\", \"tests/all.nim\"\n\n",
"https://github.com/xmonader/nim-redisclient": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"xmonader\"\ndescription   = \"Redis client for Nim\"\nlicense       = \"Apache2\"\nsrcDir        = \"src\"\n\n# Dependencies\nrequires \"nim >= 0.18.0\", \"redisparser >= 0.1.1\"\n\n\n\ntask genDocs, \"Create code documentation for redisclient\":\n    exec \"nim doc --threads:on --project src/redisclient.nim && rm -rf docs/api; mkdir -p docs && mv src/htmldocs docs/api \"\n",
"https://raw.githubusercontent.com/JohnAD/jestergeoip/master/jestergeoip.nimble": "# Package\n\nversion      = \"1.0.1\"\nauthor       = \"John Dupuy\"\ndescription  = \"A plugin for Jester that gets location data from an IP address using a GeoIP library service (currently GeoJS).\"\nlicense      = \"MIT\"\nsrcDir       = \"src\"\nskipExt      = @[\"rst\"]\n\n# Dependencies\n\nrequires \"nim >= 1.2.0\", \"jesterwithplugins >= 0.5.0\"\n",
"https://raw.githubusercontent.com/jiro4989/markx/master/markx.nimble": "# Package\n\nversion       = \"1.0.1\"\nauthor        = \"jiro4989\"\ndescription   = \"markx selects execution targets with editor and executes commands.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\nbin           = @[\"markx\"]\nbinDir        = \"bin\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.6\"\nrequires \"cligen >= 0.9.47\"\n\nimport os, strformat\n\ntask archive, \"Create archived assets\":\n  let app = \"markx\"\n  let assets = &\"{app}_{buildOS}\"\n  let dir = \"dist\"/assets\n  mkDir dir\n  cpDir \"bin\", dir/\"bin\"\n  cpFile \"LICENSE\", dir/\"LICENSE\"\n  cpFile \"README.rst\", dir/\"README.rst\"\n  withDir \"dist\":\n    when buildOS == \"windows\":\n      exec &\"7z a {assets}.zip {assets}\"\n    else:\n      exec &\"tar czf {assets}.tar.gz {assets}\"\n",
"https://github.com/nim-lang/graphics": "[Package]\r\nname          = \"graphics\"\r\nversion       = \"1.0.0\"\r\nauthor        = \"Andreas Rumpf, Dominik Picheta\"\r\ndescription   = \"Graphics module for Nim.\"\r\nlicense       = \"MIT\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0, sdl1 >= 1.0.0\"\r\n",
"https://github.com/vegansk/nrpl": "[Package]\r\nname          = \"nrpl\"\r\nversion       = \"0.1.4\"\r\nauthor        = \"Willy Heineman\"\r\ndescription   = \"A Nim REPL\"\r\nlicense       = \"MIT\"\r\n\r\nbin           = \"nrpl\"\r\n\r\n[Deps]\r\nRequires: \"nim >= 0.10.0\"\r\n",
"https://github.com/theAkito/nim-quickcrypt": "# Package\n\nversion       = \"0.1.4\"\nauthor        = \"Akito <the@akito.ooo>\"\ndescription   = \"A library for quickly and easily encrypting strings and text file content.\"\nlicense       = \"GPL-3.0-or-later\"\nskipDirs      = @[\"tasks\"]\nskipFiles     = @[\"README.md\"]\n\n\n# Dependencies\n\nrequires \"nim     >= 1.4.0\"\nrequires \"nimAES  >= 0.1.2\"\nrequires \"neoid   >= 0.3.0\"\n\n\n# Tasks\n\ntask intro, \"Initialize project. Run only once at first pull.\":\n  exec \"git submodule add https://github.com/theAkito/nim-tools.git tasks || true\"\n  exec \"git submodule update --init --recursive\"\n  exec \"git submodule update --recursive --remote\"\n  exec \"nimble configure\"\ntask configure, \"Configure project. Run whenever you continue contributing to this project.\":\n  exec \"git fetch --all\"\n  exec \"nimble check\"\n  exec \"nimble --silent refresh\"\n  exec \"nimble install --accept --depsOnly\"\n  exec \"git status\"\ntask fbuild, \"Build project.\":\n  exec \"\"\"nim c \\\n            --define:danger \\\n            --opt:speed \\\n            --out:quickcrypt \\\n            quickcrypt\n       \"\"\"\ntask dbuild, \"Debug Build project.\":\n  exec \"\"\"nim c \\\n            --define:debug:true \\\n            --debuginfo:on \\\n            --out:quickcrypt_debug \\\n            quickcrypt\n       \"\"\"\ntask makecfg, \"Create nim.cfg for optimized builds.\":\n  exec \"nim tasks/cfg_optimized.nims\"\ntask clean, \"Removes nim.cfg.\":\n  exec \"nim tasks/cfg_clean.nims\"\n",
"https://github.com/PMunch/strslice": "# Package\n\nversion       = \"0.2.1\"\nauthor        = \"Peter Munch-Ellingsen\"\ndescription   = \"Efficient string slices that works on a shared underlying string instead of copying\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires \"nim >= 0.18.0\"\n",
"https://raw.githubusercontent.com/haxscramper/hmisc/master/hmisc.nimble": "# Package\n\nversion       = \"0.9.18\"\nauthor        = \"haxscramper\"\ndescription   = \"Collection of helper utilities\"\nlicense       = \"Apache-2.0\"\nsrcDir        = \"src\"\npackageName   = \"hmisc\"\nbin           = @[\"hmisc/scripts/hmisc_putils\"]\ninstallExt    = @[\"nim\"]\nbinDir        = \"bin\"\nnamedBin      = {\n  \"hmisc/scripts/hmisc_putils\" : \"hmisc-putils\"\n}.toTable()\n\n\nrequires \"nim >= 1.4.0\", \"cligen\"\n# requires \"https://github.com/haxscramper/fusion.git#matching-fixup\"\n\ntask docgen, \"Generate documentation\":\n  if not fileExists(\"bin/hmisc-putils\"):\n    exec(\"nimble build\")\n\n  exec(\"hmisc-putils docgen\")\n\ntask dockertest, \"Run tests in docker container\":\n  exec(\"hmisc-putils dockertest --projectDir:\" & thisDir())\n\nafter test:\n  exec(\"nim c --hints:off --verbosity:0 src/hmisc/scripts/hmisc_putils.nim\")\n",
"https://github.com/gokr/nim-sophia": "[Package]\nname          = \"sophia\"\nversion       = \"0.1\"\nauthor        = \"Göran Krampe\"\ndescription   = \"A wrapper for the Sophia embedded key/value store.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires      = \"nim >= 0.13.1\" # Just haven't tested older\n",
"https://github.com/inim-repl/INim": "# Package\n\nskipDirs      = @[\"tests\"]\nversion       = \"0.6.1\"\nauthor        = \"Andrei Regiani\"\ndescription   = \"Interactive Nim Shell / REPL / Playground\"\nlicense       = \"MIT\"\ninstallDirs   = @[\"inimpkg\"]\ninstallExt    = @[\"nim\"]\nbin           = @[\"inim\"]\n\n# Dependencies\n\nrequires \"cligen >= 1.2.0\"\n\nrequires \"noise >= 0.1.4\"\n\ntask test, \"Run all tests\":\n  exec \"mkdir -p bin\"\n  exec \"nim c -d:NoColor -d:prompt_no_history --out:bin/inim inim.nim\"\n  exec \"nim c -r -d:prompt_no_history tests/test.nim\"\n  # Recompile with tty checks\n  exec \"nim c -d:NoColor -d:NOTTYCHECK -d:prompt_no_history --out:bin/inim inim.nim\"\n  exec \"nim c -r -d:withTools -d:prompt_no_history tests/test_commands.nim\"\n  exec \"nim c -r -d:prompt_no_history tests/test_interface.nim\"\n",
"https://github.com/Knaque/nim-syllables": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Reilly Moore\"\ndescription   = \"Syllable estimation for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 1.4.2\"\nrequires \"regex >= 0.19.0\"\nrequires \"https://github.com/disruptek/testes >= 1.1.1\"",
"https://github.com/zendbit/nim.uri3": "# Package\nversion     = \"0.1.4\"\nauthor      = \"Amru Rosyada\"\ndescription = \"This is extension for uri (For handling uri) module and forked from uri2 with some bug fix.\"\nlicense     = \"MIT\"\nsrcDir      = \"src\"\n\n# Deps\nrequires \"nim >= 1.0.0\"\n",
"https://github.com/bunkford/qrcodegen": "# Package\n\nversion       = \"1.0.0\"\nauthor        = \"Duncan Clarke\"\ndescription   = \"QR Code Generator for Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n# Dependencies\n\nrequires: \"nim >= 0.10.0\"",
"https://raw.githubusercontent.com/its5Q/ducominer/master/ducominer.nimble": "# Package Information\nversion         = \"1.2.0\"\nauthor          = \"its5Q\"\ndescription     = \"A multithreaded miner for DuinoCoin written in Nim.\"\nlicense         = \"MIT\"\n\nbin = @[\"ducominer\"]\n\n# Dependencies\nrequires \"nimcrypto\"",
"https://github.com/yglukhov/darwin": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Yuriy Glukhov\"\ndescription   = \"Collection of bindings to MacOS and iOS APIs\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n",
"https://raw.githubusercontent.com/samdmarshall/cmd.nim/master/cmd.nimble": "# Package\n\nversion       = \"0.2.0\"\nauthor        = \"Samantha Marshall\"\ndescription   = \"interactive command prompt\"\nlicense       = \"BSD 3-Clause\"\nsrcDir        = \"src\"\n\nskipDirs      = @[\"tests\"]\n\n# Dependencies\n\nrequires \"nim >= 0.16.0\"\n",
"https://raw.githubusercontent.com/nim-lang/joyent_http_parser/master/joyent_http_parser.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Zahary Karadjov\"\ndescription   = \"Joyent\\'s high performance parser.\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.2\"\n\n",
"https://raw.githubusercontent.com/xflywind/docx/master/docx.nimble": "# Package\n\nversion       = \"0.1.8\"\nauthor        = \"flywind\"\ndescription   = \"A simple docx reader.\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n\n# Dependencies\n\nrequires \"nim >= 1.0.0\"\nrequires \"zip >= 0.2.1\"\n\n\n# tests\ntask test, \"Run all tests\":\n  exec \"nim c -r tests/alltests.nim\"\n",
"https://raw.githubusercontent.com/FedericoCeratto/nim-pop3/master/pop3.nimble": "# Package\n\nversion       = \"0.1.1\"\nauthor        = \"Federico Ceratto\"\ndescription   = \"POP3 client library\"\nlicense       = \"LGPLv3\"\n\n# Dependencies\n\nrequires \"nim >= 0.17.0\"\n",
"https://raw.githubusercontent.com/Psirus/NimOSC/master/nimosc.nimble": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"Christoph Pohl\"\ndescription   = \"A wrapper around liblo for the Open Sound Control (OSC) protocol\"\nlicense       = \"MIT\"\n\n# Dependencies\n\nrequires \"nim >= 1.0\"\n",
"https://github.com/nim-lang/lua": "version = \"1.0\"\nauthor = \"Andreas Rumpf\"\ndescription = \"Wrapper to interface with the Lua interpreter\"\nlicense = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.0.0\"\n",
"https://raw.githubusercontent.com/bung87/amysql/master/amysql.nimble": "# Package\n\nversion       = \"0.5.1\"\nauthor        = \"bung87\"\ndescription   = \"Async MySQL Connector write in pure Nim.\"\nlicense       = \"MIT\"\nsrcDir        = \"\"\"src\"\"\"\nskipFiles     = @[\"index.nim\"]\nskipDirs      = @[\"tests\"]\n\ntask docs,\"a\":\n  exec \"nim doc --project src/index.nim\"\n\ntask ghpage,\"gh page\":\n  cd \"src/htmldocs\" \n  exec \"git init\"\n  exec \"git add .\"\n  exec \"git config user.name \\\"bung87\\\"\"\n  exec \"git config user.email \\\"crc32@qq.com\\\"\"\n  exec \"git commit -m \\\"docs(docs): update gh-pages\\\"\"\n  let url = \"\\\"https://bung87@github.com/bung87/amysql.git\\\"\"\n  exec \"git push --force --quiet \" & url & \" master:gh-pages\"\n\n\n# Dependencies\nrequires \"nim >= 1.3.1\" # await inside template needs\nrequires \"nimcrypto\"\nrequires \"regex\"\nrequires \"https://github.com/bung87/zstd\"\nrequires \"https://github.com/treeform/urlly\"\n# Optional dependencies:\n# https://github.com/bung87/zstd",
"https://raw.githubusercontent.com/treeform/bitty/master//bitty.nimble": "version     = \"0.1.1\"\nauthor      = \"Andre von Houck\"\ndescription = \"Utilities with dealing with 1d and 2d bit arrays.\"\nlicense     = \"MIT\"\n\nsrcDir = \"src\"\n\nrequires \"nim >= 1.2.2\"\n",
"https://github.com/quelklef/nim-sugerror": "# Package\nversion       = \"1.0.0\"\nauthor        = \"Eli Maynard\"\ndescription   = \"Terse and composable error handling.\"\nlicense       = \"MIT\"\n\n",
"https://github.com/juancarlospaco/nim-usigar": "# Package\n\nversion       = \"0.1.5\"\nauthor        = \"Juan Carlos\"\ndescription   = \"USIG Argentina Government MultiSync API Client for Nim\"\nlicense       = \"MIT\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://github.com/xmonader/nim-asciitables": "# Package\n\nversion       = \"0.1.0\"\nauthor        = \"xmonader\"\ndescription   = \"terminal ascii tables for nim\"\nlicense       = \"BSD-3-Clause\"\nsrcDir        = \"src\"\n\n\n# Dependencies\n\nrequires \"nim >= 0.19.0\"\n",
"https://raw.githubusercontent.com/fallingduck/asyncpythonfile-nim/master/asyncpythonfile.nimble": "[Package]\nname          = \"asyncpythonfile\"\nversion       = \"0.1.1\"\nauthor        = \"Jack VanDrunen\"\ndescription   = \"High level, asynchronous file API mimicking Python's file interface.\"\nlicense       = \"ISC\"\n\n[Deps]\nRequires: \"nim >= 0.11.2\"\n",
"https://raw.githubusercontent.com/jboy/nim-pymod/master/pymod.nimble": "[Package]\nname          = \"pymod\"\nversion       = \"0.1.0\"\nauthor        = \"SnapDisco Pty Ltd, Australia.\"\ndescription   = \"Auto-generate a Python module that wraps a Nim module.\"\nlicense       = \"MIT\"\n\n[Deps]\nRequires: \"nim > 0.12.0\"\n"
}