version: 3

tasks:
  backward_cpp_test:
    desc: "Get backtrace"
    cmds:
      - >
        g++
        -g
        -ldw
        -DBACKWARD_HAS_DW=1
        -o to_backtrace.bin
        -Ideps/backward-cpp
        deps/backward-cpp/backward.cpp
        to_backtrace.cpp

      - ./to_backtrace.bin

  compile:
    dir: "{{.DIR}}"
    desc: "Build and compile files"
    cmds:
      - >
        clang++
        -std=c++2a
        -g
        -ferror-limit=2
        -o {{.OUT}}
        {{.IN}}
        {{.FLAGS}}


  run:
    dir: "{{.DIR}}"
    desc: "Run compiled file"
    cmds:
      - >
        firejail --rlimit-as=600000000 {{.PWD}}/{{.DIR}}/{{.IN}} {{.ARGS}}
    # ||
    # (
    # firejail --rlimit-as=600000000 lldb
    # -o 'run'
    # --source-on-crash {{.PWD}}/lldb-script.txt
    # --batch
    # --
    # {{.IN}}
    # {{.ARGS}}
    # &&
    # false
    # )



  compile_run:
    cmds:
      - task: compile
        vars:
          FLAGS: "{{.FLAGS}}"
          DIR: "{{.DIR}}"
          IN: "{{.IN}}"
          OUT: "{{.OUT}}"

      - task: run
        vars:
          DIR: "{{.DIR}}"
          IN: "{{.OUT}}"
          ARGS: "{{.ARGS}}"


  ogdf_one_file:
    desc: "Compile, run and print one graph created by FILE.cpp program"
    dir: ogdf_tests
    cmds:
      - task: compile_run
        vars:
          # -L/mnt/workspace/repos/ogdf/debug_build
          FLAGS: >
            -lOGDF
            -lCOIN
          DIR: ogdf_tests
          IN: "{{.FILE}}.cpp"
          OUT: "{{.FILE}}.bin"
      - "convert -density 600 -resize 600x600 {{.FILE}}.tmp.svg {{.FILE}}.tmp.png"
      - "viu {{.FILE}}.tmp.png"

  ogdf_simple:
    cmds:
      - task: compile_run
        vars:
          FLAGS: "-lOGDF -lCOIN"
          DIR: ogdf_tests
          IN: simple.cpp
          OUT: simple.bin

  nim_ast_diff:
    desc: "Build ad execute nim AST diff port"
    vars:
      NAME: nim_ast_diff_port
    cmds:
      - nim r {{.NAME}}.nim

  linking_different_sections:
    desc: "Synthetic example for linking things in different manner"
    dir: /tmp/linking_sections
    cmds:
      - mkdir -p rel
      - >
        for target in T1 T2 T3 D1 D2 D3; do
            perl -E "print('$target' x 16)" > rel/_$target
        done

      - cp {{.PWD}}/*.ld .

      - ld -Tsections_bin_1.ld -L$PWD/rel -r -o bin1
      - ld -Tsections_bin_2.ld -L$PWD/rel -r -o bin2
      - ld -Tsections_bin_3.ld -L$PWD/rel -r -o bin3
      - ld -Tsections_all.ld bin1 bin2 bin3 -o bin_all


  stdlib_2:
    desc: "Helper wrappers for stdlib"
    dir: stdlib_2
    cmds:
      - rm -rf build
      - mkdir -p build
      - >
        cmake
        -B build
        -DTEST_COVERAGE=ON
        -DCMAKE_CXX_COMPILER=clang++
        -DCMAKE_BUILD_TYPE=Debug
        .

      - cd build && make -j12
      - rm -rf *.gcov *.lcov *.profraw *.profdata
      - ./stdlib2.bin
      - llvm-profdata merge -sparse *.profraw -o coverage.profdata
      - llvm-cov show stdlib2.bin -instr-profile=coverage.profdata -format=html > coverage.html
      - llvm-cov export -format=lcov -instr-profile=coverage.profdata stdlib2.bin > coverage.lcov
      - llvm-cov export -format=text -instr-profile=coverage.profdata stdlib2.bin > coverage.json
      - genhtml -o html coverage.lcov


  clang_ast_diff:
    desc: "Build and execute clang AST diff port"
    vars:
      NAME: clang_ast_diff_port
    cmds:
      - >
        clang++
        -std=c++2a
        -g
        -ferror-limit=2
        -o
        {{.NAME}}.bin
        {{.NAME}}.cpp

      - ./{{.NAME}}.bin

  gcc_instrumentation:
    desc: "Create GCC instrumentation log for a file"
    cmds:
      - >
        clang++
        -g
        -ldl
        -Wl,--export-dynamic
        -finstrument-functions
        {{.NAME}}.cpp
        -o {{.NAME}}.bin

      - clang++ {{.NAME}}_analyze.cpp -std=c++20 -o {{.NAME}}_analyze.bin
      - ./{{.NAME}}.bin cyg_profile_trace1.log no_special_sym || true
      - ./{{.NAME}}.bin cyg_profile_trace2.log inputqqq || true
      - ./{{.NAME}}_analyze.bin cyg_profile_trace1.log cyg_profile_trace2.log {{.PWD}}/{{.NAME}}.bin

    vars:
      NAME: cyg_profile_trace
