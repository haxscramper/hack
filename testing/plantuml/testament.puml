@startuml
!theme blueprint
skinparam defaultFontName Iosevka

start

:Open backend>

partition "Prepare test files and specs" {
    partition "Prepare test files" {
    note
        Populates [[code:Execution.testFiles]]
    endnote
    switch (Type of the input file filter)
        case (Category)
            if (Is special category?) then (yes)
                :Set up special actions
                (dispatch into dedicated procs)|
                ' TODO only adds specal actions to execute or
                ' something more elaborate?
            else (no)
                :Recursively add all files in ""tests/<category>""<
            endif

        case (Single)
            :Add standalone file to list]
        case (All)
            :Recursively add all files in ""tests/""<

    endswitch
    }

    partition "Populate test specs" {
    note
        Populates [[code:Execution.testsSpecs]]
    endnote
    while (For each test file)
        :Parse test specification<
        note left
            Creates [[code:TSpec]]
        endnote
        if (Has additional tests matrix for the test?) then (yes)
            :Add test matrix parameters]
        endif
    endwhile
    }
}

partition "Prepare test runs" {
    note
        Populates [[code:Execution.testRuns]]
        with run configuration for each test
        that needs to be executed.
    endnote

    while (For each test spec)
        while (For each target to run)
            if (No matrix parameters) then (yes)
                :Create test using empty matrix entry]
            else (no)
                while (For each matrix entry)
                    :Create test using specified matrix]
                endwhile
            endif
        endwhile
    endwhile
}

partition "Prepare test actions" {
    note
        Populates [[code:Execution.actions]]
        with unitary actions (commands) that
        need to be executed by the   process
        runner.
    endnote

    while (For each test run)
        switch (Type of the test action)
            case (Reject or compile)
                :Add reject/compile action]

            case (Run)
                :Add compile test action]
                :Add execute test action]
        endswitch
    endwhile
}

partition "Run tests [[code:runTests()]]" {
    while (Has actions to process)
        :Create an empty batch object|
        note left
            Batch entry that will be
            populated and executed
        endnote
        while (Batch not full and has more actions to process)
            if (Action prerequisites failed) then (yes)
                :Add to set of failed actions|
            else (no)
                :Add action to batch|
            endif
        endwhile
        :Exec processes for batch commands
        [[code:runTestBatch()]]|
        note left
            Updates run information in the runs
            using callbacks associated with batch.
            * Info for run/compile/check time in
              [[code:Execution.runTimes]]
            * Sets processing results in
              [[code:Execution.runActuals]]
        endnote
        :Create test run results from batches|
        note left
            Construct [[code:TestRunReport]] from batch info
        endnote
        while (For completed action)
            :Run action debugging/tracing>
        endwhile
        while (For run that completed just now)
            :Print run result to console>
            note left
                Apparently this makes "run batch" do two
                things: //execute the batch// but also compare
                the results. This is necessary so logging to
                the terminal can be done in a semi-real-time
                manner.
            endnote
        endwhile
    endwhile

    :Update total run statistics|
    :Write out test runs to cache>
    note left
        For ""--retry"" option
    endnote
    :Report final test suite pass/failure>
    note left
        Ultimate consumer of the [[code:TestRunReport]] data -
        gives the final verdict on the global test suite
        (tests passed/failed), shows teardown on the failed
        tests
    endnote
}
:Present final test breakdown>
end
@enduml
